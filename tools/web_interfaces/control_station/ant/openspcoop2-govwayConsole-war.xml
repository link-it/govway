<project name="openspcoop2-build-govwayConsole">
    <description>
        Produzione del war della PddConsole
    </description>
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	
	<import file="../../../../ant/commons/utils.xml" />

	<target name="war_openspcoop2_govwayConsole_resources">	
                <zip destfile="${build_govwayConsole_resourceDIR}/messageSecurity.zip" basedir="${deploy.dir}" includes="messageSecurity/**/*.xml" />
                <zip destfile="${build_govwayConsole_resourceDIR}/policyGestioneToken.zip" basedir="${deploy.dir}" includes="policyGestioneToken/**/*.xml" />
		<zip destfile="${build_govwayConsole_resourceDIR}/attributeAuthority.zip" basedir="${deploy.dir}" includes="attributeAuthority/**/*.xml" />
	</target>

	<!-- Compilazione della libreria 'org.openspcoop.web.ctrlstat.*' -->
	<target name="war_openspcoop2_govwayConsole" depends="css_openspcoop2_govwayConsole">

		<!-- Resources -->
		<antcall target="war_openspcoop2_govwayConsole_resources">
		    <param name="build_govwayConsole_resourceDIR" value="${build_govwayConsole}/tmp"/>
		</antcall>

		<!-- Properties -->
		<copy file="${cfg}/console.datasource.properties" todir="${build_govwayConsole}/tmp" />
		<copy file="${cfg}/console.properties" todir="${build_govwayConsole}/tmp" />
		<copy file="${queue}/deploy/properties/queue.properties" todir="${build_govwayConsole}/tmp" />
		
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<if>
					<or>
						<equals arg1="${as}" arg2="jboss7"/>
						<equals arg1="${as}" arg2="wildfly8"/>
						<equals arg1="${as}" arg2="wildfly9"/>
					</or>
					<then>
						<concat destfile="${build_govwayConsole}/tmp/queue.properties" append="yes" >

# ----- Personalizzazione BrokerJMS HornetQ -------------
						</concat>
					</then>
					<else>
						<concat destfile="${build_govwayConsole}/tmp/queue.properties" append="yes" >
# ----- Personalizzazione BrokerJMS ActiveMQArtemis -------------
						</concat>
					</else>
				</if>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/queue.properties"/>
					<param name="token" value="ConnectionFactory"/>
					<param name="value" value="org.govway.jms.console"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayConsole}/tmp"/>
				    <param name="file" value="queue.properties"/>
				</antcall>
			</then>
		</if>
		
		<if>
			<matches string="${as}" pattern="tomcat.*"/>
			<then>
				<concat destfile="${build_govwayConsole}/tmp/console.datasource.properties" append="yes" >

# ----- Personalizzazione Tomcat -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.datasource.properties"/>
					<param name="token" value="dataSource"/>
					<param name="value" value="java:/comp/env/org.govway.datasource.console"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.datasource.properties"/>
					<param name="token" value="singlePdD.monitor.dataSource"/>
					<param name="value" value="java:/comp/env/org.govway.datasource"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.datasource.properties"/>
					<param name="token" value="singlePdD.tracce.dataSource"/>
					<param name="value" value="java:/comp/env/org.govway.datasource.tracciamento"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.datasource.properties"/>
					<param name="token" value="singlePdD.msgDiagnostici.dataSource"/>
					<param name="value" value="java:/comp/env/org.govway.datasource.tracciamento"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayConsole}/tmp"/>
				    <param name="file" value="console.datasource.properties"/>
				</antcall>
			</then>
		</if>
		<if>
			<not>
				<istrue value="${j2ee}" />
			</not>
			<then>
				<concat destfile="${build_govwayConsole}/tmp/console.properties" append="yes" >

# ----- Personalizzazione NOT J2EE (es. ServletContainer) -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="singlePdD"/>
					<param name="value" value="true"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="sincronizzazionePdd"/>
					<param name="value" value="false"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="sincronizzazioneRegistro"/>
					<param name="value" value="false"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="sincronizzazioneGE"/>
					<param name="value" value="false"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="server.tipo"/>
					<param name="value" value="web"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayConsole}/tmp"/>
				    <param name="file" value="console.properties"/>
				</antcall>
			</then>
			<else>
				<if>
					<istrue value="${singlePdD}" />
					<then>
						<concat destfile="${build_govwayConsole}/tmp/console.properties" append="yes" >

# ----- Personalizzazione SinglePdD -------------
						</concat>
						<antcall target="set_property">
						    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
							<param name="token" value="singlePdD"/>
							<param name="value" value="true"/>
						</antcall>
						<antcall target="set_property">
						    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
							<param name="token" value="sincronizzazionePdd"/>
							<param name="value" value="false"/>
						</antcall>
						<antcall target="set_property">
						    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
							<param name="token" value="sincronizzazioneRegistro"/>
							<param name="value" value="false"/>
						</antcall>
						<antcall target="set_property">
						    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
							<param name="token" value="sincronizzazioneGE"/>
							<param name="value" value="false"/>
						</antcall>

						<antcall target="dos2unix">
							<param name="dir" value="${build_govwayConsole}/tmp"/>
						    <param name="file" value="console.properties"/>
						</antcall>
					</then>
				</if>
			</else>
		</if>
		
		<if>
			<and>
				<istrue value="${singlePdD}" />
				<isfalse value="${singlePdD.registroServizi.locale}" />
			</and>
			<then>
				<concat destfile="${build_govwayConsole}/tmp/console.properties" append="yes" >

# ----- Personalizzazione Registro Servizi Remoto -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="singlePdD.registroServizi.locale"/>
					<param name="value" value="false"/>
				</antcall>

				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayConsole}/tmp"/>
				    <param name="file" value="console.properties"/>
				</antcall>
			</then>
		</if>
		
		<if>
			<isfalse value="${singlePdD}" />
			<then>
				<antcall target="replace_token">
				    <param name="file" value="${build_govwayConsole}/tmp/console.properties"/>
					<param name="token" value="risorseJmxPdd.aliases"/>
					<param name="value" value="#risorseJmxPdd.aliases"/>
				</antcall>

				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayConsole}/tmp"/>
				    <param name="file" value="console.properties"/>
				</antcall>
			</then>
		</if>
		
		<if>
			<equals arg1="${as}" arg2="jboss7"/>
			<then>
				<copy file="${src_govwayConsole}/WEB-INF/${jboss_deployment_structure}.${as}" tofile="${build_govwayConsole}/tmp/${jboss_deployment_structure}" />
			</then>
		</if>
		<if>
			<matches string="${as}" pattern="wildfly.*"/>
			<then>
				<if>
					<or>
						<matches string="${as}" pattern="wildfly22"/>
						<matches string="${as}" pattern="wildfly23"/>
						<matches string="${as}" pattern="wildfly24"/>
						<matches string="${as}" pattern="wildfly25"/>
						<matches string="${as}" pattern="wildfly26"/>
					</or>
					<then>
						<copy file="${src_govwayConsole}/WEB-INF/${jboss_deployment_structure}.wildfly2" tofile="${build_govwayConsole}/tmp/${jboss_deployment_structure}" />
					</then>
					<else>
						<copy file="${src_govwayConsole}/WEB-INF/${jboss_deployment_structure}.wildfly" tofile="${build_govwayConsole}/tmp/${jboss_deployment_structure}" />
					</else>
				</if>
			</then>
		</if>
		
		<var name="stub_registry" value="" />
		<var name="stub_config" value="" />		
		<var name="stub_monitor" value="" />		
		<if>
			<isfalse value="${singlePdD}" />
			<then>
				<var name="stub_registry" value="openspcoop2_registryStub_cxf.jar" />
				<var name="stub_config" value="openspcoop2_configStub_cxf.jar" />	
				<var name="stub_monitor" value="govway_monitorStub_cxf.jar" />
			</then>
		</if>
		<if>
			<isfalse value="${singlePdD.registroServizi.locale}" />
			<then>
				<var name="stub_registry" value="openspcoop2_registrySearchStub_cxf.jar" />
			</then>
		</if>
		
		<var name="govwayConsoleRemota_security_neethi" value="" />
		<var name="govwayConsoleRemota_httpcore" value="" />
		<var name="govwayConsoleRemota_cxf_xmlschema-core" value="" />
		<var name="govwayConsoleRemota_cxf_woodstox-core-asl" value="" />
		<var name="govwayConsoleRemota_cxf_stax2-api" value="" />
		<var name="govwayConsoleRemota_cxf_geronimo_ws_metadata_spec" value="" />
		<if>
			<or>
				<isfalse value="${singlePdD}" />
				<isfalse value="${singlePdD.registroServizi.locale}" />
			</or>
			<then>
				<var name="govwayConsoleRemota_security_neethi" value="neethi-3.2.0.jar" />
				<var name="govwayConsoleRemota_httpcore" value="*.jar" />
				<var name="govwayConsoleRemota_cxf_xmlschema-core" value="xmlschema-core-2.3.1.jar" />
				<var name="govwayConsoleRemota_cxf_woodstox-core-asl" value="woodstox-core-6.6.0.jar" />
				<var name="govwayConsoleRemota_cxf_stax2-api" value="stax2-api-4.2.2.jar" />
				<if>
					<matches string="${as}" pattern="wildfly.*"/>
					<then>
						<var name="govwayConsoleRemota_cxf_geronimo_ws_metadata_spec" value="DADEFINIREMEGLIOgeronimo-ws-metadata_2.0_spec-1.1.3.jar" />
					</then>
				</if>
			</then>
		</if>
		
		
		<!-- Creazione mailapi contenente il corretto mailcap per OpenSPCoopDataHandler -->
		<if>
			<matches string="${as}" pattern="tomcat.*"/>
			<then>
				<unzip src="${required_lib}/shared/mailapi-1.6.7.jar" dest="${build_govwayConsole}/tmp/mailapi"/>
				<concat destfile="${build_govwayConsole}/tmp/mailapi/META-INF/mailcap" append="yes">
					<filelist dir="${data_content_handler_dir}"
		                           files="mailcap"/>
				</concat>
				<jar jarfile="${build_govwayConsole}/tmp/mailapi-1.6.7.gw.jar" manifest="${build_govwayConsole}/tmp/mailapi/META-INF/MANIFEST.MF">
					<zipfileset dir="${build_govwayConsole}/tmp/mailapi"/>
				</jar>
			</then>
		</if>
		
		<!-- Genero il file web.xml -->
		<delete file="${build_govwayConsole}/webtmp/web.xml" />
		<delete dir="${build_govwayConsole}/webtmp" />
		<mkdir dir="${build_govwayConsole}/webtmp" />
		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
			<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.start"/>
		</concat>
		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
			<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.filters"/>
		</concat>
		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
			<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.listeners"/>
		</concat>
		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
			<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.servlet"/>
		</concat>
		<if>
			<and>
	 		 	<equals arg1="${buildWithSecurityContainer}" arg2="true"/>
		 	</and>
			<then>
		   		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
					<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.secure"/>
				</concat>
			</then>
	    	</if>	
		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
			<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.session"/>
		</concat>	
		<concat destfile="${build_govwayConsole}/webtmp/web.xml" append="yes">
			<filelist dir="${src_govwayConsole}/WEB-INF/web" files="web.xml.end"/>
		</concat>

		<!-- Copia del jboss-web in caso di autenticazione container-->
		<if>
			<and>
				<equals arg1="${buildWithSecurityContainer}" arg2="true"/>
				<or>
					<matches string="${as}" pattern="wildfly.*"/>
					<equals arg1="${as}" arg2="jboss7"/>
				</or>
			</and>
			<then>
		   		<copy file="${src_govwayConsole}/WEB-INF/jboss-web.xml" todir="${build_govwayConsole}/tmp"/>
			</then>
		</if>

		<war destfile="${dist_govwayConsole}/govwayConsole.war" webxml="${build_govwayConsole}/webtmp/web.xml">

			<!-- Informazioni sulla versione -->
			<fileset dir="${openspcoop2}">
				<include name="README.txt" />
				<include name="COPYING" />
			</fileset>

			<zipfileset dir="${commons_webcontent}/css" prefix="css" />
			<zipfileset dir="${commons_webcontent}/fonts" prefix="fonts" />
			<zipfileset dir="${commons_webcontent}/images" prefix="images" />
			<zipfileset dir="${build_govwayConsole}/tmp_css" prefix="css" />
			<zipfileset dir="${deploy.dir}/public" prefix="public" />

			<zipfileset dir="${jsp}" prefix="jsp" />
			<zipfileset dir="${jsplib}" prefix="jsplib" />
			<zipfileset dir="${jslib}" prefix="js" />

			<fileset dir="${deploy.dir}">
				<include name="index.html" />
			</fileset>

			<webinf dir="${src_govwayConsole}/WEB-INF">
				<include name="struts-config.xml" />
				<include name="${jboss_classloading}" />
				<include name="${jboss_scanning}" />
			</webinf>
			<webinf dir="${build_govwayConsole}/tmp">
				<include name="${jboss_deployment_structure}" />
				<include name="jboss-web.xml" />
			</webinf>
			<classes dir="${cfg}">
				<include name="console.audit.log4j2.properties" />
				<include name="console.log4j2.properties" />
				<include name="console.registroServiziRemoto.properties" />
				<include name="log4j2.properties" />
			</classes>
			<classes dir="${build_govwayConsole}/tmp">
				<include name="console.datasource.properties" />
				<include name="console.properties" />
				<include name="queue.properties" />
			</classes>
			<lib dir="${required_lib_govwayConsole}/commons">
				<include name="commons-beanutils-1.9.4.jar" />
				<include name="commons-chain-1.2.jar" />
				<include name="commons-collections-3.2.2.jar" />
				<include name="commons-digester-2.1.jar"/>
				<include name="commons-discovery-0.5.jar"/>
				<include name="commons-fileupload-1.5.jar" />
				<include name="commons-io-2.11.0.jar" />
				<include name="commons-lang-2.6.jar" />
				<include name="commons-codec-1.15.jar"/>
				<include name="${commons_logging_jar}"/>
				<include name="commons-lang3-3.12.0.jar"/>
				<include name="commons-compress-1.26.0.jar"/>
			</lib>
			<lib dir="${required_lib_govwayConsole}/shared">
				<include name="wsdl4j-1.6.3.jar" />
				<include name="struts-core-1.3.10.jar" />
				<include name="xmldb-1.0.jar" />
				<include name="ezmorph-1.0.6.jar" />
				<include name="xom-1.2.11.jar" />
				<include name="${xerces_jar}"/>
				<include name="${xml_apis_jar}"/>
				<include name="${xalan_jar}"/>
				<include name="${xalan_serializer_jar}"/>	
				<include name="xmlunit-legacy-2.10.0.jar" />
				<include name="xmlunit-core-2.10.0.jar" />
				<include name="snakeyaml-1.33-gov4j-1.jar" />
				<include name="freemarker-2.3.31.jar" />
				<include name="joda-time-2.12.0.jar" />
				<include name="reactive-streams-1.0.4.jar" />
				<include name="${jakarta_activation_jar}"/>
				<include name="velocity-*.jar"/>
				<include name="rhino-1.7.14.jar"/>
			</lib>
			<lib dir="${required_lib_govwayConsole}/cxf">
				<include name="cxf-core-*.jar" />
				<include name="cxf-rt-*.jar" />
				<include name="jakarta.ws.rs-api-2.1.6.jar" />
				<include name="${geronimo_jaxws_spec_jar}" />
				<include name="${govwayConsoleRemota_cxf_xmlschema-core}" />
				<include name="${govwayConsoleRemota_cxf_woodstox-core-asl}" />
				<include name="${govwayConsoleRemota_cxf_stax2-api}" />
				<include name="${govwayConsoleRemota_cxf_geronimo_ws_metadata_spec}" />
			</lib>
			<lib dir="${required_lib_govwayConsole}/saaj">
				<include name="*.jar" />
			</lib>
			<lib dir="${required_lib_govwayConsole}/jax">
				<include name="jaxws-*.jar" />
				<include name="${jaxp_ri_jar}" />
				<include name="jaxb-*.jar" />
			</lib>
			<lib dir="${required_lib}/log">
				<include name="slf4j-api-2.0.3-gov4j-1.jar"/>
				<include name="log4j*.jar"/>
			</lib>
			<lib dir="${required_lib}/javax">
				<include name="${javax.jms-api-2.0.1.jar}"/>
			</lib>
			<lib dir="${required_lib}/security">
				<include name="xmlsec-2.3.4-gov4j-1.jar"/>
				<include name="${neethi_jar}" />
				<include name="${govwayConsoleRemota_security_neethi}"/>
				<include name="herasaf-xacml-core-2.0.4.jar"/>
				<include name="bcpkix-jdk18on-1.78.1.jar"/>
				<include name="bcprov-jdk18on-1.78.1.jar"/>
				<include name="bcutil-jdk18on-1.78.1.jar"/>
				<include name="jasypt-1.9.3.jar"/>
				<include name="nimbus-jose-jwt-9.37.3.jar"/>
			</lib>
			<lib dir="${required_lib}/httpcore">
				<include name="${govwayConsoleRemota_httpcore}"/>
			</lib>
			<lib dir="${required_lib}/json">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/jackson">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/wadl">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/spring">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/swagger">
				<exclude name="swagger-ui-*.jar"/>
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/openapi4j">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/wss4j">
				<include name="wss4j-ws-security-common-2.4.1-gov4j-1.jar"/>
			</lib>
			<lib dir="${dist_govwayConsole}">
				<include name="openspcoop2*.jar" />
			</lib>
			<lib dir="${openspcoop2_jars}">
				<include name="openspcoop2*.jar" />
			</lib>
			<lib dir="${required_lib}/stub/cxf/">
				<include name="${stub_registry}"/>
				<include name="${stub_config}"/>
				<include name="${stub_monitor}"/>
			</lib>
			<!-- Mail api esteso con activation data handler openspcoop -->
			<lib dir="${build_govwayConsole}/tmp">
				<include name="mailapi-1.6.7.gw.jar" />
			</lib>
			<!-- Plugins -->
			<lib dir="${plugins_govwayConsole}">
				<include name="**/*.jar" />
			</lib>
			<classes dir="${plugins_govwayConsole}">
				<include name="**/*.properties" />
			</classes>
			<classes dir="${build_govwayConsole}/tmp">
				<include name="messageSecurity.zip" />
				<include name="policyGestioneToken.zip" />
				<include name="attributeAuthority.zip" />
			</classes>
		</war>
		<delete dir="${build_govwayConsole}/tmp" />
		
	</target>
	
	<target name="css_openspcoop2_govwayConsole">
		<mkdir dir="${build_govwayConsole}/tmp_css"/>
		<copy todir="${build_govwayConsole}/tmp_css">
			<fileset dir="${commons_temaConsole}/css"/>
		</copy>

		<!-- CSS Locale -->
		<available file="${deploy.dir}/web-content/properties/${temaConsoleProperties}" property="temaConsoleProperties.locale.exists"/>
		<if>
			<equals arg1="${temaConsoleProperties.locale.exists}" arg2="true" />
			<then>
				<property file="${deploy.dir}/web-content/properties/${temaConsoleProperties}" prefix="temalink."/>
				<propertyselector property="cssPropertiesLocal" match="temalink\.(.*)" select="\1"/>
				<property file="${deploy.dir}/web-content/properties/${temaConsoleProperties}" />
				<for list="${cssPropertiesLocal}" param="cssKey">
					<sequential>
						<!--  <echo message="key[@{cssKey}] value[${@{cssKey}}]"/>  -->
						<replace dir="${build_govwayConsole}/tmp_css" 
					     token="$${@{cssKey}}" 
					     value="${@{cssKey}}"/>
			       		</sequential>
				</for>
			</then>
		</if>
		
		<!-- CSS BASE -->
		<property file="${commons_webcontent_properties}/${temaConsoleProperties}" prefix="temalink."/>
		<propertyselector property="cssProperties" match="temalink\.(.*)" select="\1"/>
		<property file="${commons_webcontent_properties}/${temaConsoleProperties}" />
		<for list="${cssProperties}" param="cssKey">
			<sequential>
				<!--  <echo message="key[@{cssKey}] value[${@{cssKey}}]"/>  -->
				<replace dir="${build_govwayConsole}/tmp_css" 
	                     token="$${@{cssKey}}" 
	                     value="${@{cssKey}}"/>
	       	</sequential>
		</for>
	</target>
	
</project>
