<?xml version="1.0" encoding="iso-8859-1"?>

<project name="GovWayLoader" basedir=".">
	<description>
        File di Script per la compilazione dell'interfaccia GovWayLoader
    </description>

	<import file="local_env.xml" />
	<import file="./local_env.xml" />
	<import file="./ant/openspcoop2-govwayLoader-build.xml" />
	<import file="./ant/openspcoop2-govwayLoader-war.xml" />
	<import file="${mvc}/build.xml" />
	<import file="${users}/build.xml" />
	<import file="${openspcoop2}/ant/commons/as-check.xml" />
	
	<!-- directory root -->
	<property name="gitrepo_root" location="${openspcoop2}" />

	<!-- set properties for this build -->
	<property name="src_loaderConsole" location="src" />
	<property name="build_loaderConsole" location="build/loaderConsole" />
	<property name="dist_loaderConsole" location="dist" />
	<property name="doc_loaderConsole" location="doc" />
	<property name="cfg" location="${basedir}/deploy/properties" />
	<property name="deploy.dir" location="${basedir}/deploy" />

	<!-- Directory per librerie -->
	<property name="lib" location="${deploy.dir}/lib" />
	<property name="jsp" location="${deploy.dir}/jsp" />
	<property name="js" location="${deploy.dir}/js" />
	<property name="images" location="${deploy.dir}/images" />

	<!-- Indicazione se produrre la versione per server non j2ee -->
	<var name="j2ee" value="true" />
	
	<!-- Check AS Version -->
	<if>
		<not>
			<istrue value="${_asVersionVerified}"/>
		</not>
		<then>
			<runtarget target="check_as_version" />
			<var name="_asVersionVerified" value="true"/>
		</then>
	</if>
	<if>
		<matches string="${as}" pattern="tomcat.*"/>
		<then>
			<!-- Indicazione se produrre la versione senza j2ee object: mdb e timer ejb -->
			<var name="j2ee" value="false"/>
		</then>
	</if>
	
	<!-- Jar dipendenti dall'A.S. -->
	<var name="xerces_jar" value=""/>
	<var name="xml_apis_jar" value=""/>
	<var name="xalan_jar" value="" />
	<var name="xalan_serializer_jar" value="" />
	<var name="commons_logging_jar" value="" />
	<var name="jaxp_ri_jar" value=""/>
	<var name="jboss_classloading" value="" />
	<var name="jboss_scanning" value="" />
	<var name="jboss_deployment_structure" value="" />

	<!-- commons_logging -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
			<matches string="${as}" pattern="tomcat.*"/>
		</or>
		<then>
			<var name="commons_logging_jar" value="commons-logging-1.2.jar" />
		</then>
	</if>
	<!-- xalan -->
	<if>
		<or>
			<matches string="${as}" pattern="tomcat.*"/>
			<equals arg1="${as}" arg2="jboss4"/>
			<equals arg1="${as}" arg2="jboss6"/>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="xalan_jar" value="xalan-2.7.3.jar" />
			<var name="xalan_serializer_jar" value="serializer-2.7.3.jar" />
		</then>
	</if>
	<!-- xerces -->
	<if>
		<or>
			<matches string="${as}" pattern="tomcat.*"/>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="xerces_jar" value="xercesImpl-2.12.2.jar"/>
			<var name="xml_apis_jar" value="xml-apis-1.4.01.jar"/>
		</then>
	</if>
	<!-- jaxp_ri -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jaxp_ri_jar" value="jaxp-ri-1.4.5-gov4j-1.jar"/>
		</then>
	</if>
	<!-- jboss_classloading -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss6"/>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jboss_classloading" value="jboss-classloading.xml" />
		</then>
	</if>
	<!-- jboss_scanning -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss6"/>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jboss_scanning" value="jboss-scanning.xml" />
		</then>
	</if>
	<!-- jboss_deployment_structure -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jboss_deployment_structure" value="jboss-deployment-structure.xml" />
		</then>
	</if>	

	
	
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<!-- CLASSPATH -->
	<path id="classpath_compile" >
		<fileset dir="${required_lib}" >
			<exclude name="**/axis14/*"/>
			<exclude name="**/*README"/>
			<exclude name="*.userlibraries"/>
		</fileset>
	</path>
	<path id="classpath_dist" >
		<fileset dir="${openspcoop2_jars}" >
			<include name="*.jar"/>
		</fileset>
	</path>	
	
	
	
	<!-- Ripulisce la distribuzione -->
	<target name="clean_loaderConsole">
		<delete dir="${build_loaderConsole}" />
		<delete dir="build" />
		<delete dir="${dist_loaderConsole}" />
		<delete dir="${doc_loaderConsole}" />
	</target>
	
	<!-- Create the build directory structure used by compile -->
	<target name="init_compile_loaderConsole">
		<mkdir dir="${build_loaderConsole}" />
		<mkdir dir="${build_loaderConsole}/loaderConsole" />
		<mkdir dir="${build_loaderConsole}/tmp" />
		<mkdir dir="${build_loaderConsole}/tmp_css" />
		<mkdir dir="${dist_loaderConsole}" />
	</target>
	

	<!-- Compilazioni dipendenze -->
	<target name="compile_dipendenze">
		<if>
			<istrue value="${buildLoaderConsole}"/>
			<then>
				<runtarget target="compile_dipendenze_invoke" />
			</then>
		</if>
	</target>
	<target name="compile_dipendenze_invoke" depends="compile_mvc,compile_users" description="compila le dipendenze" />

	<!-- Compilazione della LoaderConsole-->
	<target name="compile_loaderConsole" depends="init_compile_loaderConsole,compile_dipendenze,compile_govway_loaderConsole" description="compila loaderConsole"/>

	<!-- Creazione del modulo .WAR -->
	<target name="build_loaderConsole" depends="compile_loaderConsole,war_govway_loaderConsole" description="Crea la struttura del modulo WAR" />
		
	<!-- alias -->
	<target name="build" depends="build_loaderConsole"/>
	<target name="clean" depends="clean_loaderConsole"/>

</project>
