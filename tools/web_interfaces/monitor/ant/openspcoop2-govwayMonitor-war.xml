<project name="openspcoop2-war-govwayMonitor">
    <description>
        Produzione del war della PddMonitor
    </description>
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	
	<import file="../../../../ant/commons/utils.xml" />

	<!-- Compilazione della libreria 'org.openspcoop.web.ctrlstat.*' -->
	<target name="war_openspcoop2_govwayMonitor" depends="css_openspcoop2_govwayMonitor">

		<!-- Properties -->
		<copy file="${properties_govwayMonitor}/daoFactory.properties" todir="${build_govwayMonitor}/tmp" />
		<copy file="${properties_govwayMonitor}/monitor.properties" todir="${build_govwayMonitor}/tmp" />
				
		<if>
			<matches string="${as}" pattern="tomcat.*"/>
			<then>
				<concat destfile="${build_govwayMonitor}/tmp/daoFactory.properties" append="yes" >

# ----- Personalizzazione Tomcat -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayMonitor}/tmp/daoFactory.properties"/>
					<param name="token" value="db.datasource.jndiName"/>
					<param name="value" value="java:/comp/env/org.govway.datasource.console"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayMonitor}/tmp"/>
				    <param name="file" value="monitor.datasource.properties"/>
				</antcall>
			</then>
		</if>
		<if>
			<not>
				<equals arg1="${plugins.classpath.properties.dao}" arg2=""/>
			</not>
			<then>
				<concat destfile="${build_govwayMonitor}/tmp/daoFactory.properties" append="yes" >

# ----- Personalizzazione Plugins -------------
				</concat>
				<concat destfile="${build_govwayMonitor}/tmp/daoFactory.properties" append="yes">
					<filelist dir="${plugins_govwayMonitor}" files="${plugins.classpath.properties.dao}"/>
				</concat>
			</then>
		</if>

		<!--
		<antcall target="replace_token">
		    <param name="file" value="${build_govwayMonitor}/tmp/monitor.properties"/>
			<param name="token" value="risorseJmxPdd.aliases"/>
			<param name="value" value="#risorseJmxPdd.aliases"/>
		</antcall>
		-->

		<if>
			<not>
				<equals arg1="${plugins.classpath.properties.monitor}" arg2=""/>
			</not>
			<then>
				<concat destfile="${build_govwayMonitor}/tmp/monitor.properties" append="yes" >

# ----- Personalizzazione Plugins -------------
				</concat>
				<concat destfile="${build_govwayMonitor}/tmp/monitor.properties" append="yes">
					<filelist dir="${plugins_govwayMonitor}" files="${plugins.classpath.properties.monitor}"/>
				</concat>
			</then>
		</if>
		<antcall target="dos2unix">
			<param name="dir" value="${build_govwayMonitor}/tmp"/>
		    <param name="file" value="monitor.properties"/>
		</antcall>
		
		
		<!-- Creazione mailapi contenente il corretto mailcap per OpenSPCoopDataHandler -->
		<var name="mailapi_jar" value="" />
		<!-- <if>
			<matches string="${as}" pattern="tomcat.*"/>
			<then> --> <!-- Aggiungo sempre, serve anche per allarmi -->
				<unzip src="${required_lib}/jakarta/jakarta.mail-api-2.1.3.jar" dest="${build_govwayMonitor}/tmp/mailapi"/>
				<concat destfile="${build_govwayMonitor}/tmp/mailapi/META-INF/mailcap" append="yes">
					<filelist dir="${data_content_handler_dir}"
		                           files="mailcap"/>
				</concat>
				<jar jarfile="${build_govwayMonitor}/tmp/jakarta.mail-api-2.1.2.gw.jar" manifest="${build_govwayMonitor}/tmp/mailapi/META-INF/MANIFEST.MF">
					<zipfileset dir="${build_govwayMonitor}/tmp/mailapi"/>
				</jar>
				<var name="mailapi_jar" value="jakarta.mail-api-2.1.2.gw.jar" />
		<!--	</then>
		</if> -->

		<var name="monitoraggio_allarme_jar" value="openspcoop2_web-govwayMonitor-allarmi*.jar" />
		<var name="monitoraggio_allarme_pages" value="allarmi/**" />
		<if>
			<istrue value="${buildMonitoraggio}" />
			<then>
				<var name="monitoraggio_allarme_jar" value="" />
				<var name="monitoraggio_allarme_pages" value="" />
			</then>
		</if>

		<!-- govway.msgDiagnostici.properties -->
		<mkdir dir="${build_govwayMonitor}/tmpNative2ASCII_src" />
		<mkdir dir="${build_govwayMonitor}/tmpNative2ASCII_dest" />
		<copy file="${properties_govwayMonitor}/govway.msgDiagnostici.properties" todir="${build_govwayMonitor}/tmpNative2ASCII_src" />
		<native2ascii src="${build_govwayMonitor}/tmpNative2ASCII_src" dest="${build_govwayMonitor}/tmpNative2ASCII_dest" />
		
		<!-- Copia dei file jQuery da dentro i jar-->
		<delete dir="${build_govwayMonitor}/jstmp" />
		<mkdir dir="${build_govwayMonitor}/jstmp/jquery" />
		<mkdir dir="${build_govwayMonitor}/jstmp/jquery-ui" />
		<unzip dest="${build_govwayMonitor}/jstmp/jquery" overwrite="true">
		  <fileset dir="${required_lib_govwayMonitor}/console" includes="jquery-*.jar"/>
		  <patternset>
		    <include name="META-INF/resources/webjars/jquery/**/jquery.min.js"/>
		  </patternset>
		</unzip>
		<copy todir="${build_govwayMonitor}/jstmp/jquery" overwrite="true">
		  <fileset dir="${build_govwayMonitor}/jstmp/jquery">
		    <include name="META-INF/resources/webjars/jquery/**/jquery.min.js"/>
		  </fileset>
		  <!-- rimuove l'albero di cartelle interne: mantiene solo il nome del file -->
		  <flattenmapper/>
		</copy>
		<unzip dest="${build_govwayMonitor}/jstmp/jquery-ui" overwrite="true">
			<fileset dir="${required_lib_govwayMonitor}/console" includes="jquery-ui-*.jar"/>
		  <patternset>
		    <include name="META-INF/resources/webjars/jquery-ui/*/jquery-ui.min.js"/>
		  </patternset>
		</unzip>
		<copy todir="${build_govwayMonitor}/jstmp/jquery-ui" overwrite="true">
		  <fileset dir="${build_govwayMonitor}/jstmp/jquery-ui">
		    <include name="META-INF/resources/webjars/jquery-ui/**/jquery-ui.min.js"/>
		  </fileset>
		  <!-- rimuove l'albero di cartelle interne: mantiene solo il nome del file -->
		  <flattenmapper/>
		</copy>

		<war destfile="${dist_govwayMonitor}/govwayMonitor.war" webxml="${build_govwayMonitor_war}/WEB-INF/web.xml">

			<!-- Informazioni sulla versione -->
			<fileset dir="${openspcoop2}">
				<include name="README.txt" />
				<include name="COPYING" />
			</fileset>

			<zipfileset dir="${commons_webcontent}/css" prefix="css" />
			<zipfileset dir="${commons_webcontent}/fonts" prefix="fonts" />
			<zipfileset dir="${commons_webcontent}/images" prefix="images" />
			<zipfileset dir="${build_govwayMonitor}/tmp_css" prefix="css" />

			<!-- <zipfileset dir="${jsplib}" prefix="jsplib" /> -->
			<!-- <zipfileset dir="${jslib}" prefix="js" /> -->

			<zipfileset dir="${deploy_govwayMonitor}/web-content/css" prefix="css" />
			<zipfileset dir="${deploy_govwayMonitor}/web-content/FusionCharts" prefix="FusionCharts" />
			<zipfileset dir="${deploy_govwayMonitor}/web-content/scripts" prefix="scripts" >
				<include name="c3.min.js"/>
				<include name="ChartMap.js"/>
				<include name="d3.min.js"/>
				<include name="d3.v4.min.js"/>
				<include name="d3-format.min.js"/>
				<include name="heatmap.js"/>
				<include name="jquery.collapsible.js"/>
				<include name="shBrushJson.min.js"/>
				<include name="shBrushXml.min.js"/>
				<include name="shCore.min.js"/>
				<include name="SvgRaster.js"/>
				<include name="XRegExp.min.js"/>
			</zipfileset>
			
			<zipfileset dir="${build_govwayMonitor}/jstmp/jquery" prefix="webjars/jquery/${jQueryVersionDir}" >
				<include name="jquery.min.js"/>
			</zipfileset>
			
			<zipfileset dir="${build_govwayMonitor}/jstmp/jquery-ui" prefix="webjars/jquery-ui/${jQueryUiVersionDir}" >
				<include name="jquery-ui.min.js"/>
			</zipfileset>
			
			<fileset dir="${deploy_govwayMonitor}/web-content">
				<include name="index.jsp" />
				<include name="timeout.jsp" />
<!--				<exclude name="properties/**" />-->
			</fileset>
			<fileset dir="${deploy_govwayMonitor}/pages">
				<include name="**/*" />
				<exclude name="${monitoraggio_allarme_pages}" />
			</fileset>

			<webinf dir="${src_govwayMonitor}/WEB-INF">
				<include name="struts-config.xml" />
				<include name="${jboss_classloading}" />
				<include name="${jboss_scanning}" />
			</webinf>
			<webinf dir="${build_govwayMonitor_war}/WEB-INF">
				<include name="${jboss_deployment_structure}" />
				<include name="jboss-web.xml" />
				<include name="${cookie_same_site}" />
			</webinf>
			<classes dir="${properties_govwayMonitor}">
				<include name="monitor.log4j2.properties" />
				<include name="log4j2.properties" />
				<include name="messages_it.properties" />
				<include name="monitor.jcs.properties" />
			</classes>
			<classes dir="${build_govwayMonitor}/tmp">
				<include name="daoFactory.properties" />
				<include name="monitor.properties" />
			</classes>
			<classes dir="${build_govwayMonitor}/tmpNative2ASCII_dest">
				<include name="govway.msgDiagnostici.properties" />
			</classes>
			<lib dir="${required_lib_govwayMonitor}/commons">
				<include name="commons-beanutils-1.11.0.jar" />
				<include name="commons-chain-1.2.jar" />
				<include name="commons-collections-3.2.2.jar" />
				<include name="commons-collections4-4.5.0.jar" />
				<include name="commons-digester-2.1.jar"/>
				<include name="commons-fileupload2-*.jar" />
				<include name="commons-io-2.19.0.jar" />
				<include name="commons-jcs3-core-3.2.1-gov4j-1.jar"/>
				<include name="${commons_logging_jar}"/>
				<include name="commons-text-1.14.0.jar"/>
				<include name="commons-lang3-3.18.0.jar"/>
				<include name="commons-codec-1.18.0.jar" />
				<include name="commons-math3-3.6.1.jar" />
				<include name="commons-csv-1.14.0.jar" />
				<include name="commons-compress-1.27.1.jar" />
			</lib>
			<lib dir="${required_lib_govwayMonitor}/console">
<!--				<include name="jquery-3.7.1.jar"/>-->
<!--				<include name="jquery-ui-1.14.1.jar"/>-->
				<include name="govway-monitor-ui-*.jar"/>
				<include name="jsoup-1.21.2.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/jakarta">
				<include name="jakarta.activation-api-2.1.3.jar" />
				<include name="jakarta.xml.bind-api-3.0.1.jar"/>
				<include name="jakarta.ws.rs-api-3.1.0.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/jaxb">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/shared">
				<include name="wsdl4j-1.6.3.jar" />
				<include name="xom-1.3.5.jar" />
				<include name="${xerces_jar}"/>
				<include name="${xml_apis_jar}"/>
				<include name="${xalan_jar}"/>
				<include name="${xalan_serializer_jar}"/>	
				<include name="xmlunit-legacy-2.10.2.jar" />
				<include name="xmlunit-core-2.10.2.jar" />
				<include name="snakeyaml-2.4-gov4j-1.jar" />
				<include name="freemarker-2.3.34.jar" />
				<include name="joda-time-2.14.0.jar" />
				<include name="reactive-streams-1.0.4.jar" />
				<include name="velocity-*.jar"/>
				<include name="micrometer-observation-1.14.8.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/cxf">
				<include name="cxf-core-*.jar" />
				<include name="cxf-rt-*.jar" />
				<include name="woodstox-core-7.1.1.jar" />
				<include name="${stax2-api_jar}" />
			</lib>
			<lib dir="${required_lib}/httpcore">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/saaj">
				<include name="*.jar" />
			</lib>
			<lib dir="${required_lib}/log">
				<include name="slf4j-api-2.0.17-gov4j-1.jar"/>
				<include name="log4j*.jar"/>
			</lib>
			<lib dir="${required_lib}/security">
				<include name="xmlsec-4.0.4.jar"/>
				<include name="neethi-3.2.1.jar" />
				<include name="bcpkix-jdk18on-1.81.jar"/>
				<include name="bcprov-jdk18on-1.81.jar"/>
				<include name="bcutil-jdk18on-1.81.jar"/>
				<include name="jasypt-1.9.3.jar"/>
				<include name="nimbus-jose-jwt-10.3.1.jar"/>
			</lib>
			<lib dir="${required_lib}/json">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/jackson">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/spring">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/swagger">
				<exclude name="swagger-ui-*.jar"/>
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/reports"> <!-- I report CSV vengono anche utilizzati per l'esportazione delle transazioni -->
				<include name="poi-5.4.1.jar"/>
				<include name="poi-ooxml-5.4.1.jar"/>
				<include name="poi-ooxml-lite-5.4.1.jar"/>
				<include name="xmlbeans-5.3.0.jar"/>
			</lib>
			<lib dir="${required_lib}/pdf">
				<include name="pdfbox-2.0.34.jar"/>
				<include name="fontbox-2.0.34.jar"/>	
				<include name="boxable-1.7.0.jar"/>
			</lib>
			<lib dir="${dist_govwayMonitor}">
				<include name="openspcoop2*.jar" />
				<exclude name="${monitoraggio_allarme_jar}" />
			</lib>
			<lib dir="${openspcoop2_jars}">
				<include name="openspcoop2*.jar" />
			</lib>
			<lib dir="${required_lib}/stub/cxf/">
				<include name="${stub_registry}"/>
				<include name="${stub_config}"/>
				<include name="${stub_monitor}"/>
			</lib>
			<!-- Mail api esteso con activation data handler openspcoop -->
			<lib dir="${build_govwayMonitor}/tmp">
				<include name="${mailapi_jar}" />
			</lib>
			<!-- Plugins -->
			<lib dir="${plugins_govwayMonitor}">
				<include name="**/*.jar" />
			</lib>
			<classes dir="${plugins_govwayMonitor}">
				<include name="**/*.properties" />
			</classes>
			<fileset dir="${plugins_govwayMonitor_pages}">
				<include name="**/*" />
			</fileset>
		</war>
		<delete dir="${build_govwayMonitor}/tmp" />
		<delete file="${build_govwayMonitor}/tmpNative2ASCII_dest/govway.msgDiagnostici.properties" deleteonexit="true"/>
		<delete dir="${build_govwayMonitor}/tmpNative2ASCII_dest" deleteonexit="true"/>
		<delete file="${build_govwayMonitor}/tmpNative2ASCII_src/govway.msgDiagnostici.properties" deleteonexit="true"/>
		<delete dir="${build_govwayMonitor}/tmpNative2ASCII_src" deleteonexit="true"/>
		
	</target>
	
	<target name="css_openspcoop2_govwayMonitor">
		<mkdir dir="${build_govwayMonitor}/tmp_css"/>
		<copy todir="${build_govwayMonitor}/tmp_css">
			<fileset dir="${commons_temaConsole}/css"/>
		</copy>

		<!-- CSS Locale -->
		<available file="${deploy_govwayMonitor}/web-content/properties/${temaConsoleProperties}" property="temaConsoleProperties.locale.exists"/>
		<if>
			<equals arg1="${temaConsoleProperties.locale.exists}" arg2="true" />
			<then>
				<property file="${deploy_govwayMonitor}/web-content/properties/${temaConsoleProperties}" prefix="temalink."/>
				<propertyselector property="cssPropertiesLocal" match="temalink\.(.*)" select="\1"/>
				<property file="${deploy_govwayMonitor}/web-content/properties/${temaConsoleProperties}" />
				<for list="${cssPropertiesLocal}" param="cssKey">
					<sequential>
						<!--  <echo message="key[@{cssKey}] value[${@{cssKey}}]"/>  -->
						<replace dir="${build_govwayMonitor}/tmp_css" 
					     token="$${@{cssKey}}" 
					     value="${@{cssKey}}"/>
			       		</sequential>
				</for>
			</then>
		</if>

		<!-- CSS BASE -->
		<property file="${commons_webcontent_properties}/${temaConsoleProperties}" prefix="temalink."/>
		<propertyselector property="cssProperties" match="temalink\.(.*)" select="\1"/>
		<property file="${commons_webcontent_properties}/${temaConsoleProperties}" />
		<for list="${cssProperties}" param="cssKey">
			<sequential>
				<!--  <echo message="key[@{cssKey}] value[${@{cssKey}}]"/>  -->
				<replace dir="${build_govwayMonitor}/tmp_css" 
	                     token="$${@{cssKey}}" 
	                     value="${@{cssKey}}"/>
	       		</sequential>
		</for>
	</target>
	
</project>
