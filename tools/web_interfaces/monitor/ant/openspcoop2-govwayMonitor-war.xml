<project name="openspcoop2-war-govwayMonitor">
    <description>
        Produzione del war della PddMonitor
    </description>
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	
	<import file="../../../../ant/commons/utils.xml" />

	<!-- Compilazione della libreria 'org.openspcoop.web.ctrlstat.*' -->
	<target name="war_openspcoop2_govwayMonitor" depends="css_openspcoop2_govwayMonitor">

		<!-- Properties -->
		<copy file="${properties_govwayMonitor}/daoFactory.properties" todir="${build_govwayMonitor}/tmp" />
		<copy file="${properties_govwayMonitor}/monitor.properties" todir="${build_govwayMonitor}/tmp" />
				
		<if>
			<matches string="${as}" pattern="tomcat.*"/>
			<then>
				<concat destfile="${build_govwayMonitor}/tmp/daoFactory.properties" append="yes" >

# ----- Personalizzazione Tomcat -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build_govwayMonitor}/tmp/daoFactory.properties"/>
					<param name="token" value="db.datasource.jndiName"/>
					<param name="value" value="java:/comp/env/org.govway.datasource.console"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${build_govwayMonitor}/tmp"/>
				    <param name="file" value="monitor.datasource.properties"/>
				</antcall>
			</then>
		</if>
		<if>
			<not>
				<equals arg1="${plugins.classpath.properties.dao}" arg2=""/>
			</not>
			<then>
				<concat destfile="${build_govwayMonitor}/tmp/daoFactory.properties" append="yes" >

# ----- Personalizzazione Plugins -------------
				</concat>
				<concat destfile="${build_govwayMonitor}/tmp/daoFactory.properties" append="yes">
					<filelist dir="${plugins_govwayMonitor}" files="${plugins.classpath.properties.dao}"/>
				</concat>
			</then>
		</if>

		<!--
		<antcall target="replace_token">
		    <param name="file" value="${build_govwayMonitor}/tmp/monitor.properties"/>
			<param name="token" value="risorseJmxPdd.aliases"/>
			<param name="value" value="#risorseJmxPdd.aliases"/>
		</antcall>
		-->

		<if>
			<not>
				<equals arg1="${plugins.classpath.properties.monitor}" arg2=""/>
			</not>
			<then>
				<concat destfile="${build_govwayMonitor}/tmp/monitor.properties" append="yes" >

# ----- Personalizzazione Plugins -------------
				</concat>
				<concat destfile="${build_govwayMonitor}/tmp/monitor.properties" append="yes">
					<filelist dir="${plugins_govwayMonitor}" files="${plugins.classpath.properties.monitor}"/>
				</concat>
			</then>
		</if>
		<antcall target="dos2unix">
			<param name="dir" value="${build_govwayMonitor}/tmp"/>
		    <param name="file" value="monitor.properties"/>
		</antcall>
		
		
		<!-- Creazione mailapi contenente il corretto mailcap per OpenSPCoopDataHandler -->
		<!-- <if>
			<matches string="${as}" pattern="tomcat.*"/>
			<then> --> <!-- Aggiungo sempre, serve anche per allarmi -->
				<unzip src="${required_lib}/shared/mailapi-1.6.7.jar" dest="${build_govwayMonitor}/tmp/mailapi"/>
				<concat destfile="${build_govwayMonitor}/tmp/mailapi/META-INF/mailcap" append="yes">
					<filelist dir="${data_content_handler_dir}"
		                           files="mailcap"/>
				</concat>
				<jar jarfile="${build_govwayMonitor}/tmp/mailapi-1.6.7.gw.jar" manifest="${build_govwayMonitor}/tmp/mailapi/META-INF/MANIFEST.MF">
					<zipfileset dir="${build_govwayMonitor}/tmp/mailapi"/>
				</jar>
		<!--	</then>
		</if> -->

		<var name="monitoraggio_allarme_jar" value="openspcoop2_web-govwayMonitor-allarmi*.jar" />
		<var name="monitoraggio_allarme_pages" value="allarmi/**" />
		<if>
			<istrue value="${buildMonitoraggio}" />
			<then>
				<var name="monitoraggio_allarme_jar" value="" />
				<var name="monitoraggio_allarme_pages" value="" />
			</then>
		</if>

		<war destfile="${dist_govwayMonitor}/govwayMonitor.war" webxml="${build_govwayMonitor_war}/WEB-INF/web.xml">

			<!-- Informazioni sulla versione -->
			<fileset dir="${openspcoop2}">
				<include name="README.txt" />
				<include name="COPYING" />
			</fileset>

			<zipfileset dir="${commons_webcontent}/css" prefix="css" />
			<zipfileset dir="${commons_webcontent}/fonts" prefix="fonts" />
			<zipfileset dir="${commons_webcontent}/images" prefix="images" />
			<zipfileset dir="${build_govwayMonitor}/tmp_css" prefix="css" />

			<!-- <zipfileset dir="${jsplib}" prefix="jsplib" /> -->
			<!-- <zipfileset dir="${jslib}" prefix="js" /> -->

			<fileset dir="${deploy_govwayMonitor}/web-content">
				<include name="**/*" />
				<exclude name="properties/**" />
			</fileset>
			<fileset dir="${deploy_govwayMonitor}/pages">
				<include name="**/*" />
				<exclude name="${monitoraggio_allarme_pages}" />
			</fileset>

			<webinf dir="${src_govwayMonitor}/WEB-INF">
				<include name="struts-config.xml" />
				<include name="${jboss_classloading}" />
				<include name="${jboss_scanning}" />
			</webinf>
			<webinf dir="${build_govwayMonitor_war}/WEB-INF">
				<include name="${jboss_deployment_structure}" />
				<include name="jboss-web.xml" />
			</webinf>
			<classes dir="${properties_govwayMonitor}">
				<include name="monitor.log4j2.properties" />
				<include name="log4j2.properties" />
				<include name="messages_it.properties" />
				<include name="monitor.jcs.properties" />
			</classes>
			<classes dir="${build_govwayMonitor}/tmp">
				<include name="daoFactory.properties" />
				<include name="monitor.properties" />
			</classes>
			<lib dir="${required_lib_govwayMonitor}/commons">
				<include name="commons-beanutils-1.9.4.jar" />
				<include name="commons-chain-1.2.jar" />
				<include name="commons-collections-3.2.2.jar" />
				<include name="commons-collections4-4.4.jar" />
				<include name="commons-digester-2.1.jar"/>
				<include name="commons-discovery-0.5.jar"/>
				<include name="commons-fileupload-1.5.jar" />
				<include name="commons-io-2.11.0.jar" />
				<include name="commons-lang-2.6.jar" />
				<include name="${commons_logging_jar}"/>
				<include name="commons-lang3-3.12.0.jar"/>
				<include name="commons-codec-1.15.jar" />
				<include name="commons-math3-3.6.1.jar" />
			</lib>
			<lib dir="${required_lib_govwayMonitor}/console">
				<include name="jquery-3.6.4.jar"/>
				<include name="jquery-ui-1.13.2.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/shared">
				<include name="wsdl4j-1.6.3.jar" />
				<include name="struts-core-1.3.10.jar" />
				<include name="xmldb-1.0.jar" />
				<include name="ezmorph-1.0.6.jar" />
				<include name="xom-1.2.11.jar" />
				<include name="${xerces_jar}"/>
				<include name="${xml_apis_jar}"/>
				<include name="${xalan_jar}"/>
				<include name="${xalan_serializer_jar}"/>	
				<include name="xmlunit-legacy-2.9.0.jar" />
				<include name="xmlunit-core-2.9.0.jar" />
				<include name="snakeyaml-1.33-gov4j-1.jar" />
				<include name="freemarker-2.3.31.jar" />
				<include name="jakarta.activation-1.2.2.jar" />
				<include name="joda-time-2.12.0.jar" />
				<include name="reactive-streams-1.0.4.jar" />
				<include name="commons-jcs3-core-3.1-gov4j-2.jar"/>
			</lib>
			<lib dir="${required_lib_govwayMonitor}/cxf">
				<include name="cxf-core-*.jar" />
				<include name="cxf-rt-*.jar" />
				<include name="jakarta.ws.rs-api-2.1.6.jar" />
				<include name="woodstox-core-6.4.0.jar" />
				<include name="${geronimo_jaxws_spec_jar}" />
				<include name="${stax2-api_jar}" />
			</lib>
			<lib dir="${required_lib_govwayMonitor}/saaj">
				<include name="*.jar" />
			</lib>
			<lib dir="${required_lib_govwayMonitor}/faces">
				<include name="richfaces-api-3.3.4.Final.jar" />
				<include name="richfaces-ui-3.3.4.Final-gov4j-4.jar" />
				<include name="richfaces-impl-3.3.4.Final-gov4j-4.jar" />
				<include name="jsf-facelets-1.1.15.jar" />
				<include name="${javax_servlet_jsp_jstl_jar}" />
				<include name="${javax_servlet_jsp_jstl_api_jar}" />
				<include name="${jsf_impl_jar}" />
				<include name="${jsf_api_jar}" />
				<include name="${el_impl_jar}" />
			</lib>
			<lib dir="${required_lib_govwayMonitor}/jax">
				<include name="jaxws-*.jar" />
				<include name="${jaxp_ri_jar}" />
				<include name="jaxb-*.jar" />
			</lib>
			<lib dir="${required_lib}/log">
				<include name="slf4j-api-2.0.3-gov4j-1.jar"/>
				<include name="log4j*.jar"/>
			</lib>
			<lib dir="${required_lib}/javax">
				<include name="${javax.jms-api-2.0.1.jar}"/>
				<include name="${el-api-1.0.jar}"/>
			</lib>
			<lib dir="${required_lib}/security">
				<include name="xmlsec-2.3.0.jar"/>
				<include name="neethi-3.2.0.jar" />
				<include name="bcpkix-jdk18on-1.72.jar"/>
				<include name="bcprov-ext-jdk18on-1.72.jar"/>
				<include name="bcutil-jdk18on-1.72.jar"/>
				<include name="jasypt-1.9.3.jar"/>
			</lib>
			<lib dir="${required_lib}/json">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/jackson">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/wadl">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/spring">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/swagger">
				<include name="*.jar"/>
			</lib>
			<lib dir="${required_lib}/reports"> <!-- I report CSV vengono anche utilizzati per l'esportazione delle transazioni -->
				<include name="dynamicreports-core-6.12.1.jar"/>
				<include name="itext-2.1.7.js7.jar"/>
				<include name="jcommon-1.0.24.jar"/>
				<include name="jasperreports-6.20.0.jar"/>
				<include name="jasperreports-metadata-6.20.0.jar"/>
				<include name="poi-5.2.3.jar"/>
				<include name="SparseBitSet-1.2.jar"/>
				<include name="net.tascalate.javaflow.api-2.7.3.jar"/>
				<include name="jfreechart-1.5.3.jar"/>
				<include name="${ecj_jar}"/>
			</lib>
			<lib dir="${deploy_govwayMonitor}/modulo-jsf12/com/sun/jsf-impl/mojarra-1.2_15">
				<include name="${jsf_module_jar}"/>
			</lib>
			<lib dir="${deploy_govwayMonitor}/modulo-jsf12/javax/faces/api/mojarra-1.2_15">
				<include name="${jsf_module_jar}"/>
			</lib>
			<lib dir="${deploy_govwayMonitor}/modulo-jsf12/org/jboss/as/jsf-injection/mojarra-1.2_15">
				<include name="${wildfly_module_jar}"/>
			</lib>
			<lib dir="${dist_govwayMonitor}">
				<include name="openspcoop2*.jar" />
				<exclude name="${monitoraggio_allarme_jar}" />
			</lib>
			<lib dir="${openspcoop2_jars}">
				<include name="openspcoop2*.jar" />
			</lib>
			<lib dir="${required_lib}/stub/cxf/">
				<include name="${stub_registry}"/>
				<include name="${stub_config}"/>
				<include name="${stub_monitor}"/>
			</lib>
			<!-- Mail api esteso con activation data handler openspcoop -->
			<lib dir="${build_govwayMonitor}/tmp">
				<include name="mailapi-1.6.7.gw.jar" />
			</lib>
			<!-- Plugins -->
			<lib dir="${plugins_govwayMonitor}">
				<include name="**/*.jar" />
			</lib>
			<classes dir="${plugins_govwayMonitor}">
				<include name="**/*.properties" />
			</classes>
			<fileset dir="${plugins_govwayMonitor_pages}">
				<include name="**/*" />
			</fileset>
		</war>
		<delete dir="${build_govwayMonitor}/tmp" />
		
	</target>
	
	<target name="css_openspcoop2_govwayMonitor">
		<mkdir dir="${build_govwayMonitor}/tmp_css"/>
		<copy todir="${build_govwayMonitor}/tmp_css">
			<fileset dir="${commons_temaConsole}/css"/>
		</copy>

		<!-- CSS Locale -->
		<available file="${deploy_govwayMonitor}/web-content/properties/${temaConsoleProperties}" property="temaConsoleProperties.locale.exists"/>
		<if>
			<equals arg1="${temaConsoleProperties.locale.exists}" arg2="true" />
			<then>
				<property file="${deploy_govwayMonitor}/web-content/properties/${temaConsoleProperties}" prefix="temalink."/>
				<propertyselector property="cssPropertiesLocal" match="temalink\.(.*)" select="\1"/>
				<property file="${deploy_govwayMonitor}/web-content/properties/${temaConsoleProperties}" />
				<for list="${cssPropertiesLocal}" param="cssKey">
					<sequential>
						<!--  <echo message="key[@{cssKey}] value[${@{cssKey}}]"/>  -->
						<replace dir="${build_govwayMonitor}/tmp_css" 
					     token="$${@{cssKey}}" 
					     value="${@{cssKey}}"/>
			       		</sequential>
				</for>
			</then>
		</if>

		<!-- CSS BASE -->
		<property file="${commons_webcontent_properties}/${temaConsoleProperties}" prefix="temalink."/>
		<propertyselector property="cssProperties" match="temalink\.(.*)" select="\1"/>
		<property file="${commons_webcontent_properties}/${temaConsoleProperties}" />
		<for list="${cssProperties}" param="cssKey">
			<sequential>
				<!--  <echo message="key[@{cssKey}] value[${@{cssKey}}]"/>  -->
				<replace dir="${build_govwayMonitor}/tmp_css" 
	                     token="$${@{cssKey}}" 
	                     value="${@{cssKey}}"/>
	       		</sequential>
		</for>
	</target>
	
</project>
