<project name="cli.monitor" basedir="." default="run">

	<import file="local_env.xml" />
	<import file="${openspcoop2}/ant/commons/as-check.xml" />
	<import file="${openspcoop2}/ant/commons/git-build.xml" />
	<import file="${openspcoop2}/ant/commons/compile-build.xml" />
	<import file="${openspcoop2}/ant/commons/api-build.xml" />
	
	<!-- directory root -->
	<property name="gitrepo_root" location="${openspcoop2}" />

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${openspcoop2.lib}/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<!-- Check AS Version -->
	<if>
		<not>
			<istrue value="${_asVersionVerified}"/>
		</not>
		<then>
			<runtarget target="check_as_version" />
			<var name="_asVersionVerified" value="true"/>
		</then>
	</if>
	<var name="jboss_jars" value="applicationServer/${as}"/>
	<if>
		<matches string="${as}" pattern="tomcat.*"/>
		<then>
			<var name="jboss_jars" value="applicationServer"/> <!-- In modo da non rilevare nessun jar -->
		</then>
	</if>

	<!-- Properties -->
	<property name="src_monitor_cli" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="doc" location="doc" />

	<!-- CLASSPATH -->
	<path id="classpath_compile" >
		<fileset dir="${required_lib}" >
			<exclude name="**/axis14/*"/>
			<exclude name="**/*README"/>
			<exclude name="*.userlibraries"/>
			<include name="commons/*"/>
			<include name="cxf/*"/>
			<include name="saaj/*"/>
			<include name="jax/jaxb*"/>
			<include name="javax/*"/>
			<include name="log/*"/>
			<include name="security/*"/>
			<include name="shared/*"/>
			<include name="soapbox/*"/>
			<include name="spring/*"/>
			<include name="spring-security/*"/>
			<include name="stub/*"/>
		</fileset>
	</path>
	<path id="classpath_dist" >
		<fileset dir="${openspcoop2}/core/dist" >
			<include name="*.jar"/>
		</fileset>
	</path>	
	<path id="classpath_script">
		<fileset dir="${openspcoop2.lib}/${jboss_jars}" >
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${openspcoop2.lib}/log" >
			<include name="*.jar"/>
		</fileset>
		<pathelement path="${openspcoop2.lib}/shared/uddi4j-2.0.5.jar"/>
		<pathelement path="${openspcoop2.lib}/shared/mailapi-1.6.7.jar"/>
		<pathelement path="${openspcoop2.lib}/shared/jakarta.activation-1.2.2.jar"/>
		<pathelement path="${openspcoop2.lib}/commons/commons-logging-1.2.jar"/>
		<pathelement path="${openspcoop2.lib}/commons/commons-discovery-0.5.jar"/>
		<pathelement path="${openspcoop2.lib}/commons/commons-codec-1.15.jar"/>
		<pathelement path="${openspcoop2.lib}/shared/wsdl4j-1.6.3.jar"/>
		<pathelement path="${openspcoop2.lib}/stub/cxf/*"/>
		<fileset dir="${openspcoop2.dist}" includes="**/*.jar"/>
		<pathelement path="${jdbc_lib}"/>
		<pathelement path="${build}/properties"/>
		<fileset dir="${dist}" includes="**/*.jar"/>
	</path>


	<!-- Clean -->
	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>


	<!-- Create the build directory structure used by compile -->
	<target name="init_compile">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>	


	<target name="compile_monitor_cli" depends="init_compile">

		<!-- Info git -->
		<runtarget target="checkgit" />
		<!-- <echo message="GIT:[${jgit.jar.presente}]"/> -->
				
		<!-- org.openspcoop2.pdd.monitor.cli -->
		<var name="packagesCompiled" value="org.openspcoop2.pdd.monitor.cli" />
		<antcall target="compile_src_openspcoop2">
			<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
			<param name="compile_src_openspcoop2.SRC_DIR" value="${src_monitor_cli}"/>
			<param name="compile_src_openspcoop2.GIT_ID_NAME" value="monitor-cli"/>
			<param name="compile_src_openspcoop2.BUILD_INCLUDES" value="**/*.java"/>
			<param name="compile_src_openspcoop2.SRC_PREFIX" value=""/>
			<param name="compile_src_openspcoop2.PACKAGE" value="org.openspcoop2.pdd.monitor.cli"/>
			<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="."/>
		</antcall>
				
		<!-- Jar Complessivo -->
		<!--
		<antcall target="jar_2_jar_openspcoop2">
			<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
			<param name="compile_src_openspcoop2.GIT_ID_NAME" value="monitor-cli"/>
			<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="."/>
		</antcall>
		-->
		
		<mkdir dir="${build}/properties"/>
		<copy todir="${build}/properties">
			<fileset dir="deploy/properties">
				<include name="*.properties"/>
			</fileset>
		</copy>
		
		<!-- API -->
		<if>
			<istrue value="${buildAPI}"/>
			<then>
				<mkdir dir="${doc}"/>
			</then>
		</if>
		<antcall target="compile_api_openspcoop2">
			<param name="compile_src_openspcoop2.PACKAGES" value="${packagesCompiled}"/>
			<param name="compile_src_openspcoop2.API_NAME" value="monitor-cli"/>
			<param name="compile_src_openspcoop2.API_DIR" value="${doc}/api"/>
			<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
			<param name="src" value="${src_monitor_cli}"/>
		</antcall>
			
	</target>
	<target name="build" depends="compile_monitor_cli" />
	
	
	<target name="run">

		<java classname="org.openspcoop2.pdd.monitor.cli.MonitorConsole" fork="true">
			<classpath>
				<path refid="classpath_script"/>
			</classpath>
		</java>

	</target>


</project>
