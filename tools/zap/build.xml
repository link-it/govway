<project name="zaproxy" basedir="." default="analizeGovWay">

	<import file="local_env.xml" />
	<import file="${openspcoop2}/ant/commons/as-check.xml" />
	<import file="${openspcoop2}/ant/commons/git-build.xml" />
	<import file="${openspcoop2}/ant/commons/compile-build.xml" />
	<import file="${openspcoop2}/ant/commons/api-build.xml" />
	<import file="${openspcoop2}/ant/commons/utils.xml" />
	
	<!-- https://www.zaproxy.org/ -->
	<!-- https://github.com/zaproxy/zap-api-java -->

	<!-- directory root -->
	<property name="gitrepo_root" location="${openspcoop2}" />

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${openspcoop2.lib}/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<property name="src_zap" location="src" />
	<property name="build_zap" location="build" />

	<property name="run_zap" location="scripts/runZAProxy.sh" />
	<property name="stop_zap" location="scripts/stopZAProxy.sh" />
	<property name="wait_start_zap" location="scripts/waitStartZAProxy.sh" />
		
	<!-- CLASSPATH -->
	<path id="classpath_run" >
                <fileset dir="${required_lib}" >
                        <exclude name="**/axis14/*"/>
                        <exclude name="**/applicationServer/**/*.jar"/>
                        <exclude name="**/swagger-codegen/*"/>
                        <exclude name="**/*README"/>
                        <exclude name="*.userlibraries"/>
                </fileset>
		<fileset dir="${openspcoop2.dist}" >
			<include name="*.jar"/>
		</fileset>
	</path>
	<path id="classpath_dist" >
		<fileset dir="${openspcoop2.dist}" >
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Ripulisce la distribuzione -->
	<target name="clean">
		<delete dir="${build_zap}"/>
	</target>
	<target name="init">
		<mkdir dir="${build_zap}"/>
	</target>

	<!-- ZAP Proxy -->
	<target name="-checkZapProxyHome" 
        	description="Controlla che la directory HOME di ZAP Proxy sia stata definita" >

                <if>
                        <equals arg1="${zaproxy.home}" arg2="$${zaproxy.home}"/>
                        <then>
                                <fail message="Parametro 'zaproxy.home' non fornito"/>
                        </then>
                </if>
                <if>
                        <equals arg1="${zaproxy.home}" arg2=""/>
                        <then>
                                <fail message="Parametro 'zaproxy.home' non definito"/>
                        </then>
                </if>
	</target>
	<target name="-runZapProxy" 
        	description="Esegue ZAP Proxy" >

                <if>
                        <equals arg1="${zaproxy.home}" arg2="$${zaproxy.home}"/>
                        <then>
                                <fail message="Parametro 'zaproxy.home' non fornito"/>
                        </then>
                </if>
                <if>
                        <equals arg1="${zaproxy.home}" arg2=""/>
                        <then>
                                <fail message="Parametro 'zaproxy.home' non definito"/>
                        </then>
                </if>

		<!-- Run the java code  -->
		<exec executable="${run_zap}">
			<arg value="${zaproxy.home}"/>
			<arg value="${zaproxy.session}" />
			<arg value="${zaproxy.api-key}" />
			<arg value="${zaproxy.port}" />
			<arg value="${zaproxy.address}" />
		</exec>
	</target>
	<target name="-executeZap" depends="-checkZapProxyHome, build"
        	description="Esegue il target indicato" >
		<exec executable="${stop_zap}" failonerror="false"> <!-- Se non esiste fa lo stesso -->
			<arg value="false" />
		</exec>
		<trycatch property="error.message">
			<try>
				<parallel timeout="${zaproxy.timeout}" failonany="true">
					<antcall target="-runZapProxy" />
					<sequential>
						<exec executable="${wait_start_zap}" failonerror="true">
							<arg value="${zaproxy.port}" />
							<arg value="${zaproxy.address}" />
						</exec>
						<antcall target="${zap_target}" />
						<exec executable="${stop_zap}" failonerror="true"/>
					</sequential>
				</parallel>
			</try>

			<catch>
				<echo message="Execute '${zap_target}' failed"/>
			</catch>

			<finally>
				<exec executable="${stop_zap}" failonerror="false"> <!-- Se non esiste fa lo stesso -->
					<arg value="false" />
				</exec>
			</finally>
		</trycatch>

	</target>


	<!-- Compilazione del ZAPClient -->
	<target name="build" depends="clean,init"
       	 description="compila il ZAPClient" >
		<!-- Compile the java code  -->
		<javac includeantruntime="false" destdir="${build_zap}" debug="true">
			<src path="${src_zap}"/>
			<classpath>
				<path refid="classpath_run"/>
			</classpath>
		</javac>
	</target>

	<!-- ReportInfos -->
	<target name="reportInfos">
		<antcall target="-executeZap">
			<param name="zap_target" value="-reportInfos"/>
		</antcall>
	</target>
	<target name="-reportInfos">
		<!-- Run the java code  -->
		<java classname="org.openspcoop2.testsuite.zap.ReportInfos" fork="false">
			<arg value="${zaproxy.address}" />
			<arg value="${zaproxy.port}" />
			<arg value="${zaproxy.session}" />
			<arg value="${zaproxy.api-key}" />
			<arg value="${zaproxy.debug}" />
			<classpath>
				<path refid="classpath_run" />
				<pathelement path="${build_zap}"/>
			</classpath>
		</java>
	</target>

	<!-- OpenAPI -->
	<target name="analizeOpenAPI">

                <if>
                        <equals arg1="${zaproxy.openapi}" arg2="$${zaproxy.openapi}"/>
                        <then>
                                <fail message="Parametro 'zaproxy.openapi' (file o url) non fornito"/>
                        </then>
                </if>
                <if>
                        <equals arg1="${zaproxy.openapi}" arg2=""/>
                        <then>
                                <fail message="Parametro 'zaproxy.openapi' (file o url) non definito"/>
                        </then>
                </if>

                <if>
                        <equals arg1="${zaproxy.openapi.targetUrl}" arg2="$${zaproxy.openapi.targetUrl}"/>
                        <then>
                                <fail message="Parametro 'zaproxy.openapi.targetUrl' non fornito"/>
                        </then>
                </if>
                <if>
                        <equals arg1="${zaproxy.openapi.targetUrl}" arg2=""/>
                        <then>
                                <fail message="Parametro 'zaproxy.openapi.targetUrl' non definito"/>
                        </then>
                </if>

		<antcall target="-executeZap">
			<param name="zap_target" value="-analizeOpenAPI"/>
		</antcall>
	</target>
	<target name="-analizeOpenAPI">
		<!-- Run the java code  -->
		<java classname="org.openspcoop2.testsuite.zap.OpenAPI" fork="false">
			<arg value="${zaproxy.address}" />
			<arg value="${zaproxy.port}" />
			<arg value="${zaproxy.session}" />
			<arg value="${zaproxy.api-key}" />
			<arg value="${zaproxy.debug}" />
			<arg value="${zaproxy.openapi}" />
			<arg value="${zaproxy.openapi.targetUrl}" />
			<arg value="${zaproxy.report.title}" />
			<arg value="${zaproxy.report.description}" />
			<arg value="${zaproxy.report.includedConfidences}" />
			<arg value="${zaproxy.report.includedRisks}" />
			<arg value="${zaproxy.report.fileNamePattern}" />
			<arg value="${zaproxy.report.dir}" />
			<arg value="${zaproxy.report.display}" />
			<arg value="${zaproxy.report.templates}" />
			<classpath>
				<path refid="classpath_run" />
				<pathelement path="${build_zap}"/>
			</classpath>
		</java>
	</target>

	<!-- WSDL -->
	<target name="analizeSoap">

                <if>
                        <equals arg1="${zaproxy.soap}" arg2="$${zaproxy.soap}"/>
                        <then>
                                <fail message="Parametro 'zaproxy.soap' (file o url) non fornito"/>
                        </then>
                </if>
                <if>
                        <equals arg1="${zaproxy.soap}" arg2=""/>
                        <then>
                                <fail message="Parametro 'zaproxy.soap' (file o url) non definito"/>
                        </then>
                </if>

                <if>
                        <equals arg1="${zaproxy.soap.targetUrl}" arg2="$${zaproxy.soap.targetUrl}"/>
                        <then>
                                <fail message="Parametro 'zaproxy.soap.targetUrl' non fornito"/>
                        </then>
                </if>
                <if>
                        <equals arg1="${zaproxy.soap.targetUrl}" arg2=""/>
                        <then>
                                <fail message="Parametro 'zaproxy.soap.targetUrl' non definito"/>
                        </then>
                </if>

		<antcall target="-executeZap">
			<param name="zap_target" value="-analizeSoap"/>
		</antcall>
	</target>
	<target name="-analizeSoap">
		<!-- Run the java code  -->
		<java classname="org.openspcoop2.testsuite.zap.Soap" fork="false">
			<arg value="${zaproxy.address}" />
			<arg value="${zaproxy.port}" />
			<arg value="${zaproxy.session}" />
			<arg value="${zaproxy.api-key}" />
			<arg value="${zaproxy.debug}" />
			<arg value="${zaproxy.soap}" />
			<arg value="${zaproxy.soap.targetUrl}" />
			<arg value="${zaproxy.report.title}" />
			<arg value="${zaproxy.report.description}" />
			<arg value="${zaproxy.report.includedConfidences}" />
			<arg value="${zaproxy.report.includedRisks}" />
			<arg value="${zaproxy.report.fileNamePattern}" />
			<arg value="${zaproxy.report.dir}" />
			<arg value="${zaproxy.report.display}" />
			<arg value="${zaproxy.report.templates}" />
			<classpath>
				<path refid="classpath_run" />
				<pathelement path="${build_zap}"/>
			</classpath>
		</java>
	</target>

	<!-- GovWay API -->
	<property name="govway_rest_status" location="../../core/deploy/preloading/status/govway_status.yaml" />
	<property name="govway_soap_status" location="../../core/deploy/preloading/status/govway_status.wsdl" />
	<property name="govway_api_config" location="../../tools/rs/config/server/src/schemi/merge/govway_rs-api_config.yaml" />
	<property name="govway_api_monitor" location="../../tools/rs/monitor/server/src/schemi/merge/govway_rs-api_monitor.yaml" />
	<target name="analizeGovWayAPI">

		<!-- api rest status -->
		<delete dir="${zaproxy.report.dir}/api-rest-status" />
		<mkdir dir="${zaproxy.report.dir}/api-rest-status" />
		<antcall target="analizeOpenAPI">
			<param name="zaproxy.openapi" value="${govway_rest_status}"/>
			<param name="zaproxy.openapi.targetUrl" value="${govway.prefix}/govway/${govway.ente}/api-rest-status/v1"/>
			<param name="zaproxy.report.dir" value="${zaproxy.report.dir}/api-rest-status" />
			<param name="zaproxy.report.fileNamePattern" value="zap_report_api-rest-status.ext" />
			<param name="zaproxy.report.title" value="GovWay API REST" />
			<param name="zaproxy.report.description" value="Analisi per API di tipo REST" />
		</antcall>

		<!-- api soap status -->
		<delete dir="${zaproxy.report.dir}/api-soap-status" />
		<mkdir dir="${zaproxy.report.dir}/api-soap-status" />
		<antcall target="analizeSoap">
			<param name="zaproxy.soap" value="${govway_soap_status}"/>
			<param name="zaproxy.soap.targetUrl" value="${govway.prefix}/govway/${govway.ente}/api-soap-status/v1"/>
			<param name="zaproxy.report.dir" value="${zaproxy.report.dir}/api-soap-status" />
			<param name="zaproxy.report.fileNamePattern" value="zap_report_api-soap-status.ext" />
			<param name="zaproxy.report.title" value="GovWay API SOAP" />
			<param name="zaproxy.report.description" value="Analisi per API di tipo SOAP" />
		</antcall>

		<!-- api govway config -->
		<delete dir="${zaproxy.report.dir}/api-config" />
		<mkdir dir="${zaproxy.report.dir}/api-config" />
		<antcall target="analizeOpenAPI">
			<param name="zaproxy.openapi" value="${govway_api_config}"/>
			<param name="zaproxy.openapi.targetUrl" value="${govway.prefix}/govway/${govway.ente}/api-config/v1"/>
			<param name="zaproxy.report.dir" value="${zaproxy.report.dir}/api-config" />
			<param name="zaproxy.report.fileNamePattern" value="zap_report_api-config.ext" />
			<param name="zaproxy.report.title" value="GovWay API di configurazione" />
			<param name="zaproxy.report.description" value="Analisi delle API di GovWay di configurazione" />
		</antcall>

		<!-- api govway monitor -->
		<delete dir="${zaproxy.report.dir}/api-monitor" />
		<mkdir dir="${zaproxy.report.dir}/api-monitor" />
		<antcall target="analizeOpenAPI">
			<param name="zaproxy.openapi" value="${govway_api_monitor}"/>
			<param name="zaproxy.openapi.targetUrl" value="${govway.prefix}/govway/${govway.ente}/api-monitor/v1"/>
			<param name="zaproxy.report.dir" value="${zaproxy.report.dir}/api-monitor" />
			<param name="zaproxy.report.fileNamePattern" value="zap_report_api-monitor.ext" />
			<param name="zaproxy.report.title" value="GovWay API di monitoraggio" />
			<param name="zaproxy.report.description" value="Analisi delle API di GovWay di monitoraggio" />
		</antcall>

	</target>

	<!-- GovWay Console -->
	<target name="analizeGovWayConsole">
	</target>

	<target name="analizeGovWay" depends="analizeGovWayAPI,analizeGovWayConsole"/>
</project>
