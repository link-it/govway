<project name="GovWayConfigApiRSTestSuite">

	<description>
        	File di Script per la compilazione dell'interfaccia api rs per il Configaggio
    	</description>

	<import file="./local_env.xml" />

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<path id="karate_testsuite" >
                <fileset dir="${required_lib}/testsuite" >
			<include name="karate-core-1.4.1.jar"/>
			<include name="karate-junit5-1.4.1.jar"/>
			<include name="junit-*.jar"/>
			<include name="hamcrest-core-*.jar"/>
			<include name="junit-jupiter-5.9.3.jar"/>
			<include name="junit-jupiter-api-5.9.3.jar"/>
			<include name="junit-jupiter-engine-5.9.3.jar"/>
			<include name="junit-platform-engine-5.9.3.jar"/>
			<include name="junit-platform-launcher-*.jar"/>
			<include name="junit-platform-console-*.jar"/>
			<include name="junit-platform-reporting-*.jar"/>
			<include name="junit-platform-commons*.jar"/>
			<include name="junit-jupiter-api*.jar"/>
			<include name="apiguardian-api*.jar"/>
			<include name="picocli-*.jar"/>
			<include name="logback-*.jar"/>
                        <include name="netty-codec-http-*.jar"/>
			<include name="netty-codec-*.jar"/>
			<include name="netty-common-*.jar"/>
                        <include name="thymeleaf-*.jar"/>
             		<include name="netty-buffer-*.jar"/>
                        <include name="httpclient-*.jar"/>
                        <include name="httpcore-*.jar"/>
                        <include name="antlr4-runtime-*.jar"/>
			<include name="opentest4j-*.jar"/>
			<include name="graal-sdk-*"/>
			<include name="js-*"/>
                        <include name="truffle-api-*"/>
             		<include name="regex-*"/>
                        <include name="attoparser-*.jar"/>
			<include name="unbescape-*.jar"/>

                </fileset>
		<fileset dir="${required_lib}/swagger" >
                        <include name="classgraph-*.jar"/>
                                                <include name="*.jar"/>
                </fileset> 

		<fileset dir="${required_lib}/jackson" >
                        <include name="*.jar"/>
                </fileset>

		<fileset dir="${required_lib}/commons" >
                        <include name="*.jar"/>
                </fileset>
		<fileset dir="${required_lib}/httpcore" >
                        <include name="*.jar"/>
                </fileset>
                <fileset dir="${required_lib}/log" >
                        <include name="*.jar"/>
                </fileset>
                <fileset dir="${required_lib}/json" >
                        <include name="*.jar"/>
                </fileset>
                <fileset dir="${required_lib}/shared" >
                        <include name="snakeyaml-2.1-gov4j-1.jar"/>
                </fileset>
                <fileset dir="${required_lib}/cxf" >
                        <include name="asm-9.6.jar"/>
                </fileset>
	</path> 

	<property name="src_testsuite" location="src" />
	<property name="build_testsuite" location="build" />

	<!-- Ripulisce la distribuzione -->
	<target name="clean">
		<delete dir="${build_testsuite}"/>
	</target>
	<target name="init">
		<mkdir dir="${build_testsuite}"/>
	</target>

	<!-- Compilazione del Client -->
	<target name="build" depends="clean,init" description="compila" >
		<!-- Compile the java code  -->
		<javac includeantruntime="false" destdir="${build_testsuite}" debug="${debug}">
			<src path="${src_testsuite}"/>
			<classpath>
				<path refid="karate_testsuite"/>
			</classpath>
		</javac>
		<copy todir="${build_testsuite}">
			<fileset dir="${src_testsuite}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="run_test">
		<if>
    			<equals arg1="${karate.options}" arg2="$${karate.options}"/>
    		<then>
    			<antcall target="run_test_without_options"/>
    		</then>
    		<else>
  			  <antcall target="run_test_with_options"/>
    		</else>
 		</if>
	</target>



	<!-- Esecuzione dei test -->
	<target name="run_test_with_options">
  		<delete dir="${output}"/>
    		<mkdir dir="${output}"/>
    		<java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
        		<arg value="--scan-classpath"/>
        		<arg value="--class-path"/>
        		<arg value="${build_testsuite};${required_lib}"/>
        		<arg value="--reports-dir"/>
        		<arg value="${output}"/>
            		<!-- Esecuzione condizionata basata sui nomi dei file di test -->
            		<arg value="--include-classname=.*Test.*"/>
            		<arg value="--include-classname=.*Tests.*"/>
            		<jvmarg value="-Dkarate.options=${karate.options}"/>
			<jvmarg value="-Dkarate.output.dir=${output}"/>
        		<classpath>
            			<pathelement location="${build_testsuite}"/>
            			<path refid="karate_testsuite"/>
        		</classpath>
    		</java>
	</target>


	<!-- Esecuzione dei test senza karate.options-->
	<target name="run_test_without_options">
	    <delete dir="${output}"/>
	    <mkdir dir="${output}"/>

	    <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
		<arg value="--scan-classpath"/>
	        <arg value="--class-path"/>
	        <arg value="${build_testsuite};${required_lib}"/>
	        <arg value="--reports-dir"/>
	        <arg value="${output}"/>
		<arg value="--include-classname=.*Test.*"/>
		<arg value="--include-classname=.*Tests.*"/>
           	<jvmarg value="-Dkarate.output.dir=${output}"/>
        	<classpath>
            		<pathelement location="${build_testsuite}"/>
            		<path refid="karate_testsuite"/>
        	</classpath>
	    </java>
	</target>
</project>
