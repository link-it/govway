openapi: "3.0.3"
info:
  title: "GovWay Config API"
  description: "Servizi per la configurazione di GovWay"
  termsOfService: "https://govway.org/documentazione/api/index.html"
  contact:
    email: "info@link.it"
  license:
    name: "GPL v3.0"
    url: "https://www.gnu.org/licenses/gpl-3.0.txt"
  version: "3.4.0.b1"
  x-api-id: "https://govway.org/apiConfig"
  x-summary: "Servizi per la configurazione di GovWay"
servers:
- url: "https://{hostname}/govway/{soggetto}/api-config/v1"
  description: "l'accesso all'API è protetta dai controlli di accesso configurati\
    \ su GovWay"
  variables:
    hostname:
      default: "localhost"
    soggetto:
      description: "soggetto con cui è stato dispiegato il software GovWay"
      default: "EnteGenerico"
tags:
- name: "api"
  description: "Interfacce API che definiscono servizi REST e SOAP"
- name: "erogazioni"
  description: "API erogate da applicativi interni al dominio di gestione"
- name: "erogazioni-gruppi"
  description: "Classificazione in gruppi delle azioni/risorse di una API erogata"
- name: "erogazioni-configurazione"
  description: "Configurazione dell'erogazione (Controllo Accessi, Rate Limiting,\
    \ Validazione, ...)"
- name: "fruizioni"
  description: "Fruizioni di API da parte di applicativi interni al dominio di gestione"
- name: "fruizioni-gruppi"
  description: "Classificazione in gruppi delle azioni/risorse di una API fruita"
- name: "fruizioni-configurazione"
  description: "Configurazione della fruizione (Controllo Accessi, Rate Limiting,\
    \ Validazione, ...)"
- name: "soggetti"
  description: "soggetti esterni o interni al dominio di gestione"
- name: "applicativi"
  description: "applicativi client che fruiscono di API"
- name: "applicativi-server"
  description: "applicativi server che erogano una API"
- name: "ruoli"
  description: "ruoli associabili agli applicativi ed ai soggetti"
- name: "scope"
  description: "scope"
- name: "Status"
  description: "Ritorna lo stato dell'applicazione\n    "
paths:
  /api:
    get:
      tags:
      - "api"
      summary: "Ricerca api"
      description: "Elenca le API registrate"
      operationId: "findAllApi"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/tipo_api"
      - $ref: "#/components/parameters/tag"
      - $ref: "#/components/parameters/profilo_qualsiasi"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un'API"
      description: "Questa operazione consente di creare una API"
      operationId: "createApi"
      requestBody:
        description: "Dati dell'api che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Api"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /api/{nome}/{versione}:
    get:
      tags:
      - "api"
      summary: "Restituisce i dettagli di una API"
      description: "Questa operazione consente di ottenere i dettagli di una API identificata\
        \ dal nome e dalla versione"
      operationId: "getApi"
      responses:
        "200":
          description: "Dettagli di una API restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiViewItem"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un'api"
      description: "Questa operazione consente di eliminare un API identificata dal\
        \ nome e dalla versione"
      operationId: "deleteApi"
      responses:
        "204":
          description: "API eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/informazioni:
    get:
      tags:
      - "api"
      summary: "Restituisce le informazioni generali di una API"
      description: "Questa operazione consente di ottenere le informazioni generali\
        \ di una API identificata dal nome e dalla versione"
      operationId: "getApiInformazioniGenerali"
      responses:
        "200":
          description: "Informazioni generali restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiInformazioniGeneraliView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare le informazioni generali di una API"
      description: "Questa operazione consente di aggiornare le informazioni generali\
        \ di una API identificata dal nome e dalla versione"
      operationId: "updateApiInformazioniGenerali"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiInformazioniGenerali"
        required: true
      responses:
        "204":
          description: "API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/referente:
    get:
      tags:
      - "api"
      summary: "Restituisce il nome del soggetto referente dell'api"
      description: "Questa operazione consente di ottenere il nome del soggetto referente\
        \ dell'API identificata dal nome e dalla versione"
      operationId: "getApiReferente"
      responses:
        "200":
          description: "Nome del soggetto referente restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiReferenteView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/interfaccia:
    get:
      tags:
      - "api"
      summary: "Restituisce i dettagli dell'interfaccia di una API"
      description: "Questa operazione consente di ottenere i dettagli dell'interfaccia\
        \ di una API identificata dal nome e dalla versione"
      operationId: "getApiInterfaccia"
      responses:
        "200":
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiInterfacciaView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare l'interfaccia di una API"
      description: "Questa operazione consente di aggiornare l'interfaccia di una\
        \ API identificata dal nome e dalla versione"
      operationId: "updateApiInterfaccia"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiInterfaccia"
        required: true
      responses:
        "204":
          description: "L'interfaccia è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/interfaccia/download:
    get:
      tags:
      - "api"
      summary: "Restituisce l'interfaccia di una API"
      description: "Questa operazione consente di ottenere l'interfaccia di una API\
        \ identificata dal nome e dalla versione"
      operationId: "downloadApiInterfaccia"
      responses:
        "200":
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/descrizione:
    get:
      tags:
      - "api"
      summary: "Restituisce la descrizione di una API"
      description: "Questa operazione consente di ottenere la descrizione di una API\
        \ identificata dal nome e dalla versione"
      operationId: "getApiDescrizione"
      responses:
        "200":
          description: "Dati della descrizione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDescrizione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare la descrizione di una API"
      description: "Questa operazione consente di aggiornare la descrizione di una\
        \ API identificata dal nome e dalla versione"
      operationId: "updateApiDescrizione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDescrizione"
        required: true
      responses:
        "204":
          description: "La descrizione è stato aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/tags:
    get:
      tags:
      - "api"
      summary: "Restituisce i tags associati all'API"
      description: "Questa operazione consente di ottenere i tags associati all'API\
        \ identificata dal nome e dalla versione"
      operationId: "getApiTags"
      responses:
        "200":
          description: "Tags restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiTags"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare i tags associati all'API"
      description: "Questa operazione consente di aggiornare i tags associati all'API\
        \ identificata dal nome e dalla versione"
      operationId: "updateApiTags"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiTags"
        required: true
      responses:
        "204":
          description: "I tags sono stati aggiornati correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/canale:
    get:
      tags:
      - "api"
      summary: "Restituisce il canale associato all'API"
      description: "Questa operazione consente di ottenere il canale associato all'API\
        \ identificata dal nome e dalla versione"
      operationId: "getApiCanale"
      responses:
        "200":
          description: "Canale restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiCanale"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare il canale associato all'API"
      description: "Questa operazione consente di aggiornare il canale associato all'API\
        \ identificata dal nome e dalla versione"
      operationId: "updateApiCanale"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigurazioneApiCanale"
        required: true
      responses:
        "204":
          description: "Il canale è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/modi:
    get:
      tags:
      - "api"
      summary: "Restituisce le informazioni ModI associate all'API"
      description: "Questa operazione consente di ottenere le informazioni ModI associato\
        \ all'API identificata dal nome e dalla versione"
      operationId: "getApiModI"
      responses:
        "200":
          description: "Informazioni ModI restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiModI"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Consente di modificare le informazioni ModI associate all'API"
      description: "Questa operazione consente di aggiornare le informazioni ModI\
        \ associate all'API identificata dal nome e dalla versione"
      operationId: "updateApiModI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiModI"
        required: true
      responses:
        "204":
          description: "Le informazioni ModI sono state aggiornate correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/allegati:
    get:
      tags:
      - "api"
      summary: "Elenco allegati di una API"
      description: "Questa operazione consente di ottenere gli allegati di una API\
        \ identificata dal nome e dalla versione"
      operationId: "findAllApiAllegati"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiAllegati"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un allegato di una API"
      description: "Questa operazione consente di aggiungere un allegato alla API\
        \ identificata dal nome e dalla versione"
      operationId: "createApiAllegato"
      requestBody:
        description: "Dati dell'allegato che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAllegato"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/allegati/{nome_allegato}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di un allegato di una API"
      description: "Questa operazione consente di ottenere il dettaglio di un allegato\
        \ della API identificata dal nome e dalla versione"
      operationId: "getApiAllegato"
      responses:
        "200":
          description: "Dati dell'allegato restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiAllegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di un allegato di una API"
      description: "Questa operazione consente di aggiornare i dettagli di un allegato\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateApiAllegato"
      requestBody:
        description: "Dati dell'allegato da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAllegato"
        required: true
      responses:
        "204":
          description: "L'allegato è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un allegato di una API"
      description: "Questa operazione consente di eliminare un'allegato della API\
        \ identificata dal nome e dalla versione"
      operationId: "deleteApiAllegato"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /api/{nome}/{versione}/allegati/{nome_allegato}/download:
    get:
      tags:
      - "api"
      summary: "Restituisce l'allegato di una API"
      description: "Questa operazione consente di ottenere l'allegato di una API identificata\
        \ dal nome e dalla versione"
      operationId: "downloadApiAllegato"
      responses:
        "200":
          description: "Allegato dell'API restituito con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
  /api/{nome}/{versione}/risorse:
    get:
      tags:
      - "api"
      summary: "Elenco risorse di una API"
      description: "Questa operazione consente di ottenere le risorse di una API identificata\
        \ dal nome e dalla versione"
      operationId: "findAllApiRisorse"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/http_method"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiRisorse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di una risorsa di una API"
      description: "Questa operazione consente di aggiungere una risorsa alla API\
        \ identificata dal nome e dalla versione"
      operationId: "createApiRisorsa"
      requestBody:
        description: "Dati della risorsa che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiRisorsa"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/risorse/{nome_risorsa}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di una risorsa di una API"
      description: "Questa operazione consente di ottenere il dettaglio di una risorsa\
        \ della API identificata dal nome e dalla versione"
      operationId: "getApiRisorsa"
      responses:
        "200":
          description: "Dati della risorsa restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiRisorsa"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di una risorsa di una API"
      description: "Questa operazione consente di aggiornare i dettagli di una risorsa\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateApiRisorsa"
      requestBody:
        description: "Dati della risorsa da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiRisorsa"
        required: true
      responses:
        "204":
          description: "La risorsa è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina una risorsa di una API"
      description: "Questa operazione consente di eliminare una risorsa della API\
        \ identificata dal nome e dalla versione"
      operationId: "deleteApiRisorsa"
      responses:
        "204":
          description: "Risorsa eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_risorsa"
  /api/{nome}/{versione}/servizi:
    get:
      tags:
      - "api"
      summary: "Elenco servizi di una API"
      description: "Questa operazione consente di ottenere i servizi di una API identificata\
        \ dal nome e dalla versione"
      operationId: "findAllApiServizi"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiServizi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un servizio di una API"
      description: "Questa operazione consente di aggiungere un servizio alla API\
        \ identificata dal nome e dalla versione"
      operationId: "createApiServizio"
      requestBody:
        description: "Dati del servizio che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiServizio"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
  /api/{nome}/{versione}/servizi/{nome_servizio}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di un servizio di una API"
      description: "Questa operazione consente di ottenere il dettaglio di un servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "getApiServizio"
      responses:
        "200":
          description: "Dati del servizio restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiServizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di un servizio di una API"
      description: "Questa operazione consente di aggiornare i dettagli di un servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateApiServizio"
      requestBody:
        description: "Dati del servizio da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiServizio"
        required: true
      responses:
        "204":
          description: "Il servizio è stata aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un servizio di una API"
      description: "Questa operazione consente di eliminare un servizio della API\
        \ identificata dal nome e dalla versione"
      operationId: "deleteApiServizio"
      responses:
        "204":
          description: "Servizio eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_servizio"
  /api/{nome}/{versione}/servizi/{nome_servizio}/azioni:
    get:
      tags:
      - "api"
      summary: "Elenco servizi di una API"
      description: "Questa operazione consente di ottenere le azioni di un servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "findAllApiAzioni"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiAzioni"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "api"
      summary: "Creazione di un'azione di una API"
      description: "Questa operazione consente di aggiungere una azione al servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "createApiAzione"
      requestBody:
        description: "Dati dell'azione che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAzione"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_servizio"
  /api/{nome}/{versione}/servizi/{nome_servizio}/azioni/{nome_azione}:
    get:
      tags:
      - "api"
      summary: "Restituisce il dettaglio di un'azione di un  servizio della API"
      description: "Questa operazione consente di ottenere il dettaglio di un'azione\
        \ nel servizio della API identificata dal nome e dalla versione"
      operationId: "getApiAzione"
      responses:
        "200":
          description: "Dati dell'azione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiAzione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "api"
      summary: "Modifica i dati di un'azione nel servizio di una API"
      description: "Questa operazione consente di aggiornare i dettagli di un'azione\
        \ della API identificata dal nome e dalla versione"
      operationId: "updateApiAzione"
      requestBody:
        description: "Dati dell'azione da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiAzione"
        required: true
      responses:
        "204":
          description: "L'azione è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "api"
      summary: "Elimina un'azione del servizio di una API"
      description: "Questa operazione consente di eliminare un'azione del servizio\
        \ della API identificata dal nome e dalla versione"
      operationId: "deleteApiAzione"
      responses:
        "204":
          description: "Azione eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_servizio"
    - $ref: "#/components/parameters/id_nome_azione"
  /erogazioni:
    get:
      tags:
      - "erogazioni"
      summary: "Ricerca erogazioni di api"
      description: "Elenca le erogazioni di API"
      operationId: "findAllErogazioni"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/tipo_api"
      - $ref: "#/components/parameters/tag"
      - $ref: "#/components/parameters/uri_api_implementata"
      - $ref: "#/components/parameters/profilo_qualsiasi"
      - $ref: "#/components/parameters/soggetto_qualsiasi"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaErogazioni"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni"
      summary: "Creazione di un'erogazione di API"
      description: "Questa operazione consente di creare una erogazione di API"
      operationId: "createErogazione"
      requestBody:
        description: "Dati dell'erogazione che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Erogazione"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /erogazioni/{nome}/{versione}:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce i dettagli di un'erogazione di API"
      description: "Questa operazione consente di ottenere i dettagli di una erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "getErogazione"
      responses:
        "200":
          description: "Dettagli di un'erogazione di API restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErogazioneViewItem"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni"
      summary: "Elimina un'erogazione di api"
      description: "Questa operazione consente di eliminare un'erogazione di API identificata\
        \ dal nome e dalla versione"
      operationId: "deleteErogazione"
      responses:
        "204":
          description: "Erogazione di API eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/informazioni:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni generali di un'erogazione di API"
      description: "Questa operazione consente di ottenere le informazioni generali\
        \ di un'erogazione di API identificata dal nome e dalla versione"
      operationId: "getErogazioneInformazioniGenerali"
      responses:
        "200":
          description: "Informazioni generali restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplInformazioniGeneraliView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare le informazioni generali di un'erogazione di\
        \ API"
      description: "Questa operazione consente di aggiornare le informazioni generali\
        \ di un'erogazione di API identificata dal nome e dalla versione"
      operationId: "updateErogazioneInformazioniGenerali"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplInformazioniGenerali"
        required: true
      responses:
        "204":
          description: "Erogazione di API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/api:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni sull'API implementata dall'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sull'API\
        \ implementata dall'erogazione identificata dal nome e dalla versione"
      operationId: "getErogazioneAPI"
      responses:
        "200":
          description: "Informazioni sull'API restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplVersioneApiView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la versione dell'API implementata dall'erogazione"
      description: "Questa operazione consente di aggiornare la versione dell'API\
        \ implementata dall'erogazione identificata dal nome e dalla versione"
      operationId: "updateErogazioneAPI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplVersioneApi"
        required: true
      responses:
        "204":
          description: "Erogazione di API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/modi:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni ModI associate all'erogazione"
      description: "Questa operazione consente di ottenere le informazioni modI associate\
        \ all'erogazione identificata dal nome e dalla versione"
      operationId: "getErogazioneModI"
      responses:
        "200":
          description: "Informazioni ModI restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErogazioneModI"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare le informazioni ModI associate all'erogazione"
      description: "Questa operazione consente di aggiornare le informazioni ModI\
        \ assocaite all'erogazione identificata dal nome e dalla versione"
      operationId: "updateErogazioneModI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErogazioneModI"
        required: true
      responses:
        "204":
          description: "Erogazione di API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/descrizione:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce la descrizione di una erogazione"
      description: "Questa operazione consente di ottenere la descrizione di una erogazione\
        \ identificata dal nome e dalla versione"
      operationId: "getErogazioneDescrizione"
      responses:
        "200":
          description: "Dati della descrizione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDescrizione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la descrizione di una erogazione"
      description: "Questa operazione consente di aggiornare la descrizione di una\
        \ erogazione identificata dal nome e dalla versione"
      operationId: "updateErogazioneDescrizione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDescrizione"
        required: true
      responses:
        "204":
          description: "La descrizione è stato aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/allegati:
    get:
      tags:
      - "erogazioni"
      summary: "Elenco allegati di un'erogazione di API"
      description: "Questa operazione consente di ottenere gli allegati di un'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "findAllErogazioneAllegati"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiImplAllegati"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni"
      summary: "Creazione di un allegato nell'erogazione di API"
      description: "Questa operazione consente di aggiungere un allegato all'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "createErogazioneAllegato"
      requestBody:
        description: "Dati dell'allegato che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/allegati/{nome_allegato}:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce il dettaglio di un allegato dell'erogazione"
      description: "Questa operazione consente di ottenere il dettaglio di un allegato\
        \ dell'erogazione di API identificata dal nome e dalla versione"
      operationId: "getErogazioneAllegato"
      responses:
        "200":
          description: "Dati dell'allegato restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplAllegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Modifica i dati di un allegato dell'erogazione"
      description: "Questa operazione consente di aggiornare i dettagli di un allegato\
        \ dell'erogazione di API identificata dal nome e dalla versione"
      operationId: "updateErogazioneAllegato"
      requestBody:
        description: "Dati dell'allegato da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        "204":
          description: "L'allegato è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni"
      summary: "Elimina un allegato dall'erogazione"
      description: "Questa operazione consente di eliminare un'allegato dell'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "deleteErogazioneAllegato"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/allegati/{nome_allegato}/download:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce l'allegato di una erogazione"
      description: "Questa operazione consente di ottenere l'allegato di un'erogazione\
        \ di API identificata dal nome e dalla versione"
      operationId: "downloadErogazioneAllegato"
      responses:
        "200":
          description: "Allegato dell'erogazione restituito con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/url-invocazione:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni sull'url di invocazione necessaria ad\
        \ invocare l'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sull'url\
        \ di invocazione necessaria ad invocare l'erogazione identificata dal nome\
        \ e dalla versione"
      operationId: "getErogazioneUrlInvocazione"
      responses:
        "200":
          description: "Informazioni sull'url di invocazione restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplUrlInvocazioneView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la configurazione utilizzata per identificare\
        \ l'azione invocata dell'API implementata dall'erogazione"
      description: "Questa operazione consente di aggiornare la configurazione utilizzata\
        \ dal Gateway per identificare l'azione invocata"
      operationId: "updateErogazioneUrlInvocazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplUrlInvocazione"
        required: true
      responses:
        "204":
          description: "Configurazione dell'erogazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/connettore:
    get:
      tags:
      - "erogazioni"
      summary: "Restituisce le informazioni su connettore associato all'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sul connettore\
        \ associato all'erogazione identificata dal nome e dalla versione"
      operationId: "getErogazioneConnettore"
      responses:
        "200":
          description: "Informazioni sul connettore restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnettoreErogazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni"
      summary: "Consente di modificare la configurazione del connettore associato\
        \ all'erogazione"
      description: "Questa operazione consente di aggiornare la configurazione del\
        \ connettore associato all'erogazione identificata dal nome e dalla versione"
      operationId: "updateErogazioneConnettore"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnettoreErogazione"
        required: true
      responses:
        "204":
          description: "Configurazione dell'erogazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
    - $ref: "#/components/parameters/gruppo"
  /erogazioni/{nome}/{versione}/configurazioni/gestione-cors:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce le informazioni sulla configurazione CORS associata all'erogazione"
      description: "Questa operazione consente di ottenere le informazioni sulla configurazione\
        \ CORS associata all'erogazione identificata dal nome e dalla versione"
      operationId: "getErogazioneGestioneCORS"
      responses:
        "200":
          description: "Informazioni sulla configurazione CORS restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GestioneCors"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione CORS associata all'erogazione"
      description: "Questa operazione consente di aggiornare la configurazione CORS\
        \ associata all'erogazione identificata dal nome e dalla versione"
      operationId: "updateErogazioneGestioneCORS"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GestioneCors"
        required: true
      responses:
        "204":
          description: "Configurazione dell'erogazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/canale:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce il canale associato all'erogazione"
      description: "Questa operazione consente di ottenere il canale associato all'erogazione"
      operationId: "getErogazioneCanale"
      responses:
        "200":
          description: "Canale restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiCanale"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare il canale associato all'erogazione"
      description: "Questa operazione consente di aggiornare il canale associato all'erogazione"
      operationId: "updateErogazioneCanale"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigurazioneApiCanale"
        required: true
      responses:
        "204":
          description: "Il canale è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/gruppi:
    get:
      tags:
      - "erogazioni-gruppi"
      summary: "Ricerca i gruppi in cui sono stati classificate le azioni o le risorse\
        \ dell'API"
      description: "Elenca i gruppi in cui sono stati classificate le azioni o le\
        \ risorse dell'API"
      operationId: "findAllErogazioneGruppi"
      parameters:
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/azione"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaGruppi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-gruppi"
      summary: "Creazione di un gruppo di azioni o risorse dell'API erogata"
      description: "Questa operazione consente di creare un gruppo di azioni o risorse\
        \ dell'API erogata"
      operationId: "createErogazioneGruppo"
      requestBody:
        description: "Dati del gruppo di azioni o risorse che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gruppo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/gruppi/{nome_gruppo}:
    get:
      tags:
      - "erogazioni-gruppi"
      summary: "Restituisce azioni/risorse associate al gruppo identificato dal nome"
      description: "Questa operazione consente di ottenere le azioni associate al\
        \ gruppo identificato dal nome"
      operationId: "getErogazioneGruppoAzioni"
      responses:
        "200":
          description: "Elenco di azioni/risorse restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GruppoAzioni"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-gruppi"
      summary: "Consente di modificare il nome del gruppo"
      description: "Questa operazione consente di aggiornare il nome di un gruppo"
      operationId: "updateErogazioneGruppoNome"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoNome"
        required: true
      responses:
        "204":
          description: "Configurazione del gruppo aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-gruppi"
      summary: "Elimina il gruppo identificato dal nome"
      description: "Questa operazione consente di eliminare il gruppo identificato\
        \ dal nome"
      operationId: "deleteErogazioneGruppo"
      responses:
        "204":
          description: "Gruppo eliminate con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/gruppi/{nome_gruppo}/azioni:
    post:
      tags:
      - "erogazioni-gruppi"
      summary: "Aggiunta di azioni o risorse dell'API al gruppo"
      description: "Questa operazione consente di aggiungere azioni o risorse dell'API\
        \ al gruppo"
      operationId: "addErogazioneGruppoAzioni"
      requestBody:
        description: "Azioni o risorse che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoAzioni"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/gruppi/{nome_gruppo}/azioni/{nome_azione}:
    delete:
      tags:
      - "erogazioni-gruppi"
      summary: "Elimina l'azione o la risorsa dell'API associata al gruppo"
      description: "Questa operazione consente di eliminare l'azione o la risorsa\
        \ dell'API associate al gruppo"
      operationId: "deleteErogazioneGruppoAzione"
      responses:
        "204":
          description: "Azione eliminate con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/id_nome_azione"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/gruppi/{nome_gruppo}/descrizione:
    get:
      tags:
      - "erogazioni-gruppi"
      summary: "Restituisce la descrizione del gruppo"
      description: "Questa operazione consente di ottenere la descrizione del gruppo"
      operationId: "getErogazioneDescrizioneGruppo"
      responses:
        "200":
          description: "Dati della descrizione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDescrizione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-gruppi"
      summary: "Consente di modificare la descrizione del gruppo"
      description: "Questa operazione consente di aggiornare la descrizione del gruppo"
      operationId: "updateErogazioneDescrizioneGruppo"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDescrizione"
        required: true
      responses:
        "204":
          description: "La descrizione è stato aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/stato:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'indicazione sullo stato del gruppo"
      description: "Questa operazione consente di ottenere lo stato attuale del gruppo"
      operationId: "getErogazioneStato"
      responses:
        "200":
          description: "Dettaglio dello stato restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplStato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare lo stato del gruppo"
      description: "Questa operazione consente di aggiornare lo stato del gruppo"
      operationId: "updateErogazioneStato"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplStato"
        required: true
      responses:
        "204":
          description: "Configurazione del gruppo aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/gestione-token:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa alla gestione dei token per\
        \ quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla gestione dei token per quanto concerne il controllo degli accessi"
      operationId: "getErogazioneControlloAccessiGestioneToken"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla gestione dei\
        \ token per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla gestione dei token per quanto concerne il controllo degli accessi"
      operationId: "updateErogazioneControlloAccessiGestioneToken"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autenticazione:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autenticazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "getErogazioneControlloAccessiAutenticazione"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autenticazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "updateErogazioneControlloAccessiAutenticazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/identificazione-attributi:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa all'identificazione degli attributi\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'identificazione degli attributi per quanto concerne il controllo degli\
        \ accessi"
      operationId: "getErogazioneControlloAccessiIdentificazioneAttributi"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiIdentificazioneAttributi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'identificazione\
        \ degli attributi per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'identificazione degli attributi per quanto concerne il controllo degli\
        \ accessi"
      operationId: "updateErogazioneControlloIdentificazioneAttributi"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiIdentificazioneAttributi"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autorizzazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "getErogazioneControlloAccessiAutorizzazione"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autorizzazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "updateErogazioneControlloAccessiAutorizzazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazione"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/download-xacml-policy:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la policy XACML associata all'autorizzazione"
      description: "Questa operazione consente di ottenere la policy XACML associata\
        \ all'autorizzazione"
      operationId: "downloadErogazioneControlloAccessiAutorizzazioneXacmlPolicy"
      responses:
        "200":
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/xml:
              schema:
                type: "string"
                format: "binary"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/soggetti:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco dei soggetti autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei soggetti autorizzati"
      operationId: "getErogazioneControlloAccessiAutorizzazioneSoggetti"
      responses:
        "200":
          description: "Elenco soggetti autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneSoggetti"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di soggetti all'elenco dei soggetti autorizzati"
      description: "Questa operazione consente di aggiungere soggetti all'elenco dei\
        \ soggetti autorizzati"
      operationId: "addErogazioneControlloAccessiAutorizzazioneSoggetti"
      requestBody:
        description: "Soggetti che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneSoggetto"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/soggetti/{soggetto_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina soggetti all'elenco dei soggetti autorizzati"
      description: "Questa operazione consente di eliminare soggetti all'elenco dei\
        \ soggetti autorizzati"
      operationId: "deleteErogazioneControlloAccessiAutorizzazioneSoggetti"
      responses:
        "204":
          description: "Soggetti eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_soggetto_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli applicativi\
        \ autorizzati"
      operationId: "getErogazioneControlloAccessiAutorizzazioneApplicativi"
      responses:
        "200":
          description: "Elenco applicativi autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiErogazioneAutorizzazioneApplicativi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di applicativi all'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di aggiungere applicativi all'elenco\
        \ degli applicativi autorizzati"
      operationId: "addErogazioneControlloAccessiAutorizzazioneApplicativi"
      requestBody:
        description: "Applicativi che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiErogazioneAutorizzazioneApplicativo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi/{applicativo_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina applicativi dall'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di eliminare applicativi dall'elenco\
        \ degli applicativi autorizzati"
      operationId: "deleteErogazioneControlloAccessiAutorizzazioneApplicativi"
      responses:
        "204":
          description: "Applicativi eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_applicativo_autorizzato"
    - $ref: "#/components/parameters/id_soggetto_applicativo"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei ruoli autorizzati"
      operationId: "getErogazioneControlloAccessiAutorizzazioneRuoli"
      responses:
        "200":
          description: "Elenco ruoli autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuoli"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di ruoli all'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di aggiungere ruoli all'elenco dei\
        \ ruoli autorizzati"
      operationId: "addErogazioneControlloAccessiAutorizzazioneRuoli"
      requestBody:
        description: "Ruoli che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuolo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli/{ruolo_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina ruoli dall'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di eliminare ruoli dall'elenco dei\
        \ ruoli autorizzati"
      operationId: "deleteErogazioneControlloAccessiAutorizzazioneRuoli"
      responses:
        "204":
          description: "Ruoli eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_ruolo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/applicativi:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco degli applicativi token autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli applicativi\
        \ token autorizzati"
      operationId: "getErogazioneControlloAccessiAutorizzazioneApplicativiToken"
      responses:
        "200":
          description: "Elenco applicativi token autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiErogazioneAutorizzazioneApplicativi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di applicativi token all'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di aggiungere applicativi token all'elenco\
        \ degli applicativi autorizzati"
      operationId: "addErogazioneControlloAccessiAutorizzazioneApplicativiToken"
      requestBody:
        description: "Applicativi Token che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiErogazioneAutorizzazioneApplicativo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/applicativi/{applicativo_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina applicativi dall'elenco degli applicativi token autorizzati"
      description: "Questa operazione consente di eliminare applicativi token dall'elenco\
        \ degli applicativi autorizzati"
      operationId: "deleteErogazioneControlloAccessiAutorizzazioneApplicativiToken"
      responses:
        "204":
          description: "Applicativi Token eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_applicativo_autorizzato"
    - $ref: "#/components/parameters/id_soggetto_applicativo"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/ruoli:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco dei ruoli token autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei ruoli token\
        \ autorizzati"
      operationId: "getErogazioneControlloAccessiAutorizzazioneRuoliToken"
      responses:
        "200":
          description: "Elenco ruoli token autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuoli"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di ruoli all'elenco dei ruoli token autorizzati"
      description: "Questa operazione consente di aggiungere ruoli all'elenco dei\
        \ ruoli token autorizzati"
      operationId: "addErogazioneControlloAccessiAutorizzazioneRuoliToken"
      requestBody:
        description: "Ruoli che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuolo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/ruoli/{ruolo_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina ruoli dall'elenco dei ruoli token autorizzati"
      description: "Questa operazione consente di eliminare ruoli dall'elenco dei\
        \ ruoli token autorizzati"
      operationId: "deleteErogazioneControlloAccessiAutorizzazioneRuoliToken"
      responses:
        "204":
          description: "Ruoli eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_ruolo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco degli scope autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli scope autorizzati"
      operationId: "getErogazioneControlloAccessiAutorizzazioneScope"
      responses:
        "200":
          description: "Elenco scope autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScopes"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di scope all'elenco degli scope autorizzati"
      description: "Questa operazione consente di aggiungere scope all'elenco degli\
        \ scope autorizzati"
      operationId: "addErogazioneControlloAccessiAutorizzazioneScope"
      requestBody:
        description: "Scope che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScope"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope/{scope_autorizzato}:
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina scope dall'elenco degli scope autorizzati"
      description: "Questa operazione consente di eliminare scope dall'elenco degli\
        \ scope autorizzati"
      operationId: "deleteErogazioneControlloAccessiAutorizzazioneScope"
      responses:
        "204":
          description: "Scope eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_scope_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/rate-limiting:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco delle policy di rate limiting configurate"
      description: "Questa operazione consente di ottenere l'elenco delle policy di\
        \ rate limiting configurate"
      operationId: "findAllErogazioneRateLimitingPolicies"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/metrica"
      responses:
        "200":
          description: "Elenco policy di rate limiting restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaRateLimitingPolicy"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di una policy di rate limiting"
      description: "Questa operazione consente di aggiungere una policy di rate limiting"
      operationId: "addErogazioneRateLimitingPolicy"
      requestBody:
        description: "Policy che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitingPolicyErogazione"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/rate-limiting/{id_policy}:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce il dettaglio di una policy di rate limiting"
      description: "Questa operazione consente di ottenere il dettaglio di una policy\
        \ di rate limiting"
      operationId: "getErogazioneRateLimitingPolicy"
      responses:
        "200":
          description: "Dati della policy restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitingPolicyErogazioneView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Modifica i dati di una policy di rate limiting"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ policy di rate limiting"
      operationId: "updateErogazioneRateLimitingPolicy"
      requestBody:
        description: "Dati della policy da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitingPolicyErogazioneUpdate"
        required: true
      responses:
        "204":
          description: "La policy è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina la policy dall'elenco delle policies attive"
      description: "Questa operazione consente di eliminare la policy dall'elenco\
        \ delle policies attive"
      operationId: "deleteErogazioneRateLimitingPolicy"
      responses:
        "204":
          description: "Policy eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_policy"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/validazione:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa alla validazione dei contenuti\
        \ applicativi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla validazione dei contenuti applicativi"
      operationId: "getErogazioneValidazione"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla validazione\
        \ dei contenuti applicativi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla validazione dei contenuti applicativi"
      operationId: "updateErogazioneValidazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Validazione"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/caching-risposta:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa al caching delle risposte"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ al caching delle risposte"
      operationId: "getErogazioneCachingRisposta"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CachingRisposta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa al caching delle\
        \ risposte"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ al caching delle risposte"
      operationId: "updateErogazioneCachingRisposta"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CachingRisposta"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/richiesta:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco delle regole di correlazione applicativa per\
        \ la richiesta"
      description: "Questa operazione consente di ottenere l'elenco delle regole di\
        \ correlazione applicativa per la richiesta"
      operationId: "findAllErogazioneTracciamentoCorrelazioneApplicativaRichiesta"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Elenco regole di correlazione applicativa restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaCorrelazioneApplicativaRichiesta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di una regola di correlazione applicativa"
      description: "Questa operazione consente di registrare una regola di correlazione\
        \ applicativa per la richiesta"
      operationId: "addErogazioneTracciamentoCorrelazioneApplicativaRichiesta"
      requestBody:
        description: "Regola di correlazione applicativa che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRichiesta"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/richiesta/{elemento}:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce il dettaglio di una regola di correlazione applicativa\
        \ per la richiesta"
      description: "Questa operazione consente di ottenere il dettaglio di una regola\
        \ di correlazione applicativa per la richiesta"
      operationId: "getErogazioneTracciamentoCorrelazioneApplicativaRichiesta"
      responses:
        "200":
          description: "Dati della regola restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorrelazioneApplicativaRichiesta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Modifica i dati di una regola di correlazione applicativa per la richiesta"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ regola di correlazione applicativa per la richiesta"
      operationId: "updateErogazioneTracciamentoCorrelazioneApplicativaRichiesta"
      requestBody:
        description: "Dati della regola da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRichiesta"
        required: true
      responses:
        "204":
          description: "La regola è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina la regola di correlazione applicativa dall'elenco di quelle\
        \ attivate per la richiesta"
      description: "Questa operazione consente di eliminare la regola di correlazione\
        \ applicativa dall'elenco di quelle attivate per la richiesta"
      operationId: "deleteErogazioneTracciamentoCorrelazioneApplicativaRichiesta"
      responses:
        "204":
          description: "Regola eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/elemento_correlazione_applicativa"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/risposta:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce l'elenco delle regole di correlazione applicativa per\
        \ la risposta"
      description: "Questa operazione consente di ottenere l'elenco delle regole di\
        \ correlazione applicativa per la risposta"
      operationId: "findAllErogazioneTracciamentoCorrelazioneApplicativaRisposta"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Elenco regole di correlazione applicativa restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaCorrelazioneApplicativaRisposta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di una regola di correlazione applicativa"
      description: "Questa operazione consente di registrare una regola di correlazione\
        \ applicativa per la risposta"
      operationId: "addErogazioneTracciamentoCorrelazioneApplicativaRisposta"
      requestBody:
        description: "Regola di correlazione applicativa che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRisposta"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/risposta/{elemento}:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce il dettaglio di una regola di correlazione applicativa\
        \ per la risposta"
      description: "Questa operazione consente di ottenere il dettaglio di una regola\
        \ di correlazione applicativa per la risposta"
      operationId: "getErogazioneTracciamentoCorrelazioneApplicativaRisposta"
      responses:
        "200":
          description: "Dati della regola restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorrelazioneApplicativaRisposta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Modifica i dati di una regola di correlazione applicativa per la risposta"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ regola di correlazione applicativa per la risposta"
      operationId: "updateErogazioneTracciamentoCorrelazioneApplicativaRisposta"
      requestBody:
        description: "Dati della regola da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRisposta"
        required: true
      responses:
        "204":
          description: "La regola è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina la regola di correlazione applicativa dall'elenco di quelle\
        \ attivate per la risposta"
      description: "Questa operazione consente di eliminare la regola di correlazione\
        \ applicativa dall'elenco di quelle attivate per la risposta"
      operationId: "deleteErogazioneTracciamentoCorrelazioneApplicativaRisposta"
      responses:
        "204":
          description: "Regola eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/elemento_correlazione_applicativa"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/registrazione-messaggi:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce la configurazione relativa alla registrazione dei messaggi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla registrazione dei messaggi"
      operationId: "getErogazioneRegistrazioneMessaggi"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrazioneMessaggi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla registrazione\
        \ dei messaggi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla registrazione dei messaggi"
      operationId: "updateErogazioneRegistrazioneMessaggi"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrazioneMessaggi"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/proprieta:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce le proprietà di configurazione attivate"
      description: "Questa operazione consente di ottenere le proprietà di configurazione"
      operationId: "getErogazioneElencoProprieta"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElencoProprieta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "erogazioni-configurazione"
      summary: "Aggiunta di una proprietà di configurazione"
      description: "Questa operazione consente di registrare una proprietà di configurazione"
      operationId: "addErogazioneProprieta"
      requestBody:
        description: "Proprieta che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Proprieta"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /erogazioni/{nome}/{versione}/configurazioni/proprieta/{proprieta}:
    get:
      tags:
      - "erogazioni-configurazione"
      summary: "Restituisce il dettaglio di una proprietà di configurazione"
      description: "Questa operazione consente di ottenere il dettaglio di una proprietà\
        \ di configurazione"
      operationId: "getErogazioneProprieta"
      responses:
        "200":
          description: "Dati della proprietà di configurazione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proprieta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "erogazioni-configurazione"
      summary: "Modifica i dati di una proprietà di configurazione"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ proprietà di configurazione"
      operationId: "updateErogazioneProprieta"
      requestBody:
        description: "Dati della proprietà di configurazione da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Proprieta"
        required: true
      responses:
        "204":
          description: "La proprietà di configurazione è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "erogazioni-configurazione"
      summary: "Elimina la proprietà di configurazione dall'elenco di quelle attivate"
      description: "Questa operazione consente di eliminare la proprietà di configurazione\
        \ dall'elenco di quelle attivate"
      operationId: "deleteErogazioneProprietaConfigurazione"
      responses:
        "204":
          description: "Proprietà di configurazione eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/proprieta_configurazione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni:
    get:
      tags:
      - "fruizioni"
      summary: "Ricerca fruizioni di api"
      description: "Elenca le fruizioni di API"
      operationId: "findAllFruizioni"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/tipo_api"
      - $ref: "#/components/parameters/tag"
      - $ref: "#/components/parameters/uri_api_implementata"
      - $ref: "#/components/parameters/profilo_qualsiasi"
      - $ref: "#/components/parameters/soggetto_qualsiasi"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaFruizioni"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni"
      summary: "Creazione di una fruizione di API"
      description: "Questa operazione consente di creare una fruizione di API"
      operationId: "createFruizione"
      requestBody:
        description: "Dati della fruizione che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fruizione"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /fruizioni/{erogatore}/{nome}/{versione}:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce i dettagli di una fruizione di API"
      description: "Questa operazione consente di ottenere i dettagli di una fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getFruizione"
      responses:
        "200":
          description: "Dettagli di una fruizione di API restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FruizioneViewItem"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni"
      summary: "Elimina una fruizione di api"
      description: "Questa operazione consente di eliminare una fruizione di API identificata\
        \ dall'erogatore, dal nome e dalla versione"
      operationId: "deleteFruizione"
      responses:
        "204":
          description: "Fruizione di API eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/informazioni:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni generali di una fruizione di API"
      description: "Questa operazione consente di ottenere le informazioni generali\
        \ di una fruizione di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getFruizioneInformazioniGenerali"
      responses:
        "200":
          description: "Informazioni generali restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplInformazioniGeneraliView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare le informazioni generali di una fruizione di\
        \ API"
      description: "Questa operazione consente di aggiornare le informazioni generali\
        \ di una fruizione di API identificata  dall'erogatore, dal nome e dalla versione"
      operationId: "updateFruizioneInformazioniGenerali"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplInformazioniGenerali"
        required: true
      responses:
        "204":
          description: "Fruizione di API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/api:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni sull'API implementata dalla fruizione"
      description: "Questa operazione consente di ottenere le informazioni sull'API\
        \ implementata dall'erogazione identificata dall'erogatore, dal nome e dalla\
        \ versione"
      operationId: "getFruizioneAPI"
      responses:
        "200":
          description: "Informazioni sull'API restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplVersioneApiView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la versione dell'API implementata dalla fruizione"
      description: "Questa operazione consente di aggiornare la versione dell'API\
        \ implementata dall'erogazione identificata dall'erogatore, dal nome e dalla\
        \ versione"
      operationId: "updateFruizioneAPI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplVersioneApi"
        required: true
      responses:
        "204":
          description: "Fruizione di API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/descrizione:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce la descrizione di una fruizione"
      description: "Questa operazione consente di ottenere la descrizione di una fruizione\
        \ identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getFruizioneDescrizione"
      responses:
        "200":
          description: "Dati della descrizione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDescrizione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la descrizione di una fruizione"
      description: "Questa operazione consente di aggiornare la descrizione di una\
        \ erogazione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "updateFruizioneDescrizione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDescrizione"
        required: true
      responses:
        "204":
          description: "La descrizione è stato aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/modi:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni ModI associate alla fruizione"
      description: "Questa operazione consente di ottenere le informazioni ModI associate\
        \ all'erogazione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getFruizioneModI"
      responses:
        "200":
          description: "Informazioni ModI restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FruizioneModI"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare le informazioni ModI associate alla fruizione"
      description: "Questa operazione consente di aggiornare le informazioni ModI\
        \ associate all'erogazione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "updateFruizioneModI"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FruizioneModI"
        required: true
      responses:
        "204":
          description: "Fruizione di API aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/allegati:
    get:
      tags:
      - "fruizioni"
      summary: "Elenco allegati di una fruizione di API"
      description: "Questa operazione consente di ottenere gli allegati di una fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "findAllFruizioneAllegati"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApiImplAllegati"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni"
      summary: "Creazione di un allegato nella fruizione di API"
      description: "Questa operazione consente di aggiungere un allegato alla fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "createFruizioneAllegato"
      requestBody:
        description: "Dati dell'allegato che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/allegati/{nome_allegato}:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce il dettaglio di un allegato della fruizione"
      description: "Questa operazione consente di ottenere il dettaglio di un allegato\
        \ della fruizione di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getFruizioneAllegato"
      responses:
        "200":
          description: "Dati dell'allegato restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplAllegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Modifica i dati di un allegato della fruizione"
      description: "Questa operazione consente di aggiornare i dettagli di un allegato\
        \ della fruizione di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "updateFruizioneAllegato"
      requestBody:
        description: "Dati dell'allegato da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplAllegato"
        required: true
      responses:
        "204":
          description: "L'allegato è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni"
      summary: "Elimina un allegato dalla fruizione"
      description: "Questa operazione consente di eliminare un'allegato dalla fruizione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "deleteFruizioneAllegato"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/allegati/{nome_allegato}/download:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce l'allegato di una fruizione"
      description: "Questa operazione consente di ottenere l'allegato di un'erogazione\
        \ di API identificata dall'erogatore, dal nome e dalla versione"
      operationId: "downloadFruizioneAllegato"
      responses:
        "200":
          description: "Allegato della fruizione restituito con successo"
          content:
            application/*:
              schema:
                type: "string"
                format: "binary"
            text/*:
              schema:
                type: "string"
                format: "binary"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_allegato"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/url-invocazione:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni sull'url di invocazione necessaria ad\
        \ invocare la fruizione"
      description: "Questa operazione consente di ottenere le informazioni sull'url\
        \ di invocazione necessaria ad invocare la fruizione identificata dall'erogatore,\
        \ dal nome e dalla versione"
      operationId: "getFruizioneUrlInvocazione"
      responses:
        "200":
          description: "Informazioni sull'url di invocazione restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplUrlInvocazioneView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la configurazione utilizzata per identificare\
        \ l'azione invocata dell'API implementata dalla fruizione"
      description: "Questa operazione consente di aggiornare la configurazione utilizzata\
        \ dal Gateway per identificare l'azione invocata"
      operationId: "updateFruizioneUrlInvocazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplUrlInvocazione"
        required: true
      responses:
        "204":
          description: "Configurazione della fruizione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/connettore:
    get:
      tags:
      - "fruizioni"
      summary: "Restituisce le informazioni su connettore associato alla fruizione"
      description: "Questa operazione consente di ottenere le informazioni sul connettore\
        \ associato alla fruizione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "getFruizioneConnettore"
      responses:
        "200":
          description: "Informazioni sul connettore restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnettoreFruizione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni"
      summary: "Consente di modificare la configurazione del connettore associato\
        \ alla fruizione"
      description: "Questa operazione consente di aggiornare la configurazione del\
        \ connettore associato alla fruizione identificata dall'erogatore, dal nome\
        \ e dalla versione"
      operationId: "updateFruizioneConnettore"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnettoreFruizione"
        required: true
      responses:
        "204":
          description: "Configurazione della fruizione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
    - $ref: "#/components/parameters/gruppo"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/gestione-cors:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce le informazioni sulla configurazione CORS associata alla\
        \ fruizione"
      description: "Questa operazione consente di ottenere le informazioni sulla configurazione\
        \ CORS associata alla fruizione identificata dall'erogatore, dal nome e dalla\
        \ versione"
      operationId: "getFruizioneGestioneCORS"
      responses:
        "200":
          description: "Informazioni sulla configurazione CORS restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GestioneCors"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione CORS associata alla fruizione"
      description: "Questa operazione consente di aggiornare la configurazione CORS\
        \ associata alla fruizione identificata dall'erogatore, dal nome e dalla versione"
      operationId: "updateFruizioneGestioneCORS"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GestioneCors"
        required: true
      responses:
        "204":
          description: "Configurazione della fruizione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/canale:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce il canale associato alla fruizione"
      description: "Questa operazione consente di ottenere il canale associato alla\
        \ fruizione"
      operationId: "getFruizioneCanale"
      responses:
        "200":
          description: "Canale restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiCanale"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare il canale associato alla fruizione"
      description: "Questa operazione consente di aggiornare il canale associato alla\
        \ fruizione"
      operationId: "updateFruizioneCanale"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigurazioneApiCanale"
        required: true
      responses:
        "204":
          description: "Il canale è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi:
    get:
      tags:
      - "fruizioni-gruppi"
      summary: "Ricerca i gruppi in cui sono stati classificate le azioni o le risorse\
        \ dell'API"
      description: "Elenca i gruppi in cui sono stati classificate le azioni o le\
        \ risorse dell'API"
      operationId: "findAllFruizioneGruppi"
      parameters:
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/azione"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaGruppi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-gruppi"
      summary: "Creazione di un gruppo di azioni o risorse dell'API fruita"
      description: "Questa operazione consente di creare un gruppo di azioni o risorse\
        \ dell'API fruita"
      operationId: "createFruizioneGruppo"
      requestBody:
        description: "Dati del gruppo di azioni o risorse che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gruppo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi/{nome_gruppo}:
    get:
      tags:
      - "fruizioni-gruppi"
      summary: "Restituisce azioni/risorse associate al gruppo identificato dal nome"
      description: "Questa operazione consente di ottenere le azioni associate al\
        \ gruppo identificato dal nome"
      operationId: "getFruizioneGruppoAzioni"
      responses:
        "200":
          description: "Elenco di azioni/risorse restituite con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GruppoAzioni"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-gruppi"
      summary: "Consente di modificare il nome del gruppo"
      description: "Questa operazione consente di aggiornare il nome di un gruppo"
      operationId: "updateFruizioneGruppoNome"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoNome"
        required: true
      responses:
        "204":
          description: "Configurazione del gruppo aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-gruppi"
      summary: "Elimina il gruppo identificato dal nome"
      description: "Questa operazione consente di eliminare il gruppo identificato\
        \ dal nome"
      operationId: "deleteFruizioneGruppo"
      responses:
        "204":
          description: "Gruppo eliminate con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi/{nome_gruppo}/azioni:
    post:
      tags:
      - "fruizioni-gruppi"
      summary: "Aggiunta di azioni o risorse dell'API al gruppo"
      description: "Questa operazione consente di aggiungere azioni o risorse dell'API\
        \ al gruppo"
      operationId: "addFruizioneGruppoAzioni"
      requestBody:
        description: "Azioni o risorse che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GruppoAzioni"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi/{nome_gruppo}/azioni/{nome_azione}:
    delete:
      tags:
      - "fruizioni-gruppi"
      summary: "Elimina l'azione o la risorsa dell'API associatia al gruppo"
      description: "Questa operazione consente di eliminare l'azione o la risorsa\
        \ dell'API associata al gruppo"
      operationId: "deleteFruizioneGruppoAzione"
      responses:
        "204":
          description: "Azione eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/id_nome_azione"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/gruppi/{nome_gruppo}/descrizione:
    get:
      tags:
      - "fruizioni-gruppi"
      summary: "Restituisce la descrizione del gruppo"
      description: "Questa operazione consente di ottenere la descrizione del gruppo"
      operationId: "getFruizioneDescrizioneGruppo"
      responses:
        "200":
          description: "Dati della descrizione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDescrizione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-gruppi"
      summary: "Consente di modificare la descrizione del gruppo"
      description: "Questa operazione consente di aggiornare la descrizione del gruppo"
      operationId: "updateFruizioneDescrizioneGruppo"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDescrizione"
        required: true
      responses:
        "204":
          description: "La descrizione è stato aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_nome_gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/stato:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'indicazione sullo stato del gruppo"
      description: "Questa operazione consente di ottenere lo stato attuale del gruppo"
      operationId: "getFruizioneStato"
      responses:
        "200":
          description: "Dettaglio dello stato restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiImplStato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare lo stato del gruppo"
      description: "Questa operazione consente di aggiornare lo stato del gruppo"
      operationId: "updateFruizioneStato"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiImplStato"
        required: true
      responses:
        "204":
          description: "Configurazione del gruppo aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/gestione-token:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa alla gestione dei token per\
        \ quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla gestione dei token"
      operationId: "getFruizioneControlloAccessiGestioneToken"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla gestione dei\
        \ token per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla gestione dei token"
      operationId: "updateFruizioneControlloAccessiGestioneToken"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiGestioneToken"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autenticazione:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autenticazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "getFruizioneControlloAccessiAutenticazione"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autenticazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autenticazione per quanto concerne il controllo degli accessi"
      operationId: "updateFruizioneControlloAccessiAutenticazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutenticazione"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/identificazione-attributi:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa all'identificazione degli attributi\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'identificazione degli attributi"
      operationId: "getFruizioneControlloAccessiIdentificazioneAttributi"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiIdentificazioneAttributi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'identificazione\
        \ degli attributi per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'identificazione degli attributi"
      operationId: "updateFruizioneControlloAccessiIdentificazioneAttributi"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiIdentificazioneAttributi"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa all'autorizzazione per quanto\
        \ concerne il controllo degli accessi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "getFruizioneControlloAccessiAutorizzazione"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa all'autorizzazione\
        \ per quanto concerne il controllo degli accessi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ all'autorizzazione per quanto concerne il controllo degli accessi"
      operationId: "updateFruizioneControlloAccessiAutorizzazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazione"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/download-xacml-policy:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la policy XACML associata all'autorizzazione"
      description: "Questa operazione consente di ottenere la policy XACML associata\
        \ all'autorizzazione"
      operationId: "downloadFruizioneControlloAccessiAutorizzazioneXacmlPolicy"
      responses:
        "200":
          description: "Interfaccia dell'API restituita con successo"
          content:
            application/xml:
              schema:
                type: "string"
                format: "binary"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli applicativi\
        \ autorizzati"
      operationId: "getFruizioneControlloAccessiAutorizzazioneApplicativi"
      responses:
        "200":
          description: "Elenco applicativi autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di applicativi all'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di aggiungere applicativi all'elenco\
        \ degli applicativi autorizzati"
      operationId: "addFruizioneControlloAccessiAutorizzazioneApplicativi"
      requestBody:
        description: "Applicativi che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/applicativi/{applicativo_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina applicativi dall'elenco degli applicativi autorizzati"
      description: "Questa operazione consente di eliminare applicativi dall'elenco\
        \ degli applicativi autorizzati"
      operationId: "deleteFruizioneControlloAccessiAutorizzazioneApplicativi"
      responses:
        "204":
          description: "Applicativi eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_applicativo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei ruoli autorizzati"
      operationId: "getFruizioneControlloAccessiAutorizzazioneRuoli"
      responses:
        "200":
          description: "Elenco ruoli autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuoli"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di ruoli all'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di aggiungere ruoli all'elenco dei\
        \ ruoli autorizzati"
      operationId: "addFruizioneControlloAccessiAutorizzazioneRuoli"
      requestBody:
        description: "Ruoli che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuolo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/ruoli/{ruolo_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina ruoli dall'elenco dei ruoli autorizzati"
      description: "Questa operazione consente di eliminare ruoli dall'elenco dei\
        \ ruoli autorizzati"
      operationId: "deleteFruizioneControlloAccessiAutorizzazioneRuoli"
      responses:
        "204":
          description: "Ruoli eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_ruolo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/applicativi:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco degli applicativi token autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli applicativi\
        \ token autorizzati"
      operationId: "getFruizioneControlloAccessiAutorizzazioneApplicativiToken"
      responses:
        "200":
          description: "Elenco applicativi token autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di applicativi all'elenco degli applicativi token autorizzati"
      description: "Questa operazione consente di aggiungere applicativi all'elenco\
        \ degli applicativi token autorizzati"
      operationId: "addFruizioneControlloAccessiAutorizzazioneApplicativiToken"
      requestBody:
        description: "Applicativi che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  ? /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/applicativi/{applicativo_autorizzato}
  : delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina applicativi dall'elenco degli applicativi token autorizzati"
      description: "Questa operazione consente di eliminare applicativi dall'elenco\
        \ degli applicativi token autorizzati"
      operationId: "deleteFruizioneControlloAccessiAutorizzazioneApplicativiToken"
      responses:
        "204":
          description: "Applicativi eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_applicativo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/ruoli:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco dei ruoli token autorizzati"
      description: "Questa operazione consente di ottenere l'elenco dei ruoli token\
        \ autorizzati"
      operationId: "getFruizioneControlloAccessiAutorizzazioneRuoliToken"
      responses:
        "200":
          description: "Elenco ruoli autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuoli"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di ruoli all'elenco dei ruoli token autorizzati"
      description: "Questa operazione consente di aggiungere ruoli all'elenco dei\
        \ ruoli token autorizzati"
      operationId: "addFruizioneControlloAccessiAutorizzazioneRuoliToken"
      requestBody:
        description: "Ruoli che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneRuolo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/token/ruoli/{ruolo_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina ruoli dall'elenco dei ruoli token autorizzati"
      description: "Questa operazione consente di eliminare ruoli dall'elenco dei\
        \ ruoli token autorizzati"
      operationId: "deleteFruizioneControlloAccessiAutorizzazioneRuoliToken"
      responses:
        "204":
          description: "Ruoli eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_ruolo_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco degli scope autorizzati"
      description: "Questa operazione consente di ottenere l'elenco degli scope autorizzati"
      operationId: "getFruizioneControlloAccessiAutorizzazioneScope"
      responses:
        "200":
          description: "Elenco scope autorizzati restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScopes"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di scope all'elenco degli scope autorizzati"
      description: "Questa operazione consente di aggiungere scope all'elenco degli\
        \ scope autorizzati"
      operationId: "addFruizioneControlloAccessiAutorizzazioneScope"
      requestBody:
        description: "Scope che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ControlloAccessiAutorizzazioneScope"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/controllo-accessi/autorizzazione/scope/{scope_autorizzato}:
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina scope dall'elenco degli scope autorizzati"
      description: "Questa operazione consente di eliminare scope dall'elenco degli\
        \ scope autorizzati"
      operationId: "deleteFruizioneControlloAccessiAutorizzazioneScope"
      responses:
        "204":
          description: "Scope eliminati con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_scope_autorizzato"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/rate-limiting:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco delle policy di rate limiting configurate"
      description: "Questa operazione consente di ottenere l'elenco delle policy di\
        \ rate limiting configurate"
      operationId: "findAllFruizioneRateLimitingPolicies"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/metrica"
      responses:
        "200":
          description: "Elenco policy di rate limiting restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaRateLimitingPolicy"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di una policy di rate limiting"
      description: "Questa operazione consente di aggiungere una policy di rate limiting"
      operationId: "addFruizioneRateLimitingPolicy"
      requestBody:
        description: "Policy che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitingPolicyFruizione"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/rate-limiting/{id_policy}:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce il dettaglio di una policy di rate limiting"
      description: "Questa operazione consente di ottenere il dettaglio di una policy\
        \ di rate limiting"
      operationId: "getFruizioneRateLimitingPolicy"
      responses:
        "200":
          description: "Dati della policy restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitingPolicyFruizioneView"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Modifica i dati di una policy di rate limiting"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ policy di rate limiting"
      operationId: "updateFruizioneRateLimitingPolicy"
      requestBody:
        description: "Dati della policy da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitingPolicyFruizioneUpdate"
        required: true
      responses:
        "204":
          description: "La policy è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina la policy dall'elenco delle policies attive"
      description: "Questa operazione consente di eliminare la policy dall'elenco\
        \ delle policies attive"
      operationId: "deleteFruizioneRateLimitingPolicy"
      responses:
        "204":
          description: "Policy eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/id_policy"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/validazione:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa alla validazione dei contenuti\
        \ applicativi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla validazione dei contenuti applicativi"
      operationId: "getFruizioneValidazione"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla validazione\
        \ dei contenuti applicativi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla validazione dei contenuti applicativi"
      operationId: "updateFruizioneValidazione"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Validazione"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/caching-risposta:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa al caching delle risposte"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ al caching delle risposte"
      operationId: "getFruizioneCachingRisposta"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CachingRisposta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa al caching delle\
        \ risposte"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ al caching delle risposte"
      operationId: "updateFruizioneCachingRisposta"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CachingRisposta"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/richiesta:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco delle regole di correlazione applicativa per\
        \ la richiesta"
      description: "Questa operazione consente di ottenere l'elenco delle regole di\
        \ correlazione applicativa per la richiesta"
      operationId: "findAllFruizioneTracciamentoCorrelazioneApplicativaRichiesta"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Elenco regole di correlazione applicativa restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaCorrelazioneApplicativaRichiesta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di una regola di correlazione applicativa"
      description: "Questa operazione consente di registrare una regola di correlazione\
        \ applicativa per la richiesta"
      operationId: "addFruizioneTracciamentoCorrelazioneApplicativaRichiesta"
      requestBody:
        description: "Regola di correlazione applicativa che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRichiesta"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/richiesta/{elemento}:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce il dettaglio di una regola di correlazione applicativa\
        \ per la richiesta"
      description: "Questa operazione consente di ottenere il dettaglio di una regola\
        \ di correlazione applicativa per la richiesta"
      operationId: "getFruizioneTracciamentoCorrelazioneApplicativaRichiesta"
      responses:
        "200":
          description: "Dati della regola restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorrelazioneApplicativaRichiesta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Modifica i dati di una regola di correlazione applicativa per la richiesta"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ regola di correlazione applicativa per la richiesta"
      operationId: "updateFruizioneTracciamentoCorrelazioneApplicativaRichiesta"
      requestBody:
        description: "Dati della regola da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRichiesta"
        required: true
      responses:
        "204":
          description: "La regola è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina la regola di correlazione applicativa dall'elenco di quelle\
        \ attivate per la richiesta"
      description: "Questa operazione consente di eliminare la regola di correlazione\
        \ applicativa dall'elenco di quelle attivate per la richiesta"
      operationId: "deleteFruizioneTracciamentoCorrelazioneApplicativaRichiesta"
      responses:
        "204":
          description: "Regola eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/elemento_correlazione_applicativa"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/risposta:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce l'elenco delle regole di correlazione applicativa per\
        \ la risposta"
      description: "Questa operazione consente di ottenere l'elenco delle regole di\
        \ correlazione applicativa per la risposta"
      operationId: "findAllFruizioneTracciamentoCorrelazioneApplicativaRisposta"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      responses:
        "200":
          description: "Elenco regole di correlazione applicativa restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaCorrelazioneApplicativaRisposta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di una regola di correlazione applicativa"
      description: "Questa operazione consente di registrare una regola di correlazione\
        \ applicativa per la risposta"
      operationId: "addFruizioneTracciamentoCorrelazioneApplicativaRisposta"
      requestBody:
        description: "Regola di correlazione applicativa che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRisposta"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/tracciamento/correlazione-applicativa/risposta/{elemento}:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce il dettaglio di una regola di correlazione applicativa\
        \ per la risposta"
      description: "Questa operazione consente di ottenere il dettaglio di una regola\
        \ di correlazione applicativa per la risposta"
      operationId: "getFruizioneTracciamentoCorrelazioneApplicativaRisposta"
      responses:
        "200":
          description: "Dati della regola restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorrelazioneApplicativaRisposta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Modifica i dati di una regola di correlazione applicativa per la risposta"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ regola di correlazione applicativa per la risposta"
      operationId: "updateFruizioneTracciamentoCorrelazioneApplicativaRisposta"
      requestBody:
        description: "Dati della regola da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorrelazioneApplicativaRisposta"
        required: true
      responses:
        "204":
          description: "La regola è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina la regola di correlazione applicativa dall'elenco di quelle\
        \ attivate per la risposta"
      description: "Questa operazione consente di eliminare la regola di correlazione\
        \ applicativa dall'elenco di quelle attivate per la risposta"
      operationId: "deleteFruizioneTracciamentoCorrelazioneApplicativaRisposta"
      responses:
        "204":
          description: "Regola eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/elemento_correlazione_applicativa"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/registrazione-messaggi:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce la configurazione relativa alla registrazione dei messaggi"
      description: "Questa operazione consente di ottenere la configurazione relativa\
        \ alla registrazione dei messaggi"
      operationId: "getFruizioneRegistrazioneMessaggi"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrazioneMessaggi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Consente di modificare la configurazione relativa alla registrazione\
        \ dei messaggi"
      description: "Questa operazione consente di aggiornare la configurazione relativa\
        \ alla registrazione dei messaggi"
      operationId: "updateFruizioneRegistrazioneMessaggi"
      requestBody:
        description: "Dati da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegistrazioneMessaggi"
        required: true
      responses:
        "204":
          description: "Configurazione aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/proprieta:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce le proprietà di configurazione attivate"
      description: "Questa operazione consente di ottenere le proprietà di configurazione"
      operationId: "getFruizioneElencoProprieta"
      responses:
        "200":
          description: "Dettaglio della configurazione restituito con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElencoProprieta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "fruizioni-configurazione"
      summary: "Aggiunta di una proprietà di configurazione"
      description: "Questa operazione consente di registrare una proprietà di configurazione"
      operationId: "addFruizioneProprieta"
      requestBody:
        description: "Proprieta che si vuole aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Proprieta"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /fruizioni/{erogatore}/{nome}/{versione}/configurazioni/proprieta/{proprieta}:
    get:
      tags:
      - "fruizioni-configurazione"
      summary: "Restituisce il dettaglio di una proprietà di configurazione"
      description: "Questa operazione consente di ottenere il dettaglio di una proprietà\
        \ di configurazione"
      operationId: "getFruizioneProprieta"
      responses:
        "200":
          description: "Dati della proprietà di configurazione restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Proprieta"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "fruizioni-configurazione"
      summary: "Modifica i dati di una proprietà di configurazione"
      description: "Questa operazione consente di aggiornare i dati relativi ad una\
        \ proprietà di configurazione"
      operationId: "updateFruizioneProprieta"
      requestBody:
        description: "Dati della proprietà di configurazione da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Proprieta"
        required: true
      responses:
        "204":
          description: "La proprietà di configurazione è stata aggiornata correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "fruizioni-configurazione"
      summary: "Elimina la proprietà di configurazione dall'elenco di quelle attivate"
      description: "Questa operazione consente di eliminare la proprietà di configurazione\
        \ dall'elenco di quelle attivate"
      operationId: "deleteFruizioneProprietaConfigurazione"
      responses:
        "204":
          description: "Proprietà di configurazione eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_erogatore"
    - $ref: "#/components/parameters/id_ncname"
    - $ref: "#/components/parameters/id_versione"
    - $ref: "#/components/parameters/proprieta_configurazione"
    - $ref: "#/components/parameters/gruppo"
    - $ref: "#/components/parameters/tipo_servizio"
  /soggetti:
    get:
      tags:
      - "soggetti"
      summary: "Ricerca soggetti"
      description: "Elenca i soggetti registrati"
      operationId: "findAllSoggetti"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/dominio"
      - $ref: "#/components/parameters/ruolo"
      - $ref: "#/components/parameters/tipo_credenziali"
      - $ref: "#/components/parameters/profilo_qualsiasi"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaSoggetti"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "soggetti"
      summary: "Creazione di un soggetto"
      description: "Questa operazione consente di creare un soggetto"
      operationId: "createSoggetto"
      requestBody:
        description: "Dati del soggetto che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Soggetto"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201CreatedKey"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
  /soggetti/{nome}:
    get:
      tags:
      - "soggetti"
      summary: "Restituisce il dettaglio di un soggetto"
      description: "Questa operazione consente di ottenere il dettaglio di un soggetto\
        \ identificato dal nome"
      operationId: "getSoggetto"
      responses:
        "200":
          description: "Dati del soggetto restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Soggetto"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "soggetti"
      summary: "Modifica i dati di un soggetto"
      description: "Questa operazione consente di aggiornare i dati di un soggetto\
        \ identificato dal nome"
      operationId: "updateSoggetto"
      requestBody:
        description: "Dati del soggetto da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Soggetto"
        required: true
      responses:
        "204":
          description: "Soggetto aggiornato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "soggetti"
      summary: "Elimina un soggetto"
      description: "Questa operazione consente di eliminare un soggetto identificato\
        \ dal nome"
      operationId: "deleteSoggetto"
      responses:
        "204":
          description: "Soggetto eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/id_simple_name"
  /soggetti/{nome}/credenziali:
    put:
      tags:
      - "soggetti"
      summary: "Modifica le credenziali associate ad un soggetto"
      description: "Questa operazione consente di aggiornare le credenziali associate\
        \ ad un soggetto identificato dal nome"
      operationId: "updateCredenzialiSoggetto"
      requestBody:
        description: "Nuove credenziali del soggetto"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseCredenziali"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/204UpdatedKey"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/id_simple_name"
  /applicativi:
    get:
      tags:
      - "applicativi"
      summary: "Ricerca applicativi"
      description: "Elenca gli applicativi registrati"
      operationId: "findAllApplicativi"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/ruolo"
      - $ref: "#/components/parameters/tipo_credenziali"
      - $ref: "#/components/parameters/profilo_qualsiasi"
      - $ref: "#/components/parameters/soggetto_qualsiasi"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApplicativi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "applicativi"
      summary: "Creazione di un applicativo"
      description: "Questa operazione consente di creare un applicativo associato\
        \ ad un soggetto interno"
      operationId: "createApplicativo"
      requestBody:
        description: "Dati dell'applicativo che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicativo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201CreatedKey"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /applicativi/{nome}:
    get:
      tags:
      - "applicativi"
      summary: "Restituisce il dettaglio di un applicativo"
      description: "Questa operazione consente di ottenere il dettaglio di un applicativo\
        \ identificato dal nome e dal soggetto di riferimento"
      operationId: "getApplicativo"
      responses:
        "200":
          description: "Dati dell'applicativo restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applicativo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "applicativi"
      summary: "Modifica i dati di un applicativo"
      description: "Questa operazione consente di aggiornare i dati di un applicativo\
        \ identificato dal nome e dal soggetto di riferimento"
      operationId: "updateApplicativo"
      requestBody:
        description: "Dati dell'applicativo da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Applicativo"
        required: true
      responses:
        "204":
          description: "Applicativo aggiornato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "applicativi"
      summary: "Elimina un applicativo"
      description: "Questa operazione consente di eliminare un applicativo identificato\
        \ dal nome e dal soggetto di riferimento"
      operationId: "deleteApplicativo"
      responses:
        "204":
          description: "Applicativo eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
  /applicativi/{nome}/credenziali:
    put:
      tags:
      - "applicativi"
      summary: "Modifica le credenziali associate ad un applicativo"
      description: "Questa operazione consente di aggiornare le credenziali associate\
        \ ad un applicativo identificato dal nome e dal soggetto di riferimento"
      operationId: "updateCredenzialiApplicativo"
      requestBody:
        description: "Nuove credenziali dell'applicativo"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseCredenziali"
        required: true
      responses:
        "204":
          $ref: "#/components/responses/204UpdatedKey"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
  /applicativi-server:
    get:
      tags:
      - "applicativi-server"
      summary: "Ricerca applicativi server"
      description: "Elenca gli applicativi server registrati"
      operationId: "findAllApplicativiServer"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/profilo_qualsiasi"
      - $ref: "#/components/parameters/soggetto_qualsiasi"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaApplicativiServer"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "applicativi-server"
      summary: "Creazione di un applicativo server"
      description: "Questa operazione consente di creare un applicativo server associato\
        \ ad un soggetto interno"
      operationId: "createApplicativoServer"
      requestBody:
        description: "Dati dell'applicativo server che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicativoServer"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
  /applicativi-server/{nome}:
    get:
      tags:
      - "applicativi-server"
      summary: "Restituisce il dettaglio di un applicativo server"
      description: "Questa operazione consente di ottenere il dettaglio di un applicativo\
        \ server identificato dal nome e dal soggetto di riferimento"
      operationId: "getApplicativoServer"
      responses:
        "200":
          description: "Dati dell'applicativo restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicativoServer"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "applicativi-server"
      summary: "Modifica i dati di un applicativo server"
      description: "Questa operazione consente di aggiornare i dati di un applicativo\
        \ server identificato dal nome e dal soggetto di riferimento"
      operationId: "updateApplicativoServer"
      requestBody:
        description: "Dati dell'applicativo server da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicativoServer"
        required: true
      responses:
        "204":
          description: "Applicativo Server aggiornato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "applicativi-server"
      summary: "Elimina un applicativo server"
      description: "Questa operazione consente di eliminare un applicativo server\
        \ identificato dal nome e dal soggetto di riferimento"
      operationId: "deleteApplicativoServer"
      responses:
        "204":
          description: "Applicativo server eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/profilo"
    - $ref: "#/components/parameters/soggetto"
    - $ref: "#/components/parameters/id_ncname"
  /ruoli:
    get:
      tags:
      - "ruoli"
      summary: "Ricerca ruoli"
      description: "Elenca i ruoli registrati"
      operationId: "findAllRuoli"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/fonte"
      - $ref: "#/components/parameters/contesto"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaRuoli"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "ruoli"
      summary: "Creazione di un ruolo"
      description: "Questa operazione consente di creare un ruolo"
      operationId: "createRuolo"
      requestBody:
        description: "Dati del ruolo che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ruolo"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
  /ruoli/{nome}:
    get:
      tags:
      - "ruoli"
      summary: "Restituisce il dettaglio di un ruolo"
      description: "Questa operazione consente di ottenere il dettaglio di un ruolo\
        \ identificato dal nome"
      operationId: "getRuolo"
      responses:
        "200":
          description: "Dati del ruolo restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ruolo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "ruoli"
      summary: "Modifica i dati di un ruolo"
      description: "Questa operazione consente di aggiornare i dati di un ruolo identificato\
        \ dal nome"
      operationId: "updateRuolo"
      requestBody:
        description: "Dati del ruolo da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ruolo"
        required: true
      responses:
        "204":
          description: "Il Ruolo è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "ruoli"
      summary: "Elimina un ruolo"
      description: "Questa operazione consente di eliminare un ruolo identificato\
        \ dal nome"
      operationId: "deleteRuolo"
      responses:
        "204":
          description: "Ruolo eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/id_ncname"
  /scope:
    get:
      tags:
      - "scope"
      summary: "Ricerca scope"
      description: "Elenca gli scope registrati"
      operationId: "findAllScope"
      parameters:
      - $ref: "#/components/parameters/q"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/offset"
      - $ref: "#/components/parameters/contesto"
      responses:
        "200":
          description: "Ricerca eseguita correttamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaScope"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    post:
      tags:
      - "scope"
      summary: "Creazione di uno scope"
      description: "Questa operazione consente di creare uno scope"
      operationId: "createScope"
      requestBody:
        description: "Dati dello scope che si vuole creare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scope"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/201Created"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
  /scope/{nome}:
    get:
      tags:
      - "scope"
      summary: "Restituisce il dettaglio di uno scope"
      description: "Questa operazione consente di ottenere il dettaglio di uno scope\
        \ identificato dal nome"
      operationId: "getScope"
      responses:
        "200":
          description: "Dati dello scope restituiti con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scope"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    put:
      tags:
      - "scope"
      summary: "Modifica i dati di uno scope"
      description: "Questa operazione consente di aggiornare i dati di uno scope identificato\
        \ dal nome"
      operationId: "updateScope"
      requestBody:
        description: "Dati dello scope da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scope"
        required: true
      responses:
        "204":
          description: "Lo scope è stato aggiornato correttamente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "scope"
      summary: "Elimina uno scope"
      description: "Questa operazione consente di eliminare uno scope identificato\
        \ dal nome"
      operationId: "deleteScope"
      responses:
        "204":
          description: "Scope eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
    parameters:
    - $ref: "#/components/parameters/id_ncname"
  /status:
    get:
      tags:
      - "Status"
      summary: "Ritorna lo stato dell'applicazione"
      description: "Ritorna lo stato dell'applicazione in formato problem+json"
      operationId: "getStatus"
      responses:
        "200":
          $ref: "#/components/responses/200Status"
        default:
          $ref: "#/components/responses/default"
components:
  schemas:
    Api:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiBase"
      - type: "object"
        properties:
          interfaccia:
            type: "string"
            format: "byte"
          canale:
            $ref: "#/components/schemas/IdCanale"
          modi:
            $ref: "#/components/schemas/ApiModI"
    ApiItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiBaseConSoggetto"
      - required:
        - "stato"
        - "stato_descrizione"
        type: "object"
        properties:
          stato:
            $ref: "#/components/schemas/StatoApiEnum"
          stato_descrizione:
            $ref: "#/components/schemas/StatoApiDescrizione"
          canale:
            $ref: "#/components/schemas/ApiCanale"
    ListaApi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiItem"
    ApiViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiItem"
    ApiInformazioniGenerali:
      required:
      - "nome"
      - "versione"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        versione:
          minimum: 1
          type: "integer"
          format: "int32"
          example: 1
    ApiInformazioniGeneraliView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiInformazioniGenerali"
    ApiReferente:
      required:
      - "referente"
      type: "object"
      properties:
        referente:
          $ref: "#/components/schemas/SimpleName"
    ApiReferenteView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiReferente"
    ApiInterfaccia:
      required:
      - "interfaccia"
      type: "object"
      properties:
        interfaccia:
          type: "string"
          format: "byte"
    ApiInterfacciaView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiInterfaccia"
      - required:
        - "tipo_interfaccia"
        type: "object"
        properties:
          tipo_interfaccia:
            type: "object"
            discriminator:
              propertyName: "protocollo"
              mapping:
                rest: "#/components/schemas/ApiInterfacciaRest"
                soap: "#/components/schemas/ApiInterfacciaSoap"
            oneOf:
            - $ref: "#/components/schemas/ApiInterfacciaRest"
            - $ref: "#/components/schemas/ApiInterfacciaSoap"
    ApiDescrizione:
      type: "object"
      properties:
        descrizione:
          maxLength: 4000
          type: "string"
          example: "descrizione API"
    ApiTags:
      required:
      - "tags"
      type: "object"
      properties:
        tags:
          type: "array"
          example:
          - "PagamentiTelematici"
          - "Anagrafica"
          items:
            $ref: "#/components/schemas/NCName"
    ApiAllegato:
      required:
      - "allegato"
      type: "object"
      properties:
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "#/components/schemas/ApiAllegatoGenerico"
              specificaSemiFormale: "#/components/schemas/ApiAllegatoSpecificaSemiformale"
          oneOf:
          - $ref: "#/components/schemas/ApiAllegatoGenerico"
          - $ref: "#/components/schemas/ApiAllegatoSpecificaSemiformale"
    ApiAllegatoGenerico:
      required:
      - "documento"
      - "nome"
      - "ruolo"
      type: "object"
      properties:
        nome:
          type: "string"
        documento:
          type: "string"
          format: "byte"
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPI"
    ApiAllegatoSpecificaSemiformale:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiAllegatoGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaSemiformaleEnum"
    ApiAllegatoItem:
      required:
      - "allegato"
      type: "object"
      properties:
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "#/components/schemas/ApiAllegatoItemGenerico"
              specificaSemiFormale: "#/components/schemas/ApiAllegatoItemSpecificaSemiformale"
          oneOf:
          - $ref: "#/components/schemas/ApiAllegatoItemGenerico"
          - $ref: "#/components/schemas/ApiAllegatoItemSpecificaSemiformale"
    ApiAllegatoItemGenerico:
      required:
      - "nome"
      - "ruolo"
      type: "object"
      properties:
        nome:
          type: "string"
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPI"
    ApiAllegatoItemSpecificaSemiformale:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiAllegatoItemGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaSemiformaleEnum"
    ListaApiAllegati:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiAllegatoItem"
    ApiRisorsa:
      required:
      - "http_method"
      - "path"
      type: "object"
      properties:
        http_method:
          $ref: "#/components/schemas/HttpMethodEnum"
        path:
          maxLength: 255
          type: "string"
          example: "/libri"
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
        id_collaborazione:
          type: "boolean"
          example: false
          default: false
        riferimento_id_richiesta:
          type: "boolean"
          example: false
        modi:
          $ref: "#/components/schemas/ApiModIRisorsaRest"
    ListaApiRisorse:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiRisorsa"
    ApiServizio:
      required:
      - "nome"
      - "profilo_collaborazione"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 255
          type: "string"
        profilo_collaborazione:
          $ref: "#/components/schemas/ProfiloCollaborazioneEnum"
        id_collaborazione:
          type: "boolean"
          example: false
          default: false
        riferimento_id_richiesta:
          type: "boolean"
          example: false
    ListaApiServizi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiServizio"
    ApiAzione:
      required:
      - "nome"
      - "profilo_ridefinito"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        profilo_ridefinito:
          type: "boolean"
          default: false
        profilo_collaborazione:
          $ref: "#/components/schemas/ProfiloCollaborazioneEnum"
        id_collaborazione:
          type: "boolean"
          example: false
          default: false
        riferimento_id_richiesta:
          type: "boolean"
          example: false
        modi:
          $ref: "#/components/schemas/ApiModIAzioneSoap"
    ListaApiAzioni:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiAzione"
    Erogazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImpl"
      - type: "object"
        properties:
          descrizione:
            maxLength: 4000
            type: "string"
          erogazione_nome:
            $ref: "#/components/schemas/NCName"
          erogazione_versione:
            $ref: "#/components/schemas/Versione"
          canale:
            $ref: "#/components/schemas/IdCanale"
          modi:
            discriminator:
              propertyName: "protocollo"
              mapping:
                soap: "#/components/schemas/ErogazioneModISoap"
                rest: "#/components/schemas/ErogazioneModIRest"
            oneOf:
            - $ref: "#/components/schemas/ErogazioneModISoap"
            - $ref: "#/components/schemas/ErogazioneModIRest"
    ErogazioneItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplItem"
    ListaErogazioni:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ErogazioneItem"
    ErogazioneViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplViewItem"
    Fruizione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIImpl"
      - required:
        - "erogatore"
        type: "object"
        properties:
          descrizione:
            maxLength: 4000
            type: "string"
          fruizione_nome:
            $ref: "#/components/schemas/NCName"
          fruizione_versione:
            $ref: "#/components/schemas/Versione"
          erogatore:
            $ref: "#/components/schemas/SimpleName"
          canale:
            $ref: "#/components/schemas/IdCanale"
          modi:
            discriminator:
              propertyName: "protocollo"
              mapping:
                oauth: "#/components/schemas/FruizioneModIOAuth"
                soap: "#/components/schemas/FruizioneModISoap"
                rest: "#/components/schemas/FruizioneModIRest"
            oneOf:
            - $ref: "#/components/schemas/FruizioneModIOAuth"
            - $ref: "#/components/schemas/FruizioneModISoap"
            - $ref: "#/components/schemas/FruizioneModIRest"
    FruizioneItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplItem"
      - required:
        - "erogatore"
        type: "object"
        properties:
          erogatore:
            $ref: "#/components/schemas/SimpleName"
    ListaFruizioni:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/FruizioneItem"
    FruizioneViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplViewItem"
      - required:
        - "erogatore"
        type: "object"
        properties:
          erogatore:
            $ref: "#/components/schemas/SimpleName"
    Soggetto:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseCredenziali"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/SimpleName"
          dominio:
            $ref: "#/components/schemas/DominioEnum"
          descrizione:
            maxLength: 4000
            type: "string"
            example: "descrizione del soggetto EnteEsterno"
          ruoli:
            type: "array"
            example:
            - "ruolo1"
            - "ruolo2"
            items:
              $ref: "#/components/schemas/NCName"
          proprieta:
            type: "array"
            items:
              $ref: "#/components/schemas/Proprieta4000"
    SoggettoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - required:
        - "dominio"
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/SimpleName"
          dominio:
            $ref: "#/components/schemas/DominioEnum"
          count_ruoli:
            minimum: 0
            type: "integer"
            format: "int32"
            example: 0
    ListaSoggetti:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/SoggettoItem"
    Applicativo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseCredenziali"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
          descrizione:
            maxLength: 4000
            type: "string"
            example: "descrizione dell'applicativo"
          ruoli:
            type: "array"
            example:
            - "ruolo1"
            - "ruolo2"
            items:
              $ref: "#/components/schemas/NCName"
          proprieta:
            type: "array"
            items:
              $ref: "#/components/schemas/Proprieta4000"
          modi:
            type: "object"
            discriminator:
              propertyName: "dominio"
              mapping:
                interno: "#/components/schemas/ModIApplicativoInterno"
                esterno: "#/components/schemas/ModIApplicativoEsterno"
            oneOf:
            - $ref: "#/components/schemas/ModIApplicativoInterno"
            - $ref: "#/components/schemas/ModIApplicativoEsterno"
    ApplicativoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
          count_ruoli:
            minimum: 0
            type: "integer"
            format: "int32"
            example: 3
    ListaApplicativi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApplicativoItem"
    ApplicativoServer:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 4000
          type: "string"
          example: "descrizione dell'applicativo"
        proprieta:
          type: "array"
          items:
            $ref: "#/components/schemas/Proprieta4000"
        connettore:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              http: "#/components/schemas/ConnettoreHttp"
              file: "#/components/schemas/ConnettoreFile"
              jms: "#/components/schemas/ConnettoreJms"
              "null": "#/components/schemas/ConnettoreNull"
              echo: "#/components/schemas/ConnettoreEcho"
              plugin: "#/components/schemas/ConnettorePlugin"
              applicativo-server: "#/components/schemas/ConnettoreApplicativoServer"
              message-box: "#/components/schemas/ConnettoreMessageBox"
          oneOf:
          - $ref: "#/components/schemas/ConnettoreHttp"
          - $ref: "#/components/schemas/ConnettoreFile"
          - $ref: "#/components/schemas/ConnettoreJms"
          - $ref: "#/components/schemas/ConnettoreNull"
          - $ref: "#/components/schemas/ConnettoreEcho"
          - $ref: "#/components/schemas/ConnettorePlugin"
          - $ref: "#/components/schemas/ConnettoreApplicativoServer"
          - $ref: "#/components/schemas/ConnettoreMessageBox"
    ApplicativoServerItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
    ListaApplicativiServer:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApplicativoServerItem"
    Ruolo:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 4000
          type: "string"
          example: "descrizione del ruolo"
        fonte:
          $ref: "#/components/schemas/FonteEnum"
        identificativo_esterno:
          maxLength: 255
          type: "string"
          example: "urn://accesso_sola_lettura"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    RuoloItem:
      required:
      - "contesto"
      - "fonte"
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        fonte:
          $ref: "#/components/schemas/FonteEnum"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    ListaRuoli:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/RuoloItem"
    Scope:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 4000
          type: "string"
          example: "descrizione dello scope"
        identificativo_esterno:
          maxLength: 255
          type: "string"
          example: "urn://accesso_sola_lettura"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    ScopeItem:
      required:
      - "contesto"
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
        contesto:
          $ref: "#/components/schemas/ContestoEnum"
    ListaScope:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ScopeItem"
    SimpleNameStrict:
      maxLength: 255
      pattern: "^[0-9A-Za-z]+$"
      type: "string"
      description: "Formato solo da caratteri e cifre"
    SimpleName:
      maxLength: 255
      pattern: "^[0-9A-Za-z][\\-A-Za-z0-9]*$"
      type: "string"
      description: "Può iniziare solo con un carattere o cifra [0-9A-Za-z] e dev'essere\
        \ formato solo da caratteri, cifre e '-'"
    NCName:
      maxLength: 255
      pattern: "^[_A-Za-z][\\-\\._A-Za-z0-9]*$"
      type: "string"
      description: "Può iniziare solo con un carattere [A-Za-z] o il simbolo '_' e\
        \ dev'essere formato solo da caratteri, cifre, '_' , '-' e '.'"
    Tipo:
      maxLength: 20
      pattern: "^[a-z]{2,20}$"
      type: "string"
      description: "Indica un tipo assegnato ad un soggetto o ad un servizio"
    BaseItem:
      required:
      - "profilo"
      type: "object"
      properties:
        profilo:
          $ref: "#/components/schemas/ProfiloEnum"
    BaseSoggettoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - required:
        - "soggetto"
        type: "object"
        properties:
          soggetto:
            $ref: "#/components/schemas/SimpleName"
    Versione:
      minimum: 1
      type: "integer"
      format: "int32"
      example: 1
      default: 1
    HttpStatusCode:
      maximum: 599
      minimum: 100
      type: "integer"
      format: "int32"
      example: 200
    Lista:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ListaSenzaTotale"
      - required:
        - "total"
        type: "object"
        properties:
          total:
            minimum: 0
            type: "integer"
            description: "Number of items matching the filter criteria"
            format: "int64"
          last:
            type: "string"
            description: "Link to last result page. Null if you are already on last\
              \ page."
    ListaSenzaTotale:
      required:
      - "limit"
      - "offset"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "The zero-ary offset index into the results"
          format: "int64"
        limit:
          type: "integer"
          description: "How many items to return at one time"
          format: "int32"
        first:
          type: "string"
          description: "Link to first result page. Null if you are already on first\
            \ page."
        next:
          type: "string"
          description: "Link to next result page. Null if you are on last page."
        prev:
          type: "string"
          description: "Link to previous result page. Null if you are on first page."
    ProfiloEnum:
      type: "string"
      default: "APIGateway"
      enum:
      - "APIGateway"
      - "ModIPA"
      - "ModI"
      - "SPCoop"
      - "FatturaPA"
      - "eDelivery"
    ProfiloCollaborazioneEnum:
      type: "string"
      example: "sincrono"
      enum:
      - "oneway"
      - "sincrono"
      - "asincronoSimmetrico"
      - "asincronoAsimmetrico"
    HttpMethodEnum:
      type: "string"
      example: "POST"
      enum:
      - "Qualsiasi"
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
      - "HEAD"
      - "TRACE"
      - "PATCH"
      - "LINK"
      - "UNLINK"
    TokenClaimEnum:
      type: "string"
      enum:
      - "subject"
      - "issuer"
      - "client_id"
      - "username"
      - "email"
    StatoApiDescrizione:
      type: "string"
      example: "Nessuna risorsa definita nella API"
    IdCanale:
      maxLength: 255
      pattern: "^[^\\s]+$"
      type: "string"
    ConfigurazioneApiCanale:
      required:
      - "configurazione"
      type: "object"
      properties:
        configurazione:
          $ref: "#/components/schemas/ConfigurazioneCanaleEnum"
        canale:
          $ref: "#/components/schemas/IdCanale"
    ApiCanale:
      required:
      - "configurazione"
      - "nome"
      type: "object"
      properties:
        configurazione:
          $ref: "#/components/schemas/CanaleEnum"
        nome:
          $ref: "#/components/schemas/IdCanale"
    UriApi:
      pattern: "^[a-z]{2,20}/[0-9A-Za-z]+:[_A-Za-z][\\-\\._A-Za-z0-9]*:\\d$|^[_A-Za-z][\\\
        -\\._A-Za-z0-9]*:\\d$"
      type: "string"
      description: "Indica l'uri di una Api"
    ApiBase:
      required:
      - "nome"
      - "tipo_interfaccia"
      - "versione"
      type: "object"
      properties:
        referente:
          $ref: "#/components/schemas/SimpleName"
        tipo_interfaccia:
          type: "object"
          discriminator:
            propertyName: "protocollo"
            mapping:
              rest: "#/components/schemas/ApiInterfacciaRest"
              soap: "#/components/schemas/ApiInterfacciaSoap"
          oneOf:
          - $ref: "#/components/schemas/ApiInterfacciaRest"
          - $ref: "#/components/schemas/ApiInterfacciaSoap"
        nome:
          $ref: "#/components/schemas/NCName"
        descrizione:
          maxLength: 4000
          type: "string"
          example: "descrizione API"
        versione:
          $ref: "#/components/schemas/Versione"
        tags:
          type: "array"
          example:
          - "PagamentiTelematici"
          - "Anagrafica"
          items:
            $ref: "#/components/schemas/NCName"
    ApiBaseConSoggetto:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiBase"
      - required:
        - "profilo"
        - "soggetto"
        type: "object"
        properties:
          profilo:
            $ref: "#/components/schemas/ProfiloEnum"
          soggetto:
            $ref: "#/components/schemas/SimpleName"
    ApiInterfacciaRest:
      required:
      - "formato"
      - "protocollo"
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/TipoApiEnum"
        formato:
          $ref: "#/components/schemas/FormatoRestEnum"
    ApiInterfacciaSoap:
      required:
      - "formato"
      - "protocollo"
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/TipoApiEnum"
        formato:
          $ref: "#/components/schemas/FormatoSoapEnum"
    ApiModI:
      required:
      - "sicurezza_canale"
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_canale:
          $ref: "#/components/schemas/ApiModISicurezzaCanale"
        sicurezza_messaggio:
          $ref: "#/components/schemas/ApiModISicurezzaMessaggio"
    ApiModISicurezzaCanale:
      required:
      - "pattern"
      type: "object"
      properties:
        pattern:
          $ref: "#/components/schemas/ModISicurezzaCanaleEnum"
    ApiModISicurezzaMessaggio:
      required:
      - "pattern"
      type: "object"
      properties:
        pattern:
          $ref: "#/components/schemas/ModISicurezzaMessaggioEnum"
        generazione_token:
          $ref: "#/components/schemas/ModISicurezzaMessaggioGenerazioneTokenEnum"
        digest_richiesta:
          type: "boolean"
          default: false
        informazioni_utente:
          type: "boolean"
          default: false
        pattern_audit:
          $ref: "#/components/schemas/ModISicurezzaMessaggioPatternAuditEnum"
        schema_audit:
          maxLength: 255
          type: "string"
        rest_header:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestHeaderEnum"
        rest_header_custom:
          maxLength: 255
          type: "string"
        soap_firma_allegati:
          type: "boolean"
          default: false
        applicabilita:
          $ref: "#/components/schemas/ModISicurezzaMessaggioApplicabilitaEnum"
        applicabilita_custom:
          $ref: "#/components/schemas/ApiModISicurezzaMessaggioApplicabilitaCustom"
    ApiModISicurezzaMessaggioApplicabilitaCustom:
      required:
      - "applicabilita"
      - "richiesta"
      - "risposta"
      type: "object"
      properties:
        applicabilita:
          $ref: "#/components/schemas/ModISicurezzaMessaggioApplicabilitaEnum"
        richiesta:
          $ref: "#/components/schemas/ModISicurezzaMessaggioApplicabilitaCustomEnum"
        richiesta_content_type:
          maxLength: 4000
          type: "string"
        risposta:
          $ref: "#/components/schemas/ModISicurezzaMessaggioApplicabilitaCustomEnum"
        risposta_content_type:
          maxLength: 4000
          type: "string"
        risposta_codice:
          maxLength: 4000
          type: "string"
    ApiModIPatternInterazione:
      required:
      - "pattern"
      type: "object"
      properties:
        pattern:
          $ref: "#/components/schemas/ModIPatternInterazioneEnum"
        tipo:
          $ref: "#/components/schemas/ModIPatternInterazioneTipoEnum"
        funzione:
          $ref: "#/components/schemas/ModIPatternInterazioneFunzioneEnum"
    ApiModIPatternInterazioneRest:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiModIPatternInterazione"
      - type: "object"
        properties:
          risorsa_correlata:
            $ref: "#/components/schemas/ApiModIPatternInterazioneCorrelazioneRest"
    ApiModIPatternInterazioneSoap:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiModIPatternInterazione"
      - type: "object"
        properties:
          azione_correlata:
            $ref: "#/components/schemas/ApiModIPatternInterazioneCorrelazioneSoap"
    ApiModIPatternInterazioneCorrelazioneRest:
      required:
      - "api_nome"
      - "api_versione"
      type: "object"
      properties:
        api_nome:
          $ref: "#/components/schemas/NCName"
        api_versione:
          $ref: "#/components/schemas/Versione"
        risorsa_http_method:
          $ref: "#/components/schemas/HttpMethodEnum"
        risorsa_path:
          maxLength: 255
          type: "string"
          example: "/libri"
    ApiModIPatternInterazioneCorrelazioneSoap:
      required:
      - "api_nome"
      - "api_versione"
      - "servizio"
      type: "object"
      properties:
        api_nome:
          $ref: "#/components/schemas/NCName"
        api_versione:
          $ref: "#/components/schemas/Versione"
        servizio:
          $ref: "#/components/schemas/NCName"
        azione:
          $ref: "#/components/schemas/NCName"
    ApiModIRisorsaRest:
      required:
      - "interazione"
      - "sicurezza_messaggio"
      type: "object"
      properties:
        interazione:
          $ref: "#/components/schemas/ApiModIPatternInterazioneRest"
        sicurezza_messaggio:
          type: "object"
          discriminator:
            propertyName: "stato"
            mapping:
              api: "#/components/schemas/ApiModISicurezzaMessaggioOperazione"
              ridefinito: "#/components/schemas/ApiModISicurezzaMessaggioOperazioneRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ApiModISicurezzaMessaggioOperazione"
          - $ref: "#/components/schemas/ApiModISicurezzaMessaggioOperazioneRidefinito"
    ApiModIAzioneSoap:
      required:
      - "interazione"
      - "sicurezza_messaggio"
      type: "object"
      properties:
        interazione:
          $ref: "#/components/schemas/ApiModIPatternInterazioneSoap"
        sicurezza_messaggio:
          type: "object"
          discriminator:
            propertyName: "stato"
            mapping:
              api: "#/components/schemas/ApiModISicurezzaMessaggioOperazione"
              ridefinito: "#/components/schemas/ApiModISicurezzaMessaggioOperazioneRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ApiModISicurezzaMessaggioOperazione"
          - $ref: "#/components/schemas/ApiModISicurezzaMessaggioOperazioneRidefinito"
    ApiModISicurezzaMessaggioOperazione:
      required:
      - "stato"
      type: "object"
      properties:
        stato:
          $ref: "#/components/schemas/ModISicurezzaMessaggioOperazioneEnum"
    ApiModISicurezzaMessaggioOperazioneRidefinito:
      required:
      - "configurazione"
      - "stato"
      type: "object"
      properties:
        stato:
          $ref: "#/components/schemas/ModISicurezzaMessaggioOperazioneEnum"
        configurazione:
          $ref: "#/components/schemas/ApiModISicurezzaMessaggio"
    AuthenticationHttpBasic:
      required:
      - "modalita_accesso"
      - "username"
      type: "object"
      properties:
        modalita_accesso:
          $ref: "#/components/schemas/ModalitaAccessoEnum"
        username:
          maxLength: 2800
          type: "string"
          example: "user"
        password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
      additionalProperties: false
    AuthenticationHttps:
      required:
      - "certificato"
      - "modalita_accesso"
      type: "object"
      properties:
        modalita_accesso:
          $ref: "#/components/schemas/ModalitaAccessoEnum"
        certificato:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              certificato: "#/components/schemas/AuthenticationHttpsCertificato"
              configurazione-manuale: "#/components/schemas/AuthenticationHttpsConfigurazioneManuale"
          oneOf:
          - $ref: "#/components/schemas/AuthenticationHttpsCertificato"
          - $ref: "#/components/schemas/AuthenticationHttpsConfigurazioneManuale"
        certificati:
          type: "array"
          items:
            $ref: "#/components/schemas/AuthenticationHttpsBaseCertificato"
        token:
          $ref: "#/components/schemas/AuthenticationTokenBase"
      additionalProperties: false
    AuthenticationHttpsBaseCertificato:
      required:
      - "archivio"
      - "tipo_certificato"
      type: "object"
      properties:
        archivio:
          type: "string"
          format: "byte"
        alias:
          maxLength: 255
          type: "string"
          example: "alias"
        password:
          maxLength: 255
          type: "string"
          example: "changeit"
        tipo_certificato:
          $ref: "#/components/schemas/TipoKeystore"
        strict_verification:
          type: "boolean"
          example: false
          default: false
    AuthenticationHttpsCertificato:
      allOf:
      - $ref: "#/components/schemas/AuthenticationHttpsBaseCertificato"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/TipoAutenticazioneHttps"
    AuthenticationHttpsConfigurazioneManuale:
      required:
      - "subject"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneHttps"
        subject:
          maxLength: 2800
          type: "string"
          example: "cn=esterno"
        issuer:
          maxLength: 2800
          type: "string"
          example: "cn=esterno"
      additionalProperties: false
    AuthenticationPrincipal:
      required:
      - "modalita_accesso"
      - "userid"
      type: "object"
      properties:
        modalita_accesso:
          $ref: "#/components/schemas/ModalitaAccessoEnum"
        userid:
          maxLength: 2800
          type: "string"
          example: "idEsterno"
      additionalProperties: false
    AuthenticationApiKey:
      required:
      - "modalita_accesso"
      type: "object"
      properties:
        modalita_accesso:
          $ref: "#/components/schemas/ModalitaAccessoEnum"
        app_id:
          type: "boolean"
          default: false
      additionalProperties: false
    AuthenticationTokenBase:
      required:
      - "identificativo"
      - "token_policy"
      type: "object"
      properties:
        token_policy:
          maxLength: 255
          type: "string"
        identificativo:
          maxLength: 2800
          type: "string"
    AuthenticationToken:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/AuthenticationTokenBase"
      - required:
        - "modalita_accesso"
        type: "object"
        properties:
          modalita_accesso:
            $ref: "#/components/schemas/ModalitaAccessoEnum"
    BaseCredenziali:
      type: "object"
      properties:
        credenziali:
          type: "object"
          discriminator:
            propertyName: "modalita_accesso"
            mapping:
              http-basic: "#/components/schemas/AuthenticationHttpBasic"
              https: "#/components/schemas/AuthenticationHttps"
              principal: "#/components/schemas/AuthenticationPrincipal"
              api-key: "#/components/schemas/AuthenticationApiKey"
              token: "#/components/schemas/AuthenticationToken"
          oneOf:
          - $ref: "#/components/schemas/AuthenticationHttpBasic"
          - $ref: "#/components/schemas/AuthenticationHttps"
          - $ref: "#/components/schemas/AuthenticationPrincipal"
          - $ref: "#/components/schemas/AuthenticationApiKey"
          - $ref: "#/components/schemas/AuthenticationToken"
    BaseTrustStore:
      required:
      - "truststore_password"
      - "truststore_path"
      type: "object"
      properties:
        truststore_path:
          maxLength: 4000
          type: "string"
          example: "/path/to/truststore"
        truststore_password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
        truststore_crl:
          maxLength: 4000
          type: "string"
        truststore_ocsp_policy:
          maxLength: 255
          type: "string"
    BaseKeyStore:
      required:
      - "key_password"
      - "keystore_password"
      type: "object"
      properties:
        keystore_password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
        key_password:
          maxLength: 255
          type: "string"
          description: "password della chiave privata"
          format: "password"
          example: "pwd"
        key_alias:
          maxLength: 255
          type: "string"
          description: "alias della chiave privata"
          example: "pwd"
    BaseKeyStoreFile:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseKeyStore"
      - required:
        - "keystore_path"
        type: "object"
        properties:
          keystore_path:
            maxLength: 4000
            type: "string"
            example: "/path/to/keystore"
    BaseKeyStoreArchive:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseKeyStore"
      - required:
        - "keystore_archivio"
        type: "object"
        properties:
          keystore_archivio:
            type: "string"
            format: "byte"
    ConnettoreConfigurazioneHttpBasic:
      required:
      - "password"
      - "username"
      type: "object"
      properties:
        username:
          maxLength: 255
          type: "string"
          example: "user"
        password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
      additionalProperties: false
    ConnettoreConfigurazioneHttps:
      required:
      - "tipologia"
      type: "object"
      properties:
        tipologia:
          $ref: "#/components/schemas/SslTipologiaEnum"
        hostname_verifier:
          type: "boolean"
          example: false
          default: true
        trust_all_server_certs:
          type: "boolean"
          example: false
          default: false
        server:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttpsServer"
        client:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttpsClient"
    ConnettoreConfigurazioneHttpsServer:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseTrustStore"
      - required:
        - "truststore_tipo"
        type: "object"
        properties:
          truststore_tipo:
            $ref: "#/components/schemas/KeystoreEnum"
          algoritmo:
            maxLength: 255
            type: "string"
            example: "PKIX"
            default: "PKIX"
          pcks11_tipo:
            maxLength: 255
            type: "string"
    ConnettoreConfigurazioneHttpsClient:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseKeyStoreFile"
      - required:
        - "keystore_tipo"
        type: "object"
        properties:
          keystore_tipo:
            $ref: "#/components/schemas/KeystoreEnum"
          algoritmo:
            maxLength: 255
            type: "string"
            example: "SunX509"
            default: "SunX509"
          pcks11_tipo:
            maxLength: 255
            type: "string"
    ConnettoreConfigurazioneProxy:
      required:
      - "hostname"
      - "porta"
      type: "object"
      properties:
        hostname:
          maxLength: 255
          type: "string"
          format: "hostname"
          example: "proxy.ente.it"
        porta:
          maximum: 65535
          minimum: 1
          type: "integer"
          format: "int32"
          example: 8080
        username:
          maxLength: 255
          type: "string"
          example: "user"
        password:
          maxLength: 255
          type: "string"
          format: "password"
          example: "pwd"
    ConnettoreConfigurazioneTimeout:
      required:
      - "connection_read_timeout"
      - "connection_timeout"
      - "tempo_medio_risposta"
      type: "object"
      properties:
        connection_timeout:
          type: "integer"
          description: "tempo massimo (in millisecondi) per instaurare una connessione"
          format: "int32"
          example: 10000
        connection_read_timeout:
          type: "integer"
          description: "tempo massimo (in millisecondi) per ricevere una risposta"
          format: "int32"
          example: 150000
        tempo_medio_risposta:
          type: "integer"
          description: "tempo medio (in millisecondi) atteso per ricevere una risposta"
          format: "int32"
          example: 10000
    BaseConnettoreHttp:
      required:
      - "endpoint"
      type: "object"
      properties:
        endpoint:
          maxLength: 4000
          type: "string"
          format: "uri"
          example: "http://ente.it/servizio"
        autenticazione_http:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttpBasic"
        autenticazione_https:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttps"
        proxy:
          $ref: "#/components/schemas/ConnettoreConfigurazioneProxy"
        tempi_risposta:
          $ref: "#/components/schemas/ConnettoreConfigurazioneTimeout"
        token_policy:
          $ref: "#/components/schemas/NCName"
        debug:
          type: "boolean"
          default: false
    ConnettoreHttp:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseConnettoreHttp"
      - required:
        - "tipo"
        type: "object"
        properties:
          tipo:
            $ref: "#/components/schemas/ConnettoreEnum"
    ConnettoreFile:
      required:
      - "richiesta"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        debug:
          type: "boolean"
          default: false
        richiesta:
          $ref: "#/components/schemas/ConnettoreFileRichiesta"
        risposta:
          $ref: "#/components/schemas/ConnettoreFileRisposta"
    ConnettoreFileRichiesta:
      required:
      - "file"
      type: "object"
      properties:
        file:
          maxLength: 4000
          type: "string"
        file_permissions:
          maxLength: 255
          type: "string"
        file_headers:
          maxLength: 4000
          type: "string"
        file_headers_permissions:
          maxLength: 255
          type: "string"
        create_parent_dir:
          type: "boolean"
          default: false
        overwrite_if_exists:
          type: "boolean"
          default: false
    ConnettoreFileRisposta:
      required:
      - "file"
      type: "object"
      properties:
        file:
          maxLength: 4000
          type: "string"
        file_headers:
          maxLength: 4000
          type: "string"
        delete_after_read:
          type: "boolean"
          default: false
        wait_if_not_exists_ms:
          type: "integer"
          format: "int32"
    ConnettoreJms:
      required:
      - "connection_factory"
      - "nome"
      - "send_as"
      - "tipo"
      - "tipo_coda"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        debug:
          type: "boolean"
          default: false
        nome:
          maxLength: 255
          type: "string"
        tipo_coda:
          $ref: "#/components/schemas/ConnettoreJmsTipoEnum"
        send_as:
          $ref: "#/components/schemas/ConnettoreJmsSendAsEnum"
        connection_factory:
          maxLength: 255
          type: "string"
        utente:
          maxLength: 255
          type: "string"
        password:
          maxLength: 255
          type: "string"
        jndi_initial_context:
          maxLength: 255
          type: "string"
        jndi_url_pgk_prefixes:
          maxLength: 255
          type: "string"
        jndi_provider_url:
          maxLength: 255
          type: "string"
    ConnettoreNull:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        debug:
          type: "boolean"
          default: false
    ConnettoreEcho:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        debug:
          type: "boolean"
          default: false
    ConnettorePlugin:
      required:
      - "plugin"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        debug:
          type: "boolean"
          default: false
        plugin:
          maxLength: 255
          type: "string"
        proprieta:
          type: "array"
          items:
            $ref: "#/components/schemas/Proprieta"
    ConnettoreApplicativoServer:
      required:
      - "applicativo"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        applicativo:
          $ref: "#/components/schemas/NCName"
    ConnettoreMessageBox:
      required:
      - "autenticazione_http"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/ConnettoreEnum"
        autenticazione_http:
          $ref: "#/components/schemas/ConnettoreConfigurazioneHttpBasic"
    ConnettoreErogazione:
      type: "object"
      properties:
        connettore:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              http: "#/components/schemas/ConnettoreHttp"
              file: "#/components/schemas/ConnettoreFile"
              jms: "#/components/schemas/ConnettoreJms"
              "null": "#/components/schemas/ConnettoreNull"
              echo: "#/components/schemas/ConnettoreEcho"
              plugin: "#/components/schemas/ConnettorePlugin"
              applicativo-server: "#/components/schemas/ConnettoreApplicativoServer"
              message-box: "#/components/schemas/ConnettoreMessageBox"
          oneOf:
          - $ref: "#/components/schemas/ConnettoreHttp"
          - $ref: "#/components/schemas/ConnettoreFile"
          - $ref: "#/components/schemas/ConnettoreJms"
          - $ref: "#/components/schemas/ConnettoreNull"
          - $ref: "#/components/schemas/ConnettoreEcho"
          - $ref: "#/components/schemas/ConnettorePlugin"
          - $ref: "#/components/schemas/ConnettoreApplicativoServer"
          - $ref: "#/components/schemas/ConnettoreMessageBox"
      additionalProperties: false
    ConnettoreFruizione:
      required:
      - "connettore"
      type: "object"
      properties:
        connettore:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              http: "#/components/schemas/ConnettoreHttp"
              file: "#/components/schemas/ConnettoreFile"
              jms: "#/components/schemas/ConnettoreJms"
              "null": "#/components/schemas/ConnettoreNull"
              echo: "#/components/schemas/ConnettoreEcho"
              plugin: "#/components/schemas/ConnettorePlugin"
          oneOf:
          - $ref: "#/components/schemas/ConnettoreHttp"
          - $ref: "#/components/schemas/ConnettoreFile"
          - $ref: "#/components/schemas/ConnettoreJms"
          - $ref: "#/components/schemas/ConnettoreNull"
          - $ref: "#/components/schemas/ConnettoreEcho"
          - $ref: "#/components/schemas/ConnettorePlugin"
      additionalProperties: false
    APIBaseImpl:
      required:
      - "api_nome"
      - "api_versione"
      type: "object"
      properties:
        api_nome:
          $ref: "#/components/schemas/NCName"
        api_versione:
          $ref: "#/components/schemas/Versione"
        api_referente:
          $ref: "#/components/schemas/SimpleName"
        api_soap_servizio:
          $ref: "#/components/schemas/NCName"
        api_tags:
          type: "array"
          example:
          - "PagamentiTelematici"
          - "Anagrafica"
          items:
            $ref: "#/components/schemas/NCName"
        tipo_servizio:
          $ref: "#/components/schemas/Tipo"
    APIImpl:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/APIBaseImpl"
      - required:
        - "connettore"
        type: "object"
        properties:
          autenticazione:
            type: "object"
            discriminator:
              propertyName: "tipo"
              mapping:
                disabilitato: "#/components/schemas/APIImplAutenticazioneDisabilitata"
                http-basic: "#/components/schemas/APIImplAutenticazioneBasic"
                https: "#/components/schemas/APIImplAutenticazioneHttps"
                principal: "#/components/schemas/APIImplAutenticazionePrincipal"
                api-key: "#/components/schemas/APIImplAutenticazioneApiKey"
            oneOf:
            - $ref: "#/components/schemas/APIImplAutenticazioneDisabilitata"
            - $ref: "#/components/schemas/APIImplAutenticazioneBasic"
            - $ref: "#/components/schemas/APIImplAutenticazioneHttps"
            - $ref: "#/components/schemas/APIImplAutenticazionePrincipal"
            - $ref: "#/components/schemas/APIImplAutenticazioneApiKey"
          autorizzazione:
            type: "object"
            discriminator:
              propertyName: "tipo"
              mapping:
                disabilitato: "#/components/schemas/APIImplAutorizzazioneDisabilitata"
                abilitato: "#/components/schemas/APIImplAutorizzazioneAbilitataNew"
                xacml-Policy: "#/components/schemas/APIImplAutorizzazioneXACML"
            oneOf:
            - $ref: "#/components/schemas/APIImplAutorizzazioneDisabilitata"
            - $ref: "#/components/schemas/APIImplAutorizzazioneAbilitataNew"
            - $ref: "#/components/schemas/APIImplAutorizzazioneXACML"
          connettore:
            $ref: "#/components/schemas/BaseConnettoreHttp"
    APIImplAutenticazioneDisabilitata:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
      additionalProperties: false
    APIImplAutenticazioneBasic:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
        forward:
          type: "boolean"
          example: false
          default: false
        opzionale:
          type: "boolean"
          example: false
          default: false
      additionalProperties: false
    APIImplAutenticazioneHttps:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
        opzionale:
          type: "boolean"
          example: false
          default: false
      additionalProperties: false
    APIImplAutenticazionePrincipal:
      required:
      - "tipo"
      - "tipo_principal"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
        tipo_principal:
          $ref: "#/components/schemas/TipoAutenticazionePrincipal"
        token:
          $ref: "#/components/schemas/TipoAutenticazionePrincipalToken"
        nome:
          maxLength: 255
          type: "string"
          description: "indica il nome dell'header http in caso di autenticazione\
            \ principal 'header-based', \nil nome del parametro della query nel caso\
            \ di autenticazione principal 'form-based' o\nil nome del claim in caso\
            \ di autenticazione principal 'token' con tipo di claim 'custom'\n"
        pattern:
          type: "string"
          example: "indica l'espressione regolare da utilizzare in caso di autenticazione\
            \ 'url-based'"
        forward:
          type: "boolean"
          example: false
          default: false
        opzionale:
          type: "boolean"
          example: false
          default: false
      additionalProperties: false
    APIImplAutenticazioneApiKey:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
        app_id:
          type: "boolean"
          default: false
        posizione:
          $ref: "#/components/schemas/APIImplAutenticazioneApiKeyPosizione"
        api_key_nomi:
          $ref: "#/components/schemas/APIImplAutenticazioneApiKeyConfig"
        app_id_nomi:
          $ref: "#/components/schemas/APIImplAutenticazioneApiKeyConfig"
        api_key_forward:
          type: "boolean"
          default: false
        app_id_forward:
          type: "boolean"
          default: false
        opzionale:
          type: "boolean"
          default: false
      additionalProperties: false
    APIImplAutenticazioneApiKeyPosizione:
      type: "object"
      properties:
        query_parameter:
          type: "boolean"
          default: true
        header:
          type: "boolean"
          default: true
        cookie:
          type: "boolean"
          default: true
      additionalProperties: false
    APIImplAutenticazioneApiKeyConfig:
      type: "object"
      properties:
        query_parameter:
          type: "string"
          example: "custom_key"
        header:
          type: "string"
          example: "X-Custom-Key"
        cookie:
          type: "string"
          example: "X-Custom-Key"
      additionalProperties: false
    APIImplAutenticazioneCustom:
      required:
      - "nome"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutenticazioneEnum"
        nome:
          maxLength: 255
          type: "string"
          description: "nome autenticazione 'custom', set tipo='custom'"
        opzionale:
          type: "boolean"
          example: false
          default: false
      additionalProperties: false
    APIImplAutorizzazioneDisabilitata:
      required:
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
      additionalProperties: false
    APIImplAutorizzazioneAbilitataNew:
      required:
      - "richiedente"
      - "ruoli"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        richiedente:
          type: "boolean"
          example: false
          default: true
        soggetto:
          $ref: "#/components/schemas/SimpleName"
        ruoli:
          type: "boolean"
          example: false
          default: false
        ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
        ruoli_richiesti:
          $ref: "#/components/schemas/AllAnyEnum"
        ruolo:
          $ref: "#/components/schemas/NCName"
      additionalProperties: false
    APIImplAutorizzazioneAbilitata:
      required:
      - "richiedente"
      - "ruoli"
      - "scope"
      - "tipo"
      - "token"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        richiedente:
          type: "boolean"
          example: false
          default: true
        ruoli:
          type: "boolean"
          example: false
          default: false
        ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
        ruoli_richiesti:
          $ref: "#/components/schemas/AllAnyEnum"
        token_richiedente:
          type: "boolean"
          example: false
          default: true
        token_ruoli:
          type: "boolean"
          example: false
          default: false
        token_ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
        token_ruoli_richiesti:
          $ref: "#/components/schemas/AllAnyEnum"
        scope:
          type: "boolean"
          example: false
          default: false
        scope_richiesti:
          $ref: "#/components/schemas/AllAnyEnum"
        token:
          type: "boolean"
          example: false
          default: false
        token_claims:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
      additionalProperties: false
    APIImplAutorizzazioneXACMLView:
      required:
      - "ruoli_fonte"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
      additionalProperties: false
    APIImplAutorizzazioneXACML:
      required:
      - "policy"
      - "ruoli_fonte"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        ruoli_fonte:
          $ref: "#/components/schemas/FonteEnum"
        policy:
          type: "string"
          format: "byte"
      additionalProperties: false
    APIImplAutorizzazioneCustom:
      required:
      - "nome"
      - "tipo"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoAutorizzazioneEnum"
        nome:
          maxLength: 255
          type: "string"
      additionalProperties: false
    ApiImplItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - $ref: "#/components/schemas/APIBaseImpl"
      - required:
        - "nome"
        - "stato"
        - "stato_descrizione"
        - "versione"
        type: "object"
        properties:
          nome:
            $ref: "#/components/schemas/NCName"
          versione:
            $ref: "#/components/schemas/Versione"
          api_tipo:
            $ref: "#/components/schemas/TipoApiEnum"
          stato:
            $ref: "#/components/schemas/StatoApiEnum"
          stato_descrizione:
            $ref: "#/components/schemas/StatoApiDescrizione"
          canale:
            $ref: "#/components/schemas/ApiCanale"
    ApiImplViewItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplItem"
      - required:
        - "connettore"
        - "gestione_cors"
        - "url_invocazione"
        type: "object"
        properties:
          url_invocazione:
            type: "string"
            format: "uri"
          connettore:
            type: "string"
          gestione_cors:
            type: "string"
    ApiImplInformazioniGenerali:
      required:
      - "nome"
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/Tipo"
        nome:
          $ref: "#/components/schemas/NCName"
        api_soap_servizio:
          $ref: "#/components/schemas/NCName"
    ApiImplInformazioniGeneraliView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseItem"
      - $ref: "#/components/schemas/ApiImplInformazioniGenerali"
    ApiImplVersioneApi:
      required:
      - "api_versione"
      type: "object"
      properties:
        api_versione:
          $ref: "#/components/schemas/Versione"
    ApiImplVersioneApiView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseSoggettoItem"
      - $ref: "#/components/schemas/APIBaseImpl"
      - required:
        - "versioni"
        type: "object"
        properties:
          versioni:
            type: "array"
            example:
            - 1
            - 2
            - 3
            items:
              $ref: "#/components/schemas/Versione"
    ApiImplUrlInvocazione:
      required:
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/ModalitaIdentificazioneAzioneEnum"
        pattern:
          maxLength: 255
          type: "string"
          description: "XPath/JsonPath nel caso di modalità 'content-based' o espressione\
            \ regolare nel caso 'url-based'"
        nome:
          maxLength: 255
          type: "string"
          description: "Nome dell'header http nel caso di modalità 'header-based'\
            \ o nome dell'unica azione in caso di modalità 'static'"
        force_interface:
          type: "boolean"
          description: "Indicazione se oltre alla modalità indicata per individuare\
            \ l'azione viene usata comunque la modalità 'interface-based'"
          default: true
    ApiImplUrlInvocazioneView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplUrlInvocazione"
      - required:
        - "url_invocazione"
        type: "object"
        properties:
          url_invocazione:
            type: "string"
            format: "uri"
          azioni:
            type: "array"
            example:
            - "az1"
            - "az2"
            - "az3"
            items:
              $ref: "#/components/schemas/NCName"
    ApiImplAllegato:
      required:
      - "allegato"
      type: "object"
      properties:
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "#/components/schemas/ApiImplAllegatoGenerico"
              specificaSemiFormale: "#/components/schemas/ApiImplAllegatoSpecificaSemiformale"
              specificaSicurezza: "#/components/schemas/ApiImplAllegatoSpecificaSicurezza"
              specificaLivelloServizio: "#/components/schemas/ApiImplAllegatoSpecificaLivelloServizio"
          oneOf:
          - $ref: "#/components/schemas/ApiImplAllegatoGenerico"
          - $ref: "#/components/schemas/ApiImplAllegatoSpecificaSemiformale"
          - $ref: "#/components/schemas/ApiImplAllegatoSpecificaSicurezza"
          - $ref: "#/components/schemas/ApiImplAllegatoSpecificaLivelloServizio"
    ApiImplAllegatoGenerico:
      required:
      - "documento"
      - "nome"
      - "ruolo"
      type: "object"
      properties:
        nome:
          type: "string"
        documento:
          type: "string"
          format: "byte"
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPIImpl"
    ApiImplAllegatoSpecificaSemiformale:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplAllegatoGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaSemiformaleEnum"
    ApiImplAllegatoSpecificaSicurezza:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplAllegatoGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaSicurezzaEnum"
    ApiImplAllegatoSpecificaLivelloServizio:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplAllegatoGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaLivelloServizioEnum"
    ApiImplAllegatoItem:
      required:
      - "allegato"
      type: "object"
      properties:
        allegato:
          type: "object"
          discriminator:
            propertyName: "ruolo"
            mapping:
              allegato: "#/components/schemas/ApiImplAllegatoItemGenerico"
              specificaSemiFormale: "#/components/schemas/ApiImplAllegatoItemSpecificaSemiformale"
              specificaSicurezza: "#/components/schemas/ApiImplAllegatoItemSpecificaSicurezza"
              specificaLivelloServizio: "#/components/schemas/ApiImplAllegatoItemSpecificaLivelloServizio"
          oneOf:
          - $ref: "#/components/schemas/ApiImplAllegatoItemGenerico"
          - $ref: "#/components/schemas/ApiImplAllegatoItemSpecificaSemiformale"
          - $ref: "#/components/schemas/ApiImplAllegatoItemSpecificaSicurezza"
          - $ref: "#/components/schemas/ApiImplAllegatoItemSpecificaLivelloServizio"
    ApiImplAllegatoItemGenerico:
      required:
      - "nome"
      - "ruolo"
      type: "object"
      properties:
        nome:
          type: "string"
        ruolo:
          $ref: "#/components/schemas/RuoloAllegatoAPIImpl"
    ApiImplAllegatoItemSpecificaSemiformale:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplAllegatoItemGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaSemiformaleEnum"
    ApiImplAllegatoItemSpecificaSicurezza:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplAllegatoItemGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaSicurezzaEnum"
    ApiImplAllegatoItemSpecificaLivelloServizio:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplAllegatoItemGenerico"
      - required:
        - "tipo_specifica"
        type: "object"
        properties:
          tipo_specifica:
            $ref: "#/components/schemas/TipoSpecificaLivelloServizioEnum"
    ListaApiImplAllegati:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/ApiImplAllegatoItem"
    ErogazioneModI:
      required:
      - "modi"
      type: "object"
      properties:
        modi:
          discriminator:
            propertyName: "protocollo"
            mapping:
              soap: "#/components/schemas/ErogazioneModISoap"
              rest: "#/components/schemas/ErogazioneModIRest"
          oneOf:
          - $ref: "#/components/schemas/ErogazioneModISoap"
          - $ref: "#/components/schemas/ErogazioneModIRest"
    ErogazioneModISoap:
      required:
      - "protocollo"
      - "richiesta"
      - "risposta"
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/TipoApiEnum"
        richiesta:
          $ref: "#/components/schemas/ErogazioneModISoapRichiesta"
        risposta:
          $ref: "#/components/schemas/ErogazioneModISoapRisposta"
    ErogazioneModISoapRichiesta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/ErogazioneModISoapRichiestaSicurezzaMessaggio"
    ErogazioneModISoapRichiestaSicurezzaMessaggio:
      required:
      - "truststore"
      type: "object"
      properties:
        truststore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModITrustStoreDefault"
              ridefinito: "#/components/schemas/ModITrustStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModITrustStoreDefault"
          - $ref: "#/components/schemas/ModITrustStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
        wsa_to:
          maxLength: 4000
          type: "string"
        audit:
          $ref: "#/components/schemas/BaseModIRichiestaInformazioniUtenteAudit"
    ErogazioneModISoapRisposta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/ErogazioneModISoapRispostaSicurezzaMessaggio"
    ErogazioneModISoapRispostaSicurezzaMessaggio:
      required:
      - "keystore"
      type: "object"
      properties:
        algoritmo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioSoapAlgoritmoFirma"
        header_soap_firmare:
          type: "array"
          items:
            maxLength: 200
            type: "string"
        forma_canonica_xml:
          $ref: "#/components/schemas/ModISicurezzaMessaggioSoapFormaCanonicaXml"
        riferimento_x509:
          $ref: "#/components/schemas/ModISicurezzaMessaggioSoapRiferimentoX509"
        certificate_chain:
          type: "boolean"
        includi_signature_token:
          type: "boolean"
        keystore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModIKeyStoreDefault"
              ridefinito: "#/components/schemas/ModIKeyStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModIKeyStoreDefault"
          - $ref: "#/components/schemas/ModIKeyStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
          default: 300
    ErogazioneModIRest:
      required:
      - "protocollo"
      - "richiesta"
      - "risposta"
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/TipoApiEnum"
        richiesta:
          $ref: "#/components/schemas/ErogazioneModIRestRichiesta"
        risposta:
          $ref: "#/components/schemas/ErogazioneModIRestRisposta"
    ErogazioneModIRestRichiesta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/ErogazioneModIRestRichiestaSicurezzaMessaggio"
    ErogazioneModIRestRichiestaSicurezzaMessaggio:
      required:
      - "riferimento_x509"
      - "truststore"
      type: "object"
      properties:
        riferimento_x509:
          maxItems: 3
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/ModISicurezzaMessaggioRestRiferimentoX509"
        truststore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModITrustStoreDefault"
              ridefinito: "#/components/schemas/ModITrustStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModITrustStoreDefault"
          - $ref: "#/components/schemas/ModITrustStoreRidefinito"
        truststore_ssl:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModITrustStoreDefault"
              ridefinito: "#/components/schemas/ModITrustStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModITrustStoreDefault"
          - $ref: "#/components/schemas/ModITrustStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
        audience:
          maxLength: 4000
          type: "string"
        contemporaneita:
          $ref: "#/components/schemas/ErogazioneModIRestRichiestaSicurezzaMessaggioContemporaneita"
        audit:
          $ref: "#/components/schemas/BaseModIRichiestaInformazioniUtenteAudit"
    ErogazioneModIRestRichiestaSicurezzaMessaggioContemporaneita:
      required:
      - "audience"
      - "identificativo"
      type: "object"
      properties:
        identificativo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestTokenChoiseEnum"
        audience:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestSameDifferentEnum"
        audience_atteso:
          maxLength: 4000
          type: "string"
    ErogazioneModIRestRisposta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/ErogazioneModIRestRispostaSicurezzaMessaggio"
    ErogazioneModIRestRispostaSicurezzaMessaggio:
      required:
      - "keystore"
      type: "object"
      properties:
        algoritmo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestAlgoritmoFirma"
        header_http_firmare:
          type: "array"
          items:
            maxLength: 200
            type: "string"
        riferimento_x509:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestRiferimentoX509Risposta"
        riferimento_x509_risposta:
          maxItems: 3
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/ModISicurezzaMessaggioRestRiferimentoX509"
        certificate_chain:
          type: "boolean"
        url:
          maxLength: 4000
          type: "string"
        keystore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModIKeyStoreDefault"
              ridefinito: "#/components/schemas/ModIKeyStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModIKeyStoreDefault"
          - $ref: "#/components/schemas/ModIKeyStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
          default: 300
        claims:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
        contemporaneita:
          $ref: "#/components/schemas/ErogazioneModIRestRispostaSicurezzaMessaggioContemporaneita"
    ErogazioneModIRestRispostaSicurezzaMessaggioContemporaneita:
      required:
      - "identificativo"
      type: "object"
      properties:
        identificativo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestSameDifferentEnum"
        usa_come_id_messaggio:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestTokenChoiseEnum"
        claims_bearer:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
        claims_agid:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
    FruizioneModI:
      required:
      - "modi"
      type: "object"
      properties:
        modi:
          discriminator:
            propertyName: "protocollo"
            mapping:
              oauth: "#/components/schemas/FruizioneModIOAuth"
              soap: "#/components/schemas/FruizioneModISoap"
              rest: "#/components/schemas/FruizioneModIRest"
          oneOf:
          - $ref: "#/components/schemas/FruizioneModIOAuth"
          - $ref: "#/components/schemas/FruizioneModISoap"
          - $ref: "#/components/schemas/FruizioneModIRest"
    BaseFruizioneModIOAuth:
      type: "object"
      properties:
        identificativo:
          maxLength: 2800
          type: "string"
        kid:
          maxLength: 4000
          type: "string"
    FruizioneModIOAuth:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseFruizioneModIOAuth"
      - required:
        - "protocollo"
        type: "object"
        properties:
          protocollo:
            $ref: "#/components/schemas/TipoConfigurazioneFruizioneEnum"
          keystore:
            type: "object"
            discriminator:
              propertyName: "modalita"
              mapping:
                default: "#/components/schemas/ModIKeyStoreDefault"
                ridefinito: "#/components/schemas/ModIKeyStoreRidefinito"
            oneOf:
            - $ref: "#/components/schemas/ModIKeyStoreDefault"
            - $ref: "#/components/schemas/ModIKeyStoreRidefinito"
    FruizioneModISoap:
      required:
      - "protocollo"
      - "richiesta"
      - "risposta"
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/TipoConfigurazioneFruizioneEnum"
        richiesta:
          $ref: "#/components/schemas/FruizioneModISoapRichiesta"
        risposta:
          $ref: "#/components/schemas/FruizioneModISoapRisposta"
    FruizioneModISoapRichiesta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/FruizioneModISoapRichiestaSicurezzaMessaggio"
        oauth:
          $ref: "#/components/schemas/BaseFruizioneModIOAuth"
    FruizioneModISoapRichiestaSicurezzaMessaggio:
      type: "object"
      properties:
        algoritmo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioSoapAlgoritmoFirma"
        forma_canonica_xml:
          $ref: "#/components/schemas/ModISicurezzaMessaggioSoapFormaCanonicaXml"
        header_soap_firmare:
          type: "array"
          items:
            maxLength: 200
            type: "string"
        riferimento_x509:
          $ref: "#/components/schemas/ModISicurezzaMessaggioSoapRiferimentoX509"
        certificate_chain:
          type: "boolean"
        keystore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModIKeyStoreDefault"
              ridefinito: "#/components/schemas/ModIKeyStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModIKeyStoreDefault"
          - $ref: "#/components/schemas/ModIKeyStoreRidefinito"
        includi_signature_token:
          type: "boolean"
        time_to_live:
          type: "integer"
          format: "int32"
          default: 300
        wsa_to:
          maxLength: 4000
          type: "string"
        informazioni_utente_codice_ente:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
        informazioni_utente_userid:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
        informazioni_utente_indirizzo_ip:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
        audit:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioniUtenteAudit"
    FruizioneModISoapRisposta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/FruizioneModISoapRispostaSicurezzaMessaggio"
    FruizioneModISoapRispostaSicurezzaMessaggio:
      required:
      - "truststore"
      type: "object"
      properties:
        truststore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModITrustStoreDefault"
              ridefinito: "#/components/schemas/ModITrustStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModITrustStoreDefault"
          - $ref: "#/components/schemas/ModITrustStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
        verifica_wsa_to:
          type: "boolean"
          default: true
        audience_atteso:
          maxLength: 4000
          type: "string"
    FruizioneModIRest:
      required:
      - "protocollo"
      - "richiesta"
      - "risposta"
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/TipoConfigurazioneFruizioneEnum"
        richiesta:
          $ref: "#/components/schemas/FruizioneModIRestRichiesta"
        risposta:
          $ref: "#/components/schemas/FruizioneModIRestRisposta"
    FruizioneModIRestRichiesta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/FruizioneModIRestRichiestaSicurezzaMessaggio"
        oauth:
          $ref: "#/components/schemas/BaseFruizioneModIOAuth"
    FruizioneModIRestRichiestaSicurezzaMessaggio:
      required:
      - "riferimento_x509"
      type: "object"
      properties:
        algoritmo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestAlgoritmoFirma"
        header_http_firmare:
          type: "array"
          items:
            maxLength: 200
            type: "string"
        riferimento_x509:
          maxItems: 3
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/ModISicurezzaMessaggioRestRiferimentoX509"
        certificate_chain:
          type: "boolean"
        keystore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModIKeyStoreDefault"
              ridefinito: "#/components/schemas/ModIKeyStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModIKeyStoreDefault"
          - $ref: "#/components/schemas/ModIKeyStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
          default: 300
        audience:
          maxLength: 4000
          type: "string"
        informazioni_utente_codice_ente:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
        informazioni_utente_userid:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
        informazioni_utente_indirizzo_ip:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
        audit:
          $ref: "#/components/schemas/FruizioneModIRichiestaInformazioniUtenteAudit"
        claims:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
        contemporaneita:
          $ref: "#/components/schemas/FruizioneModIRestRichiestaSicurezzaMessaggioContemporaneita"
    FruizioneModIRestRichiestaSicurezzaMessaggioContemporaneita:
      required:
      - "audience"
      - "identificativo"
      type: "object"
      properties:
        identificativo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestSameDifferentEnum"
        usa_come_id_messaggio:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestTokenChoiseEnum"
        audience:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestSameDifferentEnum"
        audience_atteso:
          maxLength: 4000
          type: "string"
        claims_bearer:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
        claims_agid:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
    FruizioneModIRestRisposta:
      required:
      - "sicurezza_messaggio"
      type: "object"
      properties:
        sicurezza_messaggio:
          $ref: "#/components/schemas/FruizioneModIRestRispostaSicurezzaMessaggio"
    FruizioneModIRestRispostaSicurezzaMessaggio:
      required:
      - "truststore"
      type: "object"
      properties:
        riferimento_x509:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestRiferimentoX509Risposta"
        riferimento_x509_risposta:
          maxItems: 3
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/ModISicurezzaMessaggioRestRiferimentoX509"
        truststore:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModITrustStoreDefault"
              ridefinito: "#/components/schemas/ModITrustStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModITrustStoreDefault"
          - $ref: "#/components/schemas/ModITrustStoreRidefinito"
        truststore_ssl:
          type: "object"
          discriminator:
            propertyName: "modalita"
            mapping:
              default: "#/components/schemas/ModITrustStoreDefault"
              ridefinito: "#/components/schemas/ModITrustStoreRidefinito"
          oneOf:
          - $ref: "#/components/schemas/ModITrustStoreDefault"
          - $ref: "#/components/schemas/ModITrustStoreRidefinito"
        time_to_live:
          type: "integer"
          format: "int32"
        verifica_audience:
          type: "boolean"
          default: true
        audience_atteso:
          maxLength: 4000
          type: "string"
        contemporaneita:
          $ref: "#/components/schemas/FruizioneModIRestRispostaSicurezzaMessaggioContemporaneita"
    FruizioneModIRestRispostaSicurezzaMessaggioContemporaneita:
      required:
      - "audience"
      - "identificativo"
      type: "object"
      properties:
        identificativo:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestTokenChoiseEnum"
        audience:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestSameDifferentEnum"
        audience_atteso:
          maxLength: 4000
          type: "string"
    FruizioneModIRichiestaInformazioneUtente:
      required:
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
        valore:
          maxLength: 4000
          type: "string"
    BaseModIRichiestaInformazioniUtenteAudit:
      type: "object"
      properties:
        audience:
          $ref: "#/components/schemas/ModISicurezzaMessaggioRestSameDifferentEnum"
        audience_atteso:
          maxLength: 4000
          type: "string"
    FruizioneModIRichiestaInformazioniUtenteAudit:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseModIRichiestaInformazioniUtenteAudit"
      - type: "object"
        properties:
          informazioni:
            type: "array"
            items:
              $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtenteAudit"
    FruizioneModIRichiestaInformazioneUtenteAudit:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/FruizioneModIRichiestaInformazioneUtente"
      - required:
        - "nome"
        type: "object"
        properties:
          nome:
            maxLength: 255
            type: "string"
    ModIApplicativoEsterno:
      required:
      - "dominio"
      type: "object"
      properties:
        dominio:
          $ref: "#/components/schemas/DominioEnum"
        reply_audience:
          maxLength: 4000
          type: "string"
    ModIApplicativoInterno:
      required:
      - "dominio"
      type: "object"
      properties:
        dominio:
          $ref: "#/components/schemas/DominioEnum"
        sicurezza_messaggio:
          $ref: "#/components/schemas/ModIApplicativoSicurezzaMessaggio"
        token:
          $ref: "#/components/schemas/ModIApplicativoAuthenticationToken"
    ModIApplicativoSicurezzaMessaggio:
      required:
      - "keystore"
      type: "object"
      properties:
        keystore:
          type: "object"
          discriminator:
            propertyName: "tipologia"
            mapping:
              archivio: "#/components/schemas/ModIKeyStoreArchive"
              filesystem: "#/components/schemas/ModIKeyStoreFileApplicativo"
              hsm: "#/components/schemas/ModIKeyStoreHSMApplicativo"
          oneOf:
          - $ref: "#/components/schemas/ModIKeyStoreArchive"
          - $ref: "#/components/schemas/ModIKeyStoreFileApplicativo"
          - $ref: "#/components/schemas/ModIKeyStoreHSMApplicativo"
        reply_audience:
          maxLength: 4000
          type: "string"
        url_x5u:
          maxLength: 4000
          type: "string"
    ModIApplicativoAuthenticationToken:
      required:
      - "identificativo"
      type: "object"
      properties:
        token_policy:
          maxLength: 255
          type: "string"
        identificativo:
          maxLength: 2800
          type: "string"
        kid:
          maxLength: 4000
          type: "string"
    ModITrustStoreDefault:
      required:
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
    ModITrustStoreRidefinito:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ModITrustStore"
      - required:
        - "modalita"
        type: "object"
        properties:
          modalita:
            $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
    ModITrustStore:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseTrustStore"
      - required:
        - "truststore_tipo"
        type: "object"
        properties:
          truststore_tipo:
            $ref: "#/components/schemas/ModITruststoreEnum"
          pcks11_tipo:
            maxLength: 255
            type: "string"
    ModIKeyStoreDefault:
      required:
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
    ModIKeyStoreRidefinito:
      required:
      - "dati_keystore"
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
        dati_keystore:
          type: "object"
          discriminator:
            propertyName: "tipologia"
            mapping:
              archivio: "#/components/schemas/ModIKeyStoreArchive"
              filesystem: "#/components/schemas/ModIKeyStoreFile"
              hsm: "#/components/schemas/ModIKeyStoreHSM"
          oneOf:
          - $ref: "#/components/schemas/ModIKeyStoreArchive"
          - $ref: "#/components/schemas/ModIKeyStoreFile"
          - $ref: "#/components/schemas/ModIKeyStoreHSM"
    ModIKeyStoreFile:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseKeyStoreFile"
      - required:
        - "keystore_tipo"
        - "tipologia"
        type: "object"
        properties:
          tipologia:
            $ref: "#/components/schemas/ModIKeystoreTipologiaEnum"
          keystore_tipo:
            $ref: "#/components/schemas/ModIKeystoreEnum"
    ModIKeyStoreFileApplicativo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ModIKeyStoreFile"
      - type: "object"
        properties:
          keystore_certificato:
            type: "string"
            format: "byte"
    ModIKeyStoreArchive:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/BaseKeyStoreArchive"
      - required:
        - "keystore_tipo"
        - "tipologia"
        type: "object"
        properties:
          tipologia:
            $ref: "#/components/schemas/ModIKeystoreTipologiaEnum"
          keystore_tipo:
            $ref: "#/components/schemas/ModIKeystoreEnum"
    ModIKeyStoreHSM:
      required:
      - "key_alias"
      - "pcks11_tipo"
      - "tipologia"
      type: "object"
      properties:
        tipologia:
          $ref: "#/components/schemas/ModIKeystoreTipologiaEnum"
        pcks11_tipo:
          maxLength: 255
          type: "string"
        key_alias:
          maxLength: 255
          type: "string"
          description: "alias della chiave privata"
          example: "pwd"
    ModIKeyStoreHSMApplicativo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ModIKeyStoreHSM"
      - type: "object"
        properties:
          keystore_certificato:
            type: "string"
            format: "byte"
    GruppoNome:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          maxLength: 255
          type: "string"
    GruppoAzioni:
      required:
      - "azioni"
      type: "object"
      properties:
        azioni:
          type: "array"
          example:
          - "az1"
          - "az2"
          - "az3"
          items:
            $ref: "#/components/schemas/NCName"
    GruppoBase:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/GruppoNome"
      - $ref: "#/components/schemas/GruppoAzioni"
    Gruppo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/GruppoBase"
      - type: "object"
        properties:
          configurazione:
            type: "object"
            discriminator:
              propertyName: "modalita"
              mapping:
                eredita: "#/components/schemas/GruppoEreditaConfigurazione"
                nuova: "#/components/schemas/GruppoNuovaConfigurazione"
            oneOf:
            - $ref: "#/components/schemas/GruppoEreditaConfigurazione"
            - $ref: "#/components/schemas/GruppoNuovaConfigurazione"
    GruppoEreditaConfigurazione:
      required:
      - "modalita"
      - "nome"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/ModalitaConfigurazioneGruppoEnum"
        nome:
          maxLength: 255
          type: "string"
    GruppoNuovaConfigurazione:
      required:
      - "autenticazione"
      - "modalita"
      type: "object"
      properties:
        modalita:
          $ref: "#/components/schemas/ModalitaConfigurazioneGruppoEnum"
        autenticazione:
          type: "object"
          discriminator:
            propertyName: "tipo"
            mapping:
              disabilitato: "#/components/schemas/APIImplAutenticazioneDisabilitata"
              http-basic: "#/components/schemas/APIImplAutenticazioneBasic"
              https: "#/components/schemas/APIImplAutenticazioneHttps"
              principal: "#/components/schemas/APIImplAutenticazionePrincipal"
              api-key: "#/components/schemas/APIImplAutenticazioneApiKey"
          oneOf:
          - $ref: "#/components/schemas/APIImplAutenticazioneDisabilitata"
          - $ref: "#/components/schemas/APIImplAutenticazioneBasic"
          - $ref: "#/components/schemas/APIImplAutenticazioneHttps"
          - $ref: "#/components/schemas/APIImplAutenticazionePrincipal"
          - $ref: "#/components/schemas/APIImplAutenticazioneApiKey"
    GruppoItem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/GruppoBase"
      - required:
        - "predefinito"
        type: "object"
        properties:
          predefinito:
            type: "boolean"
    ListaGruppi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/GruppoItem"
    GestioneCorsAccessControl:
      required:
      - "all_allow_origins"
      type: "object"
      properties:
        all_allow_origins:
          type: "boolean"
          default: true
        allow_origins:
          type: "array"
          items:
            maxLength: 255
            type: "string"
        all_allow_headers:
          type: "boolean"
          default: false
        allow_headers:
          type: "array"
          items:
            maxLength: 255
            type: "string"
        all_allow_methods:
          type: "boolean"
          default: false
        allow_methods:
          type: "array"
          items:
            $ref: "#/components/schemas/HttpMethodEnum"
        allow_credentials:
          type: "boolean"
          default: false
        expose_headers:
          type: "array"
          items:
            maxLength: 255
            type: "string"
        max_age:
          type: "boolean"
          default: false
        max_age_seconds:
          type: "integer"
          format: "int32"
    GestioneCors:
      required:
      - "ridefinito"
      type: "object"
      properties:
        ridefinito:
          type: "boolean"
          default: false
        tipo:
          $ref: "#/components/schemas/TipoGestioneCorsEnum"
        access_control:
          $ref: "#/components/schemas/GestioneCorsAccessControl"
    ApiImplStato:
      required:
      - "abilitato"
      type: "object"
      properties:
        abilitato:
          type: "boolean"
    ApiImplConfigurazioneStato:
      type: "object"
      properties:
        ridefinito:
          type: "boolean"
          description: "funzionalità non supportata al momento, indicare sempre 'true'."
          default: true
    ControlloAccessiGestioneToken:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          abilitato:
            type: "boolean"
            description: "indica se la gestione del token è abilitata o meno"
          policy:
            maxLength: 255
            type: "string"
            description: "identificativo della Policy da utilizzare per la gestione\
              \ del token"
          token_opzionale:
            type: "boolean"
            description: "indica se la presenza del token è obbligatoria o opzionale"
            default: false
          validazione_jwt:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          introspection:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          user_info:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          token_forward:
            type: "boolean"
            description: "indica se il forward del token, nelle modalità descritte\
              \ nella policy, è attivo o meno"
            default: true
    ControlloAccessiAutenticazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          autenticazione:
            type: "object"
            discriminator:
              propertyName: "tipo"
              mapping:
                disabilitato: "#/components/schemas/APIImplAutenticazioneDisabilitata"
                http-basic: "#/components/schemas/APIImplAutenticazioneBasic"
                https: "#/components/schemas/APIImplAutenticazioneHttps"
                principal: "#/components/schemas/APIImplAutenticazionePrincipal"
                api-key: "#/components/schemas/APIImplAutenticazioneApiKey"
                custom: "#/components/schemas/APIImplAutenticazioneCustom"
            oneOf:
            - $ref: "#/components/schemas/APIImplAutenticazioneDisabilitata"
            - $ref: "#/components/schemas/APIImplAutenticazioneBasic"
            - $ref: "#/components/schemas/APIImplAutenticazioneHttps"
            - $ref: "#/components/schemas/APIImplAutenticazionePrincipal"
            - $ref: "#/components/schemas/APIImplAutenticazioneApiKey"
            - $ref: "#/components/schemas/APIImplAutenticazioneCustom"
          token:
            $ref: "#/components/schemas/ControlloAccessiAutenticazioneToken"
    ControlloAccessiAutenticazioneToken:
      type: "object"
      properties:
        issuer:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'issuer"
          default: false
        client_id:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'identificativo dell'applicazione"
          default: false
        subject:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ il subject (identificativo utente codificato)"
          default: false
        username:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'utente (identificativo utente 'human-readable')"
          default: false
        email:
          type: "boolean"
          description: "indica se nel token deve essere obbligatoriamente presente\
            \ l'email dell'utente"
          default: false
    ControlloAccessiIdentificazioneAttributi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - required:
        - "abilitato"
        type: "object"
        properties:
          abilitato:
            type: "boolean"
            description: "indica se la gestione del token è abilitata o meno"
          attributeAuthority:
            type: "array"
            items:
              $ref: "#/components/schemas/ControlloAccessiAttributeAuthority"
    ControlloAccessiAttributeAuthority:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/AAName"
        attributi:
          type: "array"
          items:
            type: "string"
    ControlloAccessiAutorizzazioneView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          autorizzazione:
            type: "object"
            discriminator:
              propertyName: "tipo"
              mapping:
                disabilitato: "#/components/schemas/APIImplAutorizzazioneDisabilitata"
                abilitato: "#/components/schemas/APIImplAutorizzazioneAbilitata"
                xacml-Policy: "#/components/schemas/APIImplAutorizzazioneXACMLView"
                custom: "#/components/schemas/APIImplAutorizzazioneCustom"
            oneOf:
            - $ref: "#/components/schemas/APIImplAutorizzazioneDisabilitata"
            - $ref: "#/components/schemas/APIImplAutorizzazioneAbilitata"
            - $ref: "#/components/schemas/APIImplAutorizzazioneXACMLView"
            - $ref: "#/components/schemas/APIImplAutorizzazioneCustom"
    ControlloAccessiAutorizzazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          autorizzazione:
            type: "object"
            discriminator:
              propertyName: "tipo"
              mapping:
                disabilitato: "#/components/schemas/APIImplAutorizzazioneDisabilitata"
                abilitato: "#/components/schemas/APIImplAutorizzazioneAbilitata"
                xacml-Policy: "#/components/schemas/APIImplAutorizzazioneXACML"
                custom: "#/components/schemas/APIImplAutorizzazioneCustom"
            oneOf:
            - $ref: "#/components/schemas/APIImplAutorizzazioneDisabilitata"
            - $ref: "#/components/schemas/APIImplAutorizzazioneAbilitata"
            - $ref: "#/components/schemas/APIImplAutorizzazioneXACML"
            - $ref: "#/components/schemas/APIImplAutorizzazioneCustom"
    ControlloAccessiAutorizzazioneSoggetti:
      required:
      - "soggetti"
      type: "object"
      properties:
        soggetti:
          type: "array"
          example:
          - "Ente1"
          - "Ente2"
          - "Ente3"
          items:
            $ref: "#/components/schemas/SimpleName"
    ControlloAccessiAutorizzazioneSoggetto:
      required:
      - "soggetto"
      type: "object"
      properties:
        soggetto:
          $ref: "#/components/schemas/SimpleName"
    ControlloAccessiAutorizzazioneApplicativi:
      required:
      - "applicativi"
      type: "object"
      properties:
        applicativi:
          type: "array"
          example:
          - "Applicativo1"
          - "Applicativo2"
          - "Applicativo3"
          items:
            $ref: "#/components/schemas/NCName"
    ControlloAccessiErogazioneAutorizzazioneApplicativi:
      required:
      - "applicativi"
      type: "object"
      properties:
        applicativi:
          type: "array"
          items:
            $ref: "#/components/schemas/ControlloAccessiErogazioneAutorizzazioneApplicativo"
    ControlloAccessiAutorizzazioneApplicativo:
      required:
      - "applicativo"
      type: "object"
      properties:
        applicativo:
          $ref: "#/components/schemas/NCName"
    ControlloAccessiErogazioneAutorizzazioneApplicativo:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ControlloAccessiAutorizzazioneApplicativo"
      - type: "object"
        properties:
          soggetto:
            $ref: "#/components/schemas/SimpleName"
    ControlloAccessiAutorizzazioneRuoli:
      required:
      - "ruoli"
      type: "object"
      properties:
        ruoli:
          type: "array"
          example:
          - "Ruolo1"
          - "Ruolo2"
          - "Ruolo3"
          items:
            $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneRuolo:
      required:
      - "ruolo"
      type: "object"
      properties:
        ruolo:
          $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneScopes:
      required:
      - "scope"
      type: "object"
      properties:
        scope:
          type: "array"
          example:
          - "Scope1"
          - "Scope2"
          - "Scope3"
          items:
            $ref: "#/components/schemas/NCName"
    ControlloAccessiAutorizzazioneScope:
      required:
      - "scope"
      type: "object"
      properties:
        scope:
          $ref: "#/components/schemas/NCName"
    RateLimitingPolicyItem:
      required:
      - "nome"
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/NCName"
    ListaRateLimitingPolicy:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/RateLimitingPolicyItem"
    RateLimitingPolicyCriteri:
      required:
      - "identificazione"
      - "metrica"
      type: "object"
      properties:
        identificazione:
          $ref: "#/components/schemas/RateLimitingIdentificazionePolicyEnum"
        metrica:
          $ref: "#/components/schemas/RateLimitingCriteriMetricaEnum"
        intervallo:
          $ref: "#/components/schemas/RateLimitingCriteriIntervalloEnum"
        congestione:
          type: "boolean"
          example: false
          default: false
        degrado:
          type: "boolean"
          example: false
          default: false
    RateLimitingPolicyIdentificativo:
      required:
      - "identificazione"
      - "policy"
      type: "object"
      properties:
        identificazione:
          $ref: "#/components/schemas/RateLimitingIdentificazionePolicyEnum"
        policy:
          $ref: "#/components/schemas/NCName"
    RateLimitingPolicyBase:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - required:
        - "nome"
        - "stato"
        type: "object"
        properties:
          nome:
            maxLength: 255
            type: "string"
          stato:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          soglia_ridefinita:
            type: "boolean"
            default: false
          soglia_valore:
            type: "integer"
            format: "int32"
          soglia_dimensione_richiesta:
            type: "integer"
            format: "int32"
          soglia_dimensione_risposta:
            type: "integer"
            format: "int32"
    RateLimitingPolicyBaseConIdentificazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyBase"
      - type: "object"
        properties:
          configurazione:
            type: "object"
            discriminator:
              propertyName: "identificazione"
              mapping:
                criteri: "#/components/schemas/RateLimitingPolicyCriteri"
                policy: "#/components/schemas/RateLimitingPolicyIdentificativo"
            oneOf:
            - $ref: "#/components/schemas/RateLimitingPolicyCriteri"
            - $ref: "#/components/schemas/RateLimitingPolicyIdentificativo"
    RateLimitingPolicyErogazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyBaseConIdentificazione"
      - type: "object"
        properties:
          filtro:
            $ref: "#/components/schemas/RateLimitingPolicyFiltroErogazione"
          raggruppamento:
            $ref: "#/components/schemas/RateLimitingPolicyGroupBy"
    RateLimitingPolicyFruizione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyBaseConIdentificazione"
      - type: "object"
        properties:
          filtro:
            $ref: "#/components/schemas/RateLimitingPolicyFiltroFruizione"
          raggruppamento:
            $ref: "#/components/schemas/RateLimitingPolicyGroupBy"
    RateLimitingPolicyErogazioneUpdate:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyBase"
      - type: "object"
        properties:
          filtro:
            $ref: "#/components/schemas/RateLimitingPolicyFiltroErogazione"
          raggruppamento:
            $ref: "#/components/schemas/RateLimitingPolicyGroupBy"
    RateLimitingPolicyFruizioneUpdate:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyBase"
      - type: "object"
        properties:
          filtro:
            $ref: "#/components/schemas/RateLimitingPolicyFiltroFruizione"
          raggruppamento:
            $ref: "#/components/schemas/RateLimitingPolicyGroupBy"
    RateLimitingPolicyFiltro:
      type: "object"
      properties:
        azione:
          type: "array"
          items:
            $ref: "#/components/schemas/NCName"
        ruolo_richiedente:
          $ref: "#/components/schemas/NCName"
        applicativo_fruitore:
          $ref: "#/components/schemas/NCName"
        token_claims:
          type: "array"
          description: "Indicare i claims richiesti (nome=valore); è possibile elencare\
            \ differenti valori ammissibili separandoli con la virgola"
          items:
            maxLength: 200
            type: "string"
        chiave_tipo:
          $ref: "#/components/schemas/RateLimitingChiaveEnum"
        chiave_nome:
          maxLength: 255
          type: "string"
          description: "La semantica cambia in funzione del tipo:\n  * header-based:\
            \ nome dell'header\n  * url-based: espressione regolare da applicare alla\
            \ url di invocazione\n  * form-based: nome del parametro della url\n \
            \ * soap-action-based: in questa modalità questo parametro non viene utilizzato\n\
            \  * content-based: xpath o json path da applicare sul contenuto\n  *\
            \ indirizzo-ip: indirizzo ip del socket\n  * indirizzo-ip-forwarded: indirizzo\
            \ ip inoltrato via header http\n  * plugin-based: tipo del plugin"
        filtro_chiave_valore:
          maxLength: 255
          type: "string"
          description: "indica il valore che deve assumere la chiave"
    RateLimitingPolicyFiltroErogazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyFiltro"
      - type: "object"
        properties:
          soggetto_fruitore:
            $ref: "#/components/schemas/SimpleName"
    RateLimitingPolicyFiltroFruizione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyFiltro"
    RateLimitingPolicyGroupBy:
      type: "object"
      properties:
        azione:
          type: "boolean"
          default: false
        richiedente:
          type: "boolean"
          default: false
        token:
          type: "array"
          example:
          - "subject"
          - "issuer"
          items:
            $ref: "#/components/schemas/TokenClaimEnum"
        chiave_tipo:
          $ref: "#/components/schemas/RateLimitingChiaveEnum"
        chiave_nome:
          maxLength: 255
          type: "string"
          description: "La semantica cambia in funzione del tipo:\n  * header-based:\
            \ nome dell'header\n  * url-based: espressione regolare da applicare alla\
            \ url di invocazione\n  * form-based: nome del parametro della url\n \
            \ * soap-action-based: in questa modalità questo parametro non viene utilizzato\n\
            \  * content-based: xpath o json path da applicare sul contenuto\n  *\
            \ indirizzo-ip: indirizzo ip del socket\n  * indirizzo-ip-forwarded: indirizzo\
            \ ip inoltrato via header http\n  * plugin-based: tipo del plugin"
    RateLimitingPolicyErogazioneView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyErogazione"
      - required:
        - "descrizione"
        type: "object"
        properties:
          descrizione:
            type: "string"
    RateLimitingPolicyFruizioneView:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/RateLimitingPolicyFruizione"
      - required:
        - "descrizione"
        type: "object"
        properties:
          descrizione:
            type: "string"
    Validazione:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - required:
        - "stato"
        - "tipo"
        type: "object"
        properties:
          stato:
            $ref: "#/components/schemas/StatoFunzionalitaConWarningEnum"
          tipo:
            $ref: "#/components/schemas/TipoValidazioneEnum"
          mtom:
            type: "boolean"
            example: false
            default: false
    CachingRisposta:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - required:
        - "stato"
        type: "object"
        properties:
          stato:
            $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
          abilitato:
            type: "boolean"
          cache_timeout_seconds:
            type: "integer"
            format: "int32"
          max_response_size:
            type: "boolean"
          max_response_size_kb:
            type: "integer"
            format: "int64"
          hash_request_uri:
            type: "boolean"
            default: true
          hash_all_query_parameters:
            type: "boolean"
            default: true
          hash_query_paramaters:
            type: "array"
            items:
              maxLength: 255
              type: "string"
          hash_headers:
            type: "array"
            items:
              maxLength: 255
              type: "string"
          hash_payload:
            type: "boolean"
            default: true
          control_no_cache:
            type: "boolean"
            default: true
          control_no_store:
            type: "boolean"
            default: true
          control_max_age:
            type: "boolean"
            default: true
          regole:
            type: "array"
            items:
              $ref: "#/components/schemas/CachingRispostaRegola"
    CachingRispostaRegola:
      type: "object"
      properties:
        return-code-min:
          $ref: "#/components/schemas/HttpStatusCode"
        return-code-max:
          $ref: "#/components/schemas/HttpStatusCode"
        fault:
          type: "boolean"
          default: false
        cache_timeout_seconds:
          type: "integer"
          format: "int32"
    CorrelazioneApplicativaRichiestaItem:
      required:
      - "elemento"
      - "identificazione_tipo"
      type: "object"
      properties:
        elemento:
          maxLength: 255
          type: "string"
        identificazione_tipo:
          $ref: "#/components/schemas/CorrelazioneApplicativaRichiestaEnum"
    CorrelazioneApplicativaRispostaItem:
      required:
      - "elemento"
      - "identificazione_tipo"
      type: "object"
      properties:
        elemento:
          maxLength: 255
          type: "string"
        identificazione_tipo:
          $ref: "#/components/schemas/CorrelazioneApplicativaRispostaEnum"
    ListaCorrelazioneApplicativaRichiesta:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/CorrelazioneApplicativaRichiestaItem"
    ListaCorrelazioneApplicativaRisposta:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/Lista"
      - required:
        - "items"
        type: "object"
        properties:
          items:
            type: "array"
            items:
              $ref: "#/components/schemas/CorrelazioneApplicativaRispostaItem"
    CorrelazioneApplicativaBase:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - type: "object"
        properties:
          elemento:
            maxLength: 255
            type: "string"
          generazione_errore_identificazione_fallita:
            type: "boolean"
            default: true
    CorrelazioneApplicativaRichiesta:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/CorrelazioneApplicativaBase"
      - required:
        - "identificazione_tipo"
        type: "object"
        properties:
          identificazione_tipo:
            $ref: "#/components/schemas/CorrelazioneApplicativaRichiestaEnum"
          identificazione:
            type: "string"
            description: "La semantica cambia in funzione del tipo:\n  * header-based:\
              \ nome dell'header\n  * url-based: espressione regolare da applicare\
              \ alla url di invocazione\n  * content-based: xpath o json path da applicare\
              \ sul contenuto\n  * input-based: questo field non deve essere valorizzato\
              \ poichè l'informazione applicativa viene estratta dagli header di integrazione\n\
              \  * template: template con parti dinamiche risolte a runtime da GovWay\n\
              \  * freemarker-template: freemarker template\n  * velocity-template:\
              \ velocity template\n  * disabilitato:  questo field non deve essere\
              \ valorizzato poichè la funzionalità di estrazione è disabilitata"
    CorrelazioneApplicativaRisposta:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/CorrelazioneApplicativaBase"
      - required:
        - "identificazione_tipo"
        type: "object"
        properties:
          identificazione_tipo:
            $ref: "#/components/schemas/CorrelazioneApplicativaRispostaEnum"
          identificazione:
            type: "string"
            description: "La semantica cambia in funzione del tipo:\n  * header-based:\
              \ nome dell'header\n  * content-based: xpath o json path da applicare\
              \ sul contenuto\n  * input-based: questo field non deve essere valorizzato\
              \ poichè l'informazione applicativa viene estratta dagli header di integrazione\n\
              \  * template: template con parti dinamiche risolte a runtime da GovWay\n\
              \  * freemarker-template: freemarker template\n  * velocity-template:\
              \ velocity template\n  * disabilitato:  questo field non deve essere\
              \ valorizzato poichè la funzionalità di estrazione è disabilitata"
    RegistrazioneMessaggi:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ApiImplConfigurazioneStato"
      - required:
        - "stato"
        type: "object"
        properties:
          stato:
            $ref: "#/components/schemas/StatoDefaultRidefinitoEnum"
          richiesta:
            $ref: "#/components/schemas/RegistrazioneMessaggiConfigurazione"
          risposta:
            $ref: "#/components/schemas/RegistrazioneMessaggiConfigurazione"
    RegistrazioneMessaggiConfigurazione:
      required:
      - "abilitato"
      type: "object"
      properties:
        abilitato:
          type: "boolean"
        ingresso:
          $ref: "#/components/schemas/RegistrazioneMessaggiConfigurazioneRegola"
        uscita:
          $ref: "#/components/schemas/RegistrazioneMessaggiConfigurazioneRegola"
    RegistrazioneMessaggiConfigurazioneRegola:
      required:
      - "headers"
      - "payload"
      type: "object"
      properties:
        headers:
          type: "boolean"
        payload:
          type: "boolean"
        payload_parsing:
          type: "boolean"
        body:
          type: "boolean"
        attachments:
          type: "boolean"
    Proprieta:
      required:
      - "nome"
      - "valore"
      type: "object"
      properties:
        nome:
          maxLength: 255
          type: "string"
        valore:
          maxLength: 255
          type: "string"
    ElencoProprieta:
      type: "object"
      properties:
        proprieta:
          type: "array"
          items:
            $ref: "#/components/schemas/Proprieta"
    Proprieta4000:
      required:
      - "nome"
      - "valore"
      type: "object"
      properties:
        nome:
          maxLength: 255
          type: "string"
        valore:
          maxLength: 4000
          type: "string"
    AAName:
      maxLength: 255
      pattern: "^[_A-Za-z][\\-_A-Za-z0-9]*$"
      type: "string"
      description: "Può iniziare solo con un carattere [A-Za-z] o il simbolo '_' e\
        \ dev'essere formato solo da caratteri, cifre, '_' e '-'"
    FormatoSoapEnum:
      type: "string"
      default: "Wsdl1.1"
      enum:
      - "Wsdl1.1"
    FormatoRestEnum:
      type: "string"
      default: "OpenApi3.0"
      enum:
      - "Swagger2.0"
      - "OpenApi3.0"
    TipoApiEnum:
      type: "string"
      example: "rest"
      enum:
      - "soap"
      - "rest"
    TipoConfigurazioneFruizioneEnum:
      type: "string"
      example: "rest"
      enum:
      - "oauth"
      - "soap"
      - "rest"
    StatoApiEnum:
      type: "string"
      enum:
      - "ok"
      - "warn"
      - "error"
    DominioEnum:
      type: "string"
      example: "esterno"
      enum:
      - "interno"
      - "esterno"
    ModalitaAccessoEnum:
      type: "string"
      example: "http-basic"
      enum:
      - "http-basic"
      - "https"
      - "principal"
      - "api-key"
      - "token"
    ContestoEnum:
      type: "string"
      example: "qualsiasi"
      default: "qualsiasi"
      enum:
      - "qualsiasi"
      - "erogazione"
      - "fruizione"
    FonteEnum:
      type: "string"
      example: "qualsiasi"
      default: "qualsiasi"
      enum:
      - "qualsiasi"
      - "registro"
      - "esterna"
    RuoloAllegatoAPI:
      type: "string"
      example: "specificaSemiFormale"
      default: "allegato"
      enum:
      - "allegato"
      - "specificaSemiFormale"
    RuoloAllegatoAPIImpl:
      type: "string"
      example: "specificaSemiFormale"
      default: "allegato"
      enum:
      - "allegato"
      - "specificaSemiFormale"
      - "specificaSicurezza"
      - "specificaLivelloServizio"
    TipoSpecificaSemiformaleEnum:
      type: "string"
      example: "XML"
      enum:
      - "UML"
      - "HTML"
      - "XSD"
      - "XML"
      - "JSON"
      - "YAML"
      - "Linguaggio Naturale"
    TipoSpecificaSicurezzaEnum:
      type: "string"
      example: "XACML-Policy"
      enum:
      - "WS-Policy"
      - "XACML-Policy"
      - "Linguaggio Naturale"
    TipoSpecificaLivelloServizioEnum:
      type: "string"
      example: "WSLA"
      enum:
      - "WS-Agreement"
      - "WSLA"
    SslTipologiaEnum:
      type: "string"
      example: "TLSv1.2"
      default: "TLSv1.3"
      enum:
      - "SSLv2Hello"
      - "SSLv3"
      - "TLSv1"
      - "TLSv1.1"
      - "TLSv1.2"
      - "TLSv1.3"
    KeystoreEnum:
      type: "string"
      example: "jks"
      enum:
      - "jks"
      - "pkcs12"
      - "pkcs11"
    TipoAutenticazioneEnum:
      type: "string"
      example: "http-basic"
      enum:
      - "disabilitato"
      - "http-basic"
      - "https"
      - "principal"
      - "api-key"
      - "custom"
    TipoAutenticazioneHttps:
      type: "string"
      example: "certificato"
      enum:
      - "certificato"
      - "configurazione-manuale"
    TipoAutenticazionePrincipal:
      type: "string"
      example: "container"
      enum:
      - "container"
      - "header-based"
      - "form-based"
      - "url-based"
      - "ip-address"
      - "ip-address-forwarded-for"
      - "token"
    TipoAutenticazionePrincipalToken:
      type: "string"
      example: "clientId"
      enum:
      - "subject"
      - "clientId"
      - "username"
      - "eMail"
      - "custom"
    TipoKeystore:
      type: "string"
      example: "JKS"
      enum:
      - "JKS"
      - "PKCS12"
      - "CER"
    TipoAutorizzazioneEnum:
      type: "string"
      example: "abilitato"
      enum:
      - "disabilitato"
      - "abilitato"
      - "xacml-Policy"
      - "custom"
    AllAnyEnum:
      type: "string"
      example: "all"
      default: "all"
      enum:
      - "all"
      - "any"
    ModalitaIdentificazioneAzioneEnum:
      type: "string"
      example: "interface-based"
      enum:
      - "content-based"
      - "header-based"
      - "input-based"
      - "interface-based"
      - "soap-action-based"
      - "url-based"
      - "protocol-based"
      - "static"
    TipoGestioneCorsEnum:
      type: "string"
      example: "gateway"
      enum:
      - "disabilitato"
      - "gateway"
      - "applicativo"
    ModalitaConfigurazioneGruppoEnum:
      type: "string"
      example: "eredita"
      enum:
      - "eredita"
      - "nuova"
    StatoFunzionalitaConWarningEnum:
      type: "string"
      example: "abilitato"
      enum:
      - "abilitato"
      - "disabilitato"
      - "warningOnly"
    TipoValidazioneEnum:
      type: "string"
      example: "interface"
      enum:
      - "interface"
      - "xsd"
    StatoDefaultRidefinitoEnum:
      type: "string"
      example: "ridefinito"
      enum:
      - "default"
      - "ridefinito"
    RateLimitingIdentificazionePolicyEnum:
      type: "string"
      example: "criteri"
      enum:
      - "criteri"
      - "policy"
    RateLimitingCriteriMetricaEnum:
      type: "string"
      example: "numero-richieste"
      enum:
      - "numero-richieste"
      - "numero-richieste-simultanee"
      - "dimensione-massima"
      - "occupazione-banda"
      - "tempo-medio-risposta"
      - "tempo-complessivo-risposta"
      - "numero-richieste-ok"
      - "numero-richieste-fallite"
      - "numero-fault-applicativi"
      - "numero-richieste-fallite-o-fault-applicativi"
    RateLimitingCriteriIntervalloEnum:
      type: "string"
      example: "giornaliero"
      enum:
      - "minuti"
      - "orario"
      - "giornaliero"
    RateLimitingChiaveEnum:
      type: "string"
      example: "content-based"
      enum:
      - "content-based"
      - "header-based"
      - "soap-action-based"
      - "url-based"
      - "form-based"
      - "indirizzo-ip"
      - "indirizzo-ip-forwarded"
      - "plugin-based"
    CorrelazioneApplicativaRichiestaEnum:
      type: "string"
      example: "content-based"
      enum:
      - "content-based"
      - "header-based"
      - "url-based"
      - "input-based"
      - "template"
      - "freemarker-template"
      - "velocity-template"
      - "disabilitato"
    CorrelazioneApplicativaRispostaEnum:
      type: "string"
      example: "content-based"
      enum:
      - "content-based"
      - "header-based"
      - "input-based"
      - "template"
      - "freemarker-template"
      - "velocity-template"
      - "disabilitato"
    ConfigurazioneCanaleEnum:
      type: "string"
      enum:
      - "default"
      - "ridefinito"
    CanaleEnum:
      type: "string"
      enum:
      - "default"
      - "api"
      - "implementazione-api"
    ConnettoreEnum:
      type: "string"
      enum:
      - "http"
      - "file"
      - "jms"
      - "null"
      - "echo"
      - "plugin"
      - "applicativo-server"
      - "message-box"
    ConnettoreJmsTipoEnum:
      type: "string"
      example: "queue"
      enum:
      - "queue"
      - "topic"
    ConnettoreJmsSendAsEnum:
      type: "string"
      example: "text"
      enum:
      - "text"
      - "bytes"
    ModISicurezzaCanaleEnum:
      type: "string"
      enum:
      - "auth01"
      - "auth02"
    ModISicurezzaMessaggioEnum:
      type: "string"
      enum:
      - "disabilitato"
      - "auth01"
      - "auth02"
      - "integrity01-auth01"
      - "integrity01-auth02"
      - "integrity02-auth01"
      - "integrity02-auth02"
    ModISicurezzaMessaggioGenerazioneTokenEnum:
      type: "string"
      enum:
      - "locale"
      - "pdnd"
      - "oauth"
    ModISicurezzaMessaggioRestHeaderEnum:
      type: "string"
      enum:
      - "agid"
      - "bearer"
      - "agid+bearer-request"
      - "agid+bearer"
      - "custom"
      - "custom+bearer-request"
      - "custom+bearer"
    ModISicurezzaMessaggioPatternAuditEnum:
      type: "string"
      enum:
      - "audit-rest01"
      - "audit-rest02"
      - "audit-legacy"
    ModISicurezzaMessaggioRestTokenChoiseEnum:
      type: "string"
      default: "agid"
      enum:
      - "agid"
      - "bearer"
    ModISicurezzaMessaggioRestSameDifferentEnum:
      type: "string"
      default: "same"
      enum:
      - "same"
      - "different"
    ModISicurezzaMessaggioApplicabilitaEnum:
      type: "string"
      default: "qualsiasi"
      enum:
      - "richiesta"
      - "risposta"
      - "qualsiasi"
      - "custom"
    ModISicurezzaMessaggioApplicabilitaCustomEnum:
      type: "string"
      default: "abilitato"
      enum:
      - "abilitato"
      - "disabilitato"
      - "custom"
    ModIPatternInterazioneEnum:
      type: "string"
      enum:
      - "crud"
      - "bloccante"
      - "non-bloccante"
    ModIPatternInterazioneTipoEnum:
      type: "string"
      enum:
      - "push"
      - "pull"
    ModIPatternInterazioneFunzioneEnum:
      type: "string"
      enum:
      - "richiesta"
      - "risposta"
    ModISicurezzaMessaggioOperazioneEnum:
      type: "string"
      default: "api"
      enum:
      - "api"
      - "ridefinito"
    ModITruststoreEnum:
      type: "string"
      example: "jks"
      enum:
      - "jks"
      - "pkcs11"
    ModIKeystoreEnum:
      type: "string"
      example: "jks"
      enum:
      - "jks"
      - "pkcs12"
    ModIKeystoreTipologiaEnum:
      type: "string"
      example: "filesystem"
      enum:
      - "archivio"
      - "filesystem"
      - "hsm"
    ModISicurezzaMessaggioSoapAlgoritmoFirma:
      type: "string"
      default: "RSA-SHA-256"
      enum:
      - "DSA-SHA-256"
      - "ECDSA-SHA-256"
      - "ECDSA-SHA-384"
      - "ECDSA-SHA-512"
      - "RSA-SHA-256"
      - "RSA-SHA-384"
      - "RSA-SHA-512"
    ModISicurezzaMessaggioSoapFormaCanonicaXml:
      type: "string"
      default: "exclusive-canonical-xml-10"
      enum:
      - "canonical-xml-10"
      - "canonical-xml-11"
      - "exclusive-canonical-xml-10"
    ModISicurezzaMessaggioSoapRiferimentoX509:
      type: "string"
      default: "binary-security-token"
      enum:
      - "binary-security-token"
      - "issuer-serial-security-token-reference"
      - "ski-key-identifier"
      - "thumbprint-key-identifier"
      - "x509-key-identifier"
    ModISicurezzaMessaggioRestAlgoritmoFirma:
      type: "string"
      default: "RS256"
      enum:
      - "ES256"
      - "ES384"
      - "ES512"
      - "RS256"
      - "RS384"
      - "RS512"
    ModISicurezzaMessaggioRestRiferimentoX509:
      type: "string"
      default: "x5c"
      enum:
      - "x5c"
      - "x5t#256"
      - "x5u"
    ModISicurezzaMessaggioRestRiferimentoX509Risposta:
      type: "string"
      default: "richiesta"
      enum:
      - "richiesta"
      - "ridefinito"
    ProblemTeamDigitale:
      type: "object"
      properties:
        type:
          type: "string"
          description: "An absolute URI that identifies the problem type.  When dereferenced,\n\
            it SHOULD provide human-readable documentation for the problem type\n\
            (e.g., using HTML).\n"
          format: "uri"
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: "about:blank"
        title:
          type: "string"
          description: "A short, summary of the problem type. Written in english and\
            \ readable\nfor engineers (usually not suited for non technical stakeholders\
            \ and\nnot localized); example: Service Unavailable\n"
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: "integer"
          description: "The HTTP status code generated by the origin server for this\
            \ occurrence\nof the problem.\n"
          format: "int32"
          example: 503
        detail:
          type: "string"
          description: "A human readable explanation specific to this occurrence of\
            \ the\nproblem. You MUST NOT expose internal informations, personal\n\
            data or implementation details through this field.\n"
          example: "Request took too long to complete."
        instance:
          type: "string"
          description: "An absolute URI that identifies the specific occurrence of\
            \ the problem.\nIt may or may not yield further information if dereferenced.\n"
          format: "uri"
    Problem:
      type: "object"
      allOf:
      - $ref: "#/components/schemas/ProblemId"
      - $ref: "#/components/schemas/ProblemDetails"
    ProblemId:
      type: "object"
      anyOf:
      - $ref: "#/components/schemas/ProblemType"
      - $ref: "#/components/schemas/ProblemTitle"
      - $ref: "#/components/schemas/ProblemStatus"
    ProblemType:
      required:
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "An absolute URI that identifies the problem type.  When dereferenced,\n\
            it SHOULD provide human-readable documentation for the problem type\n\
            (e.g., using HTML).\n"
          format: "uri"
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: "about:blank"
    ProblemTitle:
      required:
      - "title"
      type: "object"
      properties:
        title:
          type: "string"
          description: "A short, summary of the problem type. Written in english and\
            \ readable\nfor engineers (usually not suited for non technical stakeholders\
            \ and\nnot localized); example: Service Unavailable\n"
    ProblemStatus:
      required:
      - "status"
      type: "object"
      properties:
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: "integer"
          description: "The HTTP status code generated by the origin server for this\
            \ occurrence\nof the problem.\n"
          format: "int32"
          example: 503
    ProblemDetails:
      type: "object"
      properties:
        detail:
          type: "string"
          description: "A human readable explanation specific to this occurrence of\
            \ the\nproblem. You MUST NOT expose internal informations, personal\n\
            data or implementation details through this field.\n"
          example: "Request took too long to complete."
        instance:
          type: "string"
          description: "An absolute URI that identifies the specific occurrence of\
            \ the problem.\nIt may or may not yield further information if dereferenced.\n"
          format: "uri"
  responses:
    "201CreatedKey":
      description: "Resource created"
      headers:
        X-Api-Key:
          $ref: "#/components/headers/X-Api-Key"
        X-App-Id:
          $ref: "#/components/headers/X-App-Id"
        Location:
          $ref: "#/components/headers/Location"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
    "204UpdatedKey":
      description: "Resource updated"
      headers:
        X-Api-Key:
          $ref: "#/components/headers/X-Api-Key"
        X-App-Id:
          $ref: "#/components/headers/X-App-Id"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
    "400BadRequest":
      description: "Bad Request"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "404NotFound":
      description: "Not Found"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "429TooManyRequests":
      description: "Too many requests"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "503ServiceUnavailable":
      description: "Service Unavailable"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    default:
      description: "Unexpected error"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "401Unauthorized":
      description: "Non sono state fornite le credenziali necessarie"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "403Forbidden":
      description: "Autorizzazione non concessa per l'operazione richiesta"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "409Conflict":
      description: "Conflict (L'entità che si vuole creare risulta già esistente)"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "201Created":
      description: "Resource created"
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
    "202Accepted":
      description: "Request accepted"
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
    "200Status":
      description: "Il servizio funziona correttamente"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemTeamDigitale"
  parameters:
    profilo:
      name: "profilo"
      in: "query"
      description: "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n\
        \  * ModIPA;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery."
      required: false
      schema:
        $ref: "#/components/schemas/ProfiloEnum"
      example: "APIGateway"
    soggetto:
      name: "soggetto"
      in: "query"
      description: "Indica il Soggetto di dominio interno indirizzato dall'operazione."
      required: false
      schema:
        $ref: "#/components/schemas/SimpleName"
      example: "ENTE"
    id_simple_name:
      name: "nome"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/SimpleName"
    id_ncname:
      name: "nome"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_versione:
      name: "versione"
      in: "path"
      description: "Versione che insieme al nome rappresente l'identificativo univoco"
      required: true
      schema:
        $ref: "#/components/schemas/Versione"
    id_nome_allegato:
      name: "nome_allegato"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        type: "string"
    id_nome_risorsa:
      name: "nome_risorsa"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_nome_servizio:
      name: "nome_servizio"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_nome_azione:
      name: "nome_azione"
      in: "path"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_erogatore:
      name: "erogatore"
      in: "path"
      description: "Nome identificativo dell'erogatore"
      required: true
      schema:
        $ref: "#/components/schemas/SimpleName"
    id_nome_gruppo:
      name: "nome_gruppo"
      in: "path"
      description: "Nome del Gruppo di azioni o risorse"
      required: true
      schema:
        maxLength: 255
        type: "string"
    gruppo:
      name: "gruppo"
      in: "query"
      description: "Nome del Gruppo di azioni o risorse"
      required: false
      schema:
        maxLength: 255
        type: "string"
    tipo_servizio:
      name: "tipo_servizio"
      in: "query"
      description: "Indica un tipo del servizio differente da quello di default"
      required: false
      schema:
        $ref: "#/components/schemas/Tipo"
    nome_servizio:
      name: "nome_servizio"
      in: "query"
      description: "Nome identificativo"
      required: false
      schema:
        $ref: "#/components/schemas/NCName"
    versione_servizio:
      name: "versione_servizio"
      in: "query"
      description: "Versione che insieme al nome rappresente l'identificativo univoco"
      required: false
      schema:
        $ref: "#/components/schemas/Versione"
    azione:
      name: "azione"
      in: "query"
      description: "Identifica un azione o risorsa"
      required: false
      schema:
        $ref: "#/components/schemas/NCName"
      example: "Azione1"
    tag:
      name: "tag"
      in: "query"
      description: "Identificativo del Tag"
      required: false
      schema:
        $ref: "#/components/schemas/NCName"
    data_inizio:
      name: "data_inizio"
      in: "query"
      description: "data inizio dell'intervallo di ricerca"
      required: true
      schema:
        type: "string"
        format: "date-time"
    data_fine:
      name: "data_fine"
      in: "query"
      description: "data inizio dell'intervallo di ricerca"
      required: true
      schema:
        type: "string"
        format: "date-time"
    nome_servizio_obbligatorio:
      name: "nome_servizio"
      in: "query"
      description: "Nome identificativo"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    ricerca_esatta:
      name: "ricerca_esatta"
      in: "query"
      description: "Indica se utilizzare o meno un confronto di tipo LIKE per la query"
      required: false
      schema:
        type: "boolean"
        default: true
    case_sensitive:
      name: "case_sensitive"
      in: "query"
      required: false
      schema:
        type: "boolean"
        default: true
    id_soggetto_autorizzato:
      name: "soggetto_autorizzato"
      in: "path"
      description: "Nome del soggetto autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/SimpleName"
    id_applicativo_autorizzato:
      name: "applicativo_autorizzato"
      in: "path"
      description: "Nome dell'applicativo autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_ruolo_autorizzato:
      name: "ruolo_autorizzato"
      in: "path"
      description: "Nome del ruolo autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_scope_autorizzato:
      name: "scope_autorizzato"
      in: "path"
      description: "Nome dello scope autorizzato"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    id_policy:
      name: "id_policy"
      in: "path"
      description: "Identificativo della policy di Rate Limiting"
      required: true
      schema:
        $ref: "#/components/schemas/NCName"
    elemento_correlazione_applicativa:
      name: "elemento"
      in: "path"
      description: "Elemento della regola di correlazione applicativa"
      required: true
      schema:
        maxLength: 255
        type: "string"
    proprieta_configurazione:
      name: "proprieta"
      in: "path"
      description: "Nome della proprietà di configurazione"
      required: true
      schema:
        maxLength: 255
        type: "string"
    id_nome_connettore:
      name: "nome_connettore"
      in: "path"
      description: "Nome del connettore multiplo"
      required: true
      schema:
        maxLength: 255
        type: "string"
    id_soggetto_applicativo:
      name: "soggetto_applicativo"
      in: "query"
      description: "Nome del soggetto proprietario dell'applicativo"
      required: false
      schema:
        $ref: "#/components/schemas/SimpleName"
    tipo_api:
      name: "tipo_api"
      in: "query"
      description: "Indica il tipo di API"
      required: false
      schema:
        $ref: "#/components/schemas/TipoApiEnum"
      example: "rest"
    uri_api_implementata:
      name: "uri_api_implementata"
      in: "query"
      description: "Identificativo dell'API implementata"
      required: false
      schema:
        $ref: "#/components/schemas/UriApi"
    profilo_qualsiasi:
      name: "profilo_qualsiasi"
      in: "query"
      description: "Indica di non filtrare per uno specifico profilo ma di ritornare\
        \ le API di tutti i profili gestiti"
      required: false
      schema:
        type: "boolean"
        default: false
    soggetto_qualsiasi:
      name: "soggetto_qualsiasi"
      in: "query"
      description: "Indica di non filtrare per uno specifico soggetto ma di ritornare\
        \ le API di tutti i soggetti"
      required: false
      schema:
        type: "boolean"
        default: false
    dominio:
      name: "dominio"
      in: "query"
      description: "Indica il dominio di un soggetto"
      required: false
      schema:
        $ref: "#/components/schemas/DominioEnum"
      example: "esterno"
    ruolo:
      name: "ruolo"
      in: "query"
      description: "Identifica un ruolo"
      required: false
      schema:
        $ref: "#/components/schemas/NCName"
      example: "AccessoSolaLettura"
    tipo_credenziali:
      name: "tipo_credenziali"
      in: "query"
      description: "Identifica il tipo di credenziali associato all'oggetto"
      required: false
      schema:
        $ref: "#/components/schemas/ModalitaAccessoEnum"
    fonte:
      name: "fonte"
      in: "query"
      description: "Indica la fonte di un oggetto"
      required: false
      schema:
        $ref: "#/components/schemas/FonteEnum"
      example: "esterna"
    contesto:
      name: "contesto"
      in: "query"
      description: "Indica il contesto di utilizzo di un oggetto"
      required: false
      schema:
        $ref: "#/components/schemas/ContestoEnum"
      example: "erogazione"
    http_method:
      name: "http_method"
      in: "query"
      description: "Indica il tipo di http method"
      required: false
      schema:
        $ref: "#/components/schemas/HttpMethodEnum"
      example: "PUT"
    metrica:
      name: "metrica"
      in: "query"
      description: "Identifica una metrica di Rate Limiting"
      required: false
      schema:
        $ref: "#/components/schemas/RateLimitingCriteriMetricaEnum"
      example: "numero-richieste"
    cursor:
      name: "cursor"
      in: "query"
      description: "An opaque identifier that points to the next item in the collection."
      required: false
      schema:
        type: "string"
      example: "01BX9NSMKVXXS5PSP2FATZM123"
    fields:
      name: "fields"
      in: "query"
      description: "Fields to retrieve"
      required: false
      schema:
        type: "string"
    limit:
      name: "limit"
      in: "query"
      description: "How many items to return at one time (max 100)"
      required: false
      schema:
        type: "integer"
        format: "int32"
    offset:
      name: "offset"
      in: "query"
      description: "The zero-ary offset index into the results"
      required: false
      schema:
        type: "integer"
        format: "int32"
        default: 0
    q:
      name: "q"
      in: "query"
      description: "Search query term"
      required: false
      schema:
        type: "string"
    sort:
      name: "sort"
      in: "query"
      description: "Sorting order"
      required: false
      schema:
        type: "string"
        example: "+name"
    Etag:
      name: "Etag"
      in: "header"
      description: "The RFC7232 ETag header field in a response provides the current\
        \ entity-\ntag for the selected resource. An entity-tag is an opaque identifier\
        \ for\ndifferent versions of a resource over time, regardless whether multiple\n\
        versions are valid at the same time. An entity-tag consists of an opaque\n\
        quoted string, possibly prefixed by a weakness indicator.\n"
      required: false
      schema:
        type: "string"
      example: "W/\"xy\", \"5\", \"7da7a728-f910-11e6-942a-68f728c1ba70\""
    IfMatch:
      name: "If-Match"
      in: "header"
      description: "The RFC7232 If-Match header field in a request requires the server\
        \ to\nonly operate on the resource that matches at least one of the provided\n\
        entity-tags. This allows clients express a precondition that prevent\nthe\
        \ method from being applied if there have been any changes to the\nresource.\n"
      required: false
      schema:
        type: "string"
      example: "\"5\", \"7da7a728-f910-11e6-942a-68f728c1ba70\""
    IfNoneMatch:
      name: "If-None-Match"
      in: "header"
      description: "The RFC7232 If-None-Match header field in a request requires the\
        \ server\nto only operate on the resource if it does not match any of the\
        \ provided\nentity-tags. If the provided entity-tag is `*`, it is required\
        \ that the\nresource does not exist at all.\n"
      required: false
      schema:
        type: "string"
      example: "\"7da7a728-f910-11e6-942a-68f728c1ba70\", *"
  headers:
    X-Api-Key:
      description: "API Key creata per l'entita registrata"
      schema:
        type: "string"
    X-App-Id:
      description: "APP ID associato all'entita registrata"
      schema:
        type: "string"
    X-RateLimit-Limit:
      description: "The number of allowed requests in the current period"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Remaining:
      description: "The number of remaining requests in the current period"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Reset:
      description: "The number of seconds left in the current period"
      schema:
        type: "integer"
        format: "int32"
    Retry-After:
      description: "Retry contacting the endpoint *at least* after seconds.\nSee https://tools.ietf.org/html/rfc7231#section-7.1.3"
      schema:
        type: "integer"
        format: "int32"
    Location:
      description: "In some responses, this header references the\nprimary resource\
        \ created. \n\nIt is used for redirections too.\n\nSee https://tools.ietf.org/html/rfc7231#section-7.1.2\n\
        \nHeader Location inserito in una risposta ad una richiesta POST, terminata\
        \ con successo 'http 201'.\nL'header indica l'id dell'oggetto creato."
      schema:
        type: "string"
        format: "uri"
