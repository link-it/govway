openapi: 3.0.0
info:
  title: FHIR
  description: fhir
  license:
    name: GPL v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.txt
  version: 1.0.0
servers:
  - url: http://hapi.fhir.org/baseR4/
tags:
  - name: Risorse
paths:
  /Invoice:
    post:
      tags:
        - Risorse
      summary: creazione di una spesa sanitaria
      operationId: newInvoice
      requestBody:
        content:
          application/fhir+json:
            schema:
              $ref: "#/components/schemas/Invoice"
        required: true
      responses:
        201:
          description: "OK"
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/Invoice"
        400:
          $ref: "#/components/responses/400BadRequest"
        404:
          $ref: "#/components/responses/404NotFound"
        422:
          $ref: "#/components/responses/422UnprocessableEntity"
  /Invoice/{invoice_id}:
    parameters:
      - $ref: '#/components/parameters/invoice_id'
    patch:
      tags:
        - Risorse
      summary: Variazione di una spesa sanitaria
      operationId: updateInvoice
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Invoice"
        required: true
      responses:
        200:
          description: "OK"
        404:
          $ref: "#/components/responses/404NotFound"
        412:
          $ref: "#/components/responses/412PreconditionFailed"
    delete:
      tags:
        - Risorse
      summary: Cancellazione di una spesa sanitaria
      operationId: deleteInvoice
      responses:
        200:
          description: "OK"
        404:
          $ref: "#/components/responses/404NotFound"
    put:
      tags:
        - Risorse
      summary: Rimborso di una spesa sanitaria
      operationId: changeInvoice
      requestBody:
        content:
          application/fhir+json:
            schema:
              $ref: "#/components/schemas/Invoice"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201Created"
        400:
          $ref: "#/components/responses/400BadRequest"
        404:
          $ref: "#/components/responses/404NotFound"
        422:
          $ref: "#/components/responses/422UnprocessableEntity"
    get:
      tags:
        - Risorse
      summary: Lettura di una spesa sanitaria
      operationId: readInvoice
      responses:
        200:
          description: "OK"
          content:
            application/fhir+json:
              schema:
                $ref: "#/components/schemas/Invoice"
        404:
          $ref: "#/components/responses/404NotFound"
  /CarePlan/{careplan_id}:
    parameters:
      - $ref: '#/components/parameters/careplan_id'
    get:
      tags:
        - Risorse
      summary: Lettura di un careplan
      operationId: getCarePlan
      responses:
        '200':
          description: "OK"
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/CarePlan'
        '404':
          $ref: "#/components/responses/404NotFound"
  /CarePlan:
    post:
      tags:
        - Risorse
      summary: creazione di un careplan
      operationId: newCarePlan
      requestBody:
        content:
          application/fhir+json:
            schema:
              $ref: "#/components/schemas/CarePlan"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201Created"
        400:
          $ref: "#/components/responses/400BadRequest"
        404:
          $ref: "#/components/responses/404NotFound"
components:
  schemas:
    ResourceList:
      oneOf:
        - $ref: '#/components/schemas/Account'
        - $ref: '#/components/schemas/ActivityDefinition'
        - $ref: '#/components/schemas/AdverseEvent'
        - $ref: '#/components/schemas/AllergyIntolerance'
        - $ref: '#/components/schemas/Appointment'
        - $ref: '#/components/schemas/AppointmentResponse'
        - $ref: '#/components/schemas/AuditEvent'
        - $ref: '#/components/schemas/Basic'
        - $ref: '#/components/schemas/Binary'
        - $ref: '#/components/schemas/BiologicallyDerivedProduct'
        - $ref: '#/components/schemas/BodyStructure'
        - $ref: '#/components/schemas/Bundle'
        - $ref: '#/components/schemas/CapabilityStatement'
        - $ref: '#/components/schemas/CarePlan'
        - $ref: '#/components/schemas/CareTeam'
        - $ref: '#/components/schemas/CatalogEntry'
        - $ref: '#/components/schemas/ChargeItem'
        - $ref: '#/components/schemas/ChargeItemDefinition'
        - $ref: '#/components/schemas/Claim'
        - $ref: '#/components/schemas/ClaimResponse'
        - $ref: '#/components/schemas/ClinicalImpression'
        - $ref: '#/components/schemas/CodeSystem'
        - $ref: '#/components/schemas/Communication'
        - $ref: '#/components/schemas/CommunicationRequest'
        - $ref: '#/components/schemas/CompartmentDefinition'
        - $ref: '#/components/schemas/Composition'
        - $ref: '#/components/schemas/ConceptMap'
        - $ref: '#/components/schemas/Condition'
        - $ref: '#/components/schemas/Consent'
        - $ref: '#/components/schemas/Contract'
        - $ref: '#/components/schemas/Coverage'
        - $ref: '#/components/schemas/CoverageEligibilityRequest'
        - $ref: '#/components/schemas/CoverageEligibilityResponse'
        - $ref: '#/components/schemas/DetectedIssue'
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/DeviceDefinition'
        - $ref: '#/components/schemas/DeviceMetric'
        - $ref: '#/components/schemas/DeviceRequest'
        - $ref: '#/components/schemas/DeviceUseStatement'
        - $ref: '#/components/schemas/DiagnosticReport'
        - $ref: '#/components/schemas/DocumentManifest'
        - $ref: '#/components/schemas/DocumentReference'
        - $ref: '#/components/schemas/EffectEvidenceSynthesis'
        - $ref: '#/components/schemas/Encounter'
        - $ref: '#/components/schemas/Endpoint'
        - $ref: '#/components/schemas/EnrollmentRequest'
        - $ref: '#/components/schemas/EnrollmentResponse'
        - $ref: '#/components/schemas/EpisodeOfCare'
        - $ref: '#/components/schemas/EventDefinition'
        - $ref: '#/components/schemas/Evidence'
        - $ref: '#/components/schemas/EvidenceVariable'
        - $ref: '#/components/schemas/ExampleScenario'
        - $ref: '#/components/schemas/ExplanationOfBenefit'
        - $ref: '#/components/schemas/FamilyMemberHistory'
        - $ref: '#/components/schemas/Flag'
        - $ref: '#/components/schemas/Goal'
        - $ref: '#/components/schemas/GraphDefinition'
        - $ref: '#/components/schemas/Group'
        - $ref: '#/components/schemas/GuidanceResponse'
        - $ref: '#/components/schemas/HealthcareService'
        - $ref: '#/components/schemas/ImagingStudy'
        - $ref: '#/components/schemas/Immunization'
        - $ref: '#/components/schemas/ImmunizationEvaluation'
        - $ref: '#/components/schemas/ImmunizationRecommendation'
        - $ref: '#/components/schemas/ImplementationGuide'
        - $ref: '#/components/schemas/InsurancePlan'
        - $ref: '#/components/schemas/Invoice'
        - $ref: '#/components/schemas/Library'
        - $ref: '#/components/schemas/Linkage'
        - $ref: '#/components/schemas/List'
        - $ref: '#/components/schemas/Location'
        - $ref: '#/components/schemas/Measure'
        - $ref: '#/components/schemas/MeasureReport'
        - $ref: '#/components/schemas/Media'
        - $ref: '#/components/schemas/Medication'
        - $ref: '#/components/schemas/MedicationAdministration'
        - $ref: '#/components/schemas/MedicationDispense'
        - $ref: '#/components/schemas/MedicationKnowledge'
        - $ref: '#/components/schemas/MedicationRequest'
        - $ref: '#/components/schemas/MedicationStatement'
        - $ref: '#/components/schemas/MedicinalProduct'
        - $ref: '#/components/schemas/MedicinalProductAuthorization'
        - $ref: '#/components/schemas/MedicinalProductContraindication'
        - $ref: '#/components/schemas/MedicinalProductIndication'
        - $ref: '#/components/schemas/MedicinalProductIngredient'
        - $ref: '#/components/schemas/MedicinalProductInteraction'
        - $ref: '#/components/schemas/MedicinalProductManufactured'
        - $ref: '#/components/schemas/MedicinalProductPackaged'
        - $ref: '#/components/schemas/MedicinalProductPharmaceutical'
        - $ref: '#/components/schemas/MedicinalProductUndesirableEffect'
        - $ref: '#/components/schemas/MessageDefinition'
        - $ref: '#/components/schemas/MessageHeader'
        - $ref: '#/components/schemas/MolecularSequence'
        - $ref: '#/components/schemas/NamingSystem'
        - $ref: '#/components/schemas/NutritionOrder'
        - $ref: '#/components/schemas/Observation'
        - $ref: '#/components/schemas/ObservationDefinition'
        - $ref: '#/components/schemas/OperationDefinition'
        - $ref: '#/components/schemas/OperationOutcome'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/OrganizationAffiliation'
        - $ref: '#/components/schemas/Parameters'
        - $ref: '#/components/schemas/Patient'
        - $ref: '#/components/schemas/PaymentNotice'
        - $ref: '#/components/schemas/PaymentReconciliation'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PlanDefinition'
        - $ref: '#/components/schemas/Practitioner'
        - $ref: '#/components/schemas/PractitionerRole'
        - $ref: '#/components/schemas/Procedure'
        - $ref: '#/components/schemas/Provenance'
        - $ref: '#/components/schemas/Questionnaire'
        - $ref: '#/components/schemas/QuestionnaireResponse'
        - $ref: '#/components/schemas/RelatedPerson'
        - $ref: '#/components/schemas/RequestGroup'
        - $ref: '#/components/schemas/ResearchDefinition'
        - $ref: '#/components/schemas/ResearchElementDefinition'
        - $ref: '#/components/schemas/ResearchStudy'
        - $ref: '#/components/schemas/ResearchSubject'
        - $ref: '#/components/schemas/RiskAssessment'
        - $ref: '#/components/schemas/RiskEvidenceSynthesis'
        - $ref: '#/components/schemas/Schedule'
        - $ref: '#/components/schemas/SearchParameter'
        - $ref: '#/components/schemas/ServiceRequest'
        - $ref: '#/components/schemas/Slot'
        - $ref: '#/components/schemas/Specimen'
        - $ref: '#/components/schemas/SpecimenDefinition'
        - $ref: '#/components/schemas/StructureDefinition'
        - $ref: '#/components/schemas/StructureMap'
        - $ref: '#/components/schemas/Subscription'
        - $ref: '#/components/schemas/Substance'
        - $ref: '#/components/schemas/SubstanceNucleicAcid'
        - $ref: '#/components/schemas/SubstancePolymer'
        - $ref: '#/components/schemas/SubstanceProtein'
        - $ref: '#/components/schemas/SubstanceReferenceInformation'
        - $ref: '#/components/schemas/SubstanceSourceMaterial'
        - $ref: '#/components/schemas/SubstanceSpecification'
        - $ref: '#/components/schemas/SupplyDelivery'
        - $ref: '#/components/schemas/SupplyRequest'
        - $ref: '#/components/schemas/Task'
        - $ref: '#/components/schemas/TerminologyCapabilities'
        - $ref: '#/components/schemas/TestReport'
        - $ref: '#/components/schemas/TestScript'
        - $ref: '#/components/schemas/ValueSet'
        - $ref: '#/components/schemas/VerificationResult'
        - $ref: '#/components/schemas/VisionPrescription'
    base64Binary:
      type: string
      description: A stream of bytes
    boolean:
      pattern: ^true|false$
      type: boolean
      description: Value of "true" or "false"
    canonical:
      pattern: ^\S*$
      type: string
      description: A URI that is a reference to a canonical URL on a FHIR resource
    code:
      pattern: ^[^\s]+(\s[^\s]+)*$
      type: string
      description: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents
    date:
      pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
      type: string
      description: A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates.
    dateTime:
      pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
      type: string
      description: A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.
    decimal:
      pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
      type: number
      description: A rational number with implicit precision
    id:
      pattern: ^[A-Za-z0-9\-\.]{1,64}$
      type: string
      description: Any combination of letters, numerals, "-" and ".", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive.
    instant:
      pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
      type: string
      description: An instant in time - known at least to the second
    integer:
      pattern: ^-?([0]|([1-9][0-9]*))$
      type: number
      description: A whole number
    markdown:
      pattern: ^[ \r\n\t\S]+$
      type: string
      description: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine
    positiveInt:
      pattern: ^[1-9][0-9]*$
      type: number
      description: An integer with a value that is positive (e.g. >0)
    string:
      pattern: ^[ \r\n\t\S]+$
      type: string
      description: A sequence of Unicode characters
    time:
      pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
      type: string
      description: A time during the day, with no date specified
    unsignedInt:
      pattern: ^[0]|([1-9][0-9]*)$
      type: number
      description: An integer with a value that is not negative (e.g. >= 0)
    uri:
      pattern: ^\S*$
      type: string
      description: String of characters used to identify a name or a resource
    url:
      pattern: ^\S*$
      type: string
      description: A URI that is a literal reference
    uuid:
      pattern: '^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
      type: string
      description: 'A UUID, represented as a URI'
    xhtml:
      description: xhtml - escaped html (see specfication)
    Element:
      description: Base definition for all elements in a resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
      additionalProperties: false
    Extension:
      description: Optional Extension Element - found in all resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
          type: string
        _valueBase64Binary:
                    $ref: '#/components/schemas/Element'
        valueBoolean:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          pattern: ^\S*$
          type: string
        _valueCanonical:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[^\s]+(\s[^\s]+)*$
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueId:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[A-Za-z0-9\-\.]{1,64}$
          type: string
        _valueId:
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _valueInstant:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^-?([0]|([1-9][0-9]*))$
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[ \r\n\t\S]+$
          type: string
        _valueMarkdown:
          $ref: '#/components/schemas/Element'
        valueOid:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
          type: string
        _valueOid:
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[1-9][0-9]*$
          type: number
        _valuePositiveInt:
          $ref: '#/components/schemas/Element'
        valueString:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[ \r\n\t\S]+$
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[0]|([1-9][0-9]*)$
          type: number
        _valueUnsignedInt:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          pattern: ^\S*$
          type: string
        _valueUrl:
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _valueUuid:
          $ref: '#/components/schemas/Element'
        valueAddress:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Address'
        valueAge:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Count'
        valueDistance:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Distance'
        valueDuration:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Money'
        valuePeriod:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Period'
        valueQuantity:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Ratio'
        valueReference:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Signature'
        valueTiming:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          description: >-
            Value of extension - must be one of a constrained set of the data
            types (see [Extensibility](extensibility.html) for a list).
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    Narrative:
      description: A human-readable summary of the resource conveying the essential clinical and business information for the resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.
          enum:
            - generated
            - extensions
            - additional
            - empty
        _status:
          $ref: '#/components/schemas/Element'
        div:
          $ref: '#/components/schemas/xhtml'
      additionalProperties: false
      required:
        - div
    Annotation:
      description: A  text note which also  contains information about who made the statement and when.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        authorReference:
          $ref: '#/components/schemas/Reference'
        authorString:
          description: The individual responsible for making the annotation.
          pattern: ^[ \r\n\t\S]+$
          type: string
        _authorString:
          $ref: '#/components/schemas/Element'
        time:
          $ref: '#/components/schemas/dateTime'
        _time:
          $ref: '#/components/schemas/Element'
        text:
          $ref: '#/components/schemas/markdown'
        _text:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Attachment:
      description: For referring to data content defined in other formats.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentType:
          description: >-
            Identifies the type of the data in the attachment and allows a
            method to be chosen to interpret or render the data. Includes mime
            type parameters such as charset where appropriate.
          $ref: '#/components/schemas/code'
        _contentType:
          $ref: '#/components/schemas/Element'
        language:
          description: >-
            The human language of the content. The value can be any valid value
            according to BCP 47.
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        data:
          description: >-
            The actual data of the attachment - a sequence of bytes, base64
            encoded.
          $ref: '#/components/schemas/base64Binary'
        _data:
          $ref: '#/components/schemas/Element'
        url:
          $ref: '#/components/schemas/url'
        _url:
          $ref: '#/components/schemas/Element'
        size:
          description: >-
            The number of bytes of data that make up this attachment (before
            base64 encoding, if that is done).
          $ref: '#/components/schemas/unsignedInt'
        _size:
          $ref: '#/components/schemas/Element'
        hash:
          description: >-
            The calculated hash of the data using SHA-1. Represented using
            base64.
          $ref: '#/components/schemas/base64Binary'
        _hash:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        creation:
          $ref: '#/components/schemas/dateTime'
        _creation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Identifier:
      description: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: The purpose of this identifier.
          enum:
            - usual
            - official
            - temp
            - secondary
            - old
        _use:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            A coded type for the identifier that can be used to determine which
            identifier to use for a specific purpose.
          $ref: '#/components/schemas/CodeableConcept'
        system:
          description: >-
            Establishes the namespace for the value - that is, a URL that
            describes a set values that are unique.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        value:
          description: >-
            The portion of the identifier typically relevant to the user and
            which is unique within the context of the system.
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
        assigner:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CodeableConcept:
      description: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        coding:
          description: A reference to a code defined by a terminology system.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        text:
          description: >-
            A human language representation of the concept as
            seen/selected/uttered by the user who entered the data and/or which
            represents the intended meaning of the user.
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Coding:
      description: A reference to a code defined by a terminology system.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: >-
            The identification of the code system that defines the meaning of
            the symbol in the code.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The version of the code system which was used when choosing this
            code. Note that a well-maintained code system does not need the
            version reported, because the meaning of codes is consistent across
            versions. However this cannot consistently be assured, and when the
            meaning is not guaranteed to be consistent, the version SHOULD be
            exchanged.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A symbol in syntax defined by the system. The symbol may be a
            predefined code or an expression in a syntax defined by the coding
            system (e.g. post-coordination).
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            A representation of the meaning of the code in the system, following
            the rules of the system.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        userSelected:
          description: >-
            Indicates that this coding was chosen by a user directly - e.g. off
            a pick list of available items (codes or displays).
          $ref: '#/components/schemas/boolean'
        _userSelected:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Quantity:
      description: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The value of the measured amount. The value includes an implicit
            precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        comparator:
          description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          $ref: '#/components/schemas/Element'
        unit:
          $ref: '#/components/schemas/string'
        _unit:
          $ref: '#/components/schemas/Element'
        system:
          description: >-
            The identification of the system that provides the coded form of the
            unit.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A computer processable form of the unit in some unit representation
            system.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Duration:
      description: A length of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The value of the measured amount. The value includes an implicit
            precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        comparator:
          description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          $ref: '#/components/schemas/Element'
        unit:
          $ref: '#/components/schemas/string'
        _unit:
          $ref: '#/components/schemas/Element'
        system:
          description: >-
            The identification of the system that provides the coded form of the
            unit.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A computer processable form of the unit in some unit representation
            system.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Distance:
      description: A length - a value with a unit that is a physical distance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The value of the measured amount. The value includes an implicit
            precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        comparator:
          description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          $ref: '#/components/schemas/Element'
        unit:
          $ref: '#/components/schemas/string'
        _unit:
          $ref: '#/components/schemas/Element'
        system:
          description: >-
            The identification of the system that provides the coded form of the
            unit.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A computer processable form of the unit in some unit representation
            system.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Count:
      description: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The value of the measured amount. The value includes an implicit
            precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        comparator:
          description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          $ref: '#/components/schemas/Element'
        unit:
          $ref: '#/components/schemas/string'
        _unit:
          $ref: '#/components/schemas/Element'
        system:
          description: >-
            The identification of the system that provides the coded form of the
            unit.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A computer processable form of the unit in some unit representation
            system.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Money:
      description: An amount of economic utility in some recognized currency.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        currency:
          $ref: '#/components/schemas/code'
        _currency:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Age:
      description: A duration of time during which an organism (or a process) has existed.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The value of the measured amount. The value includes an implicit
            precision in the presentation of the value.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        comparator:
          description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
          enum:
            - <
            - <=
            - '>='
            - '>'
        _comparator:
          $ref: '#/components/schemas/Element'
        unit:
          $ref: '#/components/schemas/string'
        _unit:
          $ref: '#/components/schemas/Element'
        system:
          description: >-
            The identification of the system that provides the coded form of the
            unit.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A computer processable form of the unit in some unit representation
            system.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Range:
      description: A set of ordered Quantities defined by a low and high limit.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        low:
          $ref: '#/components/schemas/Quantity'
        high:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Period:
      description: A time period defined by a start and end date and optionally time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        start:
          $ref: '#/components/schemas/dateTime'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          description: >-
            The end of the period. If the end of the period is missing, it means
            no end was known or planned at the time the instance was created.
            The start may be in the past, and the end date in the future, which
            means that period is expected/planned to end at that time.
          $ref: '#/components/schemas/dateTime'
        _end:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Ratio:
      description: A relationship of two Quantity values - expressed as a numerator and a denominator.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        numerator:
          $ref: '#/components/schemas/Quantity'
        denominator:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Reference:
      description: A reference from one resource to another.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          description: >-
            A reference to a location at which the other resource is found. The
            reference may be a relative reference, in which case it is relative
            to the service base URL, or an absolute URL that resolves to the
            location where the resource is found. The reference may be version
            specific or not. If the reference is not to a FHIR RESTful server,
            then it should be assumed to be version specific. Internal fragment
            references (start with '#') refer to contained resources.
          $ref: '#/components/schemas/string'
        _reference:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The expected type of the target of the reference. If both
            Reference.type and Reference.reference are populated and
            Reference.reference is a FHIR URL, both SHALL be consistent.


            The type is the Canonical URL of Resource Definition that is the
            type this reference refers to. References are URLs that are relative
            to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a
            reference to http://hl7.org/fhir/StructureDefinition/Patient.
            Absolute URLs are only allowed for logical models (and can only be
            used in references in logical models, not resources).
          $ref: '#/components/schemas/uri'
        _type:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            An identifier for the target resource. This is used when there is no
            way to reference the other resource directly, either because the
            entity it represents is not available through a FHIR server, or
            because there is no way for the author of the resource to convert a
            known identifier to an actual location. There is no requirement that
            a Reference.identifier point to something that is actually exposed
            as a FHIR instance, but it SHALL point to a business concept that
            would be expected to be exposed as a FHIR instance, and that
            instance would need to be of a FHIR resource type allowed by the
            reference.
          $ref: '#/components/schemas/Identifier'
        display:
          description: >-
            Plain text narrative that identifies the resource in addition to the
            resource reference.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SampledData:
      description: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        origin:
          description: >-
            The base quantity that a measured value of zero represents. In
            addition, this provides the units of the entire measurement series.
          $ref: '#/components/schemas/Quantity'
        period:
          $ref: '#/components/schemas/decimal'
        _period:
          $ref: '#/components/schemas/Element'
        factor:
          description: >-
            A correction factor that is applied to the sampled data points
            before they are added to the origin.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        lowerLimit:
          description: >-
            The lower limit of detection of the measured points. This is needed
            if any of the data points have the value "L" (lower than detection
            limit).
          $ref: '#/components/schemas/decimal'
        _lowerLimit:
          $ref: '#/components/schemas/Element'
        upperLimit:
          description: >-
            The upper limit of detection of the measured points. This is needed
            if any of the data points have the value "U" (higher than detection
            limit).
          $ref: '#/components/schemas/decimal'
        _upperLimit:
          $ref: '#/components/schemas/Element'
        dimensions:
          description: >-
            The number of sample points at each time point. If this value is
            greater than one, then the dimensions will be interlaced - all the
            sample points for a point in time will be recorded at once.
          $ref: '#/components/schemas/positiveInt'
        _dimensions:
          $ref: '#/components/schemas/Element'
        data:
          description: >-
            A series of data points which are decimal values separated by a
            single space (character u20). The special values "E" (error), "L"
            (below detection limit) and "U" (above detection limit) can also be
            used in place of a decimal value.
          $ref: '#/components/schemas/string'
        _data:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - origin
    Signature:
      description: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        when:
          $ref: '#/components/schemas/instant'
        _when:
          $ref: '#/components/schemas/Element'
        who:
          description: >-
            A reference to an application-usable description of the identity
            that signed  (e.g. the signature used their private key).
          $ref: '#/components/schemas/Reference'
        onBehalfOf:
          description: >-
            A reference to an application-usable description of the identity
            that is represented by the signature.
          $ref: '#/components/schemas/Reference'
        targetFormat:
          description: >-
            A mime type that indicates the technical format of the target
            resources signed by the signature.
          $ref: '#/components/schemas/code'
        _targetFormat:
          $ref: '#/components/schemas/Element'
        sigFormat:
          description: >-
            A mime type that indicates the technical format of the signature.
            Important mime types are application/signature+xml for X ML DigSig,
            application/jose for JWS, and image/* for a graphical image of a
            signature, etc.
          $ref: '#/components/schemas/code'
        _sigFormat:
          $ref: '#/components/schemas/Element'
        data:
          description: >-
            The base64 encoding of the Signature content. When signature is not
            recorded electronically this element would be empty.
          $ref: '#/components/schemas/base64Binary'
        _data:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - type
        - who
    HumanName:
      description: A human's name with the ability to identify parts and usage.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: Identifies the purpose for this name.
          enum:
            - usual
            - official
            - temp
            - nickname
            - anonymous
            - old
            - maiden
        _use:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            Specifies the entire name as it should be displayed e.g. on an
            application UI. This may be provided instead of or as well as the
            specific parts.
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        family:
          description: >-
            The part of a name that links to the genealogy. In some cultures
            (e.g. Eritrea) the family name of a son is the first name of his
            father.
          $ref: '#/components/schemas/string'
        _family:
          $ref: '#/components/schemas/Element'
        given:
          description: Given name.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _given:
          description: Extensions for given
          items:
            $ref: '#/components/schemas/Element'
          type: array
        prefix:
          description: Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _prefix:
          description: Extensions for prefix
          items:
            $ref: '#/components/schemas/Element'
          type: array
        suffix:
          description: Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _suffix:
          description: Extensions for suffix
          items:
            $ref: '#/components/schemas/Element'
          type: array
        period:
          description: >-
            Indicates the period of time when this name was valid for the named
            person.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Address:
      description: An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: The purpose of this address.
          enum:
            - home
            - work
            - temp
            - old
            - billing
        _use:
          $ref: '#/components/schemas/Element'
        type:
          description: Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
          enum:
            - postal
            - physical
            - both
        _type:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            Specifies the entire address as it should be displayed e.g. on a
            postal label. This may be provided instead of or as well as the
            specific parts.
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        line:
          description: This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _line:
          description: Extensions for line
          items:
            $ref: '#/components/schemas/Element'
          type: array
        city:
          description: >-
            The name of the city, town, suburb, village or other community or
            delivery center.
          $ref: '#/components/schemas/string'
        _city:
          $ref: '#/components/schemas/Element'
        district:
          $ref: '#/components/schemas/string'
        _district:
          $ref: '#/components/schemas/Element'
        state:
          description: >-
            Sub-unit of a country with limited sovereignty in a federally
            organized country. A code may be used if codes are in common use
            (e.g. US 2 letter state codes).
          $ref: '#/components/schemas/string'
        _state:
          $ref: '#/components/schemas/Element'
        postalCode:
          $ref: '#/components/schemas/string'
        _postalCode:
          $ref: '#/components/schemas/Element'
        country:
          $ref: '#/components/schemas/string'
        _country:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    ContactPoint:
      description: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: Telecommunications form for contact point - what communications system is required to make use of the contact.
          enum:
            - phone
            - fax
            - email
            - pager
            - url
            - sms
            - other
        _system:
          $ref: '#/components/schemas/Element'
        value:
          description: >-
            The actual contact point details, in a form that is meaningful to
            the designated communication system (i.e. phone number or email
            address).
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
        use:
          description: Identifies the purpose for the contact point.
          enum:
            - home
            - work
            - temp
            - old
            - mobile
        _use:
          $ref: '#/components/schemas/Element'
        rank:
          description: >-
            Specifies a preferred order in which to use a set of contacts.
            ContactPoints with lower rank values are more preferred than those
            with higher rank values.
          $ref: '#/components/schemas/positiveInt'
        _rank:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Timing:
      description: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        event:
          description: Identifies specific times when the event occurs.
          items:
            $ref: '#/components/schemas/dateTime'
          type: array
        _event:
          description: Extensions for event
          items:
            $ref: '#/components/schemas/Element'
          type: array
        repeat:
          $ref: '#/components/schemas/Timing_Repeat'
        code:
          description: >-
            A code for the timing schedule (or just text in code.text). Some
            codes such as BID are ubiquitous, but many institutions define their
            own additional codes. If a code is provided, the code is understood
            to be a complete statement of whatever is specified in the
            structured timing data, and either the code or the data may be used
            to interpret the Timing, with the exception that .repeat.bounds
            still applies over the code (and is not contained in the code).
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    Timing_Repeat:
      description: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        boundsDuration:
          description: >-
            Either a duration for the length of the timing schedule, a range of
            possible length, or outer bounds for start and/or end limits of the
            timing schedule.
          $ref: '#/components/schemas/Duration'
        boundsRange:
          description: >-
            Either a duration for the length of the timing schedule, a range of
            possible length, or outer bounds for start and/or end limits of the
            timing schedule.
          $ref: '#/components/schemas/Range'
        boundsPeriod:
          description: >-
            Either a duration for the length of the timing schedule, a range of
            possible length, or outer bounds for start and/or end limits of the
            timing schedule.
          $ref: '#/components/schemas/Period'
        count:
          description: >-
            A total count of the desired number of repetitions across the
            duration of the entire timing specification. If countMax is present,
            this element indicates the lower bound of the allowed range of count
            values.
          $ref: '#/components/schemas/positiveInt'
        _count:
          $ref: '#/components/schemas/Element'
        countMax:
          description: >-
            If present, indicates that the count is a range - so to perform the
            action between [count] and [countMax] times.
          $ref: '#/components/schemas/positiveInt'
        _countMax:
          $ref: '#/components/schemas/Element'
        duration:
          description: >-
            How long this thing happens for when it happens. If durationMax is
            present, this element indicates the lower bound of the allowed range
            of the duration.
          $ref: '#/components/schemas/decimal'
        _duration:
          $ref: '#/components/schemas/Element'
        durationMax:
          description: >-
            If present, indicates that the duration is a range - so to perform
            the action between [duration] and [durationMax] time length.
          $ref: '#/components/schemas/decimal'
        _durationMax:
          $ref: '#/components/schemas/Element'
        durationUnit:
          description: The units of time for the duration, in UCUM units.
          enum:
            - s
            - min
            - h
            - d
            - wk
            - mo
            - a
        _durationUnit:
          $ref: '#/components/schemas/Element'
        frequency:
          description: >-
            The number of times to repeat the action within the specified
            period. If frequencyMax is present, this element indicates the lower
            bound of the allowed range of the frequency.
          $ref: '#/components/schemas/positiveInt'
        _frequency:
          $ref: '#/components/schemas/Element'
        frequencyMax:
          description: >-
            If present, indicates that the frequency is a range - so to repeat
            between [frequency] and [frequencyMax] times within the period or
            period range.
          $ref: '#/components/schemas/positiveInt'
        _frequencyMax:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            Indicates the duration of time over which repetitions are to occur;
            e.g. to express "3 times per day", 3 would be the frequency and "1
            day" would be the period. If periodMax is present, this element
            indicates the lower bound of the allowed range of the period length.
          $ref: '#/components/schemas/decimal'
        _period:
          $ref: '#/components/schemas/Element'
        periodMax:
          description: >-
            If present, indicates that the period is a range from [period] to
            [periodMax], allowing expressing concepts such as "do this once
            every 3-5 days.
          $ref: '#/components/schemas/decimal'
        _periodMax:
          $ref: '#/components/schemas/Element'
        periodUnit:
          description: The units of time for the period in UCUM units.
          enum:
            - s
            - min
            - h
            - d
            - wk
            - mo
            - a
        _periodUnit:
          $ref: '#/components/schemas/Element'
        dayOfWeek:
          description: If one or more days of week is provided, then the action happens only on the specified day(s).
          items:
            $ref: '#/components/schemas/code'
          type: array
        _dayOfWeek:
          description: Extensions for dayOfWeek
          items:
            $ref: '#/components/schemas/Element'
          type: array
        timeOfDay:
          description: Specified time of day for action to take place.
          items:
            $ref: '#/components/schemas/time'
          type: array
        _timeOfDay:
          description: Extensions for timeOfDay
          items:
            $ref: '#/components/schemas/Element'
          type: array
        when:
          description: An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.
          items:
            enum:
              - MORN
              - MORN.early
              - MORN.late
              - NOON
              - AFT
              - AFT.early
              - AFT.late
              - EVE
              - EVE.early
              - EVE.late
              - NIGHT
              - PHS
              - HS
              - WAKE
              - C
              - CM
              - CD
              - CV
              - AC
              - ACM
              - ACD
              - ACV
              - PC
              - PCM
              - PCD
              - PCV
          type: array
        _when:
          description: Extensions for when
          items:
            $ref: '#/components/schemas/Element'
          type: array
        offset:
          description: >-
            The number of minutes from the event. If the event code does not
            indicate whether the minutes is before or after the event, then the
            offset is assumed to be after the event.
          $ref: '#/components/schemas/unsignedInt'
        _offset:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Meta:
      description: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        versionId:
          description: >-
            The version specific identifier, as it appears in the version
            portion of the URL. This value changes when the resource is created,
            updated, or deleted.
          $ref: '#/components/schemas/id'
        _versionId:
          $ref: '#/components/schemas/Element'
        lastUpdated:
          $ref: '#/components/schemas/instant'
        _lastUpdated:
          $ref: '#/components/schemas/Element'
        source:
          description: >-
            A uri that identifies the source system of the resource. This
            provides a minimal amount of [[[Provenance]]] information that can
            be used to track or differentiate the source of information in the
            resource. The source may identify another FHIR server, document,
            message, database, etc.
          $ref: '#/components/schemas/uri'
        _source:
          $ref: '#/components/schemas/Element'
        profile:
          description: A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        security:
          description: Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        tag:
          description: Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
    ContactDetail:
      description: Specifies contact information for a person or organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        telecom:
          description: The contact details for the individual (if a name was provided) or the organization.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
      additionalProperties: false
    Contributor:
      description: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of contributor.
          enum:
            - author
            - editor
            - reviewer
            - endorser
        _type:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            The name of the individual or organization responsible for the
            contribution.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        contact:
          description: Contact details to assist a user in finding and communicating with the contributor.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
      additionalProperties: false
    DataRequirement:
      description: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The type of the required data, specified as the type name of a
            resource. For profiles, this value is set to the type of the base
            resource of the profile.
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        profile:
          description: The profile of the required data, specified as the uri of the profile definition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        subjectCodeableConcept:
          description: >-
            The intended subjects of the data requirement. If this element is
            not provided, a Patient subject is assumed.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            The intended subjects of the data requirement. If this element is
            not provided, a Patient subject is assumed.
          $ref: '#/components/schemas/Reference'
        mustSupport:
          description: |-
            Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available.

            The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
          items:
            $ref: '#/components/schemas/string'
          type: array
        _mustSupport:
          description: Extensions for mustSupport
          items:
            $ref: '#/components/schemas/Element'
          type: array
        codeFilter:
          description: Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
          items:
            $ref: '#/components/schemas/DataRequirement_CodeFilter'
          type: array
        dateFilter:
          description: Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
          items:
            $ref: '#/components/schemas/DataRequirement_DateFilter'
          type: array
        limit:
          description: >-
            Specifies a maximum number of results that are required (uses the
            _count search parameter).
          $ref: '#/components/schemas/positiveInt'
        _limit:
          $ref: '#/components/schemas/Element'
        sort:
          description: Specifies the order of the results to be returned.
          items:
            $ref: '#/components/schemas/DataRequirement_Sort'
          type: array
      additionalProperties: false
    DataRequirement_CodeFilter:
      description: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The code-valued attribute of the filter. The specified path SHALL be
            a FHIRPath resolveable on the specified type of the DataRequirement,
            and SHALL consist only of identifiers, constant indexers, and
            .resolve(). The path is allowed to contain qualifiers (.) to
            traverse sub-elements, as well as indexers ([x]) to traverse
            multiple-cardinality sub-elements (see the [Simple FHIRPath
            Profile](fhirpath.html#simple) for full details). Note that the
            index must be an integer constant. The path must resolve to an
            element of type code, Coding, or CodeableConcept.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        searchParam:
          description: >-
            A token parameter that refers to a search parameter defined on the
            specified type of the DataRequirement, and which searches on
            elements of type code, Coding, or CodeableConcept.
          $ref: '#/components/schemas/string'
        _searchParam:
          $ref: '#/components/schemas/Element'
        valueSet:
          description: >-
            The valueset for the code filter. The valueSet and code elements are
            additive. If valueSet is specified, the filter will return only
            those data items for which the value of the code-valued element
            specified in the path is a member of the specified valueset.
          $ref: '#/components/schemas/canonical'
        code:
          description: The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
    DataRequirement_DateFilter:
      description: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The date-valued attribute of the filter. The specified path SHALL be
            a FHIRPath resolveable on the specified type of the DataRequirement,
            and SHALL consist only of identifiers, constant indexers, and
            .resolve(). The path is allowed to contain qualifiers (.) to
            traverse sub-elements, as well as indexers ([x]) to traverse
            multiple-cardinality sub-elements (see the [Simple FHIRPath
            Profile](fhirpath.html#simple) for full details). Note that the
            index must be an integer constant. The path must resolve to an
            element of type date, dateTime, Period, Schedule, or Timing.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        searchParam:
          description: >-
            A date parameter that refers to a search parameter defined on the
            specified type of the DataRequirement, and which searches on
            elements of type date, dateTime, Period, Schedule, or Timing.
          $ref: '#/components/schemas/string'
        _searchParam:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valuePeriod:
          description: >-
            The value of the filter. If period is specified, the filter will
            return only those data items that fall within the bounds determined
            by the Period, inclusive of the period boundaries. If dateTime is
            specified, the filter will return only those data items that are
            equal to the specified dateTime. If a Duration is specified, the
            filter will return only those data items that fall within Duration
            before now.
          $ref: '#/components/schemas/Period'
        valueDuration:
          description: >-
            The value of the filter. If period is specified, the filter will
            return only those data items that fall within the bounds determined
            by the Period, inclusive of the period boundaries. If dateTime is
            specified, the filter will return only those data items that are
            equal to the specified dateTime. If a Duration is specified, the
            filter will return only those data items that fall within Duration
            before now.
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    DataRequirement_Sort:
      description: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The attribute of the sort. The specified path must be resolvable
            from the type of the required data. The path is allowed to contain
            qualifiers (.) to traverse sub-elements, as well as indexers ([x])
            to traverse multiple-cardinality sub-elements. Note that the index
            must be an integer constant.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        direction:
          description: The direction of the sort, ascending or descending.
          enum:
            - ascending
            - descending
        _direction:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ParameterDefinition:
      description: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            The name of the parameter used to allow access to the value of the
            parameter in evaluation contexts.
          $ref: '#/components/schemas/code'
        _name:
          $ref: '#/components/schemas/Element'
        use:
          $ref: '#/components/schemas/code'
        _use:
          $ref: '#/components/schemas/Element'
        min:
          description: >-
            The minimum number of times this parameter SHALL appear in the
            request or response.
          $ref: '#/components/schemas/integer'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          description: >-
            The maximum number of times this element is permitted to appear in
            the request or response.
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            A brief discussion of what the parameter is for and how it is used
            by the module.
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        profile:
          description: >-
            If specified, this indicates a profile that the input data must
            conform to, or that the output data will conform to.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    RelatedArtifact:
      description: Related artifacts such as additional documentation, justification, or bibliographic references.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of relationship to the related artifact.
          enum:
            - documentation
            - justification
            - citation
            - predecessor
            - successor
            - derived-from
            - depends-on
            - composed-of
        _type:
          $ref: '#/components/schemas/Element'
        label:
          description: >-
            A short label that can be used to reference the citation from
            elsewhere in the containing artifact, such as a footnote index.
          $ref: '#/components/schemas/string'
        _label:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            A brief description of the document or knowledge resource being
            referenced, suitable for display to a consumer.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        citation:
          description: >-
            A bibliographic citation for the related artifact. This text SHOULD
            be formatted according to an accepted citation format.
          $ref: '#/components/schemas/markdown'
        _citation:
          $ref: '#/components/schemas/Element'
        url:
          description: >-
            A url for the artifact that can be followed to access the actual
            content.
          $ref: '#/components/schemas/url'
        _url:
          $ref: '#/components/schemas/Element'
        document:
          description: >-
            The document being referenced, represented as an attachment. This is
            exclusive with the resource element.
          $ref: '#/components/schemas/Attachment'
        resource:
          description: >-
            The related resource, such as a library, value set, profile, or
            other knowledge resource.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    TriggerDefinition:
      description: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of triggering event.
          enum:
            - named-event
            - periodic
            - data-changed
            - data-added
            - data-modified
            - data-removed
            - data-accessed
            - data-access-ended
        _type:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A formal name for the event. This may be an absolute URI that
            identifies the event formally (e.g. from a trigger registry), or a
            simple relative URI that identifies the event in a local context.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        timingTiming:
          $ref: '#/components/schemas/Timing'
        timingReference:
          $ref: '#/components/schemas/Reference'
        timingDate:
          description: The timing of the event (if this is a periodic trigger).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _timingDate:
          $ref: '#/components/schemas/Element'
        timingDateTime:
          description: The timing of the event (if this is a periodic trigger).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timingDateTime:
          $ref: '#/components/schemas/Element'
        data:
          description: The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.
          items:
            $ref: '#/components/schemas/DataRequirement'
          type: array
        condition:
          description: >-
            A boolean-valued expression that is evaluated in the context of the
            container of the trigger definition and returns whether or not the
            trigger fires.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
    UsageContext:
      description: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            A code that identifies the type of context being specified by this
            usage context.
          $ref: '#/components/schemas/Coding'
        valueCodeableConcept:
          description: >-
            A value that defines the context specified in this context of use.
            The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          description: >-
            A value that defines the context specified in this context of use.
            The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: >-
            A value that defines the context specified in this context of use.
            The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/Range'
        valueReference:
          description: >-
            A value that defines the context specified in this context of use.
            The interpretation of the value is defined by the code.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
    Dosage:
      description: Indicates how the medication is/was taken or should be taken by the patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          description: >-
            Indicates the order in which the dosage instructions should be
            applied or interpreted.
          $ref: '#/components/schemas/integer'
        _sequence:
          $ref: '#/components/schemas/Element'
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        additionalInstruction:
          description: Supplemental instructions to the patient on how to take the medication  (e.g. "with meals" or"take half to one hour before food") or warnings for the patient about the medication (e.g. "may cause drowsiness" or "avoid exposure of skin to direct sunlight or sunlamps").
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        patientInstruction:
          description: >-
            Instructions in terms that are understood by the patient or
            consumer.
          $ref: '#/components/schemas/string'
        _patientInstruction:
          $ref: '#/components/schemas/Element'
        timing:
          $ref: '#/components/schemas/Timing'
        asNeededBoolean:
          description: Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).
          pattern: ^true|false$
          type: boolean
        _asNeededBoolean:
          $ref: '#/components/schemas/Element'
        asNeededCodeableConcept:
          description: >-
            Indicates whether the Medication is only taken when needed within a
            specific dosing schedule (Boolean option), or it indicates the
            precondition for taking the Medication (CodeableConcept).
          $ref: '#/components/schemas/CodeableConcept'
        site:
          $ref: '#/components/schemas/CodeableConcept'
        route:
          $ref: '#/components/schemas/CodeableConcept'
        method:
          $ref: '#/components/schemas/CodeableConcept'
        doseAndRate:
          description: The amount of medication administered.
          items:
            $ref: '#/components/schemas/Dosage_DoseAndRate'
          type: array
        maxDosePerPeriod:
          $ref: '#/components/schemas/Ratio'
        maxDosePerAdministration:
          $ref: '#/components/schemas/Quantity'
        maxDosePerLifetime:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Dosage_DoseAndRate:
      description: Indicates how the medication is/was taken or should be taken by the patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The kind of dose or rate specified, for example, ordered or
            calculated.
          $ref: '#/components/schemas/CodeableConcept'
        doseRange:
          $ref: '#/components/schemas/Range'
        doseQuantity:
          $ref: '#/components/schemas/Quantity'
        rateRatio:
          $ref: '#/components/schemas/Ratio'
        rateRange:
          $ref: '#/components/schemas/Range'
        rateQuantity:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Population:
      description: A populatioof people with some set of grouping criteria.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        ageRange:
          $ref: '#/components/schemas/Range'
        ageCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        gender:
          $ref: '#/components/schemas/CodeableConcept'
        race:
          $ref: '#/components/schemas/CodeableConcept'
        physiologicalCondition:
          description: >-
            The existing physiological conditions of the specific population to
            which this applies.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ProductShelfLife:
      description: >-
        The shelf-life and storage information for a medicinal product item or
        container can be described using this class.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          $ref: '#/components/schemas/Identifier'
        type:
          description: >-
            This describes the shelf life, taking into account various scenarios
            such as shelf life of the packaged Medicinal Product itself, shelf
            life after transformation where necessary and shelf life after the
            first opening of a bottle, etc. The shelf life type shall be
            specified using an appropriate controlled vocabulary The controlled
            term and the controlled term identifier shall be specified.
          $ref: '#/components/schemas/CodeableConcept'
        period:
          description: >-
            The shelf life time period can be specified using a numerical value
            for the period of time and its unit of time measurement The unit of
            measurement shall be specified in accordance with ISO 11240 and the
            resulting terminology The symbol and the symbol identifier shall be
            used.
          $ref: '#/components/schemas/Quantity'
        specialPrecautionsForStorage:
          description: >-
            Special precautions for storage, if any, can be specified using an
            appropriate controlled vocabulary The controlled term and the
            controlled term identifier shall be specified.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - period
        - type
    ProdCharacteristic:
      description: >-
        The marketing status describes the date when a medicinal product is
        actually put on the market or the date as of which it is no longer
        available.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        height:
          description: >-
            Where applicable, the height can be specified using a numerical
            value and its unit of measurement The unit of measurement shall be
            specified in accordance with ISO 11240 and the resulting terminology
            The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        width:
          description: >-
            Where applicable, the width can be specified using a numerical value
            and its unit of measurement The unit of measurement shall be
            specified in accordance with ISO 11240 and the resulting terminology
            The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        depth:
          description: >-
            Where applicable, the depth can be specified using a numerical value
            and its unit of measurement The unit of measurement shall be
            specified in accordance with ISO 11240 and the resulting terminology
            The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        weight:
          description: >-
            Where applicable, the weight can be specified using a numerical
            value and its unit of measurement The unit of measurement shall be
            specified in accordance with ISO 11240 and the resulting terminology
            The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        nominalVolume:
          description: >-
            Where applicable, the nominal volume can be specified using a
            numerical value and its unit of measurement The unit of measurement
            shall be specified in accordance with ISO 11240 and the resulting
            terminology The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        externalDiameter:
          description: >-
            Where applicable, the external diameter can be specified using a
            numerical value and its unit of measurement The unit of measurement
            shall be specified in accordance with ISO 11240 and the resulting
            terminology The symbol and the symbol identifier shall be used.
          $ref: '#/components/schemas/Quantity'
        shape:
          description: >-
            Where applicable, the shape can be specified An appropriate
            controlled vocabulary shall be used The term and the term identifier
            shall be used.
          $ref: '#/components/schemas/string'
        _shape:
          $ref: '#/components/schemas/Element'
        color:
          description: >-
            Where applicable, the color can be specified An appropriate
            controlled vocabulary shall be used The term and the term identifier
            shall be used.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _color:
          description: Extensions for color
          items:
            $ref: '#/components/schemas/Element'
          type: array
        imprint:
          description: 'Where applicable, the imprint can be specified as text.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _imprint:
          description: Extensions for imprint
          items:
            $ref: '#/components/schemas/Element'
          type: array
        image:
          description: >-
            Where applicable, the image can be provided The format of the image
            attachment shall be specified by regional implementations.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        scoring:
          description: >-
            Where applicable, the scoring can be specified An appropriate
            controlled vocabulary shall be used The term and the term identifier
            shall be used.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    MarketingStatus:
      description: >-
        The marketing status describes the date when a medicinal product is
        actually put on the market or the date as of which it is no longer
        available.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        country:
          description: >-
            The country in which the marketing authorisation has been granted
            shall be specified It should be specified using the ISO 3166 ‑ 1
            alpha-2 code elements.
          $ref: '#/components/schemas/CodeableConcept'
        jurisdiction:
          description: >-
            Where a Medicines Regulatory Agency has granted a marketing
            authorisation for which specific provisions within a jurisdiction
            apply, the jurisdiction can be specified using an appropriate
            controlled terminology The controlled term and the controlled term
            identifier shall be specified.
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: >-
            This attribute provides information on the status of the marketing
            of the medicinal product See ISO/TS 20443 for more information and
            examples.
          $ref: '#/components/schemas/CodeableConcept'
        dateRange:
          description: >-
            The date when the Medicinal Product is placed on the market by the
            Marketing Authorisation Holder (or where applicable, the
            manufacturer/distributor) in a country and/or jurisdiction shall be
            provided A complete date consisting of day, month and year shall be
            specified using the ISO 8601 date format NOTE “Placed on the market”
            refers to the release of the Medicinal Product into the distribution
            chain.
          $ref: '#/components/schemas/Period'
        restoreDate:
          description: >-
            The date when the Medicinal Product is placed on the market by the
            Marketing Authorisation Holder (or where applicable, the
            manufacturer/distributor) in a country and/or jurisdiction shall be
            provided A complete date consisting of day, month and year shall be
            specified using the ISO 8601 date format NOTE “Placed on the market”
            refers to the release of the Medicinal Product into the distribution
            chain.
          $ref: '#/components/schemas/dateTime'
        _restoreDate:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - country
        - dateRange
        - status
    SubstanceAmount:
      description: >-
        Chemical substances are a single substance type whose primary defining
        element is the molecular structure. Chemical substances shall be defined
        on the basis of their complete covalent molecular structure; the
        presence of a salt (counter-ion) and/or solvates (water, alcohols) is
        also captured. Purity, grade, physical form or particle size are not
        taken into account in the definition of a chemical substance or in the
        assignment of a Substance ID.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        amountQuantity:
          description: >-
            Used to capture quantitative values for a variety of elements. If
            only limits are given, the arithmetic mean would be the average. If
            only a single definite value for a given element is given, it would
            be captured in this field.
          $ref: '#/components/schemas/Quantity'
        amountRange:
          description: >-
            Used to capture quantitative values for a variety of elements. If
            only limits are given, the arithmetic mean would be the average. If
            only a single definite value for a given element is given, it would
            be captured in this field.
          $ref: '#/components/schemas/Range'
        amountString:
          description: >-
            Used to capture quantitative values for a variety of elements. If
            only limits are given, the arithmetic mean would be the average. If
            only a single definite value for a given element is given, it would
            be captured in this field.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _amountString:
          $ref: '#/components/schemas/Element'
        amountType:
          description: >-
            Most elements that require a quantitative value will also have a
            field called amount type. Amount type should always be specified
            because the actual value of the amount is often dependent on it.
            EXAMPLE: In capturing the actual relative amounts of substances or
            molecular fragments it is essential to indicate whether the amount
            refers to a mole ratio or weight ratio. For any given element an
            effort should be made to use same the amount type for all related
            definitional elements.
          $ref: '#/components/schemas/CodeableConcept'
        amountText:
          $ref: '#/components/schemas/string'
        _amountText:
          $ref: '#/components/schemas/Element'
        referenceRange:
          $ref: '#/components/schemas/SubstanceAmount_ReferenceRange'
      additionalProperties: false
    SubstanceAmount_ReferenceRange:
      description: >-
        Chemical substances are a single substance type whose primary defining
        element is the molecular structure. Chemical substances shall be defined
        on the basis of their complete covalent molecular structure; the
        presence of a salt (counter-ion) and/or solvates (water, alcohols) is
        also captured. Purity, grade, physical form or particle size are not
        taken into account in the definition of a chemical substance or in the
        assignment of a Substance ID.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        lowLimit:
          $ref: '#/components/schemas/Quantity'
        highLimit:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Expression:
      description: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            A brief, natural language description of the condition that
            effectively communicates the intended semantics.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A short name assigned to the expression to allow for multiple reuse
            of the expression in the context where it is defined.
          $ref: '#/components/schemas/id'
        _name:
          $ref: '#/components/schemas/Element'
        language:
          description: The media type of the language for the expression.
          enum:
            - text/cql
            - text/fhirpath
            - application/x-fhir-query
        _language:
          $ref: '#/components/schemas/Element'
        expression:
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
        reference:
          $ref: '#/components/schemas/uri'
        _reference:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The path identifies the element and is expressed as a "."-separated
            list of ancestor elements, beginning with the name of the resource
            or extension.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        representation:
          description: >-
            Codes that define how this element is represented in instances, when
            the deviation varies from the normal case.
          items:
            enum:
              - xmlAttr
              - xmlText
              - typeAttr
              - cdaText
              - xhtml
          type: array
        _representation:
          description: Extensions for representation
          items:
            $ref: '#/components/schemas/Element'
          type: array
        sliceName:
          description: >-
            The name of this element definition slice, when slicing is working.
            The name must be a token with no dots or spaces. This is a unique
            name referring to a specific set of constraints applied to this
            element, used to provide a name to different slices of the same
            element.
          $ref: '#/components/schemas/string'
        _sliceName:
          $ref: '#/components/schemas/Element'
        sliceIsConstraining:
          description: >-
            If true, indicates that this slice definition is constraining a
            slice definition with the same name in an inherited profile. If
            false, the slice is not overriding any slice in an inherited
            profile. If missing, the slice might or might not be overriding a
            slice in an inherited profile, depending on the sliceName.
          $ref: '#/components/schemas/boolean'
        _sliceIsConstraining:
          $ref: '#/components/schemas/Element'
        label:
          description: >-
            A single preferred label which is the text to display beside the
            element indicating its meaning or to use to prompt for the element
            in a user display or form.
          $ref: '#/components/schemas/string'
        _label:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code that has the same meaning as the element in a particular
            terminology.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        slicing:
          description: >-
            Indicates that the element is sliced into a set of alternative
            definitions (i.e. in a structure definition, there are multiple
            different constraints on a single element in the base resource).
            Slicing can be used in any resource that has cardinality ..* on the
            base resource, or any resource with a choice of types. The set of
            slices is any elements that come after this in the element sequence
            that have the same path, until a shorter path occurs (the shorter
            path terminates the set).
          $ref: '#/components/schemas/ElementDefinition_Slicing'
        short:
          description: >-
            A concise description of what this element means (e.g. for use in
            autogenerated summaries).
          $ref: '#/components/schemas/string'
        _short:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            Provides a complete explanation of the meaning of the data element
            for human readability.  For the case of elements derived from
            existing elements (e.g. constraints), the definition SHALL be
            consistent with the base definition, but convey the meaning of the
            element in the particular context of use of the resource. (Note: The
            text you are reading is specified in ElementDefinition.definition).
          $ref: '#/components/schemas/markdown'
        _definition:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            Explanatory notes and implementation guidance about the data
            element, including notes about how to use the data properly,
            exceptions to proper use, etc. (Note: The text you are reading is
            specified in ElementDefinition.comment).
          $ref: '#/components/schemas/markdown'
        _comment:
          $ref: '#/components/schemas/Element'
        requirements:
          description: >-
            This element is for traceability of why the element was created and
            why the constraints exist as they do. This may be used to point to
            source materials or specifications that drove the structure of this
            element.
          $ref: '#/components/schemas/markdown'
        _requirements:
          $ref: '#/components/schemas/Element'
        alias:
          description: >-
            Identifies additional names by which this element might also be
            known.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _alias:
          description: Extensions for alias
          items:
            $ref: '#/components/schemas/Element'
          type: array
        min:
          description: >-
            The minimum number of times this element SHALL appear in the
            instance.
          $ref: '#/components/schemas/unsignedInt'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          description: >-
            The maximum number of times this element is permitted to appear in
            the instance.
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
        base:
          description: >-
            Information about the base definition of the element, provided to
            make it unnecessary for tools to trace the deviation of the element
            through the derived and related profiles. When the element
            definition is not the original definition of an element - i.g.
            either in a constraint on another type, or for elements from a super
            type in a snap shot - then the information in provided in the
            element definition may be different to the base definition. On the
            original definition of the element, it will be same.
          $ref: '#/components/schemas/ElementDefinition_Base'
        contentReference:
          description: >-
            Identifies an element defined elsewhere in the definition whose
            content rules should be applied to the current element.
            ContentReferences bring across all the rules that are in the
            ElementDefinition for the element, including definitions,
            cardinality constraints, bindings, invariants etc.
          $ref: '#/components/schemas/uri'
        _contentReference:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The data type or resource that the value of this element is
            permitted to be.
          items:
            $ref: '#/components/schemas/ElementDefinition_Type'
          type: array
        defaultValueBase64Binary:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _defaultValueBase64Binary:
          $ref: '#/components/schemas/Element'
        defaultValueBoolean:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: ^true|false$
          type: boolean
        _defaultValueBoolean:
          $ref: '#/components/schemas/Element'
        defaultValueCanonical:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: ^\S*$
          type: string
        _defaultValueCanonical:
          $ref: '#/components/schemas/Element'
        defaultValueCode:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _defaultValueCode:
          $ref: '#/components/schemas/Element'
        defaultValueDate:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _defaultValueDate:
          $ref: '#/components/schemas/Element'
        defaultValueDateTime:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _defaultValueDateTime:
          $ref: '#/components/schemas/Element'
        defaultValueDecimal:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _defaultValueDecimal:
          $ref: '#/components/schemas/Element'
        defaultValueId:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _defaultValueId:
          $ref: '#/components/schemas/Element'
        defaultValueInstant:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _defaultValueInstant:
          $ref: '#/components/schemas/Element'
        defaultValueInteger:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _defaultValueInteger:
          $ref: '#/components/schemas/Element'
        defaultValueMarkdown:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _defaultValueMarkdown:
          $ref: '#/components/schemas/Element'
        defaultValueOid:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _defaultValueOid:
          $ref: '#/components/schemas/Element'
        defaultValuePositiveInt:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^[1-9][0-9]*$'
          type: number
        _defaultValuePositiveInt:
          $ref: '#/components/schemas/Element'
        defaultValueString:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _defaultValueString:
          $ref: '#/components/schemas/Element'
        defaultValueTime:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _defaultValueTime:
          $ref: '#/components/schemas/Element'
        defaultValueUnsignedInt:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _defaultValueUnsignedInt:
          $ref: '#/components/schemas/Element'
        defaultValueUri:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: ^\S*$
          type: string
        _defaultValueUri:
          $ref: '#/components/schemas/Element'
        defaultValueUrl:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: ^\S*$
          type: string
        _defaultValueUrl:
          $ref: '#/components/schemas/Element'
        defaultValueUuid:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _defaultValueUuid:
          $ref: '#/components/schemas/Element'
        defaultValueAddress:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Address'
        defaultValueAge:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Age'
        defaultValueAnnotation:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Annotation'
        defaultValueAttachment:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Attachment'
        defaultValueCodeableConcept:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/CodeableConcept'
        defaultValueCoding:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Coding'
        defaultValueContactPoint:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/ContactPoint'
        defaultValueCount:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Count'
        defaultValueDistance:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Distance'
        defaultValueDuration:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Duration'
        defaultValueHumanName:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/HumanName'
        defaultValueIdentifier:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Identifier'
        defaultValueMoney:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Money'
        defaultValuePeriod:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Period'
        defaultValueQuantity:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Quantity'
        defaultValueRange:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Range'
        defaultValueRatio:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Ratio'
        defaultValueReference:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Reference'
        defaultValueSampledData:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/SampledData'
        defaultValueSignature:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Signature'
        defaultValueTiming:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Timing'
        defaultValueContactDetail:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/ContactDetail'
        defaultValueContributor:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Contributor'
        defaultValueDataRequirement:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/DataRequirement'
        defaultValueExpression:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Expression'
        defaultValueParameterDefinition:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/ParameterDefinition'
        defaultValueRelatedArtifact:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/RelatedArtifact'
        defaultValueTriggerDefinition:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/TriggerDefinition'
        defaultValueUsageContext:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/UsageContext'
        defaultValueDosage:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Dosage'
        defaultValueMeta:
          description: >-
            The value that should be used if there is no value stated in the
            instance (e.g. 'if not otherwise specified, the abstract is false').
          $ref: '#/components/schemas/Meta'
        meaningWhenMissing:
          description: >-
            The Implicit meaning that is to be understood when this element is
            missing (e.g. 'when this element is missing, the period is
            ongoing').
          $ref: '#/components/schemas/markdown'
        _meaningWhenMissing:
          $ref: '#/components/schemas/Element'
        orderMeaning:
          description: >-
            If present, indicates that the order of the repeating element has
            meaning and describes what that meaning is.  If absent, it means
            that the order of the element has no meaning.
          $ref: '#/components/schemas/string'
        _orderMeaning:
          $ref: '#/components/schemas/Element'
        fixedBase64Binary:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _fixedBase64Binary:
          $ref: '#/components/schemas/Element'
        fixedBoolean:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: ^true|false$
          type: boolean
        _fixedBoolean:
          $ref: '#/components/schemas/Element'
        fixedCanonical:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: ^\S*$
          type: string
        _fixedCanonical:
          $ref: '#/components/schemas/Element'
        fixedCode:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _fixedCode:
          $ref: '#/components/schemas/Element'
        fixedDate:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _fixedDate:
          $ref: '#/components/schemas/Element'
        fixedDateTime:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _fixedDateTime:
          $ref: '#/components/schemas/Element'
        fixedDecimal:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _fixedDecimal:
          $ref: '#/components/schemas/Element'
        fixedId:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _fixedId:
          $ref: '#/components/schemas/Element'
        fixedInstant:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _fixedInstant:
          $ref: '#/components/schemas/Element'
        fixedInteger:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _fixedInteger:
          $ref: '#/components/schemas/Element'
        fixedMarkdown:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _fixedMarkdown:
          $ref: '#/components/schemas/Element'
        fixedOid:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _fixedOid:
          $ref: '#/components/schemas/Element'
        fixedPositiveInt:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^[1-9][0-9]*$'
          type: number
        _fixedPositiveInt:
          $ref: '#/components/schemas/Element'
        fixedString:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _fixedString:
          $ref: '#/components/schemas/Element'
        fixedTime:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _fixedTime:
          $ref: '#/components/schemas/Element'
        fixedUnsignedInt:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _fixedUnsignedInt:
          $ref: '#/components/schemas/Element'
        fixedUri:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: ^\S*$
          type: string
        _fixedUri:
          $ref: '#/components/schemas/Element'
        fixedUrl:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: ^\S*$
          type: string
        _fixedUrl:
          $ref: '#/components/schemas/Element'
        fixedUuid:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _fixedUuid:
          $ref: '#/components/schemas/Element'
        fixedAddress:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Address'
        fixedAge:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Age'
        fixedAnnotation:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Annotation'
        fixedAttachment:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Attachment'
        fixedCodeableConcept:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/CodeableConcept'
        fixedCoding:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Coding'
        fixedContactPoint:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/ContactPoint'
        fixedCount:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Count'
        fixedDistance:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Distance'
        fixedDuration:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Duration'
        fixedHumanName:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/HumanName'
        fixedIdentifier:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Identifier'
        fixedMoney:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Money'
        fixedPeriod:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Period'
        fixedQuantity:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Quantity'
        fixedRange:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Range'
        fixedRatio:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Ratio'
        fixedReference:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Reference'
        fixedSampledData:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/SampledData'
        fixedSignature:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Signature'
        fixedTiming:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Timing'
        fixedContactDetail:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/ContactDetail'
        fixedContributor:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Contributor'
        fixedDataRequirement:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/DataRequirement'
        fixedExpression:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Expression'
        fixedParameterDefinition:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/ParameterDefinition'
        fixedRelatedArtifact:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/RelatedArtifact'
        fixedTriggerDefinition:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/TriggerDefinition'
        fixedUsageContext:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/UsageContext'
        fixedDosage:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Dosage'
        fixedMeta:
          description: >-
            Specifies a value that SHALL be exactly the value  for this element
            in the instance. For purposes of comparison, non-significant
            whitespace is ignored, and all values must be an exact match (case
            and accent sensitive). Missing elements/attributes must also be
            missing.
          $ref: '#/components/schemas/Meta'
        patternBase64Binary:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _patternBase64Binary:
          $ref: '#/components/schemas/Element'
        patternBoolean:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: ^true|false$
          type: boolean
        _patternBoolean:
          $ref: '#/components/schemas/Element'
        patternCanonical:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: ^\S*$
          type: string
        _patternCanonical:
          $ref: '#/components/schemas/Element'
        patternCode:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _patternCode:
          $ref: '#/components/schemas/Element'
        patternDate:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _patternDate:
          $ref: '#/components/schemas/Element'
        patternDateTime:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _patternDateTime:
          $ref: '#/components/schemas/Element'
        patternDecimal:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _patternDecimal:
          $ref: '#/components/schemas/Element'
        patternId:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _patternId:
          $ref: '#/components/schemas/Element'
        patternInstant:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _patternInstant:
          $ref: '#/components/schemas/Element'
        patternInteger:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _patternInteger:
          $ref: '#/components/schemas/Element'
        patternMarkdown:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _patternMarkdown:
          $ref: '#/components/schemas/Element'
        patternOid:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _patternOid:
          $ref: '#/components/schemas/Element'
        patternPositiveInt:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[1-9][0-9]*$'
          type: number
        _patternPositiveInt:
          $ref: '#/components/schemas/Element'
        patternString:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _patternString:
          $ref: '#/components/schemas/Element'
        patternTime:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _patternTime:
          $ref: '#/components/schemas/Element'
        patternUnsignedInt:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _patternUnsignedInt:
          $ref: '#/components/schemas/Element'
        patternUri:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: ^\S*$
          type: string
        _patternUri:
          $ref: '#/components/schemas/Element'
        patternUrl:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: ^\S*$
          type: string
        _patternUrl:
          $ref: '#/components/schemas/Element'
        patternUuid:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _patternUuid:
          $ref: '#/components/schemas/Element'
        patternAddress:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Address'
        patternAge:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Age'
        patternAnnotation:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Annotation'
        patternAttachment:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Attachment'
        patternCodeableConcept:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/CodeableConcept'
        patternCoding:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Coding'
        patternContactPoint:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/ContactPoint'
        patternCount:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Count'
        patternDistance:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Distance'
        patternDuration:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Duration'
        patternHumanName:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/HumanName'
        patternIdentifier:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Identifier'
        patternMoney:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Money'
        patternPeriod:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Period'
        patternQuantity:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Quantity'
        patternRange:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Range'
        patternRatio:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Ratio'
        patternReference:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Reference'
        patternSampledData:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/SampledData'
        patternSignature:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Signature'
        patternTiming:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Timing'
        patternContactDetail:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/ContactDetail'
        patternContributor:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Contributor'
        patternDataRequirement:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/DataRequirement'
        patternExpression:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Expression'
        patternParameterDefinition:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/ParameterDefinition'
        patternRelatedArtifact:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/RelatedArtifact'
        patternTriggerDefinition:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/TriggerDefinition'
        patternUsageContext:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/UsageContext'
        patternDosage:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Dosage'
        patternMeta:
          description: >-
            Specifies a value that the value in the instance SHALL follow - that
            is, any value in the pattern must be found in the instance. Other
            additional values may be found too. This is effectively constraint
            by example.


            When pattern[x] is used to constrain a primitive, it means that the
            value provided in the pattern[x] must match the instance value
            exactly.


            When pattern[x] is used to constrain an array, it means that each
            element provided in the pattern[x] array must (recursively) match at
            least one element from the instance array.


            When pattern[x] is used to constrain a complex object, it means that
            each property in the pattern must be present in the complex object,
            and its value must recursively match -- i.e.,


            1. If primitive: it must match exactly the pattern value

            2. If a complex object: it must match (recursively) the pattern
            value

            3. If an array: it must match (recursively) the pattern value.
          $ref: '#/components/schemas/Meta'
        example:
          description: >-
            A sample value for this element demonstrating the type of
            information that would typically be found in the element.
          items:
            $ref: '#/components/schemas/ElementDefinition_Example'
          type: array
        minValueDate:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _minValueDate:
          $ref: '#/components/schemas/Element'
        minValueDateTime:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _minValueDateTime:
          $ref: '#/components/schemas/Element'
        minValueInstant:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _minValueInstant:
          $ref: '#/components/schemas/Element'
        minValueTime:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _minValueTime:
          $ref: '#/components/schemas/Element'
        minValueDecimal:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _minValueDecimal:
          $ref: '#/components/schemas/Element'
        minValueInteger:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _minValueInteger:
          $ref: '#/components/schemas/Element'
        minValuePositiveInt:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^[1-9][0-9]*$'
          type: number
        _minValuePositiveInt:
          $ref: '#/components/schemas/Element'
        minValueUnsignedInt:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _minValueUnsignedInt:
          $ref: '#/components/schemas/Element'
        minValueQuantity:
          description: >-
            The minimum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          $ref: '#/components/schemas/Quantity'
        maxValueDate:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _maxValueDate:
          $ref: '#/components/schemas/Element'
        maxValueDateTime:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _maxValueDateTime:
          $ref: '#/components/schemas/Element'
        maxValueInstant:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _maxValueInstant:
          $ref: '#/components/schemas/Element'
        maxValueTime:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _maxValueTime:
          $ref: '#/components/schemas/Element'
        maxValueDecimal:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _maxValueDecimal:
          $ref: '#/components/schemas/Element'
        maxValueInteger:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _maxValueInteger:
          $ref: '#/components/schemas/Element'
        maxValuePositiveInt:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^[1-9][0-9]*$'
          type: number
        _maxValuePositiveInt:
          $ref: '#/components/schemas/Element'
        maxValueUnsignedInt:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _maxValueUnsignedInt:
          $ref: '#/components/schemas/Element'
        maxValueQuantity:
          description: >-
            The maximum allowed value for the element. The value is inclusive.
            This is allowed for the types date, dateTime, instant, time,
            decimal, integer, and Quantity.
          $ref: '#/components/schemas/Quantity'
        maxLength:
          description: >-
            Indicates the maximum length in characters that is permitted to be
            present in conformant instances and which is expected to be
            supported by conformant consumers that support the element.
          $ref: '#/components/schemas/integer'
        _maxLength:
          $ref: '#/components/schemas/Element'
        condition:
          description: >-
            A reference to an invariant that may make additional statements
            about the cardinality or value in the instance.
          items:
            $ref: '#/components/schemas/id'
          type: array
        _condition:
          description: Extensions for condition
          items:
            $ref: '#/components/schemas/Element'
          type: array
        constraint:
          description: >-
            Formal constraints such as co-occurrence and other constraints that
            can be computationally evaluated within the context of the instance.
          items:
            $ref: '#/components/schemas/ElementDefinition_Constraint'
          type: array
        mustSupport:
          description: >-
            If true, implementations that produce or consume resources SHALL
            provide "support" for the element in some meaningful way.  If false,
            the element may be ignored and not supported. If false, whether to
            populate or use the data element in any way is at the discretion of
            the implementation.
          $ref: '#/components/schemas/boolean'
        _mustSupport:
          $ref: '#/components/schemas/Element'
        isModifier:
          description: >-
            If true, the value of this element affects the interpretation of the
            element or resource that contains it, and the value of the element
            cannot be ignored. Typically, this is used for status, negation and
            qualification codes. The effect of this is that the element cannot
            be ignored by systems: they SHALL either recognize the element and
            process it, and/or a pre-determination has been made that it is not
            relevant to their particular system.
          $ref: '#/components/schemas/boolean'
        _isModifier:
          $ref: '#/components/schemas/Element'
        isModifierReason:
          description: >-
            Explains how that element affects the interpretation of the resource
            or element that contains it.
          $ref: '#/components/schemas/string'
        _isModifierReason:
          $ref: '#/components/schemas/Element'
        isSummary:
          description: >-
            Whether the element should be included if a client requests a search
            with the parameter _summary=true.
          $ref: '#/components/schemas/boolean'
        _isSummary:
          $ref: '#/components/schemas/Element'
        binding:
          description: >-
            Binds to a value set if this element is coded (code, Coding,
            CodeableConcept, Quantity), or the data types (string, uri).
          $ref: '#/components/schemas/ElementDefinition_Binding'
        _mapping:
          description: >-
            Identifies a concept from an external specification that roughly
            corresponds to this element.
          items:
            $ref: '#/components/schemas/ElementDefinition_Mapping'
          type: array
      additionalProperties: false
    ElementDefinition_Slicing:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        discriminator:
          description: >-
            Designates which child elements are used to discriminate between the
            slices when processing an instance. If one or more discriminators
            are provided, the value of the child elements in the instance data
            SHALL completely distinguish which slice the element in the resource
            matches based on the allowed values for those elements in each of
            the slices.
          items:
            $ref: '#/components/schemas/ElementDefinition_Discriminator'
          type: array
        description:
          description: >-
            A human-readable text description of how the slicing works. If there
            is no discriminator, this is required to be present to provide
            whatever information is possible about how the slices can be
            differentiated.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        ordered:
          description: >-
            If the matching elements have to occur in the same order as defined
            in the profile.
          $ref: '#/components/schemas/boolean'
        _ordered:
          $ref: '#/components/schemas/Element'
        rules:
          description: >-
            Whether additional slices are allowed or not. When the slices are
            ordered, profile authors can also say that additional slices are
            only allowed at the end.
          enum:
            - closed
            - open
            - openAtEnd
        _rules:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Discriminator:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            How the element value is interpreted when discrimination is
            evaluated.
          enum:
            - value
            - exists
            - pattern
            - type
            - profile
        _type:
          $ref: '#/components/schemas/Element'
        path:
          description: >-
            A FHIRPath expression, using [the simple subset of
            FHIRPath](fhirpath.html#simple), that is used to identify the
            element on which discrimination is based.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Base:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The Path that identifies the base element - this matches the
            ElementDefinition.path for that element. Across FHIR, there is only
            one base definition of any element - that is, an element definition
            on a [[[StructureDefinition]]] without a StructureDefinition.base.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        min:
          $ref: '#/components/schemas/unsignedInt'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Type:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            URL of Data type or Resource that is a(or the) type used for this
            element. References are URLs that are relative to
            http://hl7.org/fhir/StructureDefinition e.g. "string" is a reference
            to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are
            only allowed in logical models.
          $ref: '#/components/schemas/uri'
        _code:
          $ref: '#/components/schemas/Element'
        profile:
          description: >-
            Identifies a profile structure or implementation Guide that applies
            to the datatype this element refers to. If any profiles are
            specified, then the content must conform to at least one of them.
            The URL can be a local reference - to a contained
            StructureDefinition, or a reference to another StructureDefinition
            or Implementation Guide by a canonical URL. When an implementation
            guide is specified, the type SHALL conform to at least one profile
            defined in the implementation guide.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        targetProfile:
          description: >-
            Used when the type is "Reference" or "canonical", and identifies a
            profile structure or implementation Guide that applies to the target
            of the reference this element refers to. If any profiles are
            specified, then the content must conform to at least one of them.
            The URL can be a local reference - to a contained
            StructureDefinition, or a reference to another StructureDefinition
            or Implementation Guide by a canonical URL. When an implementation
            guide is specified, the target resource SHALL conform to at least
            one profile defined in the implementation guide.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        aggregation:
          description: >-
            If the type is a reference to another resource, how the resource is
            or can be aggregated - is it a contained resource, or a reference,
            and if the context is a bundle, is it included in the bundle.
          items:
            enum:
              - contained
              - referenced
              - bundled
          type: array
        _aggregation:
          description: Extensions for aggregation
          items:
            $ref: '#/components/schemas/Element'
          type: array
        versioning:
          description: >-
            Whether this reference needs to be version specific or version
            independent, or whether either can be used.
          enum:
            - either
            - independent
            - specific
        _versioning:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ElementDefinition_Example:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        label:
          $ref: '#/components/schemas/string'
        _label:
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: ^\S*$
          type: string
        _valueCanonical:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueId:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _valueInstant:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          $ref: '#/components/schemas/Element'
        valueOid:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          $ref: '#/components/schemas/Element'
        valueString:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: ^\S*$
          type: string
        _valueUrl:
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _valueUuid:
          $ref: '#/components/schemas/Element'
        valueAddress:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Address'
        valueAge:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Count'
        valueDistance:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Distance'
        valueDuration:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Money'
        valuePeriod:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Period'
        valueQuantity:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Ratio'
        valueReference:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Signature'
        valueTiming:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          description: >-
            The actual value for the element, which must be one of the types
            allowed for this element.
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    ElementDefinition_Constraint:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        key:
          description: >-
            Allows identification of which elements have their cardinalities
            impacted by the constraint.  Will not be referenced for constraints
            that do not affect cardinality.
          $ref: '#/components/schemas/id'
        _key:
          $ref: '#/components/schemas/Element'
        requirements:
          $ref: '#/components/schemas/string'
        _requirements:
          $ref: '#/components/schemas/Element'
        severity:
          description: >-
            Identifies the impact constraint violation has on the conformance of
            the instance.
          enum:
            - error
            - warning
        _severity:
          $ref: '#/components/schemas/Element'
        human:
          description: >-
            Text that can be used to describe the constraint in messages
            identifying that the constraint has been violated.
          $ref: '#/components/schemas/string'
        _human:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            A [FHIRPath](fhirpath.html) expression of constraint that can be
            executed to see if this constraint is met.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
        xpath:
          description: >-
            An XPath expression of constraint that can be executed to see if
            this constraint is met.
          $ref: '#/components/schemas/string'
        _xpath:
          $ref: '#/components/schemas/Element'
        source:
          description: >-
            A reference to the original source of the constraint, for
            traceability purposes.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    ElementDefinition_Binding:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        strength:
          description: >-
            Indicates the degree of conformance expectations associated with
            this binding - that is, the degree to which the provided value set
            must be adhered to in the instances.
          enum:
            - required
            - extensible
            - preferred
            - example
        _strength:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        valueSet:
          description: >-
            Refers to the value set that identifies the set of codes the binding
            refers to.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    ElementDefinition_Mapping:
      description: >-
        Captures constraints on each element within the resource, profile, or
        extension.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identity:
          $ref: '#/components/schemas/id'
        _identity:
          $ref: '#/components/schemas/Element'
        language:
          description: >-
            Identifies the computable language in which mapping.map is
            expressed.
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        map:
          description: >-
            Expresses what part of the target specification corresponds to this
            element.
          $ref: '#/components/schemas/string'
        _map:
          $ref: '#/components/schemas/Element'
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Account:
      description: >-
        A financial tool for tracking value accrued for a particular purpose.
        In the healthcare field, used to track charges for a patient, cost
        centers, etc.
      properties:
        resourceType:
          description: This is a Account resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Unique identifier used to reference the account.  Might or might not
            be intended for human use (e.g. credit card number).
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Indicates whether the account is presently used/usable or not.
          enum:
            - active
            - inactive
            - entered-in-error
            - on-hold
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        name:
          description: >-
            Name used for the account when displaying it to humans in reports,
            etc.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        subject:
          description: >-
            Identifies the entity which incurs the expenses. While the immediate
            recipients of services or goods might be entities related to the
            subject, the expenses were ultimately incurred by the subject of the
            Account.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        servicePeriod:
          $ref: '#/components/schemas/Period'
        coverage:
          description: >-
            The party(s) that are responsible for covering the payment of this
            account, and what order should they be applied to the account.
          items:
            $ref: '#/components/schemas/Account_Coverage'
          type: array
        owner:
          description: >-
            Indicates the service area, hospital, department, etc. with
            responsibility for managing the Account.
          $ref: '#/components/schemas/Reference'
        description:
          description: >-
            Provides additional information about what the account tracks and
            how it is used.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        guarantor:
          description: >-
            The parties responsible for balancing the account if other payment
            options fall short.
          items:
            $ref: '#/components/schemas/Account_Guarantor'
          type: array
        partOf:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    Account_Coverage:
      description: >-
        A financial tool for tracking value accrued for a particular purpose.
        In the healthcare field, used to track charges for a patient, cost
        centers, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        coverage:
          description: >-
            The party(s) that contribute to payment (or part of) of the charges
            applied to this account (including self-pay).


            A coverage may only be responsible for specific types of charges,
            and the sequence of the coverages in the account could be important
            when processing billing.
          $ref: '#/components/schemas/Reference'
        priority:
          $ref: '#/components/schemas/positiveInt'
        _priority:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - coverage
    Account_Guarantor:
      description: >-
        A financial tool for tracking value accrued for a particular purpose.
        In the healthcare field, used to track charges for a patient, cost
        centers, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        party:
          $ref: '#/components/schemas/Reference'
        onHold:
          description: >-
            A guarantor may be placed on credit hold or otherwise have their
            role temporarily suspended.
          $ref: '#/components/schemas/boolean'
        _onHold:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The timeframe during which the guarantor accepts responsibility for
            the account.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - party
    ActivityDefinition:
      description: >-
        This resource allows for the definition of some activity to be
        performed, independent of a particular patient, practitioner, or other
        performance context.
      properties:
        resourceType:
          description: This is a ActivityDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this activity definition
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this activity definition is (or will be)
            published. This URL can be the target of a canonical reference. It
            SHALL remain the same when the activity definition is stored on
            different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this activity
            definition when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the activity
            definition when it is referenced in a specification, model, design
            or instance. This is an arbitrary value managed by the activity
            definition author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence. To provide a version
            consistent with the Decision Support Service specification, use the
            format Major.Minor.Revision (e.g. 1.0.0). For more information on
            versioning knowledge assets, refer to the Decision Support Service
            specification. Note that a version is required for non-experimental
            active assets.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the activity definition. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the activity
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the activity definition giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this activity definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this activity definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: >-
            A code or group definition that describes the intended subject of
            the activity being defined.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            A code or group definition that describes the intended subject of
            the activity being defined.
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the activity definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate activity definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the activity definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this activity definition is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description of how the activity definition is used from a
            clinical perspective.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the activity definition and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the activity definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the activity definition content was or is
            planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the activity. Topics
            provide a high-level categorization of the activity that can be
            useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        library:
          description: >-
            A reference to a Library resource containing any formal logic used
            by the activity definition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        kind:
          description: >-
            A description of the kind of resource the activity definition is
            representing. For example, a MedicationRequest, a ServiceRequest, or
            a CommunicationRequest. Typically, but not always, this is a Request
            resource.
          $ref: '#/components/schemas/code'
        _kind:
          $ref: '#/components/schemas/Element'
        profile:
          description: >-
            A profile to which the target of the activity definition is expected
            to conform.
          $ref: '#/components/schemas/canonical'
        code:
          description: >-
            Detailed description of the type of activity; e.g. What lab test,
            what procedure, what kind of encounter.
          $ref: '#/components/schemas/CodeableConcept'
        intent:
          description: >-
            Indicates the level of authority/intentionality associated with the
            activity and where the request should fit into the workflow chain.
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        priority:
          description: >-
            Indicates how quickly the activity  should be addressed with respect
            to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        doNotPerform:
          description: >-
            Set this to true if the definition is to indicate that a particular
            activity should NOT be performed. If true, this element should be
            interpreted to reinforce a negative coding. For example NPO as a
            code with a doNotPerform of true would still indicate to NOT perform
            the action.
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          $ref: '#/components/schemas/Element'
        timingTiming:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Timing'
        timingDateTime:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timingDateTime:
          $ref: '#/components/schemas/Element'
        timingAge:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Age'
        timingPeriod:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Period'
        timingRange:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Range'
        timingDuration:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Duration'
        location:
          description: >-
            Identifies the facility where the activity will occur; e.g. home,
            hospital, specific clinic, etc.
          $ref: '#/components/schemas/Reference'
        participant:
          description: Indicates who should participate in performing the action described.
          items:
            $ref: '#/components/schemas/ActivityDefinition_Participant'
          type: array
        productReference:
          description: >-
            Identifies the food, drug or other product being consumed or
            supplied in the activity.
          $ref: '#/components/schemas/Reference'
        productCodeableConcept:
          description: >-
            Identifies the food, drug or other product being consumed or
            supplied in the activity.
          $ref: '#/components/schemas/CodeableConcept'
        quantity:
          description: >-
            Identifies the quantity expected to be consumed at once (per dose,
            per meal, etc.).
          $ref: '#/components/schemas/Quantity'
        dosage:
          description: >-
            Provides detailed dosage instructions in the same way that they are
            described for MedicationRequest resources.
          items:
            $ref: '#/components/schemas/Dosage'
          type: array
        bodySite:
          description: >-
            Indicates the sites on the subject's body where the procedure should
            be performed (I.e. the target sites).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specimenRequirement:
          description: >-
            Defines specimen requirements for the action to be performed, such
            as required specimens for a lab test.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        observationRequirement:
          description: >-
            Defines observation requirements for the action to be performed,
            such as body weight or surface area.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        observationResultRequirement:
          description: >-
            Defines the observations that are expected to be produced by the
            action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        transform:
          description: >-
            A reference to a StructureMap resource that defines a transform that
            can be executed to produce the intent resource using the
            ActivityDefinition instance as the input.
          $ref: '#/components/schemas/canonical'
        dynamicValue:
          description: >-
            Dynamic values that will be evaluated to produce values for elements
            of the resulting resource. For example, if the dosage of a
            medication must be computed based on the patient's weight, a dynamic
            value would be used to specify an expression that calculated the
            weight, and the path on the request resource that would contain the
            result.
          items:
            $ref: '#/components/schemas/ActivityDefinition_DynamicValue'
          type: array
      additionalProperties: false
      required:
        - resourceType
    ActivityDefinition_Participant:
      description: >-
        This resource allows for the definition of some activity to be
        performed, independent of a particular patient, practitioner, or other
        performance context.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        role:
          description: >-
            The role the participant should play in performing the described
            action.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ActivityDefinition_DynamicValue:
      description: >-
        This resource allows for the definition of some activity to be
        performed, independent of a particular patient, practitioner, or other
        performance context.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The path to the element to be customized. This is the path on the
            resource that will hold the result of the calculation defined by the
            expression. The specified path SHALL be a FHIRPath resolveable on
            the specified target type of the ActivityDefinition, and SHALL
            consist only of identifiers, constant indexers, and a restricted
            subset of functions. The path is allowed to contain qualifiers (.)
            to traverse sub-elements, as well as indexers ([x]) to traverse
            multiple-cardinality sub-elements (see the [Simple FHIRPath
            Profile](fhirpath.html#simple) for full details).
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        expression:
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
      required:
        - expression
    AdverseEvent:
      description: >-
        Actual or  potential/avoided event causing unintended physical injury
        resulting from or contributed to by medical care, a research study or
        other healthcare setting factors that requires additional monitoring,
        treatment, or hospitalization, or that results in death.
      properties:
        resourceType:
          description: This is a AdverseEvent resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this adverse event by the performer
            or other systems which remain constant as the resource is updated
            and propagates from server to server.
          $ref: '#/components/schemas/Identifier'
        actuality:
          description: >-
            Whether the event actually happened, or just had the potential to.
            Note that this is independent of whether anyone was affected or
            harmed or how severely.
          enum:
            - actual
            - potential
        _actuality:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            The overall type of event, intended for search and filtering
            purposes.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        event:
          description: >-
            This element defines the specific type of event that occurred or
            that was prevented from occurring.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which AdverseEvent was created or to which the
            creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        detected:
          description: >-
            Estimated or actual date the AdverseEvent began, in the opinion of
            the reporter.
          $ref: '#/components/schemas/dateTime'
        _detected:
          $ref: '#/components/schemas/Element'
        recordedDate:
          description: >-
            The date on which the existence of the AdverseEvent was first
            recorded.
          $ref: '#/components/schemas/dateTime'
        _recordedDate:
          $ref: '#/components/schemas/Element'
        resultingCondition:
          description: >-
            Includes information about the reaction that occurred as a result of
            exposure to a substance (for example, a drug or a chemical).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        location:
          $ref: '#/components/schemas/Reference'
        seriousness:
          $ref: '#/components/schemas/CodeableConcept'
        severity:
          description: >-
            Describes the severity of the adverse event, in relation to the
            subject. Contrast to AdverseEvent.seriousness - a severe rash might
            not be serious, but a mild heart problem is.
          $ref: '#/components/schemas/CodeableConcept'
        outcome:
          $ref: '#/components/schemas/CodeableConcept'
        recorder:
          description: >-
            Information on who recorded the adverse event.  May be the patient
            or a practitioner.
          $ref: '#/components/schemas/Reference'
        contributor:
          description: >-
            Parties that may or should contribute or have contributed
            information to the adverse event, which can consist of one or more
            activities.  Such information includes information leading to the
            decision to perform the activity and how to perform the activity
            (e.g. consultant), information that the activity itself seeks to
            reveal (e.g. informant of clinical history), or information about
            what activity was performed (e.g. informant witness).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        suspectEntity:
          description: >-
            Describes the entity that is suspected to have caused the adverse
            event.
          items:
            $ref: '#/components/schemas/AdverseEvent_SuspectEntity'
          type: array
        subjectMedicalHistory:
          description: AdverseEvent.subjectMedicalHistory.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        referenceDocument:
          description: AdverseEvent.referenceDocument.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        study:
          description: AdverseEvent.study.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    AdverseEvent_SuspectEntity:
      description: >-
        Actual or  potential/avoided event causing unintended physical injury
        resulting from or contributed to by medical care, a research study or
        other healthcare setting factors that requires additional monitoring,
        treatment, or hospitalization, or that results in death.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        instance:
          description: >-
            Identifies the actual instance of what caused the adverse event.
            May be a substance, medication, medication administration,
            medication statement or a device.
          $ref: '#/components/schemas/Reference'
        causality:
          description: Information on the possible cause of the event.
          items:
            $ref: '#/components/schemas/AdverseEvent_Causality'
          type: array
      additionalProperties: false
      required:
        - instance
    AdverseEvent_Causality:
      description: >-
        Actual or  potential/avoided event causing unintended physical injury
        resulting from or contributed to by medical care, a research study or
        other healthcare setting factors that requires additional monitoring,
        treatment, or hospitalization, or that results in death.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        assessment:
          $ref: '#/components/schemas/CodeableConcept'
        productRelatedness:
          $ref: '#/components/schemas/string'
        _productRelatedness:
          $ref: '#/components/schemas/Element'
        author:
          $ref: '#/components/schemas/Reference'
        method:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    AllergyIntolerance:
      description: >-
        Risk of harmful or undesirable, physiological response which is unique
        to an individual and associated with exposure to a substance.
      properties:
        resourceType:
          description: This is a AllergyIntolerance resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this AllergyIntolerance by the
            performer or other systems which remain constant as the resource is
            updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        clinicalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        verificationStatus:
          description: >-
            Assertion about certainty associated with the propensity, or
            potential risk, of a reaction to the identified substance (including
            pharmaceutical product).
          $ref: '#/components/schemas/CodeableConcept'
        type:
          description: >-
            Identification of the underlying physiological mechanism for the
            reaction risk.
          enum:
            - allergy
            - intolerance
        _type:
          $ref: '#/components/schemas/Element'
        category:
          description: Category of the identified substance.
          items:
            enum:
              - food
              - medication
              - environment
              - biologic
          type: array
        _category:
          description: Extensions for category
          items:
            $ref: '#/components/schemas/Element'
          type: array
        criticality:
          description: >-
            Estimate of the potential clinical harm, or seriousness, of the
            reaction to the identified substance.
          enum:
            - low
            - high
            - unable-to-assess
        _criticality:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            Code for an allergy or intolerance statement (either a positive or a
            negated/excluded statement).  This may be a code for a substance or
            pharmaceutical product that is considered to be responsible for the
            adverse reaction risk (e.g., "Latex"), an allergy or intolerance
            condition (e.g., "Latex allergy"), or a negated/excluded code for a
            specific substance or class (e.g., "No latex allergy") or a general
            or categorical negated statement (e.g.,  "No known allergy", "No
            known drug allergies").  Note: the substance for a specific reaction
            may be different from the substance identified as the cause of the
            risk, but it must be consistent with it. For instance, it may be a
            more specific substance (e.g. a brand medication) or a composite
            product that includes the identified substance. It must be
            clinically safe to only process the 'code' and ignore the
            'reaction.substance'.  If a receiving system is unable to confirm
            that AllergyIntolerance.reaction.substance falls within the semantic
            scope of AllergyIntolerance.code, then the receiving system should
            ignore AllergyIntolerance.reaction.substance.
          $ref: '#/components/schemas/CodeableConcept'
        patient:
          $ref: '#/components/schemas/Reference'
        encounter:
          $ref: '#/components/schemas/Reference'
        onsetDateTime:
          description: >-
            Estimated or actual date,  date-time, or age when allergy or
            intolerance was identified.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _onsetDateTime:
          $ref: '#/components/schemas/Element'
        onsetAge:
          description: >-
            Estimated or actual date,  date-time, or age when allergy or
            intolerance was identified.
          $ref: '#/components/schemas/Age'
        onsetPeriod:
          description: >-
            Estimated or actual date,  date-time, or age when allergy or
            intolerance was identified.
          $ref: '#/components/schemas/Period'
        onsetRange:
          description: >-
            Estimated or actual date,  date-time, or age when allergy or
            intolerance was identified.
          $ref: '#/components/schemas/Range'
        onsetString:
          description: >-
            Estimated or actual date,  date-time, or age when allergy or
            intolerance was identified.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _onsetString:
          $ref: '#/components/schemas/Element'
        recordedDate:
          description: >-
            The recordedDate represents when this particular AllergyIntolerance
            record was created in the system, which is often a system-generated
            date.
          $ref: '#/components/schemas/dateTime'
        _recordedDate:
          $ref: '#/components/schemas/Element'
        recorder:
          description: >-
            Individual who recorded the record and takes responsibility for its
            content.
          $ref: '#/components/schemas/Reference'
        asserter:
          $ref: '#/components/schemas/Reference'
        lastOccurrence:
          description: >-
            Represents the date and/or time of the last known occurrence of a
            reaction event.
          $ref: '#/components/schemas/dateTime'
        _lastOccurrence:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            Additional narrative about the propensity for the Adverse Reaction,
            not captured in other fields.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        reaction:
          description: >-
            Details about each adverse reaction event linked to exposure to the
            identified substance.
          items:
            $ref: '#/components/schemas/AllergyIntolerance_Reaction'
          type: array
      additionalProperties: false
      required:
        - patient
        - resourceType
    AllergyIntolerance_Reaction:
      description: >-
        Risk of harmful or undesirable, physiological response which is unique
        to an individual and associated with exposure to a substance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        substance:
          description: >-
            Identification of the specific substance (or pharmaceutical product)
            considered to be responsible for the Adverse Reaction event. Note:
            the substance for a specific reaction may be different from the
            substance identified as the cause of the risk, but it must be
            consistent with it. For instance, it may be a more specific
            substance (e.g. a brand medication) or a composite product that
            includes the identified substance. It must be clinically safe to
            only process the 'code' and ignore the 'reaction.substance'.  If a
            receiving system is unable to confirm that
            AllergyIntolerance.reaction.substance falls within the semantic
            scope of AllergyIntolerance.code, then the receiving system should
            ignore AllergyIntolerance.reaction.substance.
          $ref: '#/components/schemas/CodeableConcept'
        manifestation:
          description: >-
            Clinical symptoms and/or signs that are observed or associated with
            the adverse reaction event.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          description: >-
            Text description about the reaction as a whole, including details of
            the manifestation if required.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        onset:
          $ref: '#/components/schemas/dateTime'
        _onset:
          $ref: '#/components/schemas/Element'
        severity:
          description: >-
            Clinical assessment of the severity of the reaction event as a
            whole, potentially considering multiple different manifestations.
          enum:
            - mild
            - moderate
            - severe
        _severity:
          $ref: '#/components/schemas/Element'
        exposureRoute:
          description: >-
            Identification of the route by which the subject was exposed to the
            substance.
          $ref: '#/components/schemas/CodeableConcept'
        note:
          description: >-
            Additional text about the adverse reaction event not captured in
            other fields.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - manifestation
    Appointment:
      description: >-
        A booking of a healthcare event among patient(s), practitioner(s),
        related person(s) and/or device(s) for a specific date/time. This may
        result in one or more Encounter(s).
      properties:
        resourceType:
          description: This is a Appointment resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            This records identifiers associated with this appointment concern
            that are defined by business processes and/or used to refer to it
            when a direct URL reference to the resource itself is not
            appropriate (e.g. in CDA documents, or in written / printed
            documentation).
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: >-
            The overall status of the Appointment. Each of the participants has
            their own participation status which indicates their involvement in
            the process, however this status indicates the shared status.
          enum:
            - proposed
            - pending
            - booked
            - arrived
            - fulfilled
            - cancelled
            - noshow
            - entered-in-error
            - checked-in
            - waitlist
        _status:
          $ref: '#/components/schemas/Element'
        cancelationReason:
          description: >-
            The coded reason for the appointment being cancelled. This is often
            used in reporting/billing/futher processing to determine if further
            actions are required, or specific fees apply.
          $ref: '#/components/schemas/CodeableConcept'
        serviceCategory:
          description: >-
            A broad categorization of the service that is to be performed during
            this appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        serviceType:
          description: >-
            The specific service that is to be performed during this
            appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialty:
          description: >-
            The specialty of a practitioner that would be required to perform
            the service requested in this appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        appointmentType:
          description: >-
            The style of appointment or patient that has been booked in the slot
            (not service type).
          $ref: '#/components/schemas/CodeableConcept'
        reasonCode:
          description: >-
            The coded reason that this appointment is being scheduled. This is
            more clinical than administrative.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Reason the appointment has been scheduled to take place, as
            specified using information from another resource. When the patient
            arrives and the encounter begins it may be used as the admission
            diagnosis. The indication will typically be a Condition (with other
            resources referenced in the evidence.detail), or a Procedure.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        priority:
          description: >-
            The priority of the appointment. Can be used to make informed
            decisions if needing to re-prioritize appointments. (The iCal
            Standard specifies 0 as undefined, 1 as highest, 9 as lowest
            priority).
          $ref: '#/components/schemas/unsignedInt'
        _priority:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            The brief description of the appointment as would be shown on a
            subject line in a meeting request, or appointment list. Detailed or
            expanded information should be put in the comment field.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        supportingInformation:
          description: >-
            Additional information to support the appointment provided when
            making the appointment.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        start:
          $ref: '#/components/schemas/instant'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          $ref: '#/components/schemas/instant'
        _end:
          $ref: '#/components/schemas/Element'
        minutesDuration:
          description: >-
            Number of minutes that the appointment is to take. This can be less
            than the duration between the start and end times.  For example,
            where the actual time of appointment is only an estimate or if a 30
            minute appointment is being requested, but any time would work.
            Also, if there is, for example, a planned 15 minute break in the
            middle of a long appointment, the duration may be 15 minutes less
            than the difference between the start and end.
          $ref: '#/components/schemas/positiveInt'
        _minutesDuration:
          $ref: '#/components/schemas/Element'
        slot:
          description: >-
            The slots from the participants' schedules that will be filled by
            the appointment.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        created:
          description: >-
            The date that this appointment was initially created. This could be
            different to the meta.lastModified value on the initial entry, as
            this could have been before the resource was created on the FHIR
            server, and should remain unchanged over the lifespan of the
            appointment.
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        patientInstruction:
          description: >-
            While Appointment.comment contains information for internal use,
            Appointment.patientInstructions is used to capture patient facing
            information about the Appointment (e.g. please bring your referral
            or fast from 8pm night before).
          $ref: '#/components/schemas/string'
        _patientInstruction:
          $ref: '#/components/schemas/Element'
        basedOn:
          description: >-
            The service request this appointment is allocated to assess (e.g.
            incoming referral or procedure request).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        participant:
          description: List of participants involved in the appointment.
          items:
            $ref: '#/components/schemas/Appointment_Participant'
          type: array
        requestedPeriod:
          description: >-
            A set of date ranges (potentially including times) that the
            appointment is preferred to be scheduled within.


            The duration (usually in minutes) could also be provided to indicate
            the length of the appointment to fill and populate the start/end
            times for the actual allocated time. However, in other situations
            the duration may be calculated by the scheduling system.
          items:
            $ref: '#/components/schemas/Period'
          type: array
      additionalProperties: false
      required:
        - participant
        - resourceType
    Appointment_Participant:
      description: >-
        A booking of a healthcare event among patient(s), practitioner(s),
        related person(s) and/or device(s) for a specific date/time. This may
        result in one or more Encounter(s).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: Role of participant in the appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        actor:
          description: >-
            A Person, Location/HealthcareService or Device that is participating
            in the appointment.
          $ref: '#/components/schemas/Reference'
        required:
          description: >-
            Whether this participant is required to be present at the meeting.
            This covers a use-case where two doctors need to meet to discuss the
            results for a specific patient, and the patient is not required to
            be present.
          enum:
            - required
            - optional
            - information-only
        _required:
          $ref: '#/components/schemas/Element'
        status:
          description: Participation status of the actor.
          enum:
            - accepted
            - declined
            - tentative
            - needs-action
        _status:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    AppointmentResponse:
      description: >-
        A reply to an appointment request for a patient and/or practitioner(s),
        such as a confirmation or rejection.
      properties:
        resourceType:
          description: This is a AppointmentResponse resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            This records identifiers associated with this appointment response
            concern that are defined by business processes and/ or used to refer
            to it when a direct URL reference to the resource itself is not
            appropriate.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        appointment:
          $ref: '#/components/schemas/Reference'
        start:
          description: >-
            Date/Time that the appointment is to take place, or requested new
            start time.
          $ref: '#/components/schemas/instant'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          description: >-
            This may be either the same as the appointment request to confirm
            the details of the appointment, or alternately a new time to request
            a re-negotiation of the end time.
          $ref: '#/components/schemas/instant'
        _end:
          $ref: '#/components/schemas/Element'
        participantType:
          description: Role of participant in the appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        actor:
          description: >-
            A Person, Location, HealthcareService, or Device that is
            participating in the appointment.
          $ref: '#/components/schemas/Reference'
        participantStatus:
          description: >-
            Participation status of the participant. When the status is declined
            or tentative if the start/end times are different to the
            appointment, then these times should be interpreted as a requested
            time change. When the status is accepted, the times can either be
            the time of the appointment (as a confirmation of the time) or can
            be empty.
          $ref: '#/components/schemas/code'
        _participantStatus:
          $ref: '#/components/schemas/Element'
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - appointment
        - resourceType
    AuditEvent:
      description: >-
        A record of an event made for purposes of maintaining a security log.
        Typical uses include detection of intrusion attempts and monitoring for
        inappropriate usage.
      properties:
        resourceType:
          description: This is a AuditEvent resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Identifier for a family of the event.  For example, a menu item,
            program, rule, policy, function code, application name or URL. It
            identifies the performed function.
          $ref: '#/components/schemas/Coding'
        subtype:
          description: Identifier for the category of event.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        action:
          description: >-
            Indicator for type of action performed during the event that
            generated the audit.
          enum:
            - C
            - R
            - U
            - D
            - E
        _action:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
        recorded:
          $ref: '#/components/schemas/instant'
        _recorded:
          $ref: '#/components/schemas/Element'
        outcome:
          description: Indicates whether the event succeeded or failed.
          enum:
            - '0'
            - '4'
            - '8'
            - '12'
        _outcome:
          $ref: '#/components/schemas/Element'
        outcomeDesc:
          $ref: '#/components/schemas/string'
        _outcomeDesc:
          $ref: '#/components/schemas/Element'
        purposeOfEvent:
          description: >-
            The purposeOfUse (reason) that was used during the event being
            recorded.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        agent:
          description: >-
            An actor taking an active role in the event or activity that is
            logged.
          items:
            $ref: '#/components/schemas/AuditEvent_Agent'
          type: array
        source:
          $ref: '#/components/schemas/AuditEvent_Source'
        entity:
          description: Specific instances of data or objects that have been accessed.
          items:
            $ref: '#/components/schemas/AuditEvent_Entity'
          type: array
      additionalProperties: false
      required:
        - agent
        - source
        - type
        - resourceType
    AuditEvent_Agent:
      description: >-
        A record of an event made for purposes of maintaining a security log.
        Typical uses include detection of intrusion attempts and monitoring for
        inappropriate usage.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Specification of the participation type the user plays when
            performing the event.
          $ref: '#/components/schemas/CodeableConcept'
        role:
          description: >-
            The security role that the user was acting under, that come from
            local codes defined by the access control security system (e.g.
            RBAC, ABAC) used in the local context.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        who:
          $ref: '#/components/schemas/Reference'
        altId:
          description: >-
            Alternative agent Identifier. For a human, this should be a user
            identifier text string from authentication system. This identifier
            would be one known to a common authentication system (e.g. single
            sign-on), if available.
          $ref: '#/components/schemas/string'
        _altId:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        requestor:
          description: >-
            Indicator that the user is or is not the requestor, or initiator,
            for the event being audited.
          $ref: '#/components/schemas/boolean'
        _requestor:
          $ref: '#/components/schemas/Element'
        location:
          $ref: '#/components/schemas/Reference'
        policy:
          description: >-
            The policy or plan that authorized the activity being recorded.
            Typically, a single activity may have multiple applicable policies,
            such as patient consent, guarantor funding, etc. The policy would
            also indicate the security token used.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _policy:
          description: Extensions for policy
          items:
            $ref: '#/components/schemas/Element'
          type: array
        media:
          description: >-
            Type of media involved. Used when the event is about
            exporting/importing onto media.
          $ref: '#/components/schemas/Coding'
        network:
          description: >-
            Logical network location for application activity, if the activity
            has a network location.
          $ref: '#/components/schemas/AuditEvent_Network'
        purposeOfUse:
          description: >-
            The reason (purpose of use), specific to this agent, that was used
            during the event being recorded.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
    AuditEvent_Network:
      description: >-
        A record of an event made for purposes of maintaining a security log.
        Typical uses include detection of intrusion attempts and monitoring for
        inappropriate usage.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        address:
          description: >-
            An identifier for the network access point of the user device for
            the audit event.
          $ref: '#/components/schemas/string'
        _address:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            An identifier for the type of network access point that originated
            the audit event.
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        _type:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    AuditEvent_Source:
      description: >-
        A record of an event made for purposes of maintaining a security log.
        Typical uses include detection of intrusion attempts and monitoring for
        inappropriate usage.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        site:
          description: >-
            Logical source location within the healthcare enterprise network.
            For example, a hospital or other provider location within a
            multi-entity provider group.
          $ref: '#/components/schemas/string'
        _site:
          $ref: '#/components/schemas/Element'
        observer:
          $ref: '#/components/schemas/Reference'
        type:
          description: Code specifying the type of source where event originated.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
      required:
        - observer
    AuditEvent_Entity:
      description: >-
        A record of an event made for purposes of maintaining a security log.
        Typical uses include detection of intrusion attempts and monitoring for
        inappropriate usage.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        what:
          description: >-
            Identifies a specific instance of the entity. The reference should
            be version specific.
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/Coding'
        role:
          description: >-
            Code representing the role the entity played in the event being
            audited.
          $ref: '#/components/schemas/Coding'
        lifecycle:
          $ref: '#/components/schemas/Coding'
        securityLabel:
          description: Security labels for the identified entity.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        query:
          $ref: '#/components/schemas/base64Binary'
        _query:
          $ref: '#/components/schemas/Element'
        detail:
          description: >-
            Tagged value pairs for conveying additional information about the
            entity.
          items:
            $ref: '#/components/schemas/AuditEvent_Detail'
          type: array
      additionalProperties: false
    AuditEvent_Detail:
      description: >-
        A record of an event made for purposes of maintaining a security log.
        Typical uses include detection of intrusion attempts and monitoring for
        inappropriate usage.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/string'
        _type:
          $ref: '#/components/schemas/Element'
        valueString:
          description: The  value of the extra detail.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: The  value of the extra detail.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Basic:
      description: >-
        Basic is used for handling concepts not yet defined in FHIR,
        narrative-only resources that don't map to an existing resource, and
        custom resources not appropriate for inclusion in the FHIR
        specification.
      properties:
        resourceType:
          description: This is a Basic resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier assigned to the resource for business purposes, outside
            the context of FHIR.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        code:
          description: >-
            Identifies the 'type' of resource - equivalent to the resource name
            for other resources.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            Identifies the patient, practitioner, device or any other resource
            that is the "focus" of this resource.
          $ref: '#/components/schemas/Reference'
        created:
          $ref: '#/components/schemas/date'
        _created:
          $ref: '#/components/schemas/Element'
        author:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
        - resourceType
    Binary:
      description: >-
        A resource that represents the data of a single raw artifact as digital
        content accessible in its native format.  A Binary resource can contain
        any content, whether text, image, pdf, zip archive, etc.
      properties:
        resourceType:
          description: This is a Binary resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        contentType:
          description: >-
            MimeType of the binary content represented as a standard MimeType
            (BCP 13).
          $ref: '#/components/schemas/code'
        _contentType:
          $ref: '#/components/schemas/Element'
        securityContext:
          description: >-
            This element identifies another resource that can be used as a proxy
            of the security sensitivity to use when deciding and enforcing
            access control rules for the Binary resource. Given that the Binary
            resource contains very few elements that can be used to determine
            the sensitivity of the data and relationships to individuals, the
            referenced resource stands in as a proxy equivalent for this
            purpose. This referenced resource may be related to the Binary (e.g.
            Media, DocumentReference), or may be some non-related Resource
            purely as a security proxy. E.g. to identify that the binary
            resource relates to a patient, and access should only be granted to
            applications that have access to the patient.
          $ref: '#/components/schemas/Reference'
        data:
          $ref: '#/components/schemas/base64Binary'
        _data:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - resourceType
    BiologicallyDerivedProduct:
      description: >-
        A material substance originating from a biological entity intended to be
        transplanted or infused

        into another (possibly the same) biological entity.
      properties:
        resourceType:
          description: This is a BiologicallyDerivedProduct resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            This records identifiers associated with this biologically derived
            product instance that are defined by business processes and/or used
            to refer to it when a direct URL reference to the resource itself is
            not appropriate (e.g. in CDA documents, or in written / printed
            documentation).
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        productCategory:
          description: Broad category of this product.
          enum:
            - organ
            - tissue
            - fluid
            - cells
            - biologicalAgent
        _productCategory:
          $ref: '#/components/schemas/Element'
        productCode:
          description: >-
            A code that identifies the kind of this biologically derived product
            (SNOMED Ctcode).
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: Whether the product is currently available.
          enum:
            - available
            - unavailable
        _status:
          $ref: '#/components/schemas/Element'
        request:
          description: Procedure request to obtain this biologically derived product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        quantity:
          $ref: '#/components/schemas/integer'
        _quantity:
          $ref: '#/components/schemas/Element'
        parent:
          description: Parent product (if any).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        collection:
          $ref: '#/components/schemas/BiologicallyDerivedProduct_Collection'
        processing:
          description: >-
            Any processing of the product during collection that does not change
            the fundamental nature of the product. For example adding
            anti-coagulants during the collection of Peripheral Blood Stem
            Cells.
          items:
            $ref: '#/components/schemas/BiologicallyDerivedProduct_Processing'
          type: array
        manipulation:
          description: >-
            Any manipulation of product post-collection that is intended to
            alter the product.  For example a buffy-coat enrichment or CD8
            reduction of Peripheral Blood Stem Cells to make it more suitable
            for infusion.
          $ref: '#/components/schemas/BiologicallyDerivedProduct_Manipulation'
        storage:
          description: Product storage.
          items:
            $ref: '#/components/schemas/BiologicallyDerivedProduct_Storage'
          type: array
      additionalProperties: false
      required:
        - resourceType
    BiologicallyDerivedProduct_Collection:
      description: >-
        A material substance originating from a biological entity intended to be
        transplanted or infused

        into another (possibly the same) biological entity.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        collector:
          $ref: '#/components/schemas/Reference'
        source:
          description: >-
            The patient or entity, such as a hospital or vendor in the case of a
            processed/manipulated/manufactured product, providing the product.
          $ref: '#/components/schemas/Reference'
        collectedDateTime:
          description: Time of product collection.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _collectedDateTime:
          $ref: '#/components/schemas/Element'
        collectedPeriod:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    BiologicallyDerivedProduct_Processing:
      description: >-
        A material substance originating from a biological entity intended to be
        transplanted or infused

        into another (possibly the same) biological entity.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        procedure:
          $ref: '#/components/schemas/CodeableConcept'
        additive:
          $ref: '#/components/schemas/Reference'
        timeDateTime:
          description: Time of processing.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timeDateTime:
          $ref: '#/components/schemas/Element'
        timePeriod:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    BiologicallyDerivedProduct_Manipulation:
      description: >-
        A material substance originating from a biological entity intended to be
        transplanted or infused

        into another (possibly the same) biological entity.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        timeDateTime:
          description: Time of manipulation.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timeDateTime:
          $ref: '#/components/schemas/Element'
        timePeriod:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    BiologicallyDerivedProduct_Storage:
      description: >-
        A material substance originating from a biological entity intended to be
        transplanted or infused

        into another (possibly the same) biological entity.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        temperature:
          $ref: '#/components/schemas/decimal'
        _temperature:
          $ref: '#/components/schemas/Element'
        scale:
          description: Temperature scale used.
          enum:
            - farenheit
            - celsius
            - kelvin
        _scale:
          $ref: '#/components/schemas/Element'
        duration:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    BodyStructure:
      description: >-
        Record details about an anatomical structure.  This resource may be used
        when a coded concept does not provide the necessary detail needed for
        the use case.
      properties:
        resourceType:
          description: This is a BodyStructure resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifier for this instance of the anatomical structure.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        morphology:
          description: >-
            The kind of structure being represented by the body structure at
            `BodyStructure.location`.  This can define both normal and abnormal
            morphologies.
          $ref: '#/components/schemas/CodeableConcept'
        location:
          description: >-
            The anatomical location or region of the specimen, lesion, or body
            structure.
          $ref: '#/components/schemas/CodeableConcept'
        locationQualifier:
          description: >-
            Qualifier to refine the anatomical location.  These include
            qualifiers for laterality, relative location, directionality,
            number, and plane.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        image:
          description: Image or images used to identify a location.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        patient:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - patient
        - resourceType
    Bundle:
      description: A container for a collection of resources.
      properties:
        resourceType:
          description: This is a Bundle resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A persistent identifier for the bundle that won't change as a bundle
            is copied from server to server.
          $ref: '#/components/schemas/Identifier'
        type:
          description: >-
            Indicates the purpose of this bundle - how it is intended to be
            used.
          enum:
            - document
            - message
            - transaction
            - transaction-response
            - batch
            - batch-response
            - history
            - searchset
            - collection
        _type:
          $ref: '#/components/schemas/Element'
        timestamp:
          description: >-
            The date/time that the bundle was assembled - i.e. when the
            resources were placed in the bundle.
          $ref: '#/components/schemas/instant'
        _timestamp:
          $ref: '#/components/schemas/Element'
        total:
          description: >-
            If a set of search matches, this is the total number of entries of
            type 'match' across all pages in the search.  It does not include
            search.mode = 'include' or 'outcome' entries and it does not provide
            a count of the number of entries in the Bundle.
          $ref: '#/components/schemas/unsignedInt'
        _total:
          $ref: '#/components/schemas/Element'
        link:
          description: A series of links that provide context to this bundle.
          items:
            $ref: '#/components/schemas/Bundle_Link'
          type: array
        entry:
          description: >-
            An entry in a bundle resource - will either contain a resource or
            information about a resource (transactions and history only).
          items:
            $ref: '#/components/schemas/Bundle_Entry'
          type: array
        signature:
          $ref: '#/components/schemas/Signature'
      additionalProperties: false
      required:
        - resourceType
    Bundle_Link:
      description: A container for a collection of resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        relation:
          description: >-
            A name which details the functional use for this link - see
            [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).
          $ref: '#/components/schemas/string'
        _relation:
          $ref: '#/components/schemas/Element'
        url:
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Bundle_Entry:
      description: A container for a collection of resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        link:
          description: A series of links that provide context to this entry.
          items:
            $ref: '#/components/schemas/Bundle_Link'
          type: array
        fullUrl:
          description: >-
            The Absolute URL for the resource.  The fullUrl SHALL NOT disagree
            with the id in the resource - i.e. if the fullUrl is not a urn:uuid,
            the URL shall be version-independent URL consistent with the
            Resource.id. The fullUrl is a version independent reference to the
            resource. The fullUrl element SHALL have a value except that:

            * fullUrl can be empty on a POST (although it does not need to when
            specifying a temporary id for reference in the bundle)

            * Results from operations might involve resources that are not
            identified.
          $ref: '#/components/schemas/uri'
        _fullUrl:
          $ref: '#/components/schemas/Element'
        resource:
          description: >-
            The Resource for the entry. The purpose/meaning of the resource is
            determined by the Bundle.type.
          $ref: '#/components/schemas/ResourceList'
        search:
          description: >-
            Information about the search process that lead to the creation of
            this entry.
          $ref: '#/components/schemas/Bundle_Search'
        request:
          description: >-
            Additional information about how this entry should be processed as
            part of a transaction or batch.  For history, it shows how the entry
            was processed to create the version contained in the entry.
          $ref: '#/components/schemas/Bundle_Request'
        response:
          description: >-
            Indicates the results of processing the corresponding 'request'
            entry in the batch or transaction being responded to or what the
            results of an operation where when returning history.
          $ref: '#/components/schemas/Bundle_Response'
      additionalProperties: false
    Bundle_Search:
      description: A container for a collection of resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: >-
            Why this entry is in the result set - whether it's included as a
            match or because of an _include requirement, or to convey
            information or warning information about the search process.
          enum:
            - match
            - include
            - outcome
        _mode:
          $ref: '#/components/schemas/Element'
        score:
          $ref: '#/components/schemas/decimal'
        _score:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Bundle_Request:
      description: A container for a collection of resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        method:
          description: >-
            In a transaction or batch, this is the HTTP action to be executed
            for this entry. In a history bundle, this indicates the HTTP action
            that occurred.
          enum:
            - GET
            - HEAD
            - POST
            - PUT
            - DELETE
            - PATCH
        _method:
          $ref: '#/components/schemas/Element'
        url:
          description: >-
            The URL for this entry, relative to the root (the address to which
            the request is posted).
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        ifNoneMatch:
          description: >-
            If the ETag values match, return a 304 Not Modified status. See the
            API documentation for ["Conditional Read"](http.html#cread).
          $ref: '#/components/schemas/string'
        _ifNoneMatch:
          $ref: '#/components/schemas/Element'
        ifModifiedSince:
          description: >-
            Only perform the operation if the last updated date matches. See the
            API documentation for ["Conditional Read"](http.html#cread).
          $ref: '#/components/schemas/instant'
        _ifModifiedSince:
          $ref: '#/components/schemas/Element'
        ifMatch:
          description: >-
            Only perform the operation if the Etag value matches. For more
            information, see the API section ["Managing Resource
            Contention"](http.html#concurrency).
          $ref: '#/components/schemas/string'
        _ifMatch:
          $ref: '#/components/schemas/Element'
        ifNoneExist:
          description: >-
            Instruct the server not to perform the create if a specified
            resource already exists. For further information, see the API
            documentation for ["Conditional Create"](http.html#ccreate). This is
            just the query portion of the URL - what follows the "?" (not
            including the "?").
          $ref: '#/components/schemas/string'
        _ifNoneExist:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Bundle_Response:
      description: A container for a collection of resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: >-
            The status code returned by processing this entry. The status SHALL
            start with a 3 digit HTTP code (e.g. 404) and may contain the
            standard HTTP description associated with the status code.
          $ref: '#/components/schemas/string'
        _status:
          $ref: '#/components/schemas/Element'
        location:
          description: >-
            The location header created by processing this operation, populated
            if the operation returns a location.
          $ref: '#/components/schemas/uri'
        _location:
          $ref: '#/components/schemas/Element'
        etag:
          description: >-
            The Etag for the resource, if the operation for the entry produced a
            versioned resource (see [Resource Metadata and
            Versioning](http.html#versioning) and [Managing Resource
            Contention](http.html#concurrency)).
          $ref: '#/components/schemas/string'
        _etag:
          $ref: '#/components/schemas/Element'
        lastModified:
          $ref: '#/components/schemas/instant'
        _lastModified:
          $ref: '#/components/schemas/Element'
        outcome:
          description: >-
            An OperationOutcome containing hints and warnings produced as part
            of processing this entry in a batch or transaction.
          $ref: '#/components/schemas/ResourceList'
      additionalProperties: false
    CapabilityStatement:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        resourceType:
          description: This is a CapabilityStatement resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this capability statement
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this capability statement is (or will be)
            published. This URL can be the target of a canonical reference. It
            SHALL remain the same when the capability statement is stored on
            different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the
            capability statement when it is referenced in a specification,
            model, design or instance. This is an arbitrary value managed by the
            capability statement author and is not expected to be globally
            unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
            managed version is not available. There is also no expectation that
            versions can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the capability statement. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the capability
            statement.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this capability statement. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this capability statement is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the capability statement was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the capability
            statement changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            capability statement.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the capability statement
            from a consumer's perspective. Typically, this is used when the
            capability statement describes a desired rather than an actual
            solution, for example as a formal expression of requirements as part
            of an RFP.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate capability statement
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the capability statement is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this capability statement is needed and why it
            has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the capability statement and/or
            its contents. Copyright statements are generally legal restrictions
            on the use and publishing of the capability statement.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        kind:
          description: >-
            The way that this statement is intended to be used, to describe an
            actual running instance of software, a particular product (kind, not
            instance of software) or a class of implementation (e.g. a desired
            purchase).
          enum:
            - instance
            - capability
            - requirements
        _kind:
          $ref: '#/components/schemas/Element'
        instantiates:
          description: >-
            Reference to a canonical URL of another CapabilityStatement that
            this software implements. This capability statement is a published
            API description that corresponds to a business service. The server
            may actually implement a subset of the capability statement it
            claims to implement, so the capability statement must specify the
            full capability details.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        imports:
          description: >-
            Reference to a canonical URL of another CapabilityStatement that
            this software adds to. The capability statement automatically
            includes everything in the other statement, and it is not
            duplicated, though the server may repeat the same resources,
            interactions and operations to add additional details to them.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        software:
          description: >-
            Software that is covered by this capability statement.  It is used
            when the capability statement describes the capabilities of a
            particular software version, independent of an installation.
          $ref: '#/components/schemas/CapabilityStatement_Software'
        implementation:
          description: >-
            Identifies a specific implementation instance that is described by
            the capability statement - i.e. a particular installation, rather
            than the capabilities of a software program.
          $ref: '#/components/schemas/CapabilityStatement_Implementation'
        fhirVersion:
          description: >-
            The version of the FHIR specification that this CapabilityStatement
            describes (which SHALL be the same as the FHIR version of the
            CapabilityStatement itself). There is no default value.
          enum:
            - '0.01'
            - '0.05'
            - '0.06'
            - '0.11'
            - 0.0.80
            - 0.0.81
            - 0.0.82
            - 0.4.0
            - 0.5.0
            - 1.0.0
            - 1.0.1
            - 1.0.2
            - 1.1.0
            - 1.4.0
            - 1.6.0
            - 1.8.0
            - 3.0.0
            - 3.0.1
            - 3.3.0
            - 3.5.0
            - 4.0.0
            - 4.0.1
        _fhirVersion:
          $ref: '#/components/schemas/Element'
        format:
          description: >-
            A list of the formats supported by this implementation using their
            content types.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _format:
          description: Extensions for format
          items:
            $ref: '#/components/schemas/Element'
          type: array
        patchFormat:
          description: >-
            A list of the patch formats supported by this implementation using
            their content types.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _patchFormat:
          description: Extensions for patchFormat
          items:
            $ref: '#/components/schemas/Element'
          type: array
        implementationGuide:
          description: >-
            A list of implementation guides that the server does (or should)
            support in their entirety.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        rest:
          description: 'A definition of the restful capabilities of the solution, if any.'
          items:
            $ref: '#/components/schemas/CapabilityStatement_Rest'
          type: array
        messaging:
          description: A description of the messaging capabilities of the solution.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Messaging'
          type: array
        document:
          description: A document definition.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Document'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CapabilityStatement_Software:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        version:
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        releaseDate:
          $ref: '#/components/schemas/dateTime'
        _releaseDate:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CapabilityStatement_Implementation:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            Information about the specific installation that this capability
            statement relates to.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        url:
          description: >-
            An absolute base URL for the implementation.  This forms the base
            for REST interfaces as well as the mailbox and document interfaces.
          $ref: '#/components/schemas/url'
        _url:
          $ref: '#/components/schemas/Element'
        custodian:
          description: >-
            The organization responsible for the management of the instance and
            oversight of the data on the server at the specified URL.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CapabilityStatement_Rest:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: >-
            Identifies whether this portion of the statement is describing the
            ability to initiate or receive restful operations.
          enum:
            - client
            - server
        _mode:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            Information about the system's restful capabilities that apply
            across all applications, such as security.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
        security:
          description: >-
            Information about security implementation from an interface
            perspective - what a client needs to know.
          $ref: '#/components/schemas/CapabilityStatement_Security'
        resource:
          description: >-
            A specification of the restful capabilities of the solution for a
            specific resource type.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Resource'
          type: array
        interaction:
          description: A specification of restful operations supported by the system.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Interaction1'
          type: array
        searchParam:
          description: >-
            Search parameters that are supported for searching all resources for
            implementations to support and/or make use of - either references to
            ones defined in the specification, or additional ones defined for/by
            the implementation.
          items:
            $ref: '#/components/schemas/CapabilityStatement_SearchParam'
          type: array
        operation:
          description: >-
            Definition of an operation or a named query together with its
            parameters and their meaning and type.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Operation'
          type: array
        compartment:
          description: >-
            An absolute URI which is a reference to the definition of a
            compartment that the system supports. The reference is to a
            CompartmentDefinition resource by its canonical URL .
          items:
            $ref: '#/components/schemas/canonical'
          type: array
      additionalProperties: false
    CapabilityStatement_Security:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        cors:
          description: >-
            Server adds CORS headers when responding to requests - this enables
            Javascript applications to use the server.
          $ref: '#/components/schemas/boolean'
        _cors:
          $ref: '#/components/schemas/Element'
        service:
          description: >-
            Types of security services that are supported/required by the
            system.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CapabilityStatement_Resource:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        profile:
          description: >-
            A specification of the profile that describes the solution's overall
            support for the resource, including any constraints on cardinality,
            bindings, lengths or other limitations. See further discussion in
            [Using Profiles](profiling.html#profile-uses).
          $ref: '#/components/schemas/canonical'
        supportedProfile:
          description: >-
            A list of profiles that represent different use cases supported by
            the system. For a server, "supported by the system" means the system
            hosts/produces a set of resources that are conformant to a
            particular profile, and allows clients that use its services to
            search using this profile and to find appropriate data. For a
            client, it means the system will search by this profile and process
            data according to the guidance implicit in the profile. See further
            discussion in [Using Profiles](profiling.html#profile-uses).
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        documentation:
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
        interaction:
          description: Identifies a restful operation supported by the solution.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Interaction'
          type: array
        versioning:
          description: >-
            This field is set to no-version to specify that the system does not
            support (server) or use (client) versioning for this resource type.
            If this has some other value, the server must at least correctly
            track and populate the versionId meta-property on resources. If the
            value is 'versioned-update', then the server supports all the
            versioning features, including using e-tags for version integrity in
            the API.
          enum:
            - no-version
            - versioned
            - versioned-update
        _versioning:
          $ref: '#/components/schemas/Element'
        readHistory:
          description: >-
            A flag for whether the server is able to return past versions as
            part of the vRead operation.
          $ref: '#/components/schemas/boolean'
        _readHistory:
          $ref: '#/components/schemas/Element'
        updateCreate:
          description: >-
            A flag to indicate that the server allows or needs to allow the
            client to create new identities on the server (that is, the client
            PUTs to a location where there is no existing resource). Allowing
            this operation means that the server allows the client to create new
            identities on the server.
          $ref: '#/components/schemas/boolean'
        _updateCreate:
          $ref: '#/components/schemas/Element'
        conditionalCreate:
          $ref: '#/components/schemas/boolean'
        _conditionalCreate:
          $ref: '#/components/schemas/Element'
        conditionalRead:
          description: A code that indicates how the server supports conditional read.
          enum:
            - not-supported
            - modified-since
            - not-match
            - full-support
        _conditionalRead:
          $ref: '#/components/schemas/Element'
        conditionalUpdate:
          $ref: '#/components/schemas/boolean'
        _conditionalUpdate:
          $ref: '#/components/schemas/Element'
        conditionalDelete:
          description: A code that indicates how the server supports conditional delete.
          enum:
            - not-supported
            - single
            - multiple
        _conditionalDelete:
          $ref: '#/components/schemas/Element'
        referencePolicy:
          description: A set of flags that defines how references are supported.
          items:
            enum:
              - literal
              - logical
              - resolves
              - enforced
              - local
          type: array
        _referencePolicy:
          description: Extensions for referencePolicy
          items:
            $ref: '#/components/schemas/Element'
          type: array
        searchInclude:
          description: A list of _include values supported by the server.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _searchInclude:
          description: Extensions for searchInclude
          items:
            $ref: '#/components/schemas/Element'
          type: array
        searchRevInclude:
          description: >-
            A list of _revinclude (reverse include) values supported by the
            server.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _searchRevInclude:
          description: Extensions for searchRevInclude
          items:
            $ref: '#/components/schemas/Element'
          type: array
        searchParam:
          description: >-
            Search parameters for implementations to support and/or make use of
            - either references to ones defined in the specification, or
            additional ones defined for/by the implementation.
          items:
            $ref: '#/components/schemas/CapabilityStatement_SearchParam'
          type: array
        operation:
          description: >-
            Definition of an operation or a named query together with its
            parameters and their meaning and type. Consult the definition of the
            operation for details about how to invoke the operation, and the
            parameters.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Operation'
          type: array
      additionalProperties: false
    CapabilityStatement_Interaction:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: 'Coded identifier of the operation, supported by the system resource.'
          enum:
            - read
            - vread
            - update
            - patch
            - delete
            - history-instance
            - history-type
            - create
            - search-type
        _code:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            Guidance specific to the implementation of this operation, such as
            'delete is a logical delete' or 'updates are only allowed with
            version id' or 'creates permitted from pre-authorized certificates
            only'.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CapabilityStatement_SearchParam:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            An absolute URI that is a formal reference to where this parameter
            was first defined, so that a client can be confident of the meaning
            of the search parameter (a reference to [[[SearchParameter.url]]]).
            This element SHALL be populated if the search parameter refers to a
            SearchParameter defined by the FHIR core specification or externally
            defined IGs.
          $ref: '#/components/schemas/canonical'
        type:
          description: >-
            The type of value a search parameter refers to, and how the content
            is interpreted.
          enum:
            - number
            - date
            - string
            - token
            - reference
            - composite
            - quantity
            - uri
            - special
        _type:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            This allows documentation of any distinct behaviors about how the
            search parameter is used.  For example, text matching algorithms.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CapabilityStatement_Operation:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            The name of the operation or query. For an operation, this is the
            name  prefixed with $ and used in the URL. For a query, this is the
            name used in the _query parameter when the query is called.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            Where the formal definition can be found. If a server references the
            base definition of an Operation (i.e. from the specification itself
            such as
            ```http://hl7.org/fhir/OperationDefinition/ValueSet-expand```), that
            means it supports the full capabilities of the operation - e.g. both
            GET and POST invocation.  If it only supports a subset, it must
            define its own custom [[[OperationDefinition]]] with a 'base' of the
            original OperationDefinition.  The custom definition would describe
            the specific subset of functionality supported.
          $ref: '#/components/schemas/canonical'
        documentation:
          description: >-
            Documentation that describes anything special about the operation
            behavior, possibly detailing different behavior for system, type and
            instance-level invocation of the operation.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - definition
    CapabilityStatement_Interaction1:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: 'A coded identifier of the operation, supported by the system.'
          enum:
            - transaction
            - batch
            - search-system
            - history-system
        _code:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            Guidance specific to the implementation of this operation, such as
            limitations on the kind of transactions allowed, or information
            about system wide search is implemented.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CapabilityStatement_Messaging:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        endpoint:
          description: >-
            An endpoint (network accessible address) to which messages and/or
            replies are to be sent.
          items:
            $ref: '#/components/schemas/CapabilityStatement_Endpoint'
          type: array
        reliableCache:
          description: >-
            Length if the receiver's reliable messaging cache in minutes (if a
            receiver) or how long the cache length on the receiver should be (if
            a sender).
          $ref: '#/components/schemas/unsignedInt'
        _reliableCache:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            Documentation about the system's messaging capabilities for this
            endpoint not otherwise documented by the capability statement.  For
            example, the process for becoming an authorized messaging exchange
            partner.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
        supportedMessage:
          description: >-
            References to message definitions for messages this system can send
            or receive.
          items:
            $ref: '#/components/schemas/CapabilityStatement_SupportedMessage'
          type: array
      additionalProperties: false
    CapabilityStatement_Endpoint:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        protocol:
          description: >-
            A list of the messaging transport protocol(s) identifiers, supported
            by this endpoint.
          $ref: '#/components/schemas/Coding'
        address:
          description: >-
            The network address of the endpoint. For solutions that do not use
            network addresses for routing, it can be just an identifier.
          $ref: '#/components/schemas/url'
        _address:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - protocol
    CapabilityStatement_SupportedMessage:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: >-
            The mode of this event declaration - whether application is sender
            or receiver.
          enum:
            - sender
            - receiver
        _mode:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            Points to a message definition that identifies the messaging event,
            message structure, allowed responses, etc.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
      required:
        - definition
    CapabilityStatement_Document:
      description: >-
        A Capability Statement documents a set of capabilities (behaviors) of a
        FHIR Server for a particular version of FHIR that may be used as a
        statement of actual server functionality or a statement of required or
        desired server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: >-
            Mode of this document declaration - whether an application is a
            producer or consumer.
          enum:
            - producer
            - consumer
        _mode:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            A description of how the application supports or uses the specified
            document profile.  For example, when documents are created, what
            action is taken with consumed documents, etc.
          $ref: '#/components/schemas/markdown'
        _documentation:
          $ref: '#/components/schemas/Element'
        profile:
          description: >-
            A profile on the document Bundle that constrains which resources are
            present, and their contents.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
      required:
        - profile
    CarePlan:
      description: Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
      properties:
        resourceType:
          description: This is a CarePlan resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: A care plan that is fulfilled in whole or in part by this care plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        replaces:
          description: Completed or terminated care plan whose function is taken by this new care plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: A larger care plan of which this particular care plan is a component or step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: >-
            Indicates whether the plan is currently being acted upon, represents
            future intentions or is now a historical record.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        intent:
          description: >-
            Indicates the level of authority/intentionality associated with the
            care plan and where the care plan fits into the workflow chain.
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        category:
          description: Identifies what "kind" of plan this is to support differentiation between multiple co-existing plans; e.g. "Home health", "psychiatric", "asthma", "disease management", "wellness plan", etc.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        subject:
          description: >-
            Identifies the patient or group whose intended care is described by
            the plan.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this CarePlan was created or to which the
            creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        period:
          description: >-
            Indicates when the plan did (or is intended to) come into effect and
            end.
          $ref: '#/components/schemas/Period'
        created:
          description: >-
            Represents when this particular CarePlan record was created in the
            system, which is often a system-generated date.
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            When populated, the author is responsible for the care plan.  The
            care plan is attributed to the author.
          $ref: '#/components/schemas/Reference'
        contributor:
          description: Identifies the individual(s) or organization who provided the contents of the care plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        careTeam:
          description: Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        addresses:
          description: Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        supportingInfo:
          description: Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        goal:
          description: Describes the intended objective(s) of carrying out the care plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        activity:
          description: Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.
          items:
            $ref: '#/components/schemas/CarePlan_Activity'
          type: array
        note:
          description: General notes about the care plan not covered elsewhere.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    CarePlan_Activity:
      description: Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        outcomeCodeableConcept:
          description: Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        outcomeReference:
          description: Details of the outcome or action resulting from the activity.  The reference to an "event" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        progress:
          description: Notes about the adherence/status/progress of the activity.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        reference:
          description: >-
            The details of the proposed activity represented in a specific
            resource.
          $ref: '#/components/schemas/Reference'
        detail:
          description: >-
            A simple summary of a planned activity suitable for a general care
            plan system (e.g. form driven) that doesn't know about specific
            resources such as procedure etc.
          $ref: '#/components/schemas/CarePlan_Detail'
      additionalProperties: false
    CarePlan_Detail:
      description: Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: |-
            May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

            Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        kind:
          description: >-
            A description of the kind of resource the in-line definition of a
            care plan activity is representing.  The CarePlan.activity.detail is
            an in-line definition when a resource is not referenced using
            CarePlan.activity.reference.  For example, a MedicationRequest, a
            ServiceRequest, or a CommunicationRequest.
          $ref: '#/components/schemas/code'
        _kind:
          $ref: '#/components/schemas/Element'
        instantiatesCanonical:
          description: The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        code:
          description: >-
            Detailed description of the type of planned activity; e.g. what lab
            test, what procedure, what kind of encounter.
          $ref: '#/components/schemas/CodeableConcept'
        reasonCode:
          description: Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        goal:
          description: Internal reference that identifies the goals that this activity is intended to contribute towards meeting.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: Identifies what progress is being made for the specific activity.
          enum:
            - not-started
            - scheduled
            - in-progress
            - on-hold
            - completed
            - cancelled
            - stopped
            - unknown
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          description: >-
            Provides reason why the activity isn't yet started, is on hold, was
            cancelled, etc.
          $ref: '#/components/schemas/CodeableConcept'
        doNotPerform:
          description: >-
            If true, indicates that the described activity is one that must NOT
            be engaged in when following the plan.  If false, or missing,
            indicates that the described activity is one that should be engaged
            in when following the plan.
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          $ref: '#/components/schemas/Element'
        scheduledTiming:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Timing'
        scheduledPeriod:
          description: >-
            The period, timing or frequency upon which the described activity is
            to occur.
          $ref: '#/components/schemas/Period'
        scheduledString:
          description: The period, timing or frequency upon which the described activity is to occur.
          pattern: ^[ \r\n\t\S]+$
          type: string
        _scheduledString:
          $ref: '#/components/schemas/Element'
        location:
          description: >-
            Identifies the facility where the activity will occur; e.g. home,
            hospital, specific clinic, etc.
          $ref: '#/components/schemas/Reference'
        performer:
          description: Identifies who's expected to be involved in the activity.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        productCodeableConcept:
          description: >-
            Identifies the food, drug or other product to be consumed or
            supplied in the activity.
          $ref: '#/components/schemas/CodeableConcept'
        productReference:
          description: >-
            Identifies the food, drug or other product to be consumed or
            supplied in the activity.
          $ref: '#/components/schemas/Reference'
        dailyAmount:
          $ref: '#/components/schemas/Quantity'
        quantity:
          description: >-
            Identifies the quantity expected to be supplied, administered or
            consumed by the subject.
          $ref: '#/components/schemas/Quantity'
        description:
          description: >-
            This provides a textual description of constraints on the intended
            activity occurrence, including relation to other activities.  It may
            also include objectives, pre-conditions and end-conditions.
            Finally, it may convey specifics about the activity such as body
            site, method, route, etc.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CareTeam:
      description: >-
        The Care Team includes all the people and organizations who plan to
        participate in the coordination and delivery of care for a patient.
      properties:
        resourceType:
          description: This is a CareTeam resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this care team by the performer or
            other systems which remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Indicates the current state of the care team.
          enum:
            - proposed
            - active
            - suspended
            - inactive
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            Identifies what kind of team.  This is to support differentiation
            between multiple co-existing teams, such as care plan team, episode
            of care team, longitudinal care team.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        name:
          description: >-
            A label for human use intended to distinguish like teams.  E.g. the
            "red" vs. "green" trauma teams.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        subject:
          description: >-
            Identifies the patient or group whose intended care is handled by
            the team.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this CareTeam was created or to which the
            creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        period:
          description: >-
            Indicates when the team did (or is intended to) come into effect and
            end.
          $ref: '#/components/schemas/Period'
        participant:
          description: >-
            Identifies all people and organizations who are expected to be
            involved in the care team.
          items:
            $ref: '#/components/schemas/CareTeam_Participant'
          type: array
        reasonCode:
          description: Describes why the care team exists.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Condition(s) that this care team addresses.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        managingOrganization:
          description: The organization responsible for the care team.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        telecom:
          description: >-
            A central contact detail for the care team (that applies to all
            members).
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        note:
          description: Comments made about the CareTeam.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CareTeam_Participant:
      description: >-
        The Care Team includes all the people and organizations who plan to
        participate in the coordination and delivery of care for a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        role:
          description: >-
            Indicates specific responsibility of an individual within the care
            team, such as "Primary care physician", "Trained social worker
            counselor", "Caregiver", etc.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        member:
          description: >-
            The specific person or organization who is participating/expected to
            participate in the care team.
          $ref: '#/components/schemas/Reference'
        onBehalfOf:
          $ref: '#/components/schemas/Reference'
        period:
          description: >-
            Indicates when the specific member or organization did (or is
            intended to) come into effect and end.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    CatalogEntry:
      description: >-
        Catalog entries are wrappers that contextualize items included in a
        catalog.
      properties:
        resourceType:
          description: This is a CatalogEntry resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Used in supporting different identifiers for the same product, e.g.
            manufacturer code and retailer code.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        orderable:
          $ref: '#/components/schemas/boolean'
        _orderable:
          $ref: '#/components/schemas/Element'
        referencedItem:
          $ref: '#/components/schemas/Reference'
        additionalIdentifier:
          description: 'Used in supporting related concepts, e.g. NDC to RxNorm.'
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        classification:
          description: 'Classes of devices, or ATC for medication.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        status:
          description: >-
            Used to support catalog exchange even for unsupported products, e.g.
            getting list of medications even if not prescribable.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        validityPeriod:
          description: >-
            The time period in which this catalog entry is expected to be
            active.
          $ref: '#/components/schemas/Period'
        validTo:
          $ref: '#/components/schemas/dateTime'
        _validTo:
          $ref: '#/components/schemas/Element'
        lastUpdated:
          description: >-
            Typically date of issue is different from the beginning of the
            validity. This can be used to see when an item was last updated.
          $ref: '#/components/schemas/dateTime'
        _lastUpdated:
          $ref: '#/components/schemas/Element'
        additionalCharacteristic:
          description: 'Used for examplefor Out of Formulary, or any specifics.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        additionalClassification:
          description: 'User for example for ATC classification, or.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        relatedEntry:
          description: >-
            Used for example, to point to a substance, or to a device used to
            administer a medication.
          items:
            $ref: '#/components/schemas/CatalogEntry_RelatedEntry'
          type: array
      additionalProperties: false
      required:
        - resourceType
        - referencedItem
    CatalogEntry_RelatedEntry:
      description: >-
        Catalog entries are wrappers that contextualize items included in a
        catalog.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        relationtype:
          description: >-
            The type of relation to the related item: child, parent,
            packageContent, containerPackage, usedIn, uses, requires, etc.
          enum:
            - triggers
            - is-replaced-by
        _relationtype:
          $ref: '#/components/schemas/Element'
        item:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - item
    ChargeItem:
      description: >-
        The resource ChargeItem describes the provision of healthcare provider
        products for a certain patient, therefore referring not only to the
        product, but containing in addition details of the provision, like date,
        time, amounts and participating organizations and persons. Main Usage of
        the ChargeItem is to enable the billing process and internal cost
        allocation.
      properties:
        resourceType:
          description: This is a ChargeItem resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifiers assigned to this event performer or other systems.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        definitionUri:
          description: >-
            References the (external) source of pricing information, rules of
            application for the code this ChargeItem uses.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _definitionUri:
          description: Extensions for definitionUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        definitionCanonical:
          description: >-
            References the source of pricing information, rules of application
            for the code this ChargeItem uses.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        status:
          description: The current state of the ChargeItem.
          enum:
            - planned
            - billable
            - not-billable
            - aborted
            - billed
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        partOf:
          description: >-
            ChargeItems can be grouped to larger ChargeItems covering the whole
            set.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The individual or set of individuals the action is being or was
            performed on.
          $ref: '#/components/schemas/Reference'
        context:
          description: >-
            The encounter or episode of care that establishes the context for
            this event.
          $ref: '#/components/schemas/Reference'
        occurrenceDateTime:
          description: Date/time(s) or duration when the charged service was applied.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        occurrenceTiming:
          $ref: '#/components/schemas/Timing'
        performer:
          description: >-
            Indicates who or what performed or participated in the charged
            service.
          items:
            $ref: '#/components/schemas/ChargeItem_Performer'
          type: array
        performingOrganization:
          $ref: '#/components/schemas/Reference'
        requestingOrganization:
          $ref: '#/components/schemas/Reference'
        costCenter:
          description: >-
            The financial cost center permits the tracking of charge
            attribution.
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        bodysite:
          description: The anatomical location where the related service has been applied.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        factorOverride:
          description: >-
            Factor overriding the factor determined by the rules associated with
            the code.
          $ref: '#/components/schemas/decimal'
        _factorOverride:
          $ref: '#/components/schemas/Element'
        priceOverride:
          description: >-
            Total price of the charge overriding the list price associated with
            the code.
          $ref: '#/components/schemas/Money'
        overrideReason:
          description: >-
            If the list price or the rule-based factor associated with the code
            is overridden, this attribute can capture a text to indicate the
            reason for this action.
          $ref: '#/components/schemas/string'
        _overrideReason:
          $ref: '#/components/schemas/Element'
        enterer:
          $ref: '#/components/schemas/Reference'
        enteredDate:
          $ref: '#/components/schemas/dateTime'
        _enteredDate:
          $ref: '#/components/schemas/Element'
        reason:
          description: Describes why the event occurred in coded or textual form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        service:
          description: Indicated the rendered service that caused this charge.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        productReference:
          description: >-
            Identifies the device, food, drug or other product being charged
            either by type code or reference to an instance.
          $ref: '#/components/schemas/Reference'
        productCodeableConcept:
          description: >-
            Identifies the device, food, drug or other product being charged
            either by type code or reference to an instance.
          $ref: '#/components/schemas/CodeableConcept'
        account:
          description: Account into which this ChargeItems belongs.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Comments made about the event by the performer, subject or other
            participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        supportingInformation:
          description: Further information supporting this charge.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - code
        - subject
        - resourceType
    ChargeItem_Performer:
      description: >-
        The resource ChargeItem describes the provision of healthcare provider
        products for a certain patient, therefore referring not only to the
        product, but containing in addition details of the provision, like date,
        time, amounts and participating organizations and persons. Main Usage of
        the ChargeItem is to enable the billing process and internal cost
        allocation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        function:
          description: >-
            Describes the type of performance or participation(e.g. primary
            surgeon, anesthesiologiest, etc.).
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          description: >-
            The device, practitioner, etc. who performed or participated in the
            service.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    ChargeItemDefinition:
      description: >-
        The ChargeItemDefinition resource provides the properties that apply to
        the (billing) codes necessary to calculate costs and prices. The
        properties may differ largely depending on type and realm, therefore
        this resource gives only a rough structure and requires profiling for
        each type of billing code system.
      properties:
        resourceType:
          description: This is a ChargeItemDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this charge item definition
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this charge item definition is (or will
            be) published. This URL can be the target of a canonical reference.
            It SHALL remain the same when the charge item definition is stored
            on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this charge item
            definition when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the charge
            item definition when it is referenced in a specification, model,
            design or instance. This is an arbitrary value managed by the charge
            item definition author and is not expected to be globally unique.
            For example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence. To provide a version
            consistent with the Decision Support Service specification, use the
            format Major.Minor.Revision (e.g. 1.0.0). For more information on
            versioning knowledge assets, refer to the Decision Support Service
            specification. Note that a version is required for non-experimental
            active assets.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the charge item
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        derivedFromUri:
          description: >-
            The URL pointing to an externally-defined charge item definition
            that is adhered to in whole or in part by this definition.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _derivedFromUri:
          description: Extensions for derivedFromUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        partOf:
          description: >-
            A larger definition of which this particular definition is a
            component or step.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        replaces:
          description: >-
            As new versions of a protocol or guideline are defined, allows
            identification of what versions are replaced by a new instance.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        status:
          description: The current state of the ChargeItemDefinition.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this charge item definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the charge item definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the charge item
            definition changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the charge
            item definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the charge item
            definition from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate charge item definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the charge item definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the charge item definition and/or
            its contents. Copyright statements are generally legal restrictions
            on the use and publishing of the charge item definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the charge item definition content was or is
            planned to be in active use.
          $ref: '#/components/schemas/Period'
        code:
          description: >-
            The defined billing details in this resource pertain to the given
            billing code.
          $ref: '#/components/schemas/CodeableConcept'
        instance:
          description: >-
            The defined billing details in this resource pertain to the given
            product instance(s).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        applicability:
          description: >-
            Expressions that describe applicability criteria for the billing
            code.
          items:
            $ref: '#/components/schemas/ChargeItemDefinition_Applicability'
          type: array
        propertyGroup:
          description: >-
            Group of properties which are applicable under the same conditions.
            If no applicability rules are established for the group, then all
            properties always apply.
          items:
            $ref: '#/components/schemas/ChargeItemDefinition_PropertyGroup'
          type: array
      additionalProperties: false
      required:
        - resourceType
    ChargeItemDefinition_Applicability:
      description: >-
        The ChargeItemDefinition resource provides the properties that apply to
        the (billing) codes necessary to calculate costs and prices. The
        properties may differ largely depending on type and realm, therefore
        this resource gives only a rough structure and requires profiling for
        each type of billing code system.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            A brief, natural language description of the condition that
            effectively communicates the intended semantics.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        language:
          description: >-
            The media type of the language for the expression, e.g. "text/cql"
            for Clinical Query Language expressions or "text/fhirpath" for
            FHIRPath expressions.
          $ref: '#/components/schemas/string'
        _language:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            An expression that returns true or false, indicating whether the
            condition is satisfied. When using FHIRPath expressions, the
            %context environment variable must be replaced at runtime with the
            ChargeItem resource to which this definition is applied.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ChargeItemDefinition_PropertyGroup:
      description: >-
        The ChargeItemDefinition resource provides the properties that apply to
        the (billing) codes necessary to calculate costs and prices. The
        properties may differ largely depending on type and realm, therefore
        this resource gives only a rough structure and requires profiling for
        each type of billing code system.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        applicability:
          description: >-
            Expressions that describe applicability criteria for the
            priceComponent.
          items:
            $ref: '#/components/schemas/ChargeItemDefinition_Applicability'
          type: array
        priceComponent:
          description: >-
            The price for a ChargeItem may be calculated as a base price with
            surcharges/deductions that apply in certain conditions. A
            ChargeItemDefinition resource that defines the prices, factors and
            conditions that apply to a billing code is currently under
            development. The priceComponent element can be used to offer
            transparency to the recipient of the Invoice of how the prices have
            been calculated.
          items:
            $ref: '#/components/schemas/ChargeItemDefinition_PriceComponent'
          type: array
      additionalProperties: false
    ChargeItemDefinition_PriceComponent:
      description: >-
        The ChargeItemDefinition resource provides the properties that apply to
        the (billing) codes necessary to calculate costs and prices. The
        properties may differ largely depending on type and realm, therefore
        this resource gives only a rough structure and requires profiling for
        each type of billing code system.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code that identifies the component. Codes may be used to
            differentiate between kinds of taxes, surcharges, discounts etc.
          $ref: '#/components/schemas/CodeableConcept'
        factor:
          description: >-
            The factor that has been applied on the base price for calculating
            this component.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        amount:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
    Claim:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        resourceType:
          description: This is a Claim resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this claim.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The category of claim, e.g. oral, pharmacy, vision, institutional,
            professional.
          $ref: '#/components/schemas/CodeableConcept'
        subType:
          description: >-
            A finer grained suite of claim type codes which may convey
            additional information such as Inpatient vs Outpatient and/or a
            specialty service.
          $ref: '#/components/schemas/CodeableConcept'
        use:
          description: >-
            A code to indicate whether the nature of the request is: to request
            adjudication of products and services previously rendered; or
            requesting authorization and adjudication for provision in the
            future; or requesting the non-binding adjudication of the listed
            products and services which could be provided in the future.
          enum:
            - claim
            - preauthorization
            - predetermination
        _use:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            The party to whom the professional services and/or products have
            been supplied or are being considered and for whom actual or
            forecast reimbursement is sought.
          $ref: '#/components/schemas/Reference'
        billablePeriod:
          $ref: '#/components/schemas/Period'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        enterer:
          description: >-
            Individual who created the claim, predetermination or
            preauthorization.
          $ref: '#/components/schemas/Reference'
        insurer:
          $ref: '#/components/schemas/Reference'
        provider:
          description: >-
            The provider which is responsible for the claim, predetermination or
            preauthorization.
          $ref: '#/components/schemas/Reference'
        priority:
          description: >-
            The provider-required urgency of processing the request. Typical
            values include: stat, routine deferred.
          $ref: '#/components/schemas/CodeableConcept'
        fundsReserve:
          description: >-
            A code to indicate whether and for whom funds are to be reserved for
            future claims.
          $ref: '#/components/schemas/CodeableConcept'
        related:
          description: >-
            Other claims which are related to this claim such as prior
            submissions or claims for related services or for the same event.
          items:
            $ref: '#/components/schemas/Claim_Related'
          type: array
        prescription:
          description: >-
            Prescription to support the dispensing of pharmacy, device or vision
            products.
          $ref: '#/components/schemas/Reference'
        originalPrescription:
          description: >-
            Original prescription which has been superseded by this prescription
            to support the dispensing of pharmacy services, medications or
            products.
          $ref: '#/components/schemas/Reference'
        payee:
          description: >-
            The party to be reimbursed for cost of the products and services
            according to the terms of the policy.
          $ref: '#/components/schemas/Claim_Payee'
        referral:
          $ref: '#/components/schemas/Reference'
        facility:
          $ref: '#/components/schemas/Reference'
        careTeam:
          description: The members of the team who provided the products and services.
          items:
            $ref: '#/components/schemas/Claim_CareTeam'
          type: array
        supportingInfo:
          description: >-
            Additional information codes regarding exceptions, special
            considerations, the condition, situation, prior or concurrent
            issues.
          items:
            $ref: '#/components/schemas/Claim_SupportingInfo'
          type: array
        diagnosis:
          description: Information about diagnoses relevant to the claim items.
          items:
            $ref: '#/components/schemas/Claim_Diagnosis'
          type: array
        procedure:
          description: >-
            Procedures performed on the patient relevant to the billing items
            with the claim.
          items:
            $ref: '#/components/schemas/Claim_Procedure'
          type: array
        insurance:
          description: >-
            Financial instruments for reimbursement for the health care products
            and services specified on the claim.
          items:
            $ref: '#/components/schemas/Claim_Insurance'
          type: array
        accident:
          description: >-
            Details of an accident which resulted in injuries which required the
            products and services listed in the claim.
          $ref: '#/components/schemas/Claim_Accident'
        item:
          description: >-
            A claim line. Either a simple  product or service or a 'group' of
            details which can each be a simple items or groups of sub-details.
          items:
            $ref: '#/components/schemas/Claim_Item'
          type: array
        total:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - insurance
        - provider
        - patient
        - type
        - priority
        - resourceType
    Claim_Related:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        claim:
          $ref: '#/components/schemas/Reference'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        reference:
          description: >-
            An alternate organizational reference to the case or file to which
            this particular claim pertains.
          $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    Claim_Payee:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        party:
          description: >-
            Reference to the individual or organization to whom any payment will
            be made.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - type
    Claim_CareTeam:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        provider:
          $ref: '#/components/schemas/Reference'
        responsible:
          description: >-
            The party who is billing and/or responsible for the claimed products
            or services.
          $ref: '#/components/schemas/boolean'
        _responsible:
          $ref: '#/components/schemas/Element'
        role:
          description: >-
            The lead, assisting or supervising practitioner and their discipline
            if a multidisciplinary team.
          $ref: '#/components/schemas/CodeableConcept'
        qualification:
          description: >-
            The qualification of the practitioner which is applicable for this
            service.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - provider
    Claim_SupportingInfo:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            The general class of the information supplied: information;
            exception; accident, employment; onset, etc.
          $ref: '#/components/schemas/CodeableConcept'
        code:
          description: >-
            System and code pertaining to the specific information regarding
            special conditions relating to the setting, treatment or patient
            for which care is sought.
          $ref: '#/components/schemas/CodeableConcept'
        timingDate:
          description: The date when or period to which this information refers.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _timingDate:
          $ref: '#/components/schemas/Element'
        timingPeriod:
          $ref: '#/components/schemas/Period'
        valueBoolean:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueString:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueQuantity:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Quantity'
        valueAttachment:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Attachment'
        valueReference:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Reference'
        reason:
          description: >-
            Provides the reason in the situation where a reason code is required
            in addition to the content.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - category
    Claim_Diagnosis:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        diagnosisCodeableConcept:
          description: >-
            The nature of illness or problem in a coded form or as a reference
            to an external defined Condition.
          $ref: '#/components/schemas/CodeableConcept'
        diagnosisReference:
          description: >-
            The nature of illness or problem in a coded form or as a reference
            to an external defined Condition.
          $ref: '#/components/schemas/Reference'
        type:
          description: When the condition was observed or the relative ranking.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        onAdmission:
          description: >-
            Indication of whether the diagnosis was present on admission to a
            facility.
          $ref: '#/components/schemas/CodeableConcept'
        packageCode:
          description: >-
            A package billing code or bundle code used to group products and
            services to a particular health condition (such as heart attack)
            which is based on a predetermined grouping code system.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    Claim_Procedure:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        type:
          description: When the condition was observed or the relative ranking.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        procedureCodeableConcept:
          description: >-
            The code or reference to a Procedure resource which identifies the
            clinical intervention performed.
          $ref: '#/components/schemas/CodeableConcept'
        procedureReference:
          description: >-
            The code or reference to a Procedure resource which identifies the
            clinical intervention performed.
          $ref: '#/components/schemas/Reference'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    Claim_Insurance:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          description: >-
            A number to uniquely identify insurance entries and provide a
            sequence of coverages to convey coordination of benefit order.
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        focal:
          description: >-
            A flag to indicate that this Coverage is to be used for adjudication
            of this claim when set to true.
          $ref: '#/components/schemas/boolean'
        _focal:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            The business identifier to be used when the claim is sent for
            adjudication against this insurance policy.
          $ref: '#/components/schemas/Identifier'
        coverage:
          description: >-
            Reference to the insurance card level information contained in the
            Coverage resource. The coverage issuing insurer will use these
            details to locate the patient's actual coverage within the insurer's
            information system.
          $ref: '#/components/schemas/Reference'
        businessArrangement:
          description: >-
            A business agreement number established between the provider and the
            insurer for special business processing purposes.
          $ref: '#/components/schemas/string'
        _businessArrangement:
          $ref: '#/components/schemas/Element'
        preAuthRef:
          description: >-
            Reference numbers previously provided by the insurer to the provider
            to be quoted on subsequent claims containing services or products
            related to the prior authorization.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _preAuthRef:
          description: Extensions for preAuthRef
          items:
            $ref: '#/components/schemas/Element'
          type: array
        claimResponse:
          description: >-
            The result of the adjudication of the line items for the Coverage
            specified in this insurance.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - coverage
    Claim_Accident:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        date:
          description: >-
            Date of an accident event  related to the products and services
            contained in the claim.
          $ref: '#/components/schemas/date'
        _date:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type or context of the accident event for the purposes of
            selection of potential insurance coverages and determination of
            coordination between insurers.
          $ref: '#/components/schemas/CodeableConcept'
        locationAddress:
          $ref: '#/components/schemas/Address'
        locationReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Claim_Item:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        careTeamSequence:
          description: CareTeam members related to this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _careTeamSequence:
          description: Extensions for careTeamSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        diagnosisSequence:
          description: Diagnosis applicable for this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _diagnosisSequence:
          description: Extensions for diagnosisSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        procedureSequence:
          description: Procedures applicable for this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _procedureSequence:
          description: Extensions for procedureSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        informationSequence:
          description: >-
            Exceptions, special conditions and supporting information applicable
            for this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _informationSequence:
          description: Extensions for informationSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        revenue:
          description: >-
            The type of revenue or cost center providing the product and/or
            service.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        servicedDate:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _servicedDate:
          $ref: '#/components/schemas/Element'
        servicedPeriod:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          $ref: '#/components/schemas/Period'
        locationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        locationAddress:
          $ref: '#/components/schemas/Address'
        locationReference:
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        subSite:
          description: >-
            A region or surface of the bodySite, e.g. limb region or tooth
            surface(s).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        encounter:
          description: >-
            The Encounters during which this Claim was created or to which the
            creation of this record is tightly associated.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        detail:
          description: >-
            A claim detail line. Either a simple (a product or service) or a
            'group' of sub-details which are simple items.
          items:
            $ref: '#/components/schemas/Claim_Detail'
          type: array
      additionalProperties: false
      required:
        - productOrService
    Claim_Detail:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        revenue:
          description: >-
            The type of revenue or cost center providing the product and/or
            service.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        subDetail:
          description: >-
            A claim detail line. Either a simple (a product or service) or a
            'group' of sub-details which are simple items.
          items:
            $ref: '#/components/schemas/Claim_SubDetail'
          type: array
      additionalProperties: false
      required:
        - productOrService
    Claim_SubDetail:
      description: >-
        A provider issued list of professional services and products which have
        been provided, or are to be provided, to a patient which is sent to an
        insurer for reimbursement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        revenue:
          description: >-
            The type of revenue or cost center providing the product and/or
            service.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ClaimResponse:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        resourceType:
          description: This is a ClaimResponse resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this claim response.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            A finer grained suite of claim type codes which may convey
            additional information such as Inpatient vs Outpatient and/or a
            specialty service.
          $ref: '#/components/schemas/CodeableConcept'
        subType:
          description: >-
            A finer grained suite of claim type codes which may convey
            additional information such as Inpatient vs Outpatient and/or a
            specialty service.
          $ref: '#/components/schemas/CodeableConcept'
        use:
          description: >-
            A code to indicate whether the nature of the request is: to request
            adjudication of products and services previously rendered; or
            requesting authorization and adjudication for provision in the
            future; or requesting the non-binding adjudication of the listed
            products and services which could be provided in the future.
          $ref: '#/components/schemas/code'
        _use:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            The party to whom the professional services and/or products have
            been supplied or are being considered and for whom actual for facast
            reimbursement is sought.
          $ref: '#/components/schemas/Reference'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        insurer:
          description: >-
            The party responsible for authorization, adjudication and
            reimbursement.
          $ref: '#/components/schemas/Reference'
        requestor:
          description: >-
            The provider which is responsible for the claim, predetermination or
            preauthorization.
          $ref: '#/components/schemas/Reference'
        request:
          $ref: '#/components/schemas/Reference'
        outcome:
          description: >-
            The outcome of the claim, predetermination, or preauthorization
            processing.
          $ref: '#/components/schemas/code'
        _outcome:
          $ref: '#/components/schemas/Element'
        disposition:
          $ref: '#/components/schemas/string'
        _disposition:
          $ref: '#/components/schemas/Element'
        preAuthRef:
          description: >-
            Reference from the Insurer which is used in later communications
            which refers to this adjudication.
          $ref: '#/components/schemas/string'
        _preAuthRef:
          $ref: '#/components/schemas/Element'
        preAuthPeriod:
          $ref: '#/components/schemas/Period'
        payeeType:
          $ref: '#/components/schemas/CodeableConcept'
        item:
          description: >-
            A claim line. Either a simple (a product or service) or a 'group' of
            details which can also be a simple items or groups of sub-details.
          items:
            $ref: '#/components/schemas/ClaimResponse_Item'
          type: array
        addItem:
          description: >-
            The first-tier service adjudications for payor added product or
            service lines.
          items:
            $ref: '#/components/schemas/ClaimResponse_AddItem'
          type: array
        adjudication:
          description: >-
            The adjudication results which are presented at the header level
            rather than at the line-item or add-item levels.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
        total:
          description: Categorized monetary totals for the adjudication.
          items:
            $ref: '#/components/schemas/ClaimResponse_Total'
          type: array
        payment:
          $ref: '#/components/schemas/ClaimResponse_Payment'
        fundsReserve:
          description: >-
            A code, used only on a response to a preauthorization, to indicate
            whether the benefits payable have been reserved and for whom.
          $ref: '#/components/schemas/CodeableConcept'
        formCode:
          $ref: '#/components/schemas/CodeableConcept'
        form:
          description: >-
            The actual form, by reference or inclusion, for printing the content
            or an EOB.
          $ref: '#/components/schemas/Attachment'
        processNote:
          description: >-
            A note that describes or explains adjudication results in a human
            readable form.
          items:
            $ref: '#/components/schemas/ClaimResponse_ProcessNote'
          type: array
        communicationRequest:
          description: Request for additional supporting or authorizing information.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        insurance:
          description: >-
            Financial instruments for reimbursement for the health care products
            and services specified on the claim.
          items:
            $ref: '#/components/schemas/ClaimResponse_Insurance'
          type: array
        error:
          description: Errors encountered during the processing of the adjudication.
          items:
            $ref: '#/components/schemas/ClaimResponse_Error'
          type: array
      additionalProperties: false
      required:
        - patient
        - insurer
        - type
        - resourceType
    ClaimResponse_Item:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemSequence:
          $ref: '#/components/schemas/positiveInt'
        _itemSequence:
          $ref: '#/components/schemas/Element'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: >-
            If this item is a group then the values here are a summary of the
            adjudication of the detail items. If this item is a simple product
            or service then this is the result of the adjudication of this item.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
        detail:
          description: >-
            A claim detail. Either a simple (a product or service) or a 'group'
            of sub-details which are simple items.
          items:
            $ref: '#/components/schemas/ClaimResponse_Detail'
          type: array
      additionalProperties: false
      required:
        - adjudication
    ClaimResponse_Adjudication:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            A code to indicate the information type of this adjudication record.
            Information types may include the value submitted, maximum values or
            percentages allowed or payable under the plan, amounts that: the
            patient is responsible for in aggregate or pertaining to this item;
            amounts paid by other coverages; and, the benefit payable for this
            item.
          $ref: '#/components/schemas/CodeableConcept'
        reason:
          description: >-
            A code supporting the understanding of the adjudication result and
            explaining variance from expected amount.
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          $ref: '#/components/schemas/Money'
        value:
          description: >-
            A non-monetary value associated with the category. Mutually
            exclusive to the amount element above.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - category
    ClaimResponse_Detail:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        detailSequence:
          $ref: '#/components/schemas/positiveInt'
        _detailSequence:
          $ref: '#/components/schemas/Element'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
        subDetail:
          description: A sub-detail adjudication of a simple product or service.
          items:
            $ref: '#/components/schemas/ClaimResponse_SubDetail'
          type: array
      additionalProperties: false
      required:
        - adjudication
    ClaimResponse_SubDetail:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subDetailSequence:
          $ref: '#/components/schemas/positiveInt'
        _subDetailSequence:
          $ref: '#/components/schemas/Element'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
      additionalProperties: false
    ClaimResponse_AddItem:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemSequence:
          description: Claim items which this service line is intended to replace.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _itemSequence:
          description: Extensions for itemSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        detailSequence:
          description: >-
            The sequence number of the details within the claim item which this
            line is intended to replace.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _detailSequence:
          description: Extensions for detailSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        subdetailSequence:
          description: >-
            The sequence number of the sub-details within the details within the
            claim item which this line is intended to replace.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _subdetailSequence:
          description: Extensions for subdetailSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        provider:
          description: >-
            The providers who are authorized for the services rendered to the
            patient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        servicedDate:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _servicedDate:
          $ref: '#/components/schemas/Element'
        servicedPeriod:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          $ref: '#/components/schemas/Period'
        locationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        locationAddress:
          $ref: '#/components/schemas/Address'
        locationReference:
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        subSite:
          description: >-
            A region or surface of the bodySite, e.g. limb region or tooth
            surface(s).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
        detail:
          description: The second-tier service adjudications for payor added services.
          items:
            $ref: '#/components/schemas/ClaimResponse_Detail1'
          type: array
      additionalProperties: false
      required:
        - adjudication
        - productOrService
    ClaimResponse_Detail1:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
        subDetail:
          description: The third-tier service adjudications for payor added services.
          items:
            $ref: '#/components/schemas/ClaimResponse_SubDetail1'
          type: array
      additionalProperties: false
      required:
        - adjudication
        - productOrService
    ClaimResponse_SubDetail1:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ClaimResponse_Adjudication'
          type: array
      additionalProperties: false
      required:
        - adjudication
        - productOrService
    ClaimResponse_Total:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            A code to indicate the information type of this adjudication record.
            Information types may include: the value submitted, maximum values
            or percentages allowed or payable under the plan, amounts that the
            patient is responsible for in aggregate or pertaining to this item,
            amounts paid by other coverages, and the benefit payable for this
            item.
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - amount
        - category
    ClaimResponse_Payment:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Whether this represents partial or complete payment of the benefits
            payable.
          $ref: '#/components/schemas/CodeableConcept'
        adjustment:
          description: >-
            Total amount of all adjustments to this payment included in this
            transaction which are not related to this claim's adjudication.
          $ref: '#/components/schemas/Money'
        adjustmentReason:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          description: >-
            Estimated date the payment will be issued or the actual issue date
            of payment.
          $ref: '#/components/schemas/date'
        _date:
          $ref: '#/components/schemas/Element'
        amount:
          $ref: '#/components/schemas/Money'
        identifier:
          $ref: '#/components/schemas/Identifier'
      additionalProperties: false
      required:
        - amount
        - type
    ClaimResponse_ProcessNote:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        number:
          $ref: '#/components/schemas/positiveInt'
        _number:
          $ref: '#/components/schemas/Element'
        type:
          description: The business purpose of the note text.
          enum:
            - display
            - print
            - printoper
        _type:
          $ref: '#/components/schemas/Element'
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ClaimResponse_Insurance:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          description: >-
            A number to uniquely identify insurance entries and provide a
            sequence of coverages to convey coordination of benefit order.
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        focal:
          description: >-
            A flag to indicate that this Coverage is to be used for adjudication
            of this claim when set to true.
          $ref: '#/components/schemas/boolean'
        _focal:
          $ref: '#/components/schemas/Element'
        coverage:
          description: >-
            Reference to the insurance card level information contained in the
            Coverage resource. The coverage issuing insurer will use these
            details to locate the patient's actual coverage within the insurer's
            information system.
          $ref: '#/components/schemas/Reference'
        businessArrangement:
          description: >-
            A business agreement number established between the provider and the
            insurer for special business processing purposes.
          $ref: '#/components/schemas/string'
        _businessArrangement:
          $ref: '#/components/schemas/Element'
        claimResponse:
          description: >-
            The result of the adjudication of the line items for the Coverage
            specified in this insurance.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - coverage
    ClaimResponse_Error:
      description: >-
        This resource provides the adjudication details from the processing of a
        Claim resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemSequence:
          description: >-
            The sequence number of the line item submitted which contains the
            error. This value is omitted when the error occurs outside of the
            item structure.
          $ref: '#/components/schemas/positiveInt'
        _itemSequence:
          $ref: '#/components/schemas/Element'
        detailSequence:
          description: >-
            The sequence number of the detail within the line item submitted
            which contains the error. This value is omitted when the error
            occurs outside of the item structure.
          $ref: '#/components/schemas/positiveInt'
        _detailSequence:
          $ref: '#/components/schemas/Element'
        subDetailSequence:
          description: >-
            The sequence number of the sub-detail within the detail within the
            line item submitted which contains the error. This value is omitted
            when the error occurs outside of the item structure.
          $ref: '#/components/schemas/positiveInt'
        _subDetailSequence:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            An error code, from a specified code system, which details why the
            claim could not be adjudicated.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - code
    ClinicalImpression:
      description: >-
        A record of a clinical assessment performed to determine what problem(s)
        may affect the patient and before planning the treatments or management
        strategies that are best to manage a patient's condition. Assessments
        are often 1:1 with a clinical consultation / encounter,  but this varies
        greatly depending on the clinical workflow. This resource is called
        "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion
        with the recording of assessment tools such as Apgar score.
      properties:
        resourceType:
          description: This is a ClinicalImpression resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this clinical impression by the
            performer or other systems which remain constant as the resource is
            updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            A summary of the context and/or cause of the assessment - why /
            where it was performed, and what patient events/status prompted it.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this ClinicalImpression was created or to
            which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        effectiveDateTime:
          description: The point in time or period over which the subject was assessed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _effectiveDateTime:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          $ref: '#/components/schemas/Period'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        assessor:
          $ref: '#/components/schemas/Reference'
        previous:
          description: >-
            A reference to the last assessment that was conducted on this
            patient. Assessments are often/usually ongoing in nature; a care
            provider (practitioner or team) will make new assessments on an
            ongoing basis as new data arises or the patient's conditions
            changes.
          $ref: '#/components/schemas/Reference'
        problem:
          description: A list of the relevant problems/conditions for a patient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        investigation:
          description: >-
            One or more sets of investigations (signs, symptoms, etc.). The
            actual grouping of investigations varies greatly depending on the
            type and context of the assessment. These investigations may include
            data generated during the assessment process, or data previously
            generated and recorded that is pertinent to the outcomes.
          items:
            $ref: '#/components/schemas/ClinicalImpression_Investigation'
          type: array
        protocol:
          description: >-
            Reference to a specific published clinical protocol that was
            followed during this assessment, and/or that provides evidence in
            support of the diagnosis.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _protocol:
          description: Extensions for protocol
          items:
            $ref: '#/components/schemas/Element'
          type: array
        summary:
          $ref: '#/components/schemas/string'
        _summary:
          $ref: '#/components/schemas/Element'
        finding:
          description: >-
            Specific findings or diagnoses that were considered likely or
            relevant to ongoing treatment.
          items:
            $ref: '#/components/schemas/ClinicalImpression_Finding'
          type: array
        prognosisCodeableConcept:
          description: Estimate of likely outcome.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        prognosisReference:
          description: RiskAssessment expressing likely outcome.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        supportingInfo:
          description: Information supporting the clinical impression.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Commentary about the impression, typically recorded after the
            impression itself was made, though supplemental notes by the
            original author could also appear.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    ClinicalImpression_Investigation:
      description: >-
        A record of a clinical assessment performed to determine what problem(s)
        may affect the patient and before planning the treatments or management
        strategies that are best to manage a patient's condition. Assessments
        are often 1:1 with a clinical consultation / encounter,  but this varies
        greatly depending on the clinical workflow. This resource is called
        "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion
        with the recording of assessment tools such as Apgar score.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            A name/code for the group ("set") of investigations. Typically, this
            will be something like "signs", "symptoms", "clinical",
            "diagnostic", but the list is not constrained, and others such
            groups such as (exposure|family|travel|nutritional) history may be
            used.
          $ref: '#/components/schemas/CodeableConcept'
        item:
          description: A record of a specific investigation that was undertaken.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - code
    ClinicalImpression_Finding:
      description: >-
        A record of a clinical assessment performed to determine what problem(s)
        may affect the patient and before planning the treatments or management
        strategies that are best to manage a patient's condition. Assessments
        are often 1:1 with a clinical consultation / encounter,  but this varies
        greatly depending on the clinical workflow. This resource is called
        "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion
        with the recording of assessment tools such as Apgar score.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemCodeableConcept:
          description: >-
            Specific text or code for finding or diagnosis, which may include
            ruled-out or resolved conditions.
          $ref: '#/components/schemas/CodeableConcept'
        itemReference:
          description: >-
            Specific reference for finding or diagnosis, which may include
            ruled-out or resolved conditions.
          $ref: '#/components/schemas/Reference'
        basis:
          $ref: '#/components/schemas/string'
        _basis:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem:
      description: >-
        The CodeSystem resource is used to declare the existence of and describe
        a code system or code system supplement and its key properties, and
        optionally define a part or all of its content.
      properties:
        resourceType:
          description: This is a CodeSystem resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this code system when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this code system is (or will be) published. This URL can
            be the target of a canonical reference. It SHALL remain the same
            when the code system is stored on different servers. This is used in
            [Coding](datatypes.html#Coding).system.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this code system when
            it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the code
            system when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the code system
            author and is not expected to be globally unique. For example, it
            might be a timestamp (e.g. yyyymmdd) if a managed version is not
            available. There is also no expectation that versions can be placed
            in a lexicographical sequence. This is used in
            [Coding](datatypes.html#Coding).version.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the code system. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The date (and optionally time) when the code system resource was
            created or revised.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this code system is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the code system was published.
            The date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the code system changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the code
            system.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the code system from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate code system instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the code system is intended to
            be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this code system is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the code system and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the code system.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        caseSensitive:
          description: >-
            If code comparison is case sensitive when codes within this system
            are compared to each other.
          $ref: '#/components/schemas/boolean'
        _caseSensitive:
          $ref: '#/components/schemas/Element'
        valueSet:
          description: >-
            Canonical reference to the value set that contains the entire code
            system.
          $ref: '#/components/schemas/canonical'
        hierarchyMeaning:
          description: >-
            The meaning of the hierarchy of concepts as represented in this
            resource.
          enum:
            - grouped-by
            - is-a
            - part-of
            - classified-with
        _hierarchyMeaning:
          $ref: '#/components/schemas/Element'
        compositional:
          $ref: '#/components/schemas/boolean'
        _compositional:
          $ref: '#/components/schemas/Element'
        versionNeeded:
          description: >-
            This flag is used to signify that the code system does not commit to
            concept permanence across versions. If true, a version must be
            specified when referencing this code system.
          $ref: '#/components/schemas/boolean'
        _versionNeeded:
          $ref: '#/components/schemas/Element'
        content:
          description: >-
            The extent of the content of the code system (the concepts and codes
            it defines) are represented in this resource instance.
          enum:
            - not-present
            - example
            - fragment
            - complete
            - supplement
        _content:
          $ref: '#/components/schemas/Element'
        supplements:
          description: >-
            The canonical URL of the code system that this code system
            supplement is adding designations and properties to.
          $ref: '#/components/schemas/canonical'
        count:
          description: >-
            The total number of concepts defined by the code system. Where the
            code system has a compositional grammar, the basis of this count is
            defined by the system steward.
          $ref: '#/components/schemas/unsignedInt'
        _count:
          $ref: '#/components/schemas/Element'
        filter:
          description: >-
            A filter that can be used in a value set compose statement when
            selecting concepts using a filter.
          items:
            $ref: '#/components/schemas/CodeSystem_Filter'
          type: array
        property:
          description: >-
            A property defines an additional slot through which additional
            information can be provided about a concept.
          items:
            $ref: '#/components/schemas/CodeSystem_Property'
          type: array
        concept:
          description: >-
            Concepts that are in the code system. The concept definitions are
            inherently hierarchical, but the definitions must be consulted to
            determine what the meanings of the hierarchical relationships are.
          items:
            $ref: '#/components/schemas/CodeSystem_Concept'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CodeSystem_Filter:
      description: >-
        The CodeSystem resource is used to declare the existence of and describe
        a code system or code system supplement and its key properties, and
        optionally define a part or all of its content.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            The code that identifies this filter when it is used as a filter in
            [[[ValueSet]]].compose.include.filter.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        operator:
          description: A list of operators that can be used with the filter.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _operator:
          description: Extensions for operator
          items:
            $ref: '#/components/schemas/Element'
          type: array
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem_Property:
      description: >-
        The CodeSystem resource is used to declare the existence of and describe
        a code system or code system supplement and its key properties, and
        optionally define a part or all of its content.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            A code that is used to identify the property. The code is used
            internally (in CodeSystem.concept.property.code) and also
            externally, such as in property filters.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        uri:
          description: >-
            Reference to the formal meaning of the property. One possible source
            of meaning is the [Concept
            Properties](codesystem-concept-properties.html) code system.
          $ref: '#/components/schemas/uri'
        _uri:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A description of the property- why it is defined, and how its value
            might be used.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of the property value. Properties of type "code" contain a
            code defined by the code system (e.g. a reference to another defined
            concept).
          enum:
            - code
            - Coding
            - string
            - integer
            - boolean
            - dateTime
            - decimal
        _type:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem_Concept:
      description: >-
        The CodeSystem resource is used to declare the existence of and describe
        a code system or code system supplement and its key properties, and
        optionally define a part or all of its content.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            A code - a text symbol - that uniquely identifies the concept within
            the code system.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            A human readable string that is the recommended default way to
            present this concept to a user.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            The formal definition of the concept. The code system resource does
            not make formal definitions required, because of the prevalence of
            legacy systems. However, they are highly recommended, as without
            them there is no formal meaning associated with the concept.
          $ref: '#/components/schemas/string'
        _definition:
          $ref: '#/components/schemas/Element'
        designation:
          description: >-
            Additional representations for the concept - other languages,
            aliases, specialized purposes, used for particular purposes, etc.
          items:
            $ref: '#/components/schemas/CodeSystem_Designation'
          type: array
        property:
          description: A property value for this concept.
          items:
            $ref: '#/components/schemas/CodeSystem_Property1'
          type: array
        concept:
          description: >-
            Defines children of a concept to produce a hierarchy of concepts.
            The nature of the relationships is variable
            (is-a/contains/categorizes) - see hierarchyMeaning.
          items:
            $ref: '#/components/schemas/CodeSystem_Concept'
          type: array
      additionalProperties: false
    CodeSystem_Designation:
      description: >-
        The CodeSystem resource is used to declare the existence of and describe
        a code system or code system supplement and its key properties, and
        optionally define a part or all of its content.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        use:
          $ref: '#/components/schemas/Coding'
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CodeSystem_Property1:
      description: >-
        The CodeSystem resource is used to declare the existence of and describe
        a code system or code system supplement and its key properties, and
        optionally define a part or all of its content.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: The value of this property.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueCoding:
          $ref: '#/components/schemas/Coding'
        valueString:
          description: The value of this property.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: The value of this property.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: The value of this property.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The value of this property.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: The value of this property.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Communication:
      description: >-
        An occurrence of information being transmitted; e.g. an alert that was
        sent to a responsible provider, a public health agency that was notified
        about a reportable condition.
      properties:
        resourceType:
          description: This is a Communication resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this communication by the performer
            or other systems which remain constant as the resource is updated
            and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined protocol, guideline, orderset or
            other definition that is adhered to in whole or in part by this
            Communication.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this Communication.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: >-
            An order, proposal or plan fulfilled in whole or in part by this
            Communication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: Part of this action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        inResponseTo:
          description: Prior communication that this communication is in response to.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            The type of message conveyed such as alert, notification, reminder,
            instruction, etc.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: >-
            Characterizes how quickly the planned or in progress communication
            must be addressed. Includes concepts such as stat, urgent, routine.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        medium:
          description: 'A channel that was used for this communication (e.g. email, fax).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          $ref: '#/components/schemas/Reference'
        topic:
          description: >-
            Description of the purpose/content, similar to a subject line in an
            email.
          $ref: '#/components/schemas/CodeableConcept'
        about:
          description: >-
            Other resources that pertain to this communication and to which this
            communication should be associated.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        encounter:
          description: >-
            The Encounter during which this Communication was created or to
            which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        sent:
          $ref: '#/components/schemas/dateTime'
        _sent:
          $ref: '#/components/schemas/Element'
        received:
          $ref: '#/components/schemas/dateTime'
        _received:
          $ref: '#/components/schemas/Element'
        recipient:
          description: >-
            The entity (e.g. person, organization, clinical information system,
            care team or device) which was the target of the communication. If
            receipts need to be tracked by an individual, a separate resource
            instance will need to be created for each recipient.  Multiple
            recipient communications are intended where either receipts are not
            tracked (e.g. a mass mail-out) or a receipt is captured in aggregate
            (all emails confirmed received by a particular time).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sender:
          description: >-
            The entity (e.g. person, organization, clinical information system,
            or device) which was the source of the communication.
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: The reason or justification for the communication.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates another resource whose existence justifies this
            communication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        payload:
          description: >-
            Text, attachment(s), or resource(s) that was communicated to the
            recipient.
          items:
            $ref: '#/components/schemas/Communication_Payload'
          type: array
        note:
          description: >-
            Additional notes or commentary about the communication by the
            sender, receiver or other interested parties.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Communication_Payload:
      description: >-
        An occurrence of information being transmitted; e.g. an alert that was
        sent to a responsible provider, a public health agency that was notified
        about a reportable condition.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentString:
          description: >-
            A communicated content (or for multi-part communications, one
            portion of the communication).
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _contentString:
          $ref: '#/components/schemas/Element'
        contentAttachment:
          description: >-
            A communicated content (or for multi-part communications, one
            portion of the communication).
          $ref: '#/components/schemas/Attachment'
        contentReference:
          description: >-
            A communicated content (or for multi-part communications, one
            portion of the communication).
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CommunicationRequest:
      description: >-
        A request to convey information; e.g. the CDS system proposes that an
        alert be sent to a responsible provider, the CDS system proposes that
        the public health agency be notified about a reportable condition.
      properties:
        resourceType:
          description: This is a CommunicationRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this communication request by the
            performer or other systems which remain constant as the resource is
            updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A plan or proposal that is fulfilled in whole or in part by this
            request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        replaces:
          description: >-
            Completed or terminated request(s) whose function is taken by this
            new request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        groupIdentifier:
          description: >-
            A shared identifier common to all requests that were authorized more
            or less simultaneously by a single author, representing the
            identifier of the requisition, prescription or similar form.
          $ref: '#/components/schemas/Identifier'
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          description: >-
            Captures the reason for the current state of the
            CommunicationRequest.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            The type of message to be sent such as alert, notification,
            reminder, instruction, etc.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: >-
            Characterizes how quickly the proposed act must be initiated.
            Includes concepts such as stat, urgent, routine.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        doNotPerform:
          description: >-
            If true indicates that the CommunicationRequest is asking for the
            specified action to *not* occur.
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          $ref: '#/components/schemas/Element'
        medium:
          description: 'A channel that was used for this communication (e.g. email, fax).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: >-
            The patient or group that is the focus of this communication
            request.
          $ref: '#/components/schemas/Reference'
        about:
          description: >-
            Other resources that pertain to this communication request and to
            which this communication request should be associated.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        encounter:
          description: >-
            The Encounter during which this CommunicationRequest was created or
            to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        payload:
          description: >-
            Text, attachment(s), or resource(s) to be communicated to the
            recipient.
          items:
            $ref: '#/components/schemas/CommunicationRequest_Payload'
          type: array
        occurrenceDateTime:
          description: The time when this communication is to occur.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        authoredOn:
          description: >-
            For draft requests, indicates the date of initial creation.  For
            requests with other statuses, indicates the date of activation.
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        requester:
          description: >-
            The device, individual, or organization who initiated the request
            and has responsibility for its activation.
          $ref: '#/components/schemas/Reference'
        recipient:
          description: >-
            The entity (e.g. person, organization, clinical information system,
            device, group, or care team) which is the intended target of the
            communication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sender:
          description: >-
            The entity (e.g. person, organization, clinical information system,
            or device) which is to be the source of the communication.
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: Describes why the request is being made in coded or textual form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Indicates another resource whose existence justifies this request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Comments made about the request by the requester, sender, recipient,
            subject or other participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CommunicationRequest_Payload:
      description: >-
        A request to convey information; e.g. the CDS system proposes that an
        alert be sent to a responsible provider, the CDS system proposes that
        the public health agency be notified about a reportable condition.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentString:
          description: >-
            The communicated content (or for multi-part communications, one
            portion of the communication).
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _contentString:
          $ref: '#/components/schemas/Element'
        contentAttachment:
          description: >-
            The communicated content (or for multi-part communications, one
            portion of the communication).
          $ref: '#/components/schemas/Attachment'
        contentReference:
          description: >-
            The communicated content (or for multi-part communications, one
            portion of the communication).
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CompartmentDefinition:
      description: >-
        A compartment definition that defines how resources are accessed on a
        server.
      properties:
        resourceType:
          description: This is a CompartmentDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this compartment definition
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this compartment definition is (or will
            be) published. This URL can be the target of a canonical reference.
            It SHALL remain the same when the compartment definition is stored
            on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the
            compartment definition when it is referenced in a specification,
            model, design or instance. This is an arbitrary value managed by the
            compartment definition author and is not expected to be globally
            unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
            managed version is not available. There is also no expectation that
            versions can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the compartment definition. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this compartment definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this compartment definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the compartment definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the compartment
            definition changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            compartment definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the compartment
            definition from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate compartment definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        purpose:
          description: >-
            Explanation of why this compartment definition is needed and why it
            has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        code:
          description: Which compartment this definition describes.
          enum:
            - Patient
            - Encounter
            - RelatedPerson
            - Practitioner
            - Device
        _code:
          $ref: '#/components/schemas/Element'
        search:
          $ref: '#/components/schemas/boolean'
        _search:
          $ref: '#/components/schemas/Element'
        resource:
          description: Information about how a resource is related to the compartment.
          items:
            $ref: '#/components/schemas/CompartmentDefinition_Resource'
          type: array
      additionalProperties: false
      required:
        - resourceType
    CompartmentDefinition_Resource:
      description: >-
        A compartment definition that defines how resources are accessed on a
        server.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        param:
          description: >-
            The name of a search parameter that represents the link to the
            compartment. More than one may be listed because a resource may be
            linked to a compartment in more than one way,.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _param:
          description: Extensions for param
          items:
            $ref: '#/components/schemas/Element'
          type: array
        documentation:
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Composition:
      description: >-
        A set of healthcare-related information that is assembled together into
        a single logical package that provides a single coherent statement of
        meaning, establishes its own context and that has clinical attestation
        with regard to who is making the statement. A Composition defines the
        structure and narrative content necessary for a document. However, a
        Composition alone does not constitute a document. Rather, the
        Composition must be the first entry in a Bundle where
        Bundle.type=document, and any other resources referenced from
        Composition must be included as subsequent entries in the Bundle (for
        example Patient, Practitioner, Encounter, etc.).
      properties:
        resourceType:
          description: This is a Composition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            A version-independent identifier for the Composition. This
            identifier stays constant as the composition is changed over time.
          $ref: '#/components/schemas/Identifier'
        status:
          description: >-
            The workflow/clinical status of this composition. The status is a
            marker for the clinical standing of the document.
          enum:
            - preliminary
            - final
            - amended
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Specifies the particular kind of composition (e.g. History and
            Physical, Discharge Summary, Progress Note). This usually equates to
            the purpose of making the composition.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            A categorization for the type of the composition - helps for
            indexing and searching. This may be implied by or derived from the
            code specified in the Composition Type.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: >-
            Who or what the composition is about. The composition can be about a
            person, (patient or healthcare practitioner), a device (e.g. a
            machine) or even a group of subjects (such as a document about a
            herd of livestock, or a set of patients that share a common
            exposure).
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            Describes the clinical encounter or type of care this documentation
            is associated with.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The composition editing time, when the composition was last
            logically changed by the author.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            Identifies who is responsible for the information in the
            composition, not necessarily who typed it in.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        confidentiality:
          $ref: '#/components/schemas/code'
        _confidentiality:
          $ref: '#/components/schemas/Element'
        attester:
          description: >-
            A participant who has attested to the accuracy of the
            composition/document.
          items:
            $ref: '#/components/schemas/Composition_Attester'
          type: array
        custodian:
          description: >-
            Identifies the organization or group who is responsible for ongoing
            maintenance of and access to the composition/document information.
          $ref: '#/components/schemas/Reference'
        relatesTo:
          description: >-
            Relationships that this composition has with other compositions or
            documents that already exist.
          items:
            $ref: '#/components/schemas/Composition_RelatesTo'
          type: array
        event:
          description: >-
            The clinical service, such as a colonoscopy or an appendectomy,
            being documented.
          items:
            $ref: '#/components/schemas/Composition_Event'
          type: array
        section:
          description: The root of the sections that make up the composition.
          items:
            $ref: '#/components/schemas/Composition_Section'
          type: array
      additionalProperties: false
      required:
        - author
        - type
        - resourceType
    Composition_Attester:
      description: >-
        A set of healthcare-related information that is assembled together into
        a single logical package that provides a single coherent statement of
        meaning, establishes its own context and that has clinical attestation
        with regard to who is making the statement. A Composition defines the
        structure and narrative content necessary for a document. However, a
        Composition alone does not constitute a document. Rather, the
        Composition must be the first entry in a Bundle where
        Bundle.type=document, and any other resources referenced from
        Composition must be included as subsequent entries in the Bundle (for
        example Patient, Practitioner, Encounter, etc.).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: The type of attestation the authenticator offers.
          enum:
            - personal
            - professional
            - legal
            - official
        _mode:
          $ref: '#/components/schemas/Element'
        time:
          $ref: '#/components/schemas/dateTime'
        _time:
          $ref: '#/components/schemas/Element'
        party:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Composition_RelatesTo:
      description: >-
        A set of healthcare-related information that is assembled together into
        a single logical package that provides a single coherent statement of
        meaning, establishes its own context and that has clinical attestation
        with regard to who is making the statement. A Composition defines the
        structure and narrative content necessary for a document. However, a
        Composition alone does not constitute a document. Rather, the
        Composition must be the first entry in a Bundle where
        Bundle.type=document, and any other resources referenced from
        Composition must be included as subsequent entries in the Bundle (for
        example Patient, Practitioner, Encounter, etc.).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            The type of relationship that this composition has with anther
            composition or document.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        targetIdentifier:
          $ref: '#/components/schemas/Identifier'
        targetReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Composition_Event:
      description: >-
        A set of healthcare-related information that is assembled together into
        a single logical package that provides a single coherent statement of
        meaning, establishes its own context and that has clinical attestation
        with regard to who is making the statement. A Composition defines the
        structure and narrative content necessary for a document. However, a
        Composition alone does not constitute a document. Rather, the
        Composition must be the first entry in a Bundle where
        Bundle.type=document, and any other resources referenced from
        Composition must be included as subsequent entries in the Bundle (for
        example Patient, Practitioner, Encounter, etc.).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            This list of codes represents the main clinical acts, such as a
            colonoscopy or an appendectomy, being documented. In some cases, the
            event is inherent in the typeCode, such as a "History and Physical
            Report" in which the procedure being documented is necessarily a
            "History and Physical" act.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        period:
          description: >-
            The period of time covered by the documentation. There is no
            assertion that the documentation is a complete representation for
            this period, only that it documents events during this time.
          $ref: '#/components/schemas/Period'
        detail:
          description: >-
            The description and/or reference of the event(s) being documented.
            For example, this could be used to document such a colonoscopy or an
            appendectomy.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    Composition_Section:
      description: >-
        A set of healthcare-related information that is assembled together into
        a single logical package that provides a single coherent statement of
        meaning, establishes its own context and that has clinical attestation
        with regard to who is making the statement. A Composition defines the
        structure and narrative content necessary for a document. However, a
        Composition alone does not constitute a document. Rather, the
        Composition must be the first entry in a Bundle where
        Bundle.type=document, and any other resources referenced from
        Composition must be included as subsequent entries in the Bundle (for
        example Patient, Practitioner, Encounter, etc.).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        title:
          description: >-
            The label for this particular section.  This will be part of the
            rendered content for the document, and is often used to build a
            table of contents.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code identifying the kind of content contained within the section.
            This must be consistent with the section title.
          $ref: '#/components/schemas/CodeableConcept'
        author:
          description: >-
            Identifies who is responsible for the information in this section,
            not necessarily who typed it in.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        focus:
          description: >-
            The actual focus of the section when it is not the subject of the
            composition, but instead represents something or someone associated
            with the subject such as (for a patient subject) a spouse, parent,
            fetus, or donor. If not focus is specified, the focus is assumed to
            be focus of the parent section, or, for a section in the Composition
            itself, the subject of the composition. Sections with a focus SHALL
            only include resources where the logical subject (patient, subject,
            focus, etc.) matches the section focus, or the resources have no
            logical subject (few resources).
          $ref: '#/components/schemas/Reference'
        text:
          description: >-
            A human-readable narrative that contains the attested content of the
            section, used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative.
          $ref: '#/components/schemas/Narrative'
        mode:
          description: >-
            How the entry list was prepared - whether it is a working list that
            is suitable for being maintained on an ongoing basis, or if it
            represents a snapshot of a list of items from another source, or
            whether it is a prepared list where items may be marked as added,
            modified or deleted.
          $ref: '#/components/schemas/code'
        _mode:
          $ref: '#/components/schemas/Element'
        orderedBy:
          $ref: '#/components/schemas/CodeableConcept'
        entry:
          description: >-
            A reference to the actual resource from which the narrative in the
            section is derived.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        emptyReason:
          description: >-
            If the section is empty, why the list is empty. An empty section
            typically has some text explaining the empty reason.
          $ref: '#/components/schemas/CodeableConcept'
        section:
          description: A nested sub-section within this section.
          items:
            $ref: '#/components/schemas/Composition_Section'
          type: array
      additionalProperties: false
    ConceptMap:
      description: >-
        A statement of relationships from one set of concepts to one or more
        other concepts - either concepts in code systems, or data element/data
        element concepts, or classes in class models.
      properties:
        resourceType:
          description: This is a ConceptMap resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this concept map when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this concept map is (or will be) published. This URL can
            be the target of a canonical reference. It SHALL remain the same
            when the concept map is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this concept map when
            it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          $ref: '#/components/schemas/Identifier'
        version:
          description: >-
            The identifier that is used to identify this version of the concept
            map when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the concept map
            author and is not expected to be globally unique. For example, it
            might be a timestamp (e.g. yyyymmdd) if a managed version is not
            available. There is also no expectation that versions can be placed
            in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the concept map. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this concept map. Enables tracking the life-cycle of
            the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this concept map is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the concept map was published.
            The date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the concept map changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            concept map.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the concept map from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate concept map instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the concept map is intended to
            be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this concept map is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the concept map and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the concept map.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        sourceUri:
          description: >-
            Identifier for the source value set that contains the concepts that
            are being mapped and provides context for the mappings.
          pattern: ^\S*$
          type: string
        _sourceUri:
          $ref: '#/components/schemas/Element'
        sourceCanonical:
          description: >-
            Identifier for the source value set that contains the concepts that
            are being mapped and provides context for the mappings.
          pattern: ^\S*$
          type: string
        _sourceCanonical:
          $ref: '#/components/schemas/Element'
        targetUri:
          description: >-
            The target value set provides context for the mappings. Note that
            the mapping is made between concepts, not between value sets, but
            the value set provides important context about how the concept
            mapping choices are made.
          pattern: ^\S*$
          type: string
        _targetUri:
          $ref: '#/components/schemas/Element'
        targetCanonical:
          description: >-
            The target value set provides context for the mappings. Note that
            the mapping is made between concepts, not between value sets, but
            the value set provides important context about how the concept
            mapping choices are made.
          pattern: ^\S*$
          type: string
        _targetCanonical:
          $ref: '#/components/schemas/Element'
        group:
          description: A group of mappings that all have the same source and target system.
          items:
            $ref: '#/components/schemas/ConceptMap_Group'
          type: array
      additionalProperties: false
      required:
        - resourceType
    ConceptMap_Group:
      description: >-
        A statement of relationships from one set of concepts to one or more
        other concepts - either concepts in code systems, or data element/data
        element concepts, or classes in class models.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        source:
          description: >-
            An absolute URI that identifies the source system where the concepts
            to be mapped are defined.
          $ref: '#/components/schemas/uri'
        _source:
          $ref: '#/components/schemas/Element'
        sourceVersion:
          description: >-
            The specific version of the code system, as determined by the code
            system authority.
          $ref: '#/components/schemas/string'
        _sourceVersion:
          $ref: '#/components/schemas/Element'
        target:
          description: >-
            An absolute URI that identifies the target system that the concepts
            will be mapped to.
          $ref: '#/components/schemas/uri'
        _target:
          $ref: '#/components/schemas/Element'
        targetVersion:
          description: >-
            The specific version of the code system, as determined by the code
            system authority.
          $ref: '#/components/schemas/string'
        _targetVersion:
          $ref: '#/components/schemas/Element'
        element:
          description: >-
            Mappings for an individual concept in the source to one or more
            concepts in the target.
          items:
            $ref: '#/components/schemas/ConceptMap_Element'
          type: array
        unmapped:
          description: >-
            What to do when there is no mapping for the source concept.
            "Unmapped" does not include codes that are unmatched, and the
            unmapped element is ignored in a code is specified to have
            equivalence = unmatched.
          $ref: '#/components/schemas/ConceptMap_Unmapped'
      additionalProperties: false
      required:
        - element
    ConceptMap_Element:
      description: >-
        A statement of relationships from one set of concepts to one or more
        other concepts - either concepts in code systems, or data element/data
        element concepts, or classes in class models.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            The display for the code. The display is only provided to help
            editors when editing the concept map.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        target:
          description: A concept from the target value set that this concept maps to.
          items:
            $ref: '#/components/schemas/ConceptMap_Target'
          type: array
      additionalProperties: false
    ConceptMap_Target:
      description: >-
        A statement of relationships from one set of concepts to one or more
        other concepts - either concepts in code systems, or data element/data
        element concepts, or classes in class models.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            The display for the code. The display is only provided to help
            editors when editing the concept map.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        equivalence:
          description: >-
            The equivalence between the source and target concepts (counting for
            the dependencies and products). The equivalence is read from target
            to source (e.g. the target is 'wider' than the source).
          enum:
            - relatedto
            - equivalent
            - equal
            - wider
            - subsumes
            - narrower
            - specializes
            - inexact
            - unmatched
            - disjoint
        _equivalence:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            A description of status/issues in mapping that conveys additional
            information not represented in  the structured data.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        dependsOn:
          description: >-
            A set of additional dependencies for this mapping to hold. This
            mapping is only applicable if the specified element can be resolved,
            and it has the specified value.
          items:
            $ref: '#/components/schemas/ConceptMap_DependsOn'
          type: array
        product:
          description: >-
            A set of additional outcomes from this mapping to other elements. To
            properly execute this mapping, the specified element must be mapped
            to some data element or source that is in context. The mapping may
            still be useful without a place for the additional data elements,
            but the equivalence cannot be relied on.
          items:
            $ref: '#/components/schemas/ConceptMap_DependsOn'
          type: array
      additionalProperties: false
    ConceptMap_DependsOn:
      description: >-
        A statement of relationships from one set of concepts to one or more
        other concepts - either concepts in code systems, or data element/data
        element concepts, or classes in class models.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        property:
          description: >-
            A reference to an element that holds a coded value that corresponds
            to a code system property. The idea is that the information model
            carries an element somewhere that is labeled to correspond with a
            code system property.
          $ref: '#/components/schemas/uri'
        _property:
          $ref: '#/components/schemas/Element'
        system:
          description: >-
            An absolute URI that identifies the code system of the dependency
            code (if the source/dependency is a value set that crosses code
            systems).
          $ref: '#/components/schemas/canonical'
        value:
          description: >-
            Identity (code or path) or the element/item/ValueSet/text that the
            map depends on / refers to.
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            The display for the code. The display is only provided to help
            editors when editing the concept map.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ConceptMap_Unmapped:
      description: >-
        A statement of relationships from one set of concepts to one or more
        other concepts - either concepts in code systems, or data element/data
        element concepts, or classes in class models.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        mode:
          description: >-
            Defines which action to take if there is no match for the source
            concept in the target system designated for the group. One of 3
            actions are possible: use the unmapped code (this is useful when
            doing a mapping between versions, and only a few codes have
            changed), use a fixed code (a default code), or alternatively, a
            reference to a different concept map can be provided (by canonical
            URL).
          enum:
            - provided
            - fixed
            - other-map
        _mode:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            The fixed code to use when the mode = 'fixed'  - all unmapped codes
            are mapped to a single fixed code.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            The display for the code. The display is only provided to help
            editors when editing the concept map.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        url:
          description: >-
            The canonical reference to an additional ConceptMap resource
            instance to use for mapping if this ConceptMap resource contains no
            matching mapping for the source concept.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
    Condition:
      description: >-
        A clinical condition, problem, diagnosis, or other event, situation,
        issue, or clinical concept that has risen to a level of concern.
      properties:
        resourceType:
          description: This is a Condition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this condition by the performer or
            other systems which remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        clinicalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        verificationStatus:
          description: >-
            The verification status to support the clinical status of the
            condition.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: A category assigned to the condition.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        severity:
          description: >-
            A subjective assessment of the severity of the condition as
            evaluated by the clinician.
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        bodySite:
          description: The anatomical location where this condition manifests itself.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: >-
            Indicates the patient or group who the condition record is
            associated with.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this Condition was created or to which
            the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        onsetDateTime:
          description: >-
            Estimated or actual date or date-time  the condition began, in the
            opinion of the clinician.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _onsetDateTime:
          $ref: '#/components/schemas/Element'
        onsetAge:
          description: >-
            Estimated or actual date or date-time  the condition began, in the
            opinion of the clinician.
          $ref: '#/components/schemas/Age'
        onsetPeriod:
          description: >-
            Estimated or actual date or date-time  the condition began, in the
            opinion of the clinician.
          $ref: '#/components/schemas/Period'
        onsetRange:
          description: >-
            Estimated or actual date or date-time  the condition began, in the
            opinion of the clinician.
          $ref: '#/components/schemas/Range'
        onsetString:
          description: >-
            Estimated or actual date or date-time  the condition began, in the
            opinion of the clinician.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _onsetString:
          $ref: '#/components/schemas/Element'
        abatementDateTime:
          description: >-
            The date or estimated date that the condition resolved or went into
            remission. This is called "abatement" because of the many overloaded
            connotations associated with "remission" or "resolution" -
            Conditions are never really resolved, but they can abate.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _abatementDateTime:
          $ref: '#/components/schemas/Element'
        abatementAge:
          description: >-
            The date or estimated date that the condition resolved or went into
            remission. This is called "abatement" because of the many overloaded
            connotations associated with "remission" or "resolution" -
            Conditions are never really resolved, but they can abate.
          $ref: '#/components/schemas/Age'
        abatementPeriod:
          description: >-
            The date or estimated date that the condition resolved or went into
            remission. This is called "abatement" because of the many overloaded
            connotations associated with "remission" or "resolution" -
            Conditions are never really resolved, but they can abate.
          $ref: '#/components/schemas/Period'
        abatementRange:
          description: >-
            The date or estimated date that the condition resolved or went into
            remission. This is called "abatement" because of the many overloaded
            connotations associated with "remission" or "resolution" -
            Conditions are never really resolved, but they can abate.
          $ref: '#/components/schemas/Range'
        abatementString:
          description: >-
            The date or estimated date that the condition resolved or went into
            remission. This is called "abatement" because of the many overloaded
            connotations associated with "remission" or "resolution" -
            Conditions are never really resolved, but they can abate.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _abatementString:
          $ref: '#/components/schemas/Element'
        recordedDate:
          description: >-
            The recordedDate represents when this particular Condition record
            was created in the system, which is often a system-generated date.
          $ref: '#/components/schemas/dateTime'
        _recordedDate:
          $ref: '#/components/schemas/Element'
        recorder:
          description: >-
            Individual who recorded the record and takes responsibility for its
            content.
          $ref: '#/components/schemas/Reference'
        asserter:
          $ref: '#/components/schemas/Reference'
        stage:
          description: >-
            Clinical stage or grade of a condition. May include formal severity
            assessments.
          items:
            $ref: '#/components/schemas/Condition_Stage'
          type: array
        evidence:
          description: >-
            Supporting evidence / manifestations that are the basis of the
            Condition's verification status, such as evidence that confirmed or
            refuted the condition.
          items:
            $ref: '#/components/schemas/Condition_Evidence'
          type: array
        note:
          description: >-
            Additional information about the Condition. This is a general
            notes/comments entry  for description of the Condition, its
            diagnosis and prognosis.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    Condition_Stage:
      description: >-
        A clinical condition, problem, diagnosis, or other event, situation,
        issue, or clinical concept that has risen to a level of concern.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        summary:
          description: >-
            A simple summary of the stage such as "Stage 3". The determination
            of the stage is disease-specific.
          $ref: '#/components/schemas/CodeableConcept'
        assessment:
          description: >-
            Reference to a formal record of the evidence on which the staging
            assessment is based.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    Condition_Evidence:
      description: >-
        A clinical condition, problem, diagnosis, or other event, situation,
        issue, or clinical concept that has risen to a level of concern.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            A manifestation or symptom that led to the recording of this
            condition.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        detail:
          description: 'Links to other relevant information, including pathology reports.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    Consent:
      description: >-
        A record of a healthcare consumer’s  choices, which permits or denies
        identified recipient(s) or recipient role(s) to perform one or more
        actions within a given policy context, for specific purposes and periods
        of time.
      properties:
        resourceType:
          description: This is a Consent resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier for this copy of the Consent Statement.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Indicates the current state of this consent.
          enum:
            - draft
            - proposed
            - active
            - rejected
            - inactive
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        scope:
          description: >-
            A selector of the type of consent being presented: ADR, Privacy,
            Treatment, Research.  This list is now extensible.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            A classification of the type of consents found in the statement.
            This element supports indexing and retrieval of consent statements.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        patient:
          $ref: '#/components/schemas/Reference'
        dateTime:
          $ref: '#/components/schemas/dateTime'
        _dateTime:
          $ref: '#/components/schemas/Element'
        performer:
          description: >-
            Either the Grantor, which is the entity responsible for granting the
            rights listed in a Consent Directive or the Grantee, which is the
            entity responsible for complying with the Consent Directive,
            including any obligations or limitations on authorizations and
            enforcement of prohibitions.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        organization:
          description: >-
            The organization that manages the consent, and the framework within
            which it is executed.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sourceAttachment:
          description: >-
            The source on which this consent statement is based. The source
            might be a scanned original paper form, or a reference to a consent
            that links back to such a source, a reference to a document
            repository (e.g. XDS) that stores the original consent document.
          $ref: '#/components/schemas/Attachment'
        sourceReference:
          description: >-
            The source on which this consent statement is based. The source
            might be a scanned original paper form, or a reference to a consent
            that links back to such a source, a reference to a document
            repository (e.g. XDS) that stores the original consent document.
          $ref: '#/components/schemas/Reference'
        policy:
          description: >-
            The references to the policies that are included in this consent
            scope. Policies may be organizational, but are often defined
            jurisdictionally, or in law.
          items:
            $ref: '#/components/schemas/Consent_Policy'
          type: array
        policyRule:
          $ref: '#/components/schemas/CodeableConcept'
        verification:
          description: >-
            Whether a treatment instruction (e.g. artificial respiration yes or
            no) was verified with the patient, his/her family or another
            authorized person.
          items:
            $ref: '#/components/schemas/Consent_Verification'
          type: array
        provision:
          description: >-
            An exception to the base policy of this consent. An exception can be
            an addition or removal of access permissions.
          $ref: '#/components/schemas/Consent_Provision'
      additionalProperties: false
      required:
        - scope
        - category
        - resourceType
    Consent_Policy:
      description: >-
        A record of a healthcare consumer’s  choices, which permits or denies
        identified recipient(s) or recipient role(s) to perform one or more
        actions within a given policy context, for specific purposes and periods
        of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        authority:
          description: >-
            Entity or Organization having regulatory jurisdiction or
            accountability for  enforcing policies pertaining to Consent
            Directives.
          $ref: '#/components/schemas/uri'
        _authority:
          $ref: '#/components/schemas/Element'
        uri:
          description: >-
            The references to the policies that are included in this consent
            scope. Policies may be organizational, but are often defined
            jurisdictionally, or in law.
          $ref: '#/components/schemas/uri'
        _uri:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Consent_Verification:
      description: >-
        A record of a healthcare consumer’s  choices, which permits or denies
        identified recipient(s) or recipient role(s) to perform one or more
        actions within a given policy context, for specific purposes and periods
        of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        verified:
          $ref: '#/components/schemas/boolean'
        _verified:
          $ref: '#/components/schemas/Element'
        verifiedWith:
          description: >-
            Who verified the instruction (Patient, Relative or other Authorized
            Person).
          $ref: '#/components/schemas/Reference'
        verificationDate:
          $ref: '#/components/schemas/dateTime'
        _verificationDate:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Consent_Provision:
      description: >-
        A record of a healthcare consumer’s  choices, which permits or denies
        identified recipient(s) or recipient role(s) to perform one or more
        actions within a given policy context, for specific purposes and periods
        of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Action  to take - permit or deny - when the rule conditions are
            met.  Not permitted in root rule, required in all nested rules.
          enum:
            - deny
            - permit
        _type:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
        actor:
          description: >-
            Who or what is controlled by this rule. Use group to identify a set
            of actors by some property they share (e.g. 'admitting officers').
          items:
            $ref: '#/components/schemas/Consent_Actor'
          type: array
        action:
          description: Actions controlled by this Rule.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        securityLabel:
          description: >-
            A security label, comprised of 0..* security label fields (Privacy
            tags), which define which resources are controlled by this
            exception.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        purpose:
          description: >-
            The context of the activities a user is taking - why the user is
            accessing the data - that are controlled by this rule.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        class:
          description: >-
            The class of information covered by this rule. The type can be a
            FHIR resource type, a profile on a type, or a CDA document, or some
            other type that indicates what sort of information the consent
            relates to.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        code:
          description: 'If this code is found in an instance, then the rule applies.'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        dataPeriod:
          description: >-
            Clinical or Operational Relevant period of time that bounds the data
            controlled by this rule.
          $ref: '#/components/schemas/Period'
        data:
          description: >-
            The resources controlled by this rule if specific resources are
            referenced.
          items:
            $ref: '#/components/schemas/Consent_Data'
          type: array
        provision:
          description: Rules which provide exceptions to the base rule or subrules.
          items:
            $ref: '#/components/schemas/Consent_Provision'
          type: array
      additionalProperties: false
    Consent_Actor:
      description: >-
        A record of a healthcare consumer’s  choices, which permits or denies
        identified recipient(s) or recipient role(s) to perform one or more
        actions within a given policy context, for specific purposes and periods
        of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        role:
          description: >-
            How the individual is involved in the resources content that is
            described in the exception.
          $ref: '#/components/schemas/CodeableConcept'
        reference:
          description: >-
            The resource that identifies the actor. To identify actors by type,
            use group to identify a set of actors by some property they share
            (e.g. 'admitting officers').
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - reference
        - role
    Consent_Data:
      description: >-
        A record of a healthcare consumer’s  choices, which permits or denies
        identified recipient(s) or recipient role(s) to perform one or more
        actions within a given policy context, for specific purposes and periods
        of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        meaning:
          description: >-
            How the resource reference is interpreted when testing consent
            restrictions.
          enum:
            - instance
            - related
            - dependents
            - authoredby
        _meaning:
          $ref: '#/components/schemas/Element'
        reference:
          description: >-
            A reference to a specific resource that defines which resources are
            covered by this consent.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - reference
    Contract:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        resourceType:
          description: This is a Contract resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Unique identifier for this Contract or a derivative that references
            a Source Contract.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        url:
          description: >-
            Canonical identifier for this contract, represented as a URI
            (globally unique).
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            An edition identifier used for business purposes to label business
            significant variants.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        legalState:
          description: >-
            Legal states of the formation of a legal instrument, which is a
            formally executed written document that can be formally attributed
            to its author, records and formally expresses a legally enforceable
            act, process, or contractual duty, obligation, or right, and
            therefore evidences that act, process, or agreement.
          $ref: '#/components/schemas/CodeableConcept'
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined Contract Definition that is
            adhered to in whole or part by this Contract.
          $ref: '#/components/schemas/Reference'
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained definition that is
            adhered to in whole or in part by this Contract.
          $ref: '#/components/schemas/uri'
        _instantiatesUri:
          $ref: '#/components/schemas/Element'
        contentDerivative:
          description: >-
            The minimal content derived from the basal information source at a
            specific stage in its lifecycle.
          $ref: '#/components/schemas/CodeableConcept'
        issued:
          $ref: '#/components/schemas/dateTime'
        _issued:
          $ref: '#/components/schemas/Element'
        applies:
          $ref: '#/components/schemas/Period'
        expirationType:
          description: >-
            Event resulting in discontinuation or termination of this Contract
            instance by one or more parties to the contract.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The target entity impacted by or of interest to parties to the
            agreement.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        authority:
          description: >-
            A formally or informally recognized grouping of people, principals,
            organizations, or jurisdictions formed for the purpose of achieving
            some form of collective action such as the promulgation,
            administration and enforcement of contracts and policies.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        domain:
          description: >-
            Recognized governance framework or system operating with a
            circumscribed scope in accordance with specified principles,
            policies, processes or procedures for managing rights, actions, or
            behaviors of parties or principals relative to resources.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        site:
          description: >-
            Sites in which the contract is complied with,  exercised, or in
            force.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        name:
          description: >-
            A natural language name identifying this Contract definition,
            derivative, or instance in any legal state. Provides additional
            information about its content. This name should be usable as an
            identifier for the module by machine processing applications such as
            code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for this Contract
            definition, derivative, or instance in any legal state.t giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate user-friendly title for this Contract
            definition, derivative, or instance in any legal state.t giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        alias:
          description: >-
            Alternative representation of the title for this Contract
            definition, derivative, or instance in any legal state., e.g., a
            domain specific contract number related to legislation.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _alias:
          description: Extensions for alias
          items:
            $ref: '#/components/schemas/Element'
          type: array
        author:
          description: >-
            The individual or organization that authored the Contract
            definition, derivative, or instance in any legal state.
          $ref: '#/components/schemas/Reference'
        scope:
          description: >-
            A selector of legal concerns for this Contract definition,
            derivative, or instance in any legal state.
          $ref: '#/components/schemas/CodeableConcept'
        topicCodeableConcept:
          description: >-
            Narrows the range of legal concerns to focus on the achievement of
            specific contractual objectives.
          $ref: '#/components/schemas/CodeableConcept'
        topicReference:
          description: >-
            Narrows the range of legal concerns to focus on the achievement of
            specific contractual objectives.
          $ref: '#/components/schemas/Reference'
        type:
          description: >-
            A high-level category for the legal instrument, whether constructed
            as a Contract definition, derivative, or instance in any legal
            state.  Provides additional information about its content within the
            context of the Contract's scope to distinguish the kinds of systems
            that would be interested in the contract.
          $ref: '#/components/schemas/CodeableConcept'
        subType:
          description: >-
            Sub-category for the Contract that distinguishes the kinds of
            systems that would be interested in the Contract within the context
            of the Contract's scope.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        contentDefinition:
          description: >-
            Precusory content developed with a focus and intent of supporting
            the formation a Contract instance, which may be associated with and
            transformable into a Contract.
          $ref: '#/components/schemas/Contract_ContentDefinition'
        term:
          description: >-
            One or more Contract Provisions, which may be related and conveyed
            as a group, and may contain nested groups.
          items:
            $ref: '#/components/schemas/Contract_Term'
          type: array
        supportingInfo:
          description: >-
            Information that may be needed by/relevant to the performer in their
            execution of this term action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        relevantHistory:
          description: >-
            Links to Provenance records for past versions of this Contract
            definition, derivative, or instance, which identify key state
            transitions or updates that are likely to be relevant to a user
            looking at the current version of the Contract.  The Provence.entity
            indicates the target that was changed in the update.
            http://build.fhir.org/provenance-definitions.html#Provenance.entity.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        signer:
          description: >-
            Parties with legal standing in the Contract, including the principal
            parties, the grantor(s) and grantee(s), which are any person or
            organization bound by the contract, and any ancillary parties, which
            facilitate the execution of the contract such as a notary or
            witness.
          items:
            $ref: '#/components/schemas/Contract_Signer'
          type: array
        friendly:
          description: >-
            The "patient friendly language" versionof the Contract in whole or
            in parts. "Patient friendly language" means the representation of
            the Contract and Contract Provisions in a manner that is readily
            accessible and understandable by a layperson in accordance with best
            practices for communication styles that ensure that those agreeing
            to or signing the Contract understand the roles, actions,
            obligations, responsibilities, and implication of the agreement.
          items:
            $ref: '#/components/schemas/Contract_Friendly'
          type: array
        legal:
          description: List of Legal expressions or representations of this Contract.
          items:
            $ref: '#/components/schemas/Contract_Legal'
          type: array
        rule:
          description: >-
            List of Computable Policy Rule Language Representations of this
            Contract.
          items:
            $ref: '#/components/schemas/Contract_Rule'
          type: array
        legallyBindingAttachment:
          description: >-
            Legally binding Contract: This is the signed and legally recognized
            representation of the Contract, which is considered the "source of
            truth" and which would be the basis for legal action related to
            enforcement of this Contract.
          $ref: '#/components/schemas/Attachment'
        legallyBindingReference:
          description: >-
            Legally binding Contract: This is the signed and legally recognized
            representation of the Contract, which is considered the "source of
            truth" and which would be the basis for legal action related to
            enforcement of this Contract.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    Contract_ContentDefinition:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Precusory content structure and use, i.e., a boilerplate, template,
            application for a contract such as an insurance policy or benefits
            under a program, e.g., workers compensation.
          $ref: '#/components/schemas/CodeableConcept'
        subType:
          $ref: '#/components/schemas/CodeableConcept'
        publisher:
          description: >-
            The  individual or organization that published the Contract
            precursor content.
          $ref: '#/components/schemas/Reference'
        publicationDate:
          description: >-
            The date (and optionally time) when the contract was published. The
            date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the contract changes.
          $ref: '#/components/schemas/dateTime'
        _publicationDate:
          $ref: '#/components/schemas/Element'
        publicationStatus:
          description: >-
            amended | appended | cancelled | disputed | entered-in-error |
            executable | executed | negotiable | offered | policy | rejected |
            renewed | revoked | resolved | terminated.
          $ref: '#/components/schemas/code'
        _publicationStatus:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to Contract precursor content.
            Copyright statements are generally legal restrictions on the use and
            publishing of the Contract precursor content.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - type
    Contract_Term:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          $ref: '#/components/schemas/Identifier'
        issued:
          $ref: '#/components/schemas/dateTime'
        _issued:
          $ref: '#/components/schemas/Element'
        applies:
          description: >-
            Relevant time or time-period when this Contract Provision is
            applicable.
          $ref: '#/components/schemas/Period'
        topicCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        topicReference:
          $ref: '#/components/schemas/Reference'
        type:
          description: >-
            A legal clause or condition contained within a contract that
            requires one or both parties to perform a particular requirement by
            some specified time or prevents one or both parties from performing
            a particular requirement by some specified time.
          $ref: '#/components/schemas/CodeableConcept'
        subType:
          description: >-
            A specialized legal clause or condition based on overarching
            contract type.
          $ref: '#/components/schemas/CodeableConcept'
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        securityLabel:
          description: >-
            Security labels that protect the handling of information about the
            term and its elements, which may be specifically identified..
          items:
            $ref: '#/components/schemas/Contract_SecurityLabel'
          type: array
        offer:
          description: >-
            The matter of concern in the context of this provision of the
            agrement.
          $ref: '#/components/schemas/Contract_Offer'
        asset:
          description: Contract Term Asset List.
          items:
            $ref: '#/components/schemas/Contract_Asset'
          type: array
        action:
          description: >-
            An actor taking a role in an activity for which it can be assigned
            some degree of responsibility for the activity taking place.
          items:
            $ref: '#/components/schemas/Contract_Action'
          type: array
        group:
          description: Nested group of Contract Provisions.
          items:
            $ref: '#/components/schemas/Contract_Term'
          type: array
      additionalProperties: false
      required:
        - offer
    Contract_SecurityLabel:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        number:
          description: >-
            Number used to link this term or term element to the applicable
            Security Label.
          items:
            $ref: '#/components/schemas/unsignedInt'
          type: array
        _number:
          description: Extensions for number
          items:
            $ref: '#/components/schemas/Element'
          type: array
        classification:
          description: >-
            Security label privacy tag that species the level of confidentiality
            protection required for this term and/or term elements.
          $ref: '#/components/schemas/Coding'
        category:
          description: >-
            Security label privacy tag that species the applicable privacy and
            security policies governing this term and/or term elements.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        control:
          description: >-
            Security label privacy tag that species the manner in which term
            and/or term elements are to be protected.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
      required:
        - classification
    Contract_Offer:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier for this particular Contract Provision.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        party:
          description: Offer Recipient.
          items:
            $ref: '#/components/schemas/Contract_Party'
          type: array
        topic:
          description: >-
            The owner of an asset has the residual control rights over the
            asset: the right to decide all usages of the asset in any way not
            inconsistent with a prior contract, custom, or law (Hart, 1995, p.
            30).
          $ref: '#/components/schemas/Reference'
        type:
          description: >-
            Type of Contract Provision such as specific requirements, purposes
            for actions, obligations, prohibitions, e.g. life time maximum
            benefit.
          $ref: '#/components/schemas/CodeableConcept'
        decision:
          description: >-
            Type of choice made by accepting party with respect to an offer made
            by an offeror/ grantee.
          $ref: '#/components/schemas/CodeableConcept'
        decisionMode:
          description: How the decision about a Contract was conveyed.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        answer:
          description: Response to offer text.
          items:
            $ref: '#/components/schemas/Contract_Answer'
          type: array
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        linkId:
          description: >-
            The id of the clause or question text of the offer in the referenced
            questionnaire/response.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _linkId:
          description: Extensions for linkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        securityLabelNumber:
          description: Security labels that protects the offer.
          items:
            $ref: '#/components/schemas/unsignedInt'
          type: array
        _securityLabelNumber:
          description: Extensions for securityLabelNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    Contract_Party:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          description: Participant in the offer.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        role:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - reference
        - role
    Contract_Answer:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        valueBoolean:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueString:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueAttachment:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          $ref: '#/components/schemas/Attachment'
        valueCoding:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          $ref: '#/components/schemas/Coding'
        valueQuantity:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          $ref: '#/components/schemas/Quantity'
        valueReference:
          description: >-
            Response to an offer clause or question text,  which enables
            selection of values to be agreed to, e.g., the period of
            participation, the date of occupancy of a rental, warrently
            duration, or whether biospecimen may be used for further research.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Contract_Asset:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        scope:
          $ref: '#/components/schemas/CodeableConcept'
        type:
          description: Target entity type about which the term may be concerned.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        typeReference:
          description: Associated entities.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        subtype:
          description: May be a subtype or part of an offered asset.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        relationship:
          description: >-
            Specifies the applicability of the term to an asset resource
            instance, and instances it refers to orinstances that refer to it,
            and/or are owned by the offeree.
          $ref: '#/components/schemas/Coding'
        context:
          description: Circumstance of the asset.
          items:
            $ref: '#/components/schemas/Contract_Context'
          type: array
        condition:
          description: >-
            Description of the quality and completeness of the asset that imay
            be a factor in its valuation.
          $ref: '#/components/schemas/string'
        _condition:
          $ref: '#/components/schemas/Element'
        periodType:
          description: Type of Asset availability for use or ownership.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        period:
          description: Asset relevant contractual time period.
          items:
            $ref: '#/components/schemas/Period'
          type: array
        usePeriod:
          description: Time period of asset use.
          items:
            $ref: '#/components/schemas/Period'
          type: array
        text:
          description: >-
            Clause or question text (Prose Object) concerning the asset in a
            linked form, such as a QuestionnaireResponse used in the formation
            of the contract.
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        linkId:
          description: >-
            Id [identifier??] of the clause or question text about the asset in
            the referenced form or QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _linkId:
          description: Extensions for linkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        answer:
          description: Response to assets.
          items:
            $ref: '#/components/schemas/Contract_Answer'
          type: array
        securityLabelNumber:
          description: Security labels that protects the asset.
          items:
            $ref: '#/components/schemas/unsignedInt'
          type: array
        _securityLabelNumber:
          description: Extensions for securityLabelNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        valuedItem:
          description: Contract Valued Item List.
          items:
            $ref: '#/components/schemas/Contract_ValuedItem'
          type: array
      additionalProperties: false
    Contract_Context:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          description: >-
            Asset context reference may include the creator, custodian, or
            owning Person or Organization (e.g., bank, repository),  location
            held, e.g., building,  jurisdiction.
          $ref: '#/components/schemas/Reference'
        code:
          description: >-
            Coded representation of the context generally or of the Referenced
            entity, such as the asset holder type or location.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Contract_ValuedItem:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        entityCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        entityReference:
          $ref: '#/components/schemas/Reference'
        identifier:
          $ref: '#/components/schemas/Identifier'
        effectiveTime:
          description: >-
            Indicates the time during which this Contract ValuedItem information
            is effective.
          $ref: '#/components/schemas/dateTime'
        _effectiveTime:
          $ref: '#/components/schemas/Element'
        quantity:
          description: >-
            Specifies the units by which the Contract Valued Item is measured or
            counted, and quantifies the countable or measurable Contract Valued
            Item instances.
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of the Contract Valued Item delivered. The concept of
            a Factor allows for a discount or surcharge multiplier to be applied
            to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        points:
          description: >-
            An amount that expresses the weighting (based on difficulty, cost
            and/or resource intensiveness) associated with the Contract Valued
            Item delivered. The concept of Points allows for assignment of point
            values for a Contract Valued Item, such that a monetary amount can
            be assigned to each point.
          $ref: '#/components/schemas/decimal'
        _points:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            Expresses the product of the Contract Valued Item unitQuantity and
            the unitPriceAmt. For example, the formula: unit Quantity * unit
            Price (Cost per Point) * factor Number  * points = net Amount.
            Quantity, factor and points are assumed to be 1 if not supplied.
          $ref: '#/components/schemas/Money'
        payment:
          $ref: '#/components/schemas/string'
        _payment:
          $ref: '#/components/schemas/Element'
        paymentDate:
          $ref: '#/components/schemas/dateTime'
        _paymentDate:
          $ref: '#/components/schemas/Element'
        responsible:
          $ref: '#/components/schemas/Reference'
        recipient:
          $ref: '#/components/schemas/Reference'
        linkId:
          description: >-
            Id  of the clause or question text related to the context of this
            valuedItem in the referenced form or QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _linkId:
          description: Extensions for linkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        securityLabelNumber:
          description: >-
            A set of security labels that define which terms are controlled by
            this condition.
          items:
            $ref: '#/components/schemas/unsignedInt'
          type: array
        _securityLabelNumber:
          description: Extensions for securityLabelNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    Contract_Action:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        doNotPerform:
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Activity or service obligation to be done or not done, performed or
            not performed, effectuated or not by this Contract term.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: Entity of the action.
          items:
            $ref: '#/components/schemas/Contract_Subject'
          type: array
        intent:
          description: >-
            Reason or purpose for the action stipulated by this Contract
            Provision.
          $ref: '#/components/schemas/CodeableConcept'
        linkId:
          description: >-
            Id [identifier??] of the clause or question text related to this
            action in the referenced form or QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _linkId:
          description: Extensions for linkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        status:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          description: >-
            Encounter or Episode with primary association to specified term
            activity.
          $ref: '#/components/schemas/Reference'
        contextLinkId:
          description: >-
            Id [identifier??] of the clause or question text related to the
            requester of this action in the referenced form or
            QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _contextLinkId:
          description: Extensions for contextLinkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        occurrenceDateTime:
          description: When action happens.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        occurrenceTiming:
          $ref: '#/components/schemas/Timing'
        requester:
          description: >-
            Who or what initiated the action and has responsibility for its
            activation.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        requesterLinkId:
          description: >-
            Id [identifier??] of the clause or question text related to the
            requester of this action in the referenced form or
            QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _requesterLinkId:
          description: Extensions for requesterLinkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        performerType:
          description: >-
            The type of individual that is desired or required to perform or not
            perform the action.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        performerRole:
          description: >-
            The type of role or competency of an individual desired or required
            to perform or not perform the action.
          $ref: '#/components/schemas/CodeableConcept'
        performer:
          description: >-
            Indicates who or what is being asked to perform (or not perform) the
            ction.
          $ref: '#/components/schemas/Reference'
        performerLinkId:
          description: >-
            Id [identifier??] of the clause or question text related to the
            reason type or reference of this  action in the referenced form or
            QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _performerLinkId:
          description: Extensions for performerLinkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        reasonCode:
          description: >-
            Rationale for the action to be performed or not performed. Describes
            why the action is permitted or prohibited.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates another resource whose existence justifies permitting or
            not permitting this action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        reason:
          description: >-
            Describes why the action is to be performed or not performed in
            textual form.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _reason:
          description: Extensions for reason
          items:
            $ref: '#/components/schemas/Element'
          type: array
        reasonLinkId:
          description: >-
            Id [identifier??] of the clause or question text related to the
            reason type or reference of this  action in the referenced form or
            QuestionnaireResponse.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _reasonLinkId:
          description: Extensions for reasonLinkId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        note:
          description: >-
            Comments made about the term action made by the requester,
            performer, subject or other participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        securityLabelNumber:
          description: Security labels that protects the action.
          items:
            $ref: '#/components/schemas/unsignedInt'
          type: array
        _securityLabelNumber:
          description: Extensions for securityLabelNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
      required:
        - type
        - intent
        - status
    Contract_Subject:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          description: The entity the action is performed or not performed on or for.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        role:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - reference
    Contract_Signer:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/Coding'
        party:
          $ref: '#/components/schemas/Reference'
        signature:
          description: Legally binding Contract DSIG signature contents in Base64.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
      additionalProperties: false
      required:
        - signature
        - type
        - party
    Contract_Friendly:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentAttachment:
          description: >-
            Human readable rendering of this Contract in a format and
            representation intended to enhance comprehension and ensure
            understandability.
          $ref: '#/components/schemas/Attachment'
        contentReference:
          description: >-
            Human readable rendering of this Contract in a format and
            representation intended to enhance comprehension and ensure
            understandability.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Contract_Legal:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentAttachment:
          $ref: '#/components/schemas/Attachment'
        contentReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Contract_Rule:
      description: >-
        Legally enforceable, formally recorded unilateral or bilateral directive
        i.e., a policy or agreement.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        contentAttachment:
          description: >-
            Computable Contract conveyed using a policy rule language (e.g.
            XACML, DKAL, SecPal).
          $ref: '#/components/schemas/Attachment'
        contentReference:
          description: >-
            Computable Contract conveyed using a policy rule language (e.g.
            XACML, DKAL, SecPal).
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Coverage:
      description: >-
        Financial instrument which may be used to reimburse or pay for health
        care products and services. Includes both insurance and self-payment.
      properties:
        resourceType:
          description: This is a Coverage resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this coverage.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of coverage: social program, medical plan, accident
            coverage (workers compensation, auto), group health or payment by an
            individual or organization.
          $ref: '#/components/schemas/CodeableConcept'
        policyHolder:
          $ref: '#/components/schemas/Reference'
        subscriber:
          description: >-
            The party who has signed-up for or 'owns' the contractual
            relationship to the policy or to whom the benefit of the policy for
            services rendered to them or their family is due.
          $ref: '#/components/schemas/Reference'
        subscriberId:
          $ref: '#/components/schemas/string'
        _subscriberId:
          $ref: '#/components/schemas/Element'
        beneficiary:
          description: >-
            The party who benefits from the insurance coverage; the patient when
            products and/or services are provided.
          $ref: '#/components/schemas/Reference'
        dependent:
          $ref: '#/components/schemas/string'
        _dependent:
          $ref: '#/components/schemas/Element'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        period:
          description: >-
            Time period during which the coverage is in force. A missing start
            date indicates the start date isn't known, a missing end date means
            the coverage is continuing to be in force.
          $ref: '#/components/schemas/Period'
        payor:
          description: >-
            The program or plan underwriter or payor including both insurance
            and non-insurance agreements, such as patient-pay agreements.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        class:
          description: A suite of underwriter specific classifiers.
          items:
            $ref: '#/components/schemas/Coverage_Class'
          type: array
        order:
          description: >-
            The order of applicability of this coverage relative to other
            coverages which are currently in force. Note, there may be gaps in
            the numbering and this does not imply primary, secondary etc. as the
            specific positioning of coverages depends upon the episode of care.
          $ref: '#/components/schemas/positiveInt'
        _order:
          $ref: '#/components/schemas/Element'
        network:
          description: >-
            The insurer-specific identifier for the insurer-defined network of
            providers to which the beneficiary may seek treatment which will be
            covered at the 'in-network' rate, otherwise 'out of network' terms
            and conditions apply.
          $ref: '#/components/schemas/string'
        _network:
          $ref: '#/components/schemas/Element'
        costToBeneficiary:
          description: >-
            A suite of codes indicating the cost category and associated amount
            which have been detailed in the policy and may have been  included
            on the health card.
          items:
            $ref: '#/components/schemas/Coverage_CostToBeneficiary'
          type: array
        subrogation:
          description: >-
            When 'subrogation=true' this insurance instance has been included
            not for adjudication but to provide insurers with the details to
            recover costs.
          $ref: '#/components/schemas/boolean'
        _subrogation:
          $ref: '#/components/schemas/Element'
        contract:
          description: The policy(s) which constitute this insurance coverage.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - payor
        - beneficiary
        - resourceType
    Coverage_Class:
      description: >-
        Financial instrument which may be used to reimburse or pay for health
        care products and services. Includes both insurance and self-payment.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The type of classification for which an insurer-specific class label
            or number and optional name is provided, for example may be used to
            identify a class of coverage or employer group, Policy, Plan.
          $ref: '#/components/schemas/CodeableConcept'
        value:
          description: >-
            The alphanumeric string value associated with the insurer issued
            label.
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - type
    Coverage_CostToBeneficiary:
      description: >-
        Financial instrument which may be used to reimburse or pay for health
        care products and services. Includes both insurance and self-payment.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueMoney:
          $ref: '#/components/schemas/Money'
        exception:
          description: >-
            A suite of codes indicating exceptions or reductions to patient
            costs and their effective periods.
          items:
            $ref: '#/components/schemas/Coverage_Exception'
          type: array
      additionalProperties: false
    Coverage_Exception:
      description: >-
        Financial instrument which may be used to reimburse or pay for health
        care products and services. Includes both insurance and self-payment.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - type
    CoverageEligibilityRequest:
      description: >-
        The CoverageEligibilityRequest provides patient and insurance coverage
        information to an insurer for them to respond, in the form of an
        CoverageEligibilityResponse, with information regarding whether the
        stated coverage is valid and in-force and optionally to provide the
        insurance details of the policy.
      properties:
        resourceType:
          description: This is a CoverageEligibilityRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this coverage eligiblity request.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        priority:
          $ref: '#/components/schemas/CodeableConcept'
        purpose:
          description: >-
            Code to specify whether requesting: prior authorization requirements
            for some service categories or billing codes; benefits for coverages
            specified or discovered; discovery and return of coverages for the
            patient; and/or validation that the specified coverage is in-force
            at the date/period specified or 'now' if not specified.
          items:
            enum:
              - auth-requirements
              - benefits
              - discovery
              - validation
          type: array
        _purpose:
          description: Extensions for purpose
          items:
            $ref: '#/components/schemas/Element'
          type: array
        patient:
          description: >-
            The party who is the beneficiary of the supplied coverage and for
            whom eligibility is sought.
          $ref: '#/components/schemas/Reference'
        servicedDate:
          description: >-
            The date or dates when the enclosed suite of services were performed
            or completed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _servicedDate:
          $ref: '#/components/schemas/Element'
        servicedPeriod:
          description: >-
            The date or dates when the enclosed suite of services were performed
            or completed.
          $ref: '#/components/schemas/Period'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        enterer:
          $ref: '#/components/schemas/Reference'
        provider:
          $ref: '#/components/schemas/Reference'
        insurer:
          description: >-
            The Insurer who issued the coverage in question and is the recipient
            of the request.
          $ref: '#/components/schemas/Reference'
        facility:
          $ref: '#/components/schemas/Reference'
        supportingInfo:
          description: >-
            Additional information codes regarding exceptions, special
            considerations, the condition, situation, prior or concurrent
            issues.
          items:
            $ref: '#/components/schemas/CoverageEligibilityRequest_SupportingInfo'
          type: array
        insurance:
          description: >-
            Financial instruments for reimbursement for the health care products
            and services.
          items:
            $ref: '#/components/schemas/CoverageEligibilityRequest_Insurance'
          type: array
        item:
          description: >-
            Service categories or billable services for which benefit details
            and/or an authorization prior to service delivery may be required by
            the payor.
          items:
            $ref: '#/components/schemas/CoverageEligibilityRequest_Item'
          type: array
      additionalProperties: false
      required:
        - patient
        - insurer
        - resourceType
    CoverageEligibilityRequest_SupportingInfo:
      description: >-
        The CoverageEligibilityRequest provides patient and insurance coverage
        information to an insurer for them to respond, in the form of an
        CoverageEligibilityResponse, with information regarding whether the
        stated coverage is valid and in-force and optionally to provide the
        insurance details of the policy.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        information:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Reference'
        appliesToAll:
          description: >-
            The supporting materials are applicable for all detail items,
            product/servce categories and specific billing codes.
          $ref: '#/components/schemas/boolean'
        _appliesToAll:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - information
    CoverageEligibilityRequest_Insurance:
      description: >-
        The CoverageEligibilityRequest provides patient and insurance coverage
        information to an insurer for them to respond, in the form of an
        CoverageEligibilityResponse, with information regarding whether the
        stated coverage is valid and in-force and optionally to provide the
        insurance details of the policy.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        focal:
          description: >-
            A flag to indicate that this Coverage is to be used for evaluation
            of this request when set to true.
          $ref: '#/components/schemas/boolean'
        _focal:
          $ref: '#/components/schemas/Element'
        coverage:
          description: >-
            Reference to the insurance card level information contained in the
            Coverage resource. The coverage issuing insurer will use these
            details to locate the patient's actual coverage within the insurer's
            information system.
          $ref: '#/components/schemas/Reference'
        businessArrangement:
          description: >-
            A business agreement number established between the provider and the
            insurer for special business processing purposes.
          $ref: '#/components/schemas/string'
        _businessArrangement:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - coverage
    CoverageEligibilityRequest_Item:
      description: >-
        The CoverageEligibilityRequest provides patient and insurance coverage
        information to an insurer for them to respond, in the form of an
        CoverageEligibilityResponse, with information regarding whether the
        stated coverage is valid and in-force and optionally to provide the
        insurance details of the policy.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        supportingInfoSequence:
          description: >-
            Exceptions, special conditions and supporting information applicable
            for this service or product line.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _supportingInfoSequence:
          description: Extensions for supportingInfoSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            This contains the product, service, drug or other billing code for
            the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        provider:
          description: >-
            The practitioner who is responsible for the product or service to be
            rendered to the patient.
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          $ref: '#/components/schemas/Money'
        facility:
          $ref: '#/components/schemas/Reference'
        diagnosis:
          description: Patient diagnosis for which care is sought.
          items:
            $ref: '#/components/schemas/CoverageEligibilityRequest_Diagnosis'
          type: array
        detail:
          description: The plan/proposal/order describing the proposed service in detail.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    CoverageEligibilityRequest_Diagnosis:
      description: >-
        The CoverageEligibilityRequest provides patient and insurance coverage
        information to an insurer for them to respond, in the form of an
        CoverageEligibilityResponse, with information regarding whether the
        stated coverage is valid and in-force and optionally to provide the
        insurance details of the policy.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        diagnosisCodeableConcept:
          description: >-
            The nature of illness or problem in a coded form or as a reference
            to an external defined Condition.
          $ref: '#/components/schemas/CodeableConcept'
        diagnosisReference:
          description: >-
            The nature of illness or problem in a coded form or as a reference
            to an external defined Condition.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    CoverageEligibilityResponse:
      description: >-
        This resource provides eligibility and plan details from the processing
        of an CoverageEligibilityRequest resource.
      properties:
        resourceType:
          description: This is a CoverageEligibilityResponse resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this coverage eligiblity request.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        purpose:
          description: >-
            Code to specify whether requesting: prior authorization requirements
            for some service categories or billing codes; benefits for coverages
            specified or discovered; discovery and return of coverages for the
            patient; and/or validation that the specified coverage is in-force
            at the date/period specified or 'now' if not specified.
          items:
            enum:
              - auth-requirements
              - benefits
              - discovery
              - validation
          type: array
        _purpose:
          description: Extensions for purpose
          items:
            $ref: '#/components/schemas/Element'
          type: array
        patient:
          description: >-
            The party who is the beneficiary of the supplied coverage and for
            whom eligibility is sought.
          $ref: '#/components/schemas/Reference'
        servicedDate:
          description: >-
            The date or dates when the enclosed suite of services were performed
            or completed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _servicedDate:
          $ref: '#/components/schemas/Element'
        servicedPeriod:
          description: >-
            The date or dates when the enclosed suite of services were performed
            or completed.
          $ref: '#/components/schemas/Period'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        requestor:
          $ref: '#/components/schemas/Reference'
        request:
          $ref: '#/components/schemas/Reference'
        outcome:
          description: The outcome of the request processing.
          enum:
            - queued
            - complete
            - error
            - partial
        _outcome:
          $ref: '#/components/schemas/Element'
        disposition:
          $ref: '#/components/schemas/string'
        _disposition:
          $ref: '#/components/schemas/Element'
        insurer:
          description: >-
            The Insurer who issued the coverage in question and is the author of
            the response.
          $ref: '#/components/schemas/Reference'
        insurance:
          description: >-
            Financial instruments for reimbursement for the health care products
            and services.
          items:
            $ref: '#/components/schemas/CoverageEligibilityResponse_Insurance'
          type: array
        preAuthRef:
          description: >-
            A reference from the Insurer to which these services pertain to be
            used on further communication and as proof that the request
            occurred.
          $ref: '#/components/schemas/string'
        _preAuthRef:
          $ref: '#/components/schemas/Element'
        form:
          $ref: '#/components/schemas/CodeableConcept'
        error:
          description: Errors encountered during the processing of the request.
          items:
            $ref: '#/components/schemas/CoverageEligibilityResponse_Error'
          type: array
      additionalProperties: false
      required:
        - request
        - patient
        - insurer
        - resourceType
    CoverageEligibilityResponse_Insurance:
      description: >-
        This resource provides eligibility and plan details from the processing
        of an CoverageEligibilityRequest resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        coverage:
          description: >-
            Reference to the insurance card level information contained in the
            Coverage resource. The coverage issuing insurer will use these
            details to locate the patient's actual coverage within the insurer's
            information system.
          $ref: '#/components/schemas/Reference'
        inforce:
          description: >-
            Flag indicating if the coverage provided is inforce currently if no
            service date(s) specified or for the whole duration of the service
            dates.
          $ref: '#/components/schemas/boolean'
        _inforce:
          $ref: '#/components/schemas/Element'
        benefitPeriod:
          $ref: '#/components/schemas/Period'
        item:
          description: >-
            Benefits and optionally current balances, and authorization details
            by category or service.
          items:
            $ref: '#/components/schemas/CoverageEligibilityResponse_Item'
          type: array
      additionalProperties: false
      required:
        - coverage
    CoverageEligibilityResponse_Item:
      description: >-
        This resource provides eligibility and plan details from the processing
        of an CoverageEligibilityRequest resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            This contains the product, service, drug or other billing code for
            the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        provider:
          description: >-
            The practitioner who is eligible for the provision of the product or
            service.
          $ref: '#/components/schemas/Reference'
        excluded:
          description: >-
            True if the indicated class of service is excluded from the plan,
            missing or False indicates the product or service is included in the
            coverage.
          $ref: '#/components/schemas/boolean'
        _excluded:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        network:
          description: >-
            Is a flag to indicate whether the benefits refer to in-network
            providers or out-of-network providers.
          $ref: '#/components/schemas/CodeableConcept'
        unit:
          $ref: '#/components/schemas/CodeableConcept'
        term:
          description: >-
            The term or period of the values such as 'maximum lifetime benefit'
            or 'maximum annual visits'.
          $ref: '#/components/schemas/CodeableConcept'
        benefit:
          description: Benefits used to date.
          items:
            $ref: '#/components/schemas/CoverageEligibilityResponse_Benefit'
          type: array
        authorizationRequired:
          description: >-
            A boolean flag indicating whether a preauthorization is required
            prior to actual service delivery.
          $ref: '#/components/schemas/boolean'
        _authorizationRequired:
          $ref: '#/components/schemas/Element'
        authorizationSupporting:
          description: >-
            Codes or comments regarding information or actions associated with
            the preauthorization.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        authorizationUrl:
          description: >-
            A web location for obtaining requirements or descriptive information
            regarding the preauthorization.
          $ref: '#/components/schemas/uri'
        _authorizationUrl:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    CoverageEligibilityResponse_Benefit:
      description: >-
        This resource provides eligibility and plan details from the processing
        of an CoverageEligibilityRequest resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        allowedUnsignedInt:
          description: The quantity of the benefit which is permitted under the coverage.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _allowedUnsignedInt:
          $ref: '#/components/schemas/Element'
        allowedString:
          description: The quantity of the benefit which is permitted under the coverage.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _allowedString:
          $ref: '#/components/schemas/Element'
        allowedMoney:
          $ref: '#/components/schemas/Money'
        usedUnsignedInt:
          description: The quantity of the benefit which have been consumed to date.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _usedUnsignedInt:
          $ref: '#/components/schemas/Element'
        usedString:
          description: The quantity of the benefit which have been consumed to date.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _usedString:
          $ref: '#/components/schemas/Element'
        usedMoney:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - type
    CoverageEligibilityResponse_Error:
      description: >-
        This resource provides eligibility and plan details from the processing
        of an CoverageEligibilityRequest resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            An error code,from a specified code system, which details why the
            eligibility check could not be performed.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - code
    DetectedIssue:
      description: >-
        Indicates an actual or potential clinical issue with or between one or
        more active or proposed clinical actions for a patient; e.g. Drug-drug
        interaction, Ineffective treatment frequency, Procedure-condition
        conflict, etc.
      properties:
        resourceType:
          description: This is a DetectedIssue resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifier associated with the detected issue record.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        severity:
          description: >-
            Indicates the degree of importance associated with the identified
            issue based on the potential impact on the patient.
          enum:
            - high
            - moderate
            - low
        _severity:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            Indicates the patient whose record the detected issue is associated
            with.
          $ref: '#/components/schemas/Reference'
        identifiedDateTime:
          description: The date or period when the detected issue was initially identified.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _identifiedDateTime:
          $ref: '#/components/schemas/Element'
        identifiedPeriod:
          $ref: '#/components/schemas/Period'
        author:
          description: >-
            Individual or device responsible for the issue being raised.  For
            example, a decision support application or a pharmacist conducting a
            medication review.
          $ref: '#/components/schemas/Reference'
        implicated:
          description: >-
            Indicates the resource representing the current activity or proposed
            activity that is potentially problematic.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        evidence:
          description: >-
            Supporting evidence or manifestations that provide the basis for
            identifying the detected issue such as a GuidanceResponse or
            MeasureReport.
          items:
            $ref: '#/components/schemas/DetectedIssue_Evidence'
          type: array
        detail:
          $ref: '#/components/schemas/string'
        _detail:
          $ref: '#/components/schemas/Element'
        reference:
          description: >-
            The literature, knowledge-base or similar reference that describes
            the propensity for the detected issue identified.
          $ref: '#/components/schemas/uri'
        _reference:
          $ref: '#/components/schemas/Element'
        mitigation:
          description: >-
            Indicates an action that has been taken or is committed to reduce or
            eliminate the likelihood of the risk identified by the detected
            issue from manifesting.  Can also reflect an observation of known
            mitigating factors that may reduce/eliminate the need for any
            action.
          items:
            $ref: '#/components/schemas/DetectedIssue_Mitigation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    DetectedIssue_Evidence:
      description: >-
        Indicates an actual or potential clinical issue with or between one or
        more active or proposed clinical actions for a patient; e.g. Drug-drug
        interaction, Ineffective treatment frequency, Procedure-condition
        conflict, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: A manifestation that led to the recording of this detected issue.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        detail:
          description: >-
            Links to resources that constitute evidence for the detected issue
            such as a GuidanceResponse or MeasureReport.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    DetectedIssue_Mitigation:
      description: >-
        Indicates an actual or potential clinical issue with or between one or
        more active or proposed clinical actions for a patient; e.g. Drug-drug
        interaction, Ineffective treatment frequency, Procedure-condition
        conflict, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        action:
          description: >-
            Describes the action that was taken or the observation that was made
            that reduces/eliminates the risk associated with the identified
            issue.
          $ref: '#/components/schemas/CodeableConcept'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            Identifies the practitioner who determined the mitigation and takes
            responsibility for the mitigation step occurring.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - action
    Device:
      description: >-
        A type of a manufactured item that is used in the provision of
        healthcare without being substantially changed through that activity.
        The device may be a medical or non-medical device.
      properties:
        resourceType:
          description: This is a Device resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Unique instance identifiers assigned to a device by manufacturers
            other organizations or owners.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        definition:
          $ref: '#/components/schemas/Reference'
        udiCarrier:
          description: >-
            Unique device identifier (UDI) assigned to device label or package.
            Note that the Device may include multiple udiCarriers as it either
            may include just the udiCarrier for the jurisdiction it is sold, or
            for multiple jurisdictions it could have been sold.
          items:
            $ref: '#/components/schemas/Device_UdiCarrier'
          type: array
        status:
          description: Status of the Device availability.
          enum:
            - active
            - inactive
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          description: Reason for the dtatus of the Device availability.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        distinctIdentifier:
          description: >-
            The distinct identification string as required by regulation for a
            human cell, tissue, or cellular and tissue-based product.
          $ref: '#/components/schemas/string'
        _distinctIdentifier:
          $ref: '#/components/schemas/Element'
        manufacturer:
          $ref: '#/components/schemas/string'
        _manufacturer:
          $ref: '#/components/schemas/Element'
        manufactureDate:
          $ref: '#/components/schemas/dateTime'
        _manufactureDate:
          $ref: '#/components/schemas/Element'
        expirationDate:
          description: >-
            The date and time beyond which this device is no longer valid or
            should not be used (if applicable).
          $ref: '#/components/schemas/dateTime'
        _expirationDate:
          $ref: '#/components/schemas/Element'
        lotNumber:
          $ref: '#/components/schemas/string'
        _lotNumber:
          $ref: '#/components/schemas/Element'
        serialNumber:
          description: >-
            The serial number assigned by the organization when the device was
            manufactured.
          $ref: '#/components/schemas/string'
        _serialNumber:
          $ref: '#/components/schemas/Element'
        deviceName:
          description: >-
            This represents the manufacturer's name of the device as provided by
            the device, from a UDI label, or by a person describing the Device.
            This typically would be used when a person provides the name(s) or
            when the device represents one of the names available from
            DeviceDefinition.
          items:
            $ref: '#/components/schemas/Device_DeviceName'
          type: array
        modelNumber:
          $ref: '#/components/schemas/string'
        _modelNumber:
          $ref: '#/components/schemas/Element'
        partNumber:
          $ref: '#/components/schemas/string'
        _partNumber:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        specialization:
          description: >-
            The capabilities supported on a  device, the standards to which the
            device conforms for a particular purpose, and used for the
            communication.
          items:
            $ref: '#/components/schemas/Device_Specialization'
          type: array
        version:
          description: >-
            The actual design of the device or software version running on the
            device.
          items:
            $ref: '#/components/schemas/Device_Version'
          type: array
        property:
          description: >-
            The actual configuration settings of a device as it actually
            operates, e.g., regulation status, time properties.
          items:
            $ref: '#/components/schemas/Device_Property'
          type: array
        patient:
          $ref: '#/components/schemas/Reference'
        owner:
          description: >-
            An organization that is responsible for the provision and ongoing
            maintenance of the device.
          $ref: '#/components/schemas/Reference'
        contact:
          description: >-
            Contact details for an organization or a particular human that is
            responsible for the device.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        location:
          $ref: '#/components/schemas/Reference'
        url:
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            Descriptive information, usage information or implantation
            information that is not captured in an existing element.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        safety:
          description: >-
            Provides additional safety characteristics about a medical device.
            For example devices containing latex.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        parent:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    Device_UdiCarrier:
      description: >-
        A type of a manufactured item that is used in the provision of
        healthcare without being substantially changed through that activity.
        The device may be a medical or non-medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        deviceIdentifier:
          description: >-
            The device identifier (DI) is a mandatory, fixed portion of a UDI
            that identifies the labeler and the specific version or model of a
            device.
          $ref: '#/components/schemas/string'
        _deviceIdentifier:
          $ref: '#/components/schemas/Element'
        issuer:
          description: >-
            Organization that is charged with issuing UDIs for devices.  For
            example, the US FDA issuers include :

            1) GS1:

            http://hl7.org/fhir/NamingSystem/gs1-di,

            2) HIBCC:

            http://hl7.org/fhir/NamingSystem/hibcc-dI,

            3) ICCBBA for blood containers:

            http://hl7.org/fhir/NamingSystem/iccbba-blood-di,

            4) ICCBA for other devices:

            http://hl7.org/fhir/NamingSystem/iccbba-other-di.
          $ref: '#/components/schemas/uri'
        _issuer:
          $ref: '#/components/schemas/Element'
        jurisdiction:
          description: >-
            The identity of the authoritative source for UDI generation within
            a  jurisdiction.  All UDIs are globally unique within a single
            namespace with the appropriate repository uri as the system.  For
            example,  UDIs of devices managed in the U.S. by the FDA, the value
            is  http://hl7.org/fhir/NamingSystem/fda-udi.
          $ref: '#/components/schemas/uri'
        _jurisdiction:
          $ref: '#/components/schemas/Element'
        carrierAIDC:
          description: >-
            The full UDI carrier of the Automatic Identification and Data
            Capture (AIDC) technology representation of the barcode string as
            printed on the packaging of the device - e.g., a barcode or RFID.
            Because of limitations on character sets in XML and the need to
            round-trip JSON data through XML, AIDC Formats *SHALL* be base64
            encoded.
          $ref: '#/components/schemas/base64Binary'
        _carrierAIDC:
          $ref: '#/components/schemas/Element'
        carrierHRF:
          description: >-
            The full UDI carrier as the human readable form (HRF) representation
            of the barcode string as printed on the packaging of the device.
          $ref: '#/components/schemas/string'
        _carrierHRF:
          $ref: '#/components/schemas/Element'
        entryType:
          description: A coded entry to indicate how the data was entered.
          enum:
            - barcode
            - rfid
            - manual
            - card
            - self-reported
            - unknown
        _entryType:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Device_DeviceName:
      description: >-
        A type of a manufactured item that is used in the provision of
        healthcare without being substantially changed through that activity.
        The device may be a medical or non-medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of deviceName.

            UDILabelName | UserFriendlyName | PatientReportedName |
            ManufactureDeviceName | ModelName.
          enum:
            - udi-label-name
            - user-friendly-name
            - patient-reported-name
            - manufacturer-name
            - model-name
            - other
        _type:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Device_Specialization:
      description: >-
        A type of a manufactured item that is used in the provision of
        healthcare without being substantially changed through that activity.
        The device may be a medical or non-medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        systemType:
          $ref: '#/components/schemas/CodeableConcept'
        version:
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - systemType
    Device_Version:
      description: >-
        A type of a manufactured item that is used in the provision of
        healthcare without being substantially changed through that activity.
        The device may be a medical or non-medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        component:
          $ref: '#/components/schemas/Identifier'
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Device_Property:
      description: >-
        A type of a manufactured item that is used in the provision of
        healthcare without being substantially changed through that activity.
        The device may be a medical or non-medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Code that specifies the property DeviceDefinitionPropetyCode
            (Extensible).
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          description: Property value as a quantity.
          items:
            $ref: '#/components/schemas/Quantity'
          type: array
        valueCode:
          description: 'Property value as a code, e.g., NTP4 (synced to NTP).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - type
    DeviceDefinition:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        resourceType:
          description: This is a DeviceDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Unique instance identifiers assigned to a device by the software,
            manufacturers, other organizations or owners. For example: handle
            ID.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        udiDeviceIdentifier:
          description: >-
            Unique device identifier (UDI) assigned to device label or package.
            Note that the Device may include multiple udiCarriers as it either
            may include just the udiCarrier for the jurisdiction it is sold, or
            for multiple jurisdictions it could have been sold.
          items:
            $ref: '#/components/schemas/DeviceDefinition_UdiDeviceIdentifier'
          type: array
        manufacturerString:
          description: A name of the manufacturer.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _manufacturerString:
          $ref: '#/components/schemas/Element'
        manufacturerReference:
          $ref: '#/components/schemas/Reference'
        deviceName:
          description: A name given to the device to identify it.
          items:
            $ref: '#/components/schemas/DeviceDefinition_DeviceName'
          type: array
        modelNumber:
          $ref: '#/components/schemas/string'
        _modelNumber:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        specialization:
          description: >-
            The capabilities supported on a  device, the standards to which the
            device conforms for a particular purpose, and used for the
            communication.
          items:
            $ref: '#/components/schemas/DeviceDefinition_Specialization'
          type: array
        version:
          description: 'The available versions of the device, e.g., software versions.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _version:
          description: Extensions for version
          items:
            $ref: '#/components/schemas/Element'
          type: array
        safety:
          description: Safety characteristics of the device.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        shelfLifeStorage:
          description: Shelf Life and storage information.
          items:
            $ref: '#/components/schemas/ProductShelfLife'
          type: array
        physicalCharacteristics:
          $ref: '#/components/schemas/ProdCharacteristic'
        languageCode:
          description: >-
            Language code for the human-readable text strings produced by the
            device (all supported).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        capability:
          description: Device capabilities.
          items:
            $ref: '#/components/schemas/DeviceDefinition_Capability'
          type: array
        property:
          description: >-
            The actual configuration settings of a device as it actually
            operates, e.g., regulation status, time properties.
          items:
            $ref: '#/components/schemas/DeviceDefinition_Property'
          type: array
        owner:
          description: >-
            An organization that is responsible for the provision and ongoing
            maintenance of the device.
          $ref: '#/components/schemas/Reference'
        contact:
          description: >-
            Contact details for an organization or a particular human that is
            responsible for the device.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        url:
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        onlineInformation:
          $ref: '#/components/schemas/uri'
        _onlineInformation:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            Descriptive information, usage information or implantation
            information that is not captured in an existing element.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        quantity:
          description: >-
            The quantity of the device present in the packaging (e.g. the number
            of devices present in a pack, or the number of devices in the same
            package of the medicinal product).
          $ref: '#/components/schemas/Quantity'
        parentDevice:
          $ref: '#/components/schemas/Reference'
        material:
          description: >-
            A substance used to create the material(s) of which the device is
            made.
          items:
            $ref: '#/components/schemas/DeviceDefinition_Material'
          type: array
      additionalProperties: false
      required:
        - resourceType
    DeviceDefinition_UdiDeviceIdentifier:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        deviceIdentifier:
          description: >-
            The identifier that is to be associated with every Device that
            references this DeviceDefintiion for the issuer and jurisdication
            porvided in the DeviceDefinition.udiDeviceIdentifier.
          $ref: '#/components/schemas/string'
        _deviceIdentifier:
          $ref: '#/components/schemas/Element'
        issuer:
          $ref: '#/components/schemas/uri'
        _issuer:
          $ref: '#/components/schemas/Element'
        jurisdiction:
          $ref: '#/components/schemas/uri'
        _jurisdiction:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    DeviceDefinition_DeviceName:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of deviceName.

            UDILabelName | UserFriendlyName | PatientReportedName |
            ManufactureDeviceName | ModelName.
          enum:
            - udi-label-name
            - user-friendly-name
            - patient-reported-name
            - manufacturer-name
            - model-name
            - other
        _type:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    DeviceDefinition_Specialization:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        systemType:
          $ref: '#/components/schemas/string'
        _systemType:
          $ref: '#/components/schemas/Element'
        version:
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    DeviceDefinition_Capability:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: Description of capability.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - type
    DeviceDefinition_Property:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Code that specifies the property DeviceDefinitionPropetyCode
            (Extensible).
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          description: Property value as a quantity.
          items:
            $ref: '#/components/schemas/Quantity'
          type: array
        valueCode:
          description: 'Property value as a code, e.g., NTP4 (synced to NTP).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - type
    DeviceDefinition_Material:
      description: >-
        The characteristics, operational status and capabilities of a
        medical-related component of a medical device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        substance:
          $ref: '#/components/schemas/CodeableConcept'
        alternate:
          $ref: '#/components/schemas/boolean'
        _alternate:
          $ref: '#/components/schemas/Element'
        allergenicIndicator:
          $ref: '#/components/schemas/boolean'
        _allergenicIndicator:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - substance
    DeviceMetric:
      description: >-
        Describes a measurement, calculation or setting capability of a medical
        device.
      properties:
        resourceType:
          description: This is a DeviceMetric resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Unique instance identifiers assigned to a device by the device or
            gateway software, manufacturers, other organizations or owners. For
            example: handle ID.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          description: >-
            Describes the type of the metric. For example: Heart Rate, PEEP
            Setting, etc.
          $ref: '#/components/schemas/CodeableConcept'
        unit:
          description: >-
            Describes the unit that an observed value determined for this metric
            will have. For example: Percent, Seconds, etc.
          $ref: '#/components/schemas/CodeableConcept'
        source:
          description: >-
            Describes the link to the  Device that this DeviceMetric belongs to
            and that contains administrative device information such as
            manufacturer, serial number, etc.
          $ref: '#/components/schemas/Reference'
        parent:
          description: >-
            Describes the link to the  Device that this DeviceMetric belongs to
            and that provide information about the location of this DeviceMetric
            in the containment structure of the parent Device. An example would
            be a Device that represents a Channel. This reference can be used by
            a client application to distinguish DeviceMetrics that have the same
            type, but should be interpreted based on their containment location.
          $ref: '#/components/schemas/Reference'
        operationalStatus:
          description: >-
            Indicates current operational state of the device. For example: On,
            Off, Standby, etc.
          enum:
            - 'on'
            - 'off'
            - standby
            - entered-in-error
        _operationalStatus:
          $ref: '#/components/schemas/Element'
        color:
          description: >-
            Describes the color representation for the metric. This is often
            used to aid clinicians to track and identify parameter types by
            color. In practice, consider a Patient Monitor that has ECG/HR and
            Pleth for example; the parameters are displayed in different
            characteristic colors, such as HR-blue, BP-green, and PR and SpO2-
            magenta.
          enum:
            - black
            - red
            - green
            - yellow
            - blue
            - magenta
            - cyan
            - white
        _color:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            Indicates the category of the observation generation process. A
            DeviceMetric can be for example a setting, measurement, or
            calculation.
          enum:
            - measurement
            - setting
            - calculation
            - unspecified
        _category:
          $ref: '#/components/schemas/Element'
        measurementPeriod:
          description: >-
            Describes the measurement repetition time. This is not necessarily
            the same as the update period. The measurement repetition time can
            range from milliseconds up to hours. An example for a measurement
            repetition time in the range of milliseconds is the sampling rate of
            an ECG. An example for a measurement repetition time in the range of
            hours is a NIBP that is triggered automatically every hour. The
            update period may be different than the measurement repetition time,
            if the device does not update the published observed value with the
            same frequency as it was measured.
          $ref: '#/components/schemas/Timing'
        calibration:
          description: >-
            Describes the calibrations that have been performed or that are
            required to be performed.
          items:
            $ref: '#/components/schemas/DeviceMetric_Calibration'
          type: array
      additionalProperties: false
      required:
        - type
        - resourceType
    DeviceMetric_Calibration:
      description: >-
        Describes a measurement, calculation or setting capability of a medical
        device.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: Describes the type of the calibration method.
          enum:
            - unspecified
            - offset
            - gain
            - two-point
        _type:
          $ref: '#/components/schemas/Element'
        state:
          description: Describes the state of the calibration.
          enum:
            - not-calibrated
            - calibration-required
            - calibrated
            - unspecified
        _state:
          $ref: '#/components/schemas/Element'
        time:
          $ref: '#/components/schemas/instant'
        _time:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    DeviceRequest:
      description: >-
        Represents a request for a patient to employ a medical device. The
        device may be an implantable device, or an external assistive device,
        such as a walker.
      properties:
        resourceType:
          description: This is a DeviceRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers assigned to this order by the orderer or by the
            receiver.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined protocol, guideline, orderset or
            other definition that is adhered to in whole or in part by this
            DeviceRequest.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this DeviceRequest.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: Plan/proposal/order fulfilled by this request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        priorRequest:
          description: >-
            The request takes the place of the referenced completed or
            terminated request(s).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        groupIdentifier:
          $ref: '#/components/schemas/Identifier'
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        intent:
          description: >-
            Whether the request is a proposal, plan, an original order or a
            reflex order.
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        priority:
          description: >-
            Indicates how quickly the {{title}} should be addressed with respect
            to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        codeReference:
          $ref: '#/components/schemas/Reference'
        codeCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        parameter:
          description: >-
            Specific parameters for the ordered item.  For example, the prism
            value for lenses.
          items:
            $ref: '#/components/schemas/DeviceRequest_Parameter'
          type: array
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            An encounter that provides additional context in which this request
            is made.
          $ref: '#/components/schemas/Reference'
        occurrenceDateTime:
          description: >-
            The timing schedule for the use of the device. The Schedule data
            type allows many different expressions, for example. "Every 8
            hours"; "Three times a day"; "1/2 an hour before breakfast for 10
            days from 23-Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and 1 Nov 2013".
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          description: >-
            The timing schedule for the use of the device. The Schedule data
            type allows many different expressions, for example. "Every 8
            hours"; "Three times a day"; "1/2 an hour before breakfast for 10
            days from 23-Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and 1 Nov 2013".
          $ref: '#/components/schemas/Period'
        occurrenceTiming:
          description: >-
            The timing schedule for the use of the device. The Schedule data
            type allows many different expressions, for example. "Every 8
            hours"; "Three times a day"; "1/2 an hour before breakfast for 10
            days from 23-Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and 1 Nov 2013".
          $ref: '#/components/schemas/Timing'
        authoredOn:
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        requester:
          description: >-
            The individual who initiated the request and has responsibility for
            its activation.
          $ref: '#/components/schemas/Reference'
        performerType:
          $ref: '#/components/schemas/CodeableConcept'
        performer:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: Reason or justification for the use of this device.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Reason or justification for the use of this device.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        insurance:
          description: >-
            Insurance plans, coverage extensions, pre-authorizations and/or
            pre-determinations that may be required for delivering the requested
            service.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        supportingInfo:
          description: >-
            Additional clinical information about the patient that may influence
            the request fulfilment.  For example, this may include where on the
            subject's body the device will be used (i.e. the target site).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Details about this request that were not represented at all or
            sufficiently in one of the attributes provided in a class. These may
            include for example a comment, an instruction, or a note associated
            with the statement.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        relevantHistory:
          description: Key events in the history of the request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    DeviceRequest_Parameter:
      description: >-
        Represents a request for a patient to employ a medical device. The
        device may be an implantable device, or an external assistive device,
        such as a walker.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueRange:
          $ref: '#/components/schemas/Range'
        valueBoolean:
          description: The value of the device detail.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    DeviceUseStatement:
      description: >-
        A record of a device being used by a patient where the record is the
        result of a report from the patient or another clinician.
      properties:
        resourceType:
          description: This is a DeviceUseStatement resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: An external identifier for this statement such as an IRI.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A plan, proposal or order that is fulfilled in whole or in part by
            this DeviceUseStatement.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: >-
            A code representing the patient or other source's judgment about the
            state of the device used that this statement is about.  Generally
            this will be active or completed.
          enum:
            - active
            - completed
            - entered-in-error
            - intended
            - stopped
            - on-hold
        _status:
          $ref: '#/components/schemas/Element'
        subject:
          $ref: '#/components/schemas/Reference'
        derivedFrom:
          description: >-
            Allows linking the DeviceUseStatement to the underlying Request, or
            to other information that supports or is used to derive the
            DeviceUseStatement.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        timingTiming:
          $ref: '#/components/schemas/Timing'
        timingPeriod:
          $ref: '#/components/schemas/Period'
        timingDateTime:
          description: How often the device was used.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timingDateTime:
          $ref: '#/components/schemas/Element'
        recordedOn:
          $ref: '#/components/schemas/dateTime'
        _recordedOn:
          $ref: '#/components/schemas/Element'
        source:
          $ref: '#/components/schemas/Reference'
        device:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: Reason or justification for the use of the device.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates another resource whose existence justifies this
            DeviceUseStatement.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        bodySite:
          description: >-
            Indicates the anotomic location on the subject's body where the
            device was used ( i.e. the target).
          $ref: '#/components/schemas/CodeableConcept'
        note:
          description: >-
            Details about the device statement that were not represented at all
            or sufficiently in one of the attributes provided in a class. These
            may include for example a comment, an instruction, or a note
            associated with the statement.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - subject
        - device
        - resourceType
    DiagnosticReport:
      description: >-
        The findings and interpretation of diagnostic  tests performed on
        patients, groups of patients, devices, and locations, and/or specimens
        derived from these. The report includes clinical context such as
        requesting and provider information, and some mix of atomic results,
        images, textual and coded interpretations, and formatted representation
        of diagnostic reports.
      properties:
        resourceType:
          description: This is a DiagnosticReport resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers assigned to this report by the performer or other
            systems.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: Details concerning a service requested.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: The status of the diagnostic report.
          enum:
            - registered
            - partial
            - preliminary
            - final
            - amended
            - corrected
            - appended
            - cancelled
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            A code that classifies the clinical discipline, department or
            diagnostic service that created the report (e.g. cardiology,
            biochemistry, hematology, MRI). This is used for searching, sorting
            and display purposes.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The subject of the report. Usually, but not always, this is a
            patient. However, diagnostic services also perform analyses on
            specimens collected from a variety of other sources.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The healthcare event  (e.g. a patient and healthcare provider
            interaction) which this DiagnosticReport is about.
          $ref: '#/components/schemas/Reference'
        effectiveDateTime:
          description: >-
            The time or time-period the observed values are related to. When the
            subject of the report is a patient, this is usually either the time
            of the procedure or of specimen collection(s), but very often the
            source of the date/time is not known, only the date/time itself.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _effectiveDateTime:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The time or time-period the observed values are related to. When the
            subject of the report is a patient, this is usually either the time
            of the procedure or of specimen collection(s), but very often the
            source of the date/time is not known, only the date/time itself.
          $ref: '#/components/schemas/Period'
        issued:
          description: >-
            The date and time that this version of the report was made available
            to providers, typically after the report was reviewed and verified.
          $ref: '#/components/schemas/instant'
        _issued:
          $ref: '#/components/schemas/Element'
        performer:
          description: The diagnostic service that is responsible for issuing the report.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        resultsInterpreter:
          description: >-
            The practitioner or organization that is responsible for the
            report's conclusions and interpretations.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        specimen:
          description: >-
            Details about the specimens on which this diagnostic report is
            based.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        result:
          description: >-
            [Observations](observation.html)  that are part of this diagnostic
            report.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        imagingStudy:
          description: >-
            One or more links to full details of any imaging performed during
            the diagnostic investigation. Typically, this is imaging performed
            by DICOM enabled modalities, but this is not required. A fully
            enabled PACS viewer can use this information to provide views of the
            source images.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        media:
          description: >-
            A list of key images associated with this report. The images are
            generally created during the diagnostic process, and may be directly
            of the patient, or of treated specimens (i.e. slides of interest).
          items:
            $ref: '#/components/schemas/DiagnosticReport_Media'
          type: array
        conclusion:
          description: >-
            Concise and clinically contextualized summary conclusion
            (interpretation/impression) of the diagnostic report.
          $ref: '#/components/schemas/string'
        _conclusion:
          $ref: '#/components/schemas/Element'
        conclusionCode:
          description: >-
            One or more codes that represent the summary conclusion
            (interpretation/impression) of the diagnostic report.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        presentedForm:
          description: >-
            Rich text representation of the entire result as issued by the
            diagnostic service. Multiple formats are allowed but they SHALL be
            semantically equivalent.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
      additionalProperties: false
      required:
        - code
        - resourceType
    DiagnosticReport_Media:
      description: >-
        The findings and interpretation of diagnostic  tests performed on
        patients, groups of patients, devices, and locations, and/or specimens
        derived from these. The report includes clinical context such as
        requesting and provider information, and some mix of atomic results,
        images, textual and coded interpretations, and formatted representation
        of diagnostic reports.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        comment:
          description: >-
            A comment about the image. Typically, this is used to provide an
            explanation for why the image is included, or to draw the viewer's
            attention to important features.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        link:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - link
    DocumentManifest:
      description: >-
        A collection of documents compiled for a purpose together with metadata
        that applies to the collection.
      properties:
        resourceType:
          description: This is a DocumentManifest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        masterIdentifier:
          description: >-
            A single identifier that uniquely identifies this manifest.
            Principally used to refer to the manifest in non-FHIR contexts.
          $ref: '#/components/schemas/Identifier'
        identifier:
          description: >-
            Other identifiers associated with the document manifest, including
            version independent  identifiers.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The status of this document manifest.
          enum:
            - current
            - superseded
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The code specifying the type of clinical activity that resulted in
            placing the associated content into the DocumentManifest.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            Who or what the set of documents is about. The documents can be
            about a person, (patient or healthcare practitioner), a device (i.e.
            machine) or even a group of subjects (such as a document about a
            herd of farm animals, or a set of patients that share a common
            exposure). If the documents cross more than one subject, then more
            than one subject is allowed here (unusual use case).
          $ref: '#/components/schemas/Reference'
        created:
          description: >-
            When the document manifest was created for submission to the server
            (not necessarily the same thing as the actual resource last modified
            time, since it may be modified, replicated, etc.).
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            Identifies who is the author of the manifest. Manifest author is not
            necessarly the author of the references included.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        recipient:
          description: >-
            A patient, practitioner, or organization for which this set of
            documents is intended.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        source:
          description: >-
            Identifies the source system, application, or software that produced
            the document manifest.
          $ref: '#/components/schemas/uri'
        _source:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            Human-readable description of the source document. This is sometimes
            known as the "title".
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        content:
          description: The list of Resources that consist of the parts of this manifest.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        related:
          description: >-
            Related identifiers or resources associated with the
            DocumentManifest.
          items:
            $ref: '#/components/schemas/DocumentManifest_Related'
          type: array
      additionalProperties: false
      required:
        - content
        - resourceType
    DocumentManifest_Related:
      description: >-
        A collection of documents compiled for a purpose together with metadata
        that applies to the collection.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Related identifier to this DocumentManifest.  For example, Order
            numbers, accession numbers, XDW workflow numbers.
          $ref: '#/components/schemas/Identifier'
        ref:
          description: >-
            Related Resource to this DocumentManifest. For example, Order,
            ServiceRequest,  Procedure, EligibilityRequest, etc.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    DocumentReference:
      description: >-
        A reference to a document of any kind for any purpose. Provides metadata
        about the document so that the document can be discovered and managed.
        The scope of a document is any seralized object with a mime-type, so
        includes formal patient centric documents (CDA), cliical notes, scanned
        paper, and non-patient specific documents like policy text.
      properties:
        resourceType:
          description: This is a DocumentReference resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        masterIdentifier:
          description: >-
            Document identifier as assigned by the source of the document. This
            identifier is specific to this version of the document. This unique
            identifier may be used elsewhere to identify this version of the
            document.
          $ref: '#/components/schemas/Identifier'
        identifier:
          description: >-
            Other identifiers associated with the document, including version
            independent identifiers.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The status of this document reference.
          enum:
            - current
            - superseded
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        docStatus:
          $ref: '#/components/schemas/code'
        _docStatus:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Specifies the particular kind of document referenced  (e.g. History
            and Physical, Discharge Summary, Progress Note). This usually
            equates to the purpose of making the document referenced.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            A categorization for the type of document referenced - helps for
            indexing and searching. This may be implied by or derived from the
            code specified in the DocumentReference.type.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        subject:
          description: >-
            Who or what the document is about. The document can be about a
            person, (patient or healthcare practitioner), a device (e.g. a
            machine) or even a group of subjects (such as a document about a
            herd of farm animals, or a set of patients that share a common
            exposure).
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/instant'
        _date:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            Identifies who is responsible for adding the information to the
            document.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        authenticator:
          description: >-
            Which person or organization authenticates that this document is
            valid.
          $ref: '#/components/schemas/Reference'
        custodian:
          description: >-
            Identifies the organization or group who is responsible for ongoing
            maintenance of and access to the document.
          $ref: '#/components/schemas/Reference'
        relatesTo:
          description: >-
            Relationships that this document has with other document references
            that already exist.
          items:
            $ref: '#/components/schemas/DocumentReference_RelatesTo'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        securityLabel:
          description: >-
            A set of Security-Tag codes specifying the level of privacy/security
            of the Document. Note that DocumentReference.meta.security contains
            the security labels of the "reference" to the document, while
            DocumentReference.securityLabel contains a snapshot of the security
            labels on the document the reference refers to.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        content:
          description: >-
            The document and format referenced. There may be multiple content
            element repetitions, each with a different format.
          items:
            $ref: '#/components/schemas/DocumentReference_Content'
          type: array
        context:
          $ref: '#/components/schemas/DocumentReference_Context'
      additionalProperties: false
      required:
        - content
        - resourceType
    DocumentReference_RelatesTo:
      description: >-
        A reference to a document of any kind for any purpose. Provides metadata
        about the document so that the document can be discovered and managed.
        The scope of a document is any seralized object with a mime-type, so
        includes formal patient centric documents (CDA), cliical notes, scanned
        paper, and non-patient specific documents like policy text.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            The type of relationship that this document has with anther
            document.
          enum:
            - replaces
            - transforms
            - signs
            - appends
        _code:
          $ref: '#/components/schemas/Element'
        target:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - target
    DocumentReference_Content:
      description: >-
        A reference to a document of any kind for any purpose. Provides metadata
        about the document so that the document can be discovered and managed.
        The scope of a document is any seralized object with a mime-type, so
        includes formal patient centric documents (CDA), cliical notes, scanned
        paper, and non-patient specific documents like policy text.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        attachment:
          description: >-
            The document or URL of the document along with critical metadata to
            prove content has integrity.
          $ref: '#/components/schemas/Attachment'
        format:
          description: >-
            An identifier of the document encoding, structure, and template that
            the document conforms to beyond the base format indicated in the
            mimeType.
          $ref: '#/components/schemas/Coding'
      additionalProperties: false
      required:
        - attachment
    DocumentReference_Context:
      description: >-
        A reference to a document of any kind for any purpose. Provides metadata
        about the document so that the document can be discovered and managed.
        The scope of a document is any seralized object with a mime-type, so
        includes formal patient centric documents (CDA), cliical notes, scanned
        paper, and non-patient specific documents like policy text.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        encounter:
          description: >-
            Describes the clinical encounter or type of care that the document
            content is associated with.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        event:
          description: >-
            This list of codes represents the main clinical acts, such as a
            colonoscopy or an appendectomy, being documented. In some cases, the
            event is inherent in the type Code, such as a "History and Physical
            Report" in which the procedure being documented is necessarily a
            "History and Physical" act.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        period:
          description: >-
            The time period over which the service that is described by the
            document was provided.
          $ref: '#/components/schemas/Period'
        facilityType:
          $ref: '#/components/schemas/CodeableConcept'
        practiceSetting:
          description: >-
            This property may convey specifics about the practice setting where
            the content was created, often reflecting the clinical specialty.
          $ref: '#/components/schemas/CodeableConcept'
        sourcePatientInfo:
          description: >-
            The Patient Information as known when the document was published.
            May be a reference to a version specific, or contained.
          $ref: '#/components/schemas/Reference'
        related:
          description: >-
            Related identifiers or resources associated with the
            DocumentReference.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    EffectEvidenceSynthesis:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        resourceType:
          description: This is a EffectEvidenceSynthesis resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this effect evidence
            synthesis when it is referenced in a specification, model, design or
            an instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this effect evidence synthesis is (or will
            be) published. This URL can be the target of a canonical reference.
            It SHALL remain the same when the effect evidence synthesis is
            stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this effect evidence
            synthesis when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the effect
            evidence synthesis when it is referenced in a specification, model,
            design or instance. This is an arbitrary value managed by the effect
            evidence synthesis author and is not expected to be globally unique.
            For example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the effect evidence synthesis.
            This name should be usable as an identifier for the module by
            machine processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the effect evidence
            synthesis.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this effect evidence synthesis. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the effect evidence synthesis
            was published. The date must change when the business version
            changes and it must change if the status code changes. In addition,
            it should change when the substantive content of the effect evidence
            synthesis changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the effect
            evidence synthesis.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the effect evidence
            synthesis from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate effect evidence synthesis
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the effect evidence synthesis
            is intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the effect evidence synthesis
            and/or its contents. Copyright statements are generally legal
            restrictions on the use and publishing of the effect evidence
            synthesis.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the effect evidence synthesis content was or
            is planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the
            EffectEvidenceSynthesis. Topics provide a high-level categorization
            grouping types of EffectEvidenceSynthesiss that can be useful for
            filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        synthesisType:
          $ref: '#/components/schemas/CodeableConcept'
        studyType:
          $ref: '#/components/schemas/CodeableConcept'
        population:
          description: >-
            A reference to a EvidenceVariable resource that defines the
            population for the research.
          $ref: '#/components/schemas/Reference'
        exposure:
          description: >-
            A reference to a EvidenceVariable resource that defines the exposure
            for the research.
          $ref: '#/components/schemas/Reference'
        exposureAlternative:
          description: >-
            A reference to a EvidenceVariable resource that defines the
            comparison exposure for the research.
          $ref: '#/components/schemas/Reference'
        outcome:
          description: >-
            A reference to a EvidenceVariable resomece that defines the outcome
            for the research.
          $ref: '#/components/schemas/Reference'
        sampleSize:
          $ref: '#/components/schemas/EffectEvidenceSynthesis_SampleSize'
        resultsByExposure:
          description: >-
            A description of the results for each exposure considered in the
            effect estimate.
          items:
            $ref: '#/components/schemas/EffectEvidenceSynthesis_ResultsByExposure'
          type: array
        effectEstimate:
          description: The estimated effect of the exposure variant.
          items:
            $ref: '#/components/schemas/EffectEvidenceSynthesis_EffectEstimate'
          type: array
        certainty:
          description: A description of the certainty of the effect estimate.
          items:
            $ref: '#/components/schemas/EffectEvidenceSynthesis_Certainty'
          type: array
      additionalProperties: false
      required:
        - exposureAlternative
        - exposure
        - outcome
        - resourceType
        - population
    EffectEvidenceSynthesis_SampleSize:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        numberOfStudies:
          $ref: '#/components/schemas/integer'
        _numberOfStudies:
          $ref: '#/components/schemas/Element'
        numberOfParticipants:
          $ref: '#/components/schemas/integer'
        _numberOfParticipants:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    EffectEvidenceSynthesis_ResultsByExposure:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        exposureState:
          description: >-
            Whether these results are for the exposure state or alternative
            exposure state.
          enum:
            - exposure
            - exposure-alternative
        _exposureState:
          $ref: '#/components/schemas/Element'
        variantState:
          $ref: '#/components/schemas/CodeableConcept'
        riskEvidenceSynthesis:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - riskEvidenceSynthesis
    EffectEvidenceSynthesis_EffectEstimate:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        variantState:
          $ref: '#/components/schemas/CodeableConcept'
        value:
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        unitOfMeasure:
          $ref: '#/components/schemas/CodeableConcept'
        precisionEstimate:
          description: A description of the precision of the estimate for the effect.
          items:
            $ref: '#/components/schemas/EffectEvidenceSynthesis_PrecisionEstimate'
          type: array
      additionalProperties: false
    EffectEvidenceSynthesis_PrecisionEstimate:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        level:
          $ref: '#/components/schemas/decimal'
        _level:
          $ref: '#/components/schemas/Element'
        from:
          $ref: '#/components/schemas/decimal'
        _from:
          $ref: '#/components/schemas/Element'
        to:
          $ref: '#/components/schemas/decimal'
        _to:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    EffectEvidenceSynthesis_Certainty:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        rating:
          description: A rating of the certainty of the effect estimate.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        certaintySubcomponent:
          description: A description of a component of the overall certainty.
          items:
            $ref: '#/components/schemas/EffectEvidenceSynthesis_CertaintySubcomponent'
          type: array
      additionalProperties: false
    EffectEvidenceSynthesis_CertaintySubcomponent:
      description: >-
        The EffectEvidenceSynthesis resource describes the difference in an
        outcome between exposures states in a population where the effect
        estimate is derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        rating:
          description: A rating of a subcomponent of rating certainty.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
    Encounter:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        resourceType:
          description: This is a Encounter resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifier(s) by which this encounter is known.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: >-
            planned | arrived | triaged | in-progress | onleave | finished |
            cancelled +.
          enum:
            - planned
            - arrived
            - triaged
            - in-progress
            - onleave
            - finished
            - cancelled
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        statusHistory:
          description: >-
            The status history permits the encounter resource to contain the
            status history without needing to read through the historical
            versions of the resource, or even have the server store them.
          items:
            $ref: '#/components/schemas/Encounter_StatusHistory'
          type: array
        class:
          description: >-
            Concepts representing classification of patient encounter such as
            ambulatory (outpatient), inpatient, emergency, home health or others
            due to local variations.
          $ref: '#/components/schemas/Coding'
        classHistory:
          description: >-
            The class history permits the tracking of the encounters transitions
            without needing to go  through the resource history.  This would be
            used for a case where an admission starts of as an emergency
            encounter, then transitions into an inpatient scenario. Doing this
            and not restarting a new encounter ensures that any lab/diagnostic
            results can more easily follow the patient and not require
            re-processing and not get lost or cancelled during a kind of
            discharge from emergency to inpatient.
          items:
            $ref: '#/components/schemas/Encounter_ClassHistory'
          type: array
        type:
          description: >-
            Specific type of encounter (e.g. e-mail consultation, surgical
            day-care, skilled nursing, rehabilitation).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        serviceType:
          description: >-
            Broad categorization of the service that is to be provided (e.g.
            cardiology).
          $ref: '#/components/schemas/CodeableConcept'
        priority:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        episodeOfCare:
          description: >-
            Where a specific encounter should be classified as a part of a
            specific episode(s) of care this field should be used. This
            association can facilitate grouping of related encounters together
            for a specific purpose, such as government reporting, issue
            tracking, association via a common problem.  The association is
            recorded on the encounter as these are typically created after the
            episode of care and grouped on entry rather than editing the episode
            of care to append another encounter to it (the episode of care could
            span years).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        basedOn:
          description: >-
            The request this encounter satisfies (e.g. incoming referral or
            procedure request).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        participant:
          description: The list of people responsible for providing the service.
          items:
            $ref: '#/components/schemas/Encounter_Participant'
          type: array
        appointment:
          description: The appointment that scheduled this encounter.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        period:
          $ref: '#/components/schemas/Period'
        length:
          description: >-
            Quantity of time the encounter lasted. This excludes the time during
            leaves of absence.
          $ref: '#/components/schemas/Duration'
        reasonCode:
          description: >-
            Reason the encounter takes place, expressed as a code. For
            admissions, this can be used for a coded admission diagnosis.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Reason the encounter takes place, expressed as a code. For
            admissions, this can be used for a coded admission diagnosis.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        diagnosis:
          description: The list of diagnosis relevant to this encounter.
          items:
            $ref: '#/components/schemas/Encounter_Diagnosis'
          type: array
        account:
          description: The set of accounts that may be used for billing for this Encounter.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        hospitalization:
          $ref: '#/components/schemas/Encounter_Hospitalization'
        location:
          description: List of locations where  the patient has been during this encounter.
          items:
            $ref: '#/components/schemas/Encounter_Location'
          type: array
        serviceProvider:
          description: >-
            The organization that is primarily responsible for this Encounter's
            services. This MAY be the same as the organization on the Patient
            record, however it could be different, such as if the actor
            performing the services was from an external organization (which may
            be billed seperately) for an external consultation.  Refer to the
            example bundle showing an abbreviated set of Encounters for a
            colonoscopy.
          $ref: '#/components/schemas/Reference'
        partOf:
          description: >-
            Another Encounter of which this encounter is a part of
            (administratively or in time).
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - class
        - resourceType
    Encounter_StatusHistory:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: >-
            planned | arrived | triaged | in-progress | onleave | finished |
            cancelled +.
          enum:
            - planned
            - arrived
            - triaged
            - in-progress
            - onleave
            - finished
            - cancelled
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - period
    Encounter_ClassHistory:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        class:
          $ref: '#/components/schemas/Coding'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - period
        - class
    Encounter_Participant:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: Role of participant in encounter.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        period:
          description: >-
            The period of time that the specified participant participated in
            the encounter. These can overlap or be sub-sets of the overall
            encounter's period.
          $ref: '#/components/schemas/Period'
        individual:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Encounter_Diagnosis:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        condition:
          description: >-
            Reason the encounter takes place, as specified using information
            from another resource. For admissions, this is the admission
            diagnosis. The indication will typically be a Condition (with other
            resources referenced in the evidence.detail), or a Procedure.
          $ref: '#/components/schemas/Reference'
        use:
          description: >-
            Role that this diagnosis has within the encounter (e.g. admission,
            billing, discharge …).
          $ref: '#/components/schemas/CodeableConcept'
        rank:
          $ref: '#/components/schemas/positiveInt'
        _rank:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - condition
    Encounter_Hospitalization:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        preAdmissionIdentifier:
          $ref: '#/components/schemas/Identifier'
        origin:
          description: >-
            The location/organization from which the patient came before
            admission.
          $ref: '#/components/schemas/Reference'
        admitSource:
          $ref: '#/components/schemas/CodeableConcept'
        reAdmission:
          $ref: '#/components/schemas/CodeableConcept'
        dietPreference:
          description: Diet preferences reported by the patient.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialCourtesy:
          description: 'Special courtesies (VIP, board member).'
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialArrangement:
          description: >-
            Any special requests that have been made for this hospitalization
            encounter, such as the provision of specific equipment or other
            things.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        destination:
          $ref: '#/components/schemas/Reference'
        dischargeDisposition:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    Encounter_Location:
      description: >-
        An interaction between a patient and healthcare provider(s) for the
        purpose of providing healthcare service(s) or assessing the health
        status of a patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        location:
          $ref: '#/components/schemas/Reference'
        status:
          description: >-
            The status of the participants' presence at the specified location
            during the period specified. If the participant is no longer at the
            location, then the period will have an end date/time.
          enum:
            - planned
            - active
            - reserved
            - completed
        _status:
          $ref: '#/components/schemas/Element'
        physicalType:
          description: >-
            This will be used to specify the required levels
            (bed/ward/room/etc.) desired to be recorded to simplify either
            messaging or query.
          $ref: '#/components/schemas/CodeableConcept'
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - location
    Endpoint:
      description: >-
        The technical details of an endpoint that can be used for electronic
        services, such as for web services providing XDS.b or a REST endpoint
        for another FHIR server. This may include any security context
        information.
      properties:
        resourceType:
          description: This is a Endpoint resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier for the organization that is used to identify the
            endpoint across multiple disparate systems.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: active | suspended | error | off | test.
          enum:
            - active
            - suspended
            - error
            - 'off'
            - entered-in-error
            - test
        _status:
          $ref: '#/components/schemas/Element'
        connectionType:
          description: >-
            A coded value that represents the technical details of the usage of
            this endpoint, such as what WSDLs should be used in what way. (e.g.
            XDS.b/DICOM/cds-hook).
          $ref: '#/components/schemas/Coding'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        managingOrganization:
          description: >-
            The organization that manages this endpoint (even if technically
            another organization is hosting this in the cloud, it is the
            organization associated with the data).
          $ref: '#/components/schemas/Reference'
        contact:
          description: >-
            Contact details for a human to contact about the subscription. The
            primary use of this for system administrator troubleshooting.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        period:
          description: >-
            The interval during which the endpoint is expected to be
            operational.
          $ref: '#/components/schemas/Period'
        payloadType:
          description: >-
            The payload type describes the acceptable content that can be
            communicated on the endpoint.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        payloadMimeType:
          description: >-
            The mime type to send the payload in - e.g. application/fhir+xml,
            application/fhir+json. If the mime type is not specified, then the
            sender could send any content (including no content depending on the
            connectionType).
          items:
            $ref: '#/components/schemas/code'
          type: array
        _payloadMimeType:
          description: Extensions for payloadMimeType
          items:
            $ref: '#/components/schemas/Element'
          type: array
        address:
          $ref: '#/components/schemas/url'
        _address:
          $ref: '#/components/schemas/Element'
        header:
          description: >-
            Additional headers / information to send as part of the
            notification.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _header:
          description: Extensions for header
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
      required:
        - payloadType
        - connectionType
        - resourceType
    EnrollmentRequest:
      description: >-
        This resource provides the insurance enrollment details to the insurer
        regarding a specified coverage.
      properties:
        resourceType:
          description: This is a EnrollmentRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: The Response business identifier.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        insurer:
          $ref: '#/components/schemas/Reference'
        provider:
          description: >-
            The practitioner who is responsible for the services rendered to the
            patient.
          $ref: '#/components/schemas/Reference'
        candidate:
          $ref: '#/components/schemas/Reference'
        coverage:
          description: >-
            Reference to the program or plan identification, underwriter or
            payor.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    EnrollmentResponse:
      description: >-
        This resource provides enrollment and plan details from the processing
        of an EnrollmentRequest resource.
      properties:
        resourceType:
          description: This is a EnrollmentResponse resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: The Response business identifier.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        request:
          $ref: '#/components/schemas/Reference'
        outcome:
          description: 'Processing status: error, complete.'
          enum:
            - queued
            - complete
            - error
            - partial
        _outcome:
          $ref: '#/components/schemas/Element'
        disposition:
          $ref: '#/components/schemas/string'
        _disposition:
          $ref: '#/components/schemas/Element'
        created:
          description: >-
            The date when the enclosed suite of services were performed or
            completed.
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        organization:
          $ref: '#/components/schemas/Reference'
        requestProvider:
          description: >-
            The practitioner who is responsible for the services rendered to the
            patient.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    EpisodeOfCare:
      description: >-
        An association between a patient and an organization / healthcare
        provider(s) during which time encounters may occur. The managing
        organization assumes a level of responsibility for the patient during
        this time.
      properties:
        resourceType:
          description: This is a EpisodeOfCare resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            The EpisodeOfCare may be known by different identifiers for
            different contexts of use, such as when an external agency is
            tracking the Episode for funding purposes.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: planned | waitlist | active | onhold | finished | cancelled.
          enum:
            - planned
            - waitlist
            - active
            - onhold
            - finished
            - cancelled
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        statusHistory:
          description: >-
            The history of statuses that the EpisodeOfCare has been through
            (without requiring processing the history of the resource).
          items:
            $ref: '#/components/schemas/EpisodeOfCare_StatusHistory'
          type: array
        type:
          description: >-
            A classification of the type of episode of care; e.g. specialist
            referral, disease management, type of funded care.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        diagnosis:
          description: The list of diagnosis relevant to this episode of care.
          items:
            $ref: '#/components/schemas/EpisodeOfCare_Diagnosis'
          type: array
        patient:
          $ref: '#/components/schemas/Reference'
        managingOrganization:
          description: >-
            The organization that has assumed the specific responsibilities for
            the specified duration.
          $ref: '#/components/schemas/Reference'
        period:
          description: >-
            The interval during which the managing organization assumes the
            defined responsibility.
          $ref: '#/components/schemas/Period'
        referralRequest:
          description: >-
            Referral Request(s) that are fulfilled by this EpisodeOfCare,
            incoming referrals.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        careManager:
          description: >-
            The practitioner that is the care manager/care coordinator for this
            patient.
          $ref: '#/components/schemas/Reference'
        team:
          description: >-
            The list of practitioners that may be facilitating this episode of
            care for specific purposes.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        account:
          description: >-
            The set of accounts that may be used for billing for this
            EpisodeOfCare.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - patient
        - resourceType
    EpisodeOfCare_StatusHistory:
      description: >-
        An association between a patient and an organization / healthcare
        provider(s) during which time encounters may occur. The managing
        organization assumes a level of responsibility for the patient during
        this time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: planned | waitlist | active | onhold | finished | cancelled.
          enum:
            - planned
            - waitlist
            - active
            - onhold
            - finished
            - cancelled
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The period during this EpisodeOfCare that the specific status
            applied.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - period
    EpisodeOfCare_Diagnosis:
      description: >-
        An association between a patient and an organization / healthcare
        provider(s) during which time encounters may occur. The managing
        organization assumes a level of responsibility for the patient during
        this time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        condition:
          description: >-
            A list of conditions/problems/diagnoses that this episode of care is
            intended to be providing care for.
          $ref: '#/components/schemas/Reference'
        role:
          description: >-
            Role that this diagnosis has within the episode of care (e.g.
            admission, billing, discharge …).
          $ref: '#/components/schemas/CodeableConcept'
        rank:
          $ref: '#/components/schemas/positiveInt'
        _rank:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - condition
    EventDefinition:
      description: >-
        The EventDefinition resource provides a reusable description of when a
        particular event can occur.
      properties:
        resourceType:
          description: This is a EventDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this event definition when
            it is referenced in a specification, model, design or an instance;
            also called its canonical identifier. This SHOULD be globally unique
            and SHOULD be a literal address at which at which an authoritative
            instance of this event definition is (or will be) published. This
            URL can be the target of a canonical reference. It SHALL remain the
            same when the event definition is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this event definition
            when it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the event
            definition when it is referenced in a specification, model, design
            or instance. This is an arbitrary value managed by the event
            definition author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the event definition. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the event definition giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this event definition. Enables tracking the life-cycle
            of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this event definition is authored
            for testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: >-
            A code or group definition that describes the intended subject of
            the event definition.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            A code or group definition that describes the intended subject of
            the event definition.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date  (and optionally time) when the event definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the event definition
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the event
            definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the event definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate event definition instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the event definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this event definition is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description of how the event definition is used from a
            clinical perspective.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the event definition and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the event definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the event definition content was or is
            planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the module. Topics provide a
            high-level categorization of the module that can be useful for
            filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related resources such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        trigger:
          description: >-
            The trigger element defines when the event occurs. If more than one
            trigger condition is specified, the event fires whenever any one of
            the trigger conditions is met.
          items:
            $ref: '#/components/schemas/TriggerDefinition'
          type: array
      additionalProperties: false
      required:
        - trigger
        - resourceType
    Evidence:
      description: >-
        The Evidence resource describes the conditional state (population and
        any exposures being compared within the population) and outcome (if
        specified) that the knowledge (evidence, assertion, recommendation) is
        about.
      properties:
        resourceType:
          description: This is a Evidence resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this evidence when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this evidence is (or will be) published. This URL can be
            the target of a canonical reference. It SHALL remain the same when
            the evidence is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this evidence when it
            is represented in other formats, or referenced in a specification,
            model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the evidence
            when it is referenced in a specification, model, design or instance.
            This is an arbitrary value managed by the evidence author and is not
            expected to be globally unique. For example, it might be a timestamp
            (e.g. yyyymmdd) if a managed version is not available. There is also
            no expectation that versions can be placed in a lexicographical
            sequence. To provide a version consistent with the Decision Support
            Service specification, use the format Major.Minor.Revision (e.g.
            1.0.0). For more information on versioning knowledge assets, refer
            to the Decision Support Service specification. Note that a version
            is required for non-experimental active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the evidence. This name should
            be usable as an identifier for the module by machine processing
            applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        shortTitle:
          description: >-
            The short title provides an alternate title for use in informal
            descriptive contexts where the full, formal title is not necessary.
          $ref: '#/components/schemas/string'
        _shortTitle:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the Evidence giving additional
            information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this evidence. Enables tracking the life-cycle of the
            content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the evidence was published. The
            date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the evidence changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            evidence.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the evidence from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate evidence instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the evidence is intended to be
            used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the evidence and/or its contents.
            Copyright statements are generally legal restrictions on the use and
            publishing of the evidence.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the evidence content was or is planned to be
            in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the Evidence. Topics
            provide a high-level categorization grouping types of Evidences that
            can be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        exposureBackground:
          description: >-
            A reference to a EvidenceVariable resource that defines the
            population for the research.
          $ref: '#/components/schemas/Reference'
        exposureVariant:
          description: >-
            A reference to a EvidenceVariable resource that defines the exposure
            for the research.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        outcome:
          description: >-
            A reference to a EvidenceVariable resomece that defines the outcome
            for the research.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - exposureBackground
        - resourceType
    EvidenceVariable:
      description: >-
        The EvidenceVariable resource describes a "PICO" element that knowledge
        (evidence, assertion, recommendation) is about.
      properties:
        resourceType:
          description: This is a EvidenceVariable resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this evidence variable when
            it is referenced in a specification, model, design or an instance;
            also called its canonical identifier. This SHOULD be globally unique
            and SHOULD be a literal address at which at which an authoritative
            instance of this evidence variable is (or will be) published. This
            URL can be the target of a canonical reference. It SHALL remain the
            same when the evidence variable is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this evidence variable
            when it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the evidence
            variable when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the evidence
            variable author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence. To provide a version
            consistent with the Decision Support Service specification, use the
            format Major.Minor.Revision (e.g. 1.0.0). For more information on
            versioning knowledge assets, refer to the Decision Support Service
            specification. Note that a version is required for non-experimental
            active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the evidence variable. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        shortTitle:
          description: >-
            The short title provides an alternate title for use in informal
            descriptive contexts where the full, formal title is not necessary.
          $ref: '#/components/schemas/string'
        _shortTitle:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the EvidenceVariable giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this evidence variable. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the evidence variable was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the evidence variable
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            evidence variable.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the evidence variable
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate evidence variable instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the evidence variable is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the evidence variable and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the evidence variable.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the evidence variable content was or is
            planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the EvidenceVariable.
            Topics provide a high-level categorization grouping types of
            EvidenceVariables that can be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        type:
          description: >-
            The type of evidence element, a population, an exposure, or an
            outcome.
          enum:
            - dichotomous
            - continuous
            - descriptive
        _type:
          $ref: '#/components/schemas/Element'
        characteristic:
          description: >-
            A characteristic that defines the members of the evidence element.
            Multiple characteristics are applied with "and" semantics.
          items:
            $ref: '#/components/schemas/EvidenceVariable_Characteristic'
          type: array
      additionalProperties: false
      required:
        - characteristic
        - resourceType
    EvidenceVariable_Characteristic:
      description: >-
        The EvidenceVariable resource describes a "PICO" element that knowledge
        (evidence, assertion, recommendation) is about.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            A short, natural language description of the characteristic that
            could be used to communicate the criteria to an end-user.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        definitionReference:
          description: >-
            Define members of the evidence element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/Reference'
        definitionCanonical:
          description: >-
            Define members of the evidence element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          pattern: ^\S*$
          type: string
        _definitionCanonical:
          $ref: '#/components/schemas/Element'
        definitionCodeableConcept:
          description: >-
            Define members of the evidence element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/CodeableConcept'
        definitionExpression:
          description: >-
            Define members of the evidence element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/Expression'
        definitionDataRequirement:
          description: >-
            Define members of the evidence element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/DataRequirement'
        definitionTriggerDefinition:
          description: >-
            Define members of the evidence element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/TriggerDefinition'
        usageContext:
          description: >-
            Use UsageContext to define the members of the population, such as
            Age Ranges, Genders, Settings.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        exclude:
          description: >-
            When true, members with this characteristic are excluded from the
            element.
          $ref: '#/components/schemas/boolean'
        _exclude:
          $ref: '#/components/schemas/Element'
        participantEffectiveDateTime:
          description: Indicates what effective period the study covers.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _participantEffectiveDateTime:
          $ref: '#/components/schemas/Element'
        participantEffectivePeriod:
          $ref: '#/components/schemas/Period'
        participantEffectiveDuration:
          $ref: '#/components/schemas/Duration'
        participantEffectiveTiming:
          $ref: '#/components/schemas/Timing'
        timeFromStart:
          $ref: '#/components/schemas/Duration'
        groupMeasure:
          description: >-
            Indicates how elements are aggregated within the study effective
            period.
          enum:
            - mean
            - median
            - mean-of-mean
            - mean-of-median
            - median-of-mean
            - median-of-median
        _groupMeasure:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ExampleScenario:
      description: Example of workflow instance.
      properties:
        resourceType:
          description: This is a ExampleScenario resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this example scenario when
            it is referenced in a specification, model, design or an instance;
            also called its canonical identifier. This SHOULD be globally unique
            and SHOULD be a literal address at which at which an authoritative
            instance of this example scenario is (or will be) published. This
            URL can be the target of a canonical reference. It SHALL remain the
            same when the example scenario is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this example scenario
            when it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the example
            scenario when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the example scenario
            author and is not expected to be globally unique. For example, it
            might be a timestamp (e.g. yyyymmdd) if a managed version is not
            available. There is also no expectation that versions can be placed
            in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the example scenario. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this example scenario. Enables tracking the life-cycle
            of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this example scenario is authored
            for testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the example scenario was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the example scenario
            changes. (e.g. the 'content logical definition').
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            example scenario.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate example scenario instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the example scenario is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the example scenario and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the example scenario.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        purpose:
          description: >-
            What the example scenario resource is created for. This should not
            be used to show the business purpose of the scenario itself, but the
            purpose of documenting a scenario.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        actor:
          description: Actor participating in the resource.
          items:
            $ref: '#/components/schemas/ExampleScenario_Actor'
          type: array
        instance:
          description: Each resource and each version that is present in the workflow.
          items:
            $ref: '#/components/schemas/ExampleScenario_Instance'
          type: array
        process:
          description: Each major process - a group of operations.
          items:
            $ref: '#/components/schemas/ExampleScenario_Process'
          type: array
        workflow:
          description: Another nested workflow.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
      additionalProperties: false
      required:
        - resourceType
    ExampleScenario_Actor:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        actorId:
          $ref: '#/components/schemas/string'
        _actorId:
          $ref: '#/components/schemas/Element'
        type:
          description: The type of actor - person or system.
          enum:
            - person
            - entity
        _type:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ExampleScenario_Instance:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        resourceId:
          $ref: '#/components/schemas/string'
        _resourceId:
          $ref: '#/components/schemas/Element'
        resourceType:
          $ref: '#/components/schemas/code'
        _resourceType:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        version:
          description: A specific version of the resource.
          items:
            $ref: '#/components/schemas/ExampleScenario_Version'
          type: array
        containedInstance:
          description: >-
            Resources contained in the instance (e.g. the observations contained
            in a bundle).
          items:
            $ref: '#/components/schemas/ExampleScenario_ContainedInstance'
          type: array
      additionalProperties: false
    ExampleScenario_Version:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        versionId:
          $ref: '#/components/schemas/string'
        _versionId:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ExampleScenario_ContainedInstance:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        resourceId:
          $ref: '#/components/schemas/string'
        _resourceId:
          $ref: '#/components/schemas/Element'
        versionId:
          $ref: '#/components/schemas/string'
        _versionId:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ExampleScenario_Process:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        preConditions:
          $ref: '#/components/schemas/markdown'
        _preConditions:
          $ref: '#/components/schemas/Element'
        postConditions:
          $ref: '#/components/schemas/markdown'
        _postConditions:
          $ref: '#/components/schemas/Element'
        step:
          description: Each step of the process.
          items:
            $ref: '#/components/schemas/ExampleScenario_Step'
          type: array
      additionalProperties: false
    ExampleScenario_Step:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        process:
          description: Nested process.
          items:
            $ref: '#/components/schemas/ExampleScenario_Process'
          type: array
        pause:
          $ref: '#/components/schemas/boolean'
        _pause:
          $ref: '#/components/schemas/Element'
        operation:
          $ref: '#/components/schemas/ExampleScenario_Operation'
        alternative:
          description: >-
            Indicates an alternative step that can be taken instead of the
            operations on the base step in exceptional/atypical circumstances.
          items:
            $ref: '#/components/schemas/ExampleScenario_Alternative'
          type: array
      additionalProperties: false
    ExampleScenario_Operation:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        number:
          $ref: '#/components/schemas/string'
        _number:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/string'
        _type:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        initiator:
          $ref: '#/components/schemas/string'
        _initiator:
          $ref: '#/components/schemas/Element'
        receiver:
          $ref: '#/components/schemas/string'
        _receiver:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        initiatorActive:
          $ref: '#/components/schemas/boolean'
        _initiatorActive:
          $ref: '#/components/schemas/Element'
        receiverActive:
          $ref: '#/components/schemas/boolean'
        _receiverActive:
          $ref: '#/components/schemas/Element'
        request:
          $ref: '#/components/schemas/ExampleScenario_ContainedInstance'
        response:
          $ref: '#/components/schemas/ExampleScenario_ContainedInstance'
      additionalProperties: false
    ExampleScenario_Alternative:
      description: Example of workflow instance.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        title:
          description: >-
            The label to display for the alternative that gives a sense of the
            circumstance in which the alternative should be invoked.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A human-readable description of the alternative explaining when the
            alternative should occur rather than the base step.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        step:
          description: What happens in each alternative option.
          items:
            $ref: '#/components/schemas/ExampleScenario_Step'
          type: array
      additionalProperties: false
    ExplanationOfBenefit:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        resourceType:
          description: This is a ExplanationOfBenefit resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this explanation of benefit.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The status of the resource instance.
          enum:
            - active
            - cancelled
            - draft
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The category of claim, e.g. oral, pharmacy, vision, institutional,
            professional.
          $ref: '#/components/schemas/CodeableConcept'
        subType:
          description: >-
            A finer grained suite of claim type codes which may convey
            additional information such as Inpatient vs Outpatient and/or a
            specialty service.
          $ref: '#/components/schemas/CodeableConcept'
        use:
          description: >-
            A code to indicate whether the nature of the request is: to request
            adjudication of products and services previously rendered; or
            requesting authorization and adjudication for provision in the
            future; or requesting the non-binding adjudication of the listed
            products and services which could be provided in the future.
          $ref: '#/components/schemas/code'
        _use:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            The party to whom the professional services and/or products have
            been supplied or are being considered and for whom actual for
            forecast reimbursement is sought.
          $ref: '#/components/schemas/Reference'
        billablePeriod:
          $ref: '#/components/schemas/Period'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        enterer:
          description: >-
            Individual who created the claim, predetermination or
            preauthorization.
          $ref: '#/components/schemas/Reference'
        insurer:
          description: >-
            The party responsible for authorization, adjudication and
            reimbursement.
          $ref: '#/components/schemas/Reference'
        provider:
          description: >-
            The provider which is responsible for the claim, predetermination or
            preauthorization.
          $ref: '#/components/schemas/Reference'
        priority:
          description: >-
            The provider-required urgency of processing the request. Typical
            values include: stat, routine deferred.
          $ref: '#/components/schemas/CodeableConcept'
        fundsReserveRequested:
          description: >-
            A code to indicate whether and for whom funds are to be reserved for
            future claims.
          $ref: '#/components/schemas/CodeableConcept'
        fundsReserve:
          description: >-
            A code, used only on a response to a preauthorization, to indicate
            whether the benefits payable have been reserved and for whom.
          $ref: '#/components/schemas/CodeableConcept'
        related:
          description: >-
            Other claims which are related to this claim such as prior
            submissions or claims for related services or for the same event.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Related'
          type: array
        prescription:
          description: >-
            Prescription to support the dispensing of pharmacy, device or vision
            products.
          $ref: '#/components/schemas/Reference'
        originalPrescription:
          description: >-
            Original prescription which has been superseded by this prescription
            to support the dispensing of pharmacy services, medications or
            products.
          $ref: '#/components/schemas/Reference'
        payee:
          description: >-
            The party to be reimbursed for cost of the products and services
            according to the terms of the policy.
          $ref: '#/components/schemas/ExplanationOfBenefit_Payee'
        referral:
          $ref: '#/components/schemas/Reference'
        facility:
          $ref: '#/components/schemas/Reference'
        claim:
          description: >-
            The business identifier for the instance of the adjudication
            request: claim predetermination or preauthorization.
          $ref: '#/components/schemas/Reference'
        claimResponse:
          description: >-
            The business identifier for the instance of the adjudication
            response: claim, predetermination or preauthorization response.
          $ref: '#/components/schemas/Reference'
        outcome:
          description: >-
            The outcome of the claim, predetermination, or preauthorization
            processing.
          $ref: '#/components/schemas/code'
        _outcome:
          $ref: '#/components/schemas/Element'
        disposition:
          $ref: '#/components/schemas/string'
        _disposition:
          $ref: '#/components/schemas/Element'
        preAuthRef:
          description: >-
            Reference from the Insurer which is used in later communications
            which refers to this adjudication.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _preAuthRef:
          description: Extensions for preAuthRef
          items:
            $ref: '#/components/schemas/Element'
          type: array
        preAuthRefPeriod:
          description: >-
            The timeframe during which the supplied preauthorization reference
            may be quoted on claims to obtain the adjudication as provided.
          items:
            $ref: '#/components/schemas/Period'
          type: array
        careTeam:
          description: The members of the team who provided the products and services.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_CareTeam'
          type: array
        supportingInfo:
          description: >-
            Additional information codes regarding exceptions, special
            considerations, the condition, situation, prior or concurrent
            issues.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_SupportingInfo'
          type: array
        diagnosis:
          description: Information about diagnoses relevant to the claim items.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Diagnosis'
          type: array
        procedure:
          description: >-
            Procedures performed on the patient relevant to the billing items
            with the claim.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Procedure'
          type: array
        precedence:
          description: >-
            This indicates the relative order of a series of EOBs related to
            different coverages for the same suite of services.
          $ref: '#/components/schemas/positiveInt'
        _precedence:
          $ref: '#/components/schemas/Element'
        insurance:
          description: >-
            Financial instruments for reimbursement for the health care products
            and services specified on the claim.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Insurance'
          type: array
        accident:
          description: >-
            Details of a accident which resulted in injuries which required the
            products and services listed in the claim.
          $ref: '#/components/schemas/ExplanationOfBenefit_Accident'
        item:
          description: >-
            A claim line. Either a simple (a product or service) or a 'group' of
            details which can also be a simple items or groups of sub-details.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Item'
          type: array
        addItem:
          description: >-
            The first-tier service adjudications for payor added product or
            service lines.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_AddItem'
          type: array
        adjudication:
          description: >-
            The adjudication results which are presented at the header level
            rather than at the line-item or add-item levels.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
        total:
          description: Categorized monetary totals for the adjudication.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Total'
          type: array
        payment:
          $ref: '#/components/schemas/ExplanationOfBenefit_Payment'
        formCode:
          $ref: '#/components/schemas/CodeableConcept'
        form:
          description: >-
            The actual form, by reference or inclusion, for printing the content
            or an EOB.
          $ref: '#/components/schemas/Attachment'
        processNote:
          description: >-
            A note that describes or explains adjudication results in a human
            readable form.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_ProcessNote'
          type: array
        benefitPeriod:
          $ref: '#/components/schemas/Period'
        benefitBalance:
          description: Balance by Benefit Category.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_BenefitBalance'
          type: array
      additionalProperties: false
      required:
        - insurance
        - provider
        - patient
        - insurer
        - type
        - resourceType
    ExplanationOfBenefit_Related:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        claim:
          $ref: '#/components/schemas/Reference'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        reference:
          description: >-
            An alternate organizational reference to the case or file to which
            this particular claim pertains.
          $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    ExplanationOfBenefit_Payee:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        party:
          description: >-
            Reference to the individual or organization to whom any payment will
            be made.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    ExplanationOfBenefit_CareTeam:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        provider:
          $ref: '#/components/schemas/Reference'
        responsible:
          description: >-
            The party who is billing and/or responsible for the claimed products
            or services.
          $ref: '#/components/schemas/boolean'
        _responsible:
          $ref: '#/components/schemas/Element'
        role:
          description: >-
            The lead, assisting or supervising practitioner and their discipline
            if a multidisciplinary team.
          $ref: '#/components/schemas/CodeableConcept'
        qualification:
          description: >-
            The qualification of the practitioner which is applicable for this
            service.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - provider
    ExplanationOfBenefit_SupportingInfo:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            The general class of the information supplied: information;
            exception; accident, employment; onset, etc.
          $ref: '#/components/schemas/CodeableConcept'
        code:
          description: >-
            System and code pertaining to the specific information regarding
            special conditions relating to the setting, treatment or patient
            for which care is sought.
          $ref: '#/components/schemas/CodeableConcept'
        timingDate:
          description: The date when or period to which this information refers.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _timingDate:
          $ref: '#/components/schemas/Element'
        timingPeriod:
          $ref: '#/components/schemas/Period'
        valueBoolean:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueString:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueQuantity:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Quantity'
        valueAttachment:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Attachment'
        valueReference:
          description: >-
            Additional data or information such as resources, documents, images
            etc. including references to the data or the actual inclusion of the
            data.
          $ref: '#/components/schemas/Reference'
        reason:
          description: >-
            Provides the reason in the situation where a reason code is required
            in addition to the content.
          $ref: '#/components/schemas/Coding'
      additionalProperties: false
      required:
        - category
    ExplanationOfBenefit_Diagnosis:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        diagnosisCodeableConcept:
          description: >-
            The nature of illness or problem in a coded form or as a reference
            to an external defined Condition.
          $ref: '#/components/schemas/CodeableConcept'
        diagnosisReference:
          description: >-
            The nature of illness or problem in a coded form or as a reference
            to an external defined Condition.
          $ref: '#/components/schemas/Reference'
        type:
          description: When the condition was observed or the relative ranking.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        onAdmission:
          description: >-
            Indication of whether the diagnosis was present on admission to a
            facility.
          $ref: '#/components/schemas/CodeableConcept'
        packageCode:
          description: >-
            A package billing code or bundle code used to group products and
            services to a particular health condition (such as heart attack)
            which is based on a predetermined grouping code system.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ExplanationOfBenefit_Procedure:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        type:
          description: When the condition was observed or the relative ranking.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        procedureCodeableConcept:
          description: >-
            The code or reference to a Procedure resource which identifies the
            clinical intervention performed.
          $ref: '#/components/schemas/CodeableConcept'
        procedureReference:
          description: >-
            The code or reference to a Procedure resource which identifies the
            clinical intervention performed.
          $ref: '#/components/schemas/Reference'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    ExplanationOfBenefit_Insurance:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        focal:
          description: >-
            A flag to indicate that this Coverage is to be used for adjudication
            of this claim when set to true.
          $ref: '#/components/schemas/boolean'
        _focal:
          $ref: '#/components/schemas/Element'
        coverage:
          description: >-
            Reference to the insurance card level information contained in the
            Coverage resource. The coverage issuing insurer will use these
            details to locate the patient's actual coverage within the insurer's
            information system.
          $ref: '#/components/schemas/Reference'
        preAuthRef:
          description: >-
            Reference numbers previously provided by the insurer to the provider
            to be quoted on subsequent claims containing services or products
            related to the prior authorization.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _preAuthRef:
          description: Extensions for preAuthRef
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
      required:
        - coverage
    ExplanationOfBenefit_Accident:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        date:
          description: >-
            Date of an accident event  related to the products and services
            contained in the claim.
          $ref: '#/components/schemas/date'
        _date:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type or context of the accident event for the purposes of
            selection of potential insurance coverages and determination of
            coordination between insurers.
          $ref: '#/components/schemas/CodeableConcept'
        locationAddress:
          $ref: '#/components/schemas/Address'
        locationReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    ExplanationOfBenefit_Item:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        careTeamSequence:
          description: Care team members related to this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _careTeamSequence:
          description: Extensions for careTeamSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        diagnosisSequence:
          description: Diagnoses applicable for this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _diagnosisSequence:
          description: Extensions for diagnosisSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        procedureSequence:
          description: Procedures applicable for this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _procedureSequence:
          description: Extensions for procedureSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        informationSequence:
          description: >-
            Exceptions, special conditions and supporting information applicable
            for this service or product.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _informationSequence:
          description: Extensions for informationSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        revenue:
          description: >-
            The type of revenue or cost center providing the product and/or
            service.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        servicedDate:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _servicedDate:
          $ref: '#/components/schemas/Element'
        servicedPeriod:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          $ref: '#/components/schemas/Period'
        locationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        locationAddress:
          $ref: '#/components/schemas/Address'
        locationReference:
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        subSite:
          description: >-
            A region or surface of the bodySite, e.g. limb region or tooth
            surface(s).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        encounter:
          description: >-
            A billed item may include goods or services provided in multiple
            encounters.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: >-
            If this item is a group then the values here are a summary of the
            adjudication of the detail items. If this item is a simple product
            or service then this is the result of the adjudication of this item.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
        detail:
          description: Second-tier of goods and services.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Detail'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ExplanationOfBenefit_Adjudication:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            A code to indicate the information type of this adjudication record.
            Information types may include: the value submitted, maximum values
            or percentages allowed or payable under the plan, amounts that the
            patient is responsible for in-aggregate or pertaining to this item,
            amounts paid by other coverages, and the benefit payable for this
            item.
          $ref: '#/components/schemas/CodeableConcept'
        reason:
          description: >-
            A code supporting the understanding of the adjudication result and
            explaining variance from expected amount.
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          $ref: '#/components/schemas/Money'
        value:
          description: >-
            A non-monetary value associated with the category. Mutually
            exclusive to the amount element above.
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - category
    ExplanationOfBenefit_Detail:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          description: >-
            A claim detail line. Either a simple (a product or service) or a
            'group' of sub-details which are simple items.
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        revenue:
          description: >-
            The type of revenue or cost center providing the product and/or
            service.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
        subDetail:
          description: Third-tier of goods and services.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_SubDetail'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ExplanationOfBenefit_SubDetail:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          description: >-
            A claim detail line. Either a simple (a product or service) or a
            'group' of sub-details which are simple items.
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        revenue:
          description: >-
            The type of revenue or cost center providing the product and/or
            service.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        udi:
          description: Unique Device Identifiers associated with this line item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ExplanationOfBenefit_AddItem:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemSequence:
          description: Claim items which this service line is intended to replace.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _itemSequence:
          description: Extensions for itemSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        detailSequence:
          description: >-
            The sequence number of the details within the claim item which this
            line is intended to replace.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _detailSequence:
          description: Extensions for detailSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        subDetailSequence:
          description: >-
            The sequence number of the sub-details woithin the details within
            the claim item which this line is intended to replace.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _subDetailSequence:
          description: Extensions for subDetailSequence
          items:
            $ref: '#/components/schemas/Element'
          type: array
        provider:
          description: >-
            The providers who are authorized for the services rendered to the
            patient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        programCode:
          description: Identifies the program under which this may be recovered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        servicedDate:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _servicedDate:
          $ref: '#/components/schemas/Element'
        servicedPeriod:
          description: >-
            The date or dates when the service or product was supplied,
            performed or completed.
          $ref: '#/components/schemas/Period'
        locationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        locationAddress:
          $ref: '#/components/schemas/Address'
        locationReference:
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        subSite:
          description: >-
            A region or surface of the bodySite, e.g. limb region or tooth
            surface(s).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
        detail:
          description: The second-tier service adjudications for payor added services.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Detail1'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ExplanationOfBenefit_Detail1:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
        subDetail:
          description: The third-tier service adjudications for payor added services.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_SubDetail1'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ExplanationOfBenefit_SubDetail1:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        productOrService:
          description: >-
            When the value is a group code then this item collects a set of
            related claim details, otherwise this contains the product, service,
            drug or other billing code for the item.
          $ref: '#/components/schemas/CodeableConcept'
        modifier:
          description: >-
            Item typification or modifiers codes to convey additional context
            for the product or service.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        unitPrice:
          description: >-
            If the item is not a group then this is the fee for the product or
            service, otherwise this is the total of the fees for the details of
            the group.
          $ref: '#/components/schemas/Money'
        factor:
          description: >-
            A real number that represents a multiplier used in determining the
            overall value of services delivered and/or goods received. The
            concept of a Factor allows for a discount or surcharge multiplier to
            be applied to a monetary amount.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        net:
          description: >-
            The quantity times the unit price for an additional service or
            product or charge.
          $ref: '#/components/schemas/Money'
        noteNumber:
          description: >-
            The numbers associated with notes below which apply to the
            adjudication of this item.
          items:
            $ref: '#/components/schemas/positiveInt'
          type: array
        _noteNumber:
          description: Extensions for noteNumber
          items:
            $ref: '#/components/schemas/Element'
          type: array
        adjudication:
          description: The adjudication results.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Adjudication'
          type: array
      additionalProperties: false
      required:
        - productOrService
    ExplanationOfBenefit_Total:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            A code to indicate the information type of this adjudication record.
            Information types may include: the value submitted, maximum values
            or percentages allowed or payable under the plan, amounts that the
            patient is responsible for in aggregate or pertaining to this item,
            amounts paid by other coverages, and the benefit payable for this
            item.
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - amount
        - category
    ExplanationOfBenefit_Payment:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Whether this represents partial or complete payment of the benefits
            payable.
          $ref: '#/components/schemas/CodeableConcept'
        adjustment:
          description: >-
            Total amount of all adjustments to this payment included in this
            transaction which are not related to this claim's adjudication.
          $ref: '#/components/schemas/Money'
        adjustmentReason:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          description: >-
            Estimated date the payment will be issued or the actual issue date
            of payment.
          $ref: '#/components/schemas/date'
        _date:
          $ref: '#/components/schemas/Element'
        amount:
          $ref: '#/components/schemas/Money'
        identifier:
          $ref: '#/components/schemas/Identifier'
      additionalProperties: false
    ExplanationOfBenefit_ProcessNote:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        number:
          $ref: '#/components/schemas/positiveInt'
        _number:
          $ref: '#/components/schemas/Element'
        type:
          description: The business purpose of the note text.
          enum:
            - display
            - print
            - printoper
        _type:
          $ref: '#/components/schemas/Element'
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ExplanationOfBenefit_BenefitBalance:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            Code to identify the general type of benefits under which products
            and services are provided.
          $ref: '#/components/schemas/CodeableConcept'
        excluded:
          description: >-
            True if the indicated class of service is excluded from the plan,
            missing or False indicates the product or service is included in the
            coverage.
          $ref: '#/components/schemas/boolean'
        _excluded:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        network:
          description: >-
            Is a flag to indicate whether the benefits refer to in-network
            providers or out-of-network providers.
          $ref: '#/components/schemas/CodeableConcept'
        unit:
          $ref: '#/components/schemas/CodeableConcept'
        term:
          description: >-
            The term or period of the values such as 'maximum lifetime benefit'
            or 'maximum annual visits'.
          $ref: '#/components/schemas/CodeableConcept'
        financial:
          description: Benefits Used to date.
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit_Financial'
          type: array
      additionalProperties: false
      required:
        - category
    ExplanationOfBenefit_Financial:
      description: >-
        This resource provides: the claim details; adjudication details from the
        processing of a Claim; and optionally account balance information, for
        informing the subscriber of the benefits provided.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        allowedUnsignedInt:
          description: The quantity of the benefit which is permitted under the coverage.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _allowedUnsignedInt:
          $ref: '#/components/schemas/Element'
        allowedString:
          description: The quantity of the benefit which is permitted under the coverage.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _allowedString:
          $ref: '#/components/schemas/Element'
        allowedMoney:
          $ref: '#/components/schemas/Money'
        usedUnsignedInt:
          description: The quantity of the benefit which have been consumed to date.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _usedUnsignedInt:
          $ref: '#/components/schemas/Element'
        usedMoney:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - type
    FamilyMemberHistory:
      description: >-
        Significant health conditions for a person related to the patient
        relevant in the context of care for the patient.
      properties:
        resourceType:
          description: This is a FamilyMemberHistory resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this family member history by the
            performer or other systems which remain constant as the resource is
            updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined protocol, guideline, orderset or
            other definition that is adhered to in whole or in part by this
            FamilyMemberHistory.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this FamilyMemberHistory.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        status:
          description: >-
            A code specifying the status of the record of the family history of
            a specific family member.
          enum:
            - partial
            - completed
            - entered-in-error
            - health-unknown
        _status:
          $ref: '#/components/schemas/Element'
        dataAbsentReason:
          $ref: '#/components/schemas/CodeableConcept'
        patient:
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date (and possibly time) when the family member history was
            recorded or last updated.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            This will either be a name or a description; e.g. "Aunt Susan", "my
            cousin with the red hair".
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        relationship:
          description: >-
            The type of relationship this person has to the patient (father,
            mother, brother etc.).
          $ref: '#/components/schemas/CodeableConcept'
        sex:
          $ref: '#/components/schemas/CodeableConcept'
        bornPeriod:
          $ref: '#/components/schemas/Period'
        bornDate:
          description: The actual or approximate date of birth of the relative.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _bornDate:
          $ref: '#/components/schemas/Element'
        bornString:
          description: The actual or approximate date of birth of the relative.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _bornString:
          $ref: '#/components/schemas/Element'
        ageAge:
          description: >-
            The age of the relative at the time the family member history is
            recorded.
          $ref: '#/components/schemas/Age'
        ageRange:
          description: >-
            The age of the relative at the time the family member history is
            recorded.
          $ref: '#/components/schemas/Range'
        ageString:
          description: >-
            The age of the relative at the time the family member history is
            recorded.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _ageString:
          $ref: '#/components/schemas/Element'
        estimatedAge:
          description: >-
            If true, indicates that the age value specified is an estimated
            value.
          $ref: '#/components/schemas/boolean'
        _estimatedAge:
          $ref: '#/components/schemas/Element'
        deceasedBoolean:
          description: >-
            Deceased flag or the actual or approximate age of the relative at
            the time of death for the family member history record.
          pattern: ^true|false$
          type: boolean
        _deceasedBoolean:
          $ref: '#/components/schemas/Element'
        deceasedAge:
          description: >-
            Deceased flag or the actual or approximate age of the relative at
            the time of death for the family member history record.
          $ref: '#/components/schemas/Age'
        deceasedRange:
          description: >-
            Deceased flag or the actual or approximate age of the relative at
            the time of death for the family member history record.
          $ref: '#/components/schemas/Range'
        deceasedDate:
          description: >-
            Deceased flag or the actual or approximate age of the relative at
            the time of death for the family member history record.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _deceasedDate:
          $ref: '#/components/schemas/Element'
        deceasedString:
          description: >-
            Deceased flag or the actual or approximate age of the relative at
            the time of death for the family member history record.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _deceasedString:
          $ref: '#/components/schemas/Element'
        reasonCode:
          description: >-
            Describes why the family member history occurred in coded or textual
            form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates a Condition, Observation, AllergyIntolerance, or
            QuestionnaireResponse that justifies this family member history
            event.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            This property allows a non condition-specific note to the made about
            the related person. Ideally, the note would be in the condition
            property, but this is not always possible.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        condition:
          description: >-
            The significant Conditions (or condition) that the family member
            had. This is a repeating section to allow a system to represent more
            than one condition per resource, though there is nothing stopping
            multiple resources - one per condition.
          items:
            $ref: '#/components/schemas/FamilyMemberHistory_Condition'
          type: array
      additionalProperties: false
      required:
        - patient
        - relationship
        - resourceType
    FamilyMemberHistory_Condition:
      description: >-
        Significant health conditions for a person related to the patient
        relevant in the context of care for the patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            The actual condition specified. Could be a coded condition (like MI
            or Diabetes) or a less specific string like 'cancer' depending on
            how much is known about the condition and the capabilities of the
            creating system.
          $ref: '#/components/schemas/CodeableConcept'
        outcome:
          description: >-
            Indicates what happened following the condition.  If the condition
            resulted in death, deceased date is captured on the relation.
          $ref: '#/components/schemas/CodeableConcept'
        contributedToDeath:
          description: >-
            This condition contributed to the cause of death of the related
            person. If contributedToDeath is not populated, then it is unknown.
          $ref: '#/components/schemas/boolean'
        _contributedToDeath:
          $ref: '#/components/schemas/Element'
        onsetAge:
          description: >-
            Either the age of onset, range of approximate age or descriptive
            string can be recorded.  For conditions with multiple occurrences,
            this describes the first known occurrence.
          $ref: '#/components/schemas/Age'
        onsetRange:
          description: >-
            Either the age of onset, range of approximate age or descriptive
            string can be recorded.  For conditions with multiple occurrences,
            this describes the first known occurrence.
          $ref: '#/components/schemas/Range'
        onsetPeriod:
          description: >-
            Either the age of onset, range of approximate age or descriptive
            string can be recorded.  For conditions with multiple occurrences,
            this describes the first known occurrence.
          $ref: '#/components/schemas/Period'
        onsetString:
          description: >-
            Either the age of onset, range of approximate age or descriptive
            string can be recorded.  For conditions with multiple occurrences,
            this describes the first known occurrence.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _onsetString:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            An area where general notes can be placed about this specific
            condition.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - code
    Flag:
      description: >-
        Prospective warnings of potential issues when providing care to the
        patient.
      properties:
        resourceType:
          description: This is a Flag resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this flag by the performer or other
            systems which remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Supports basic workflow.
          enum:
            - active
            - inactive
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            Allows a flag to be divided into different categories like clinical,
            administrative etc. Intended to be used as a means of filtering
            which flags are displayed to particular user or in a given context.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        code:
          description: >-
            The coded value or textual component of the flag to display to the
            user.
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The patient, location, group, organization, or practitioner etc.
            this is about record this flag is associated with.
          $ref: '#/components/schemas/Reference'
        period:
          description: >-
            The period of time from the activation of the flag to inactivation
            of the flag. If the flag is active, the end of the period should be
            unspecified.
          $ref: '#/components/schemas/Period'
        encounter:
          $ref: '#/components/schemas/Reference'
        author:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
        - subject
        - resourceType
    Goal:
      description: >-
        Describes the intended objective(s) for a patient, group or organization
        care, for example, weight loss, restoring an activity of daily living,
        obtaining herd immunity via immunization, meeting a process improvement
        objective, etc.
      properties:
        resourceType:
          description: This is a Goal resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this goal by the performer or other
            systems which remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        lifecycleStatus:
          description: The state of the goal throughout its lifecycle.
          enum:
            - proposed
            - planned
            - accepted
            - active
            - on-hold
            - completed
            - cancelled
            - entered-in-error
            - rejected
        _lifecycleStatus:
          $ref: '#/components/schemas/Element'
        achievementStatus:
          description: >-
            Describes the progression, or lack thereof, towards the goal against
            the target.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: Indicates a category the goal falls within.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: >-
            Identifies the mutually agreed level of importance associated with
            reaching/sustaining the goal.
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            Human-readable and/or coded description of a specific desired
            objective of care, such as "control blood pressure" or "negotiate an
            obstacle course" or "dance with child at wedding".
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            Identifies the patient, group or organization for whom the goal is
            being established.
          $ref: '#/components/schemas/Reference'
        startDate:
          description: The date or event after which the goal should begin being pursued.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _startDate:
          $ref: '#/components/schemas/Element'
        startCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        target:
          description: Indicates what should be done by when.
          items:
            $ref: '#/components/schemas/Goal_Target'
          type: array
        statusDate:
          description: >-
            Identifies when the current status.  I.e. When initially created,
            when achieved, when cancelled, etc.
          $ref: '#/components/schemas/date'
        _statusDate:
          $ref: '#/components/schemas/Element'
        statusReason:
          $ref: '#/components/schemas/string'
        _statusReason:
          $ref: '#/components/schemas/Element'
        expressedBy:
          $ref: '#/components/schemas/Reference'
        addresses:
          description: >-
            The identified conditions and other health record elements that are
            intended to be addressed by the goal.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: Any comments related to the goal.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        outcomeCode:
          description: >-
            Identifies the change (or lack of change) at the point when the
            status of the goal is assessed.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        outcomeReference:
          description: Details of what's changed (or not changed).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - description
        - resourceType
    Goal_Target:
      description: >-
        Describes the intended objective(s) for a patient, group or organization
        care, for example, weight loss, restoring an activity of daily living,
        obtaining herd immunity via immunization, meeting a process improvement
        objective, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        measure:
          description: >-
            The parameter whose value is being tracked, e.g. body weight, blood
            pressure, or hemoglobin A1c level.
          $ref: '#/components/schemas/CodeableConcept'
        detailQuantity:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          $ref: '#/components/schemas/Quantity'
        detailRange:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          $ref: '#/components/schemas/Range'
        detailCodeableConcept:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          $ref: '#/components/schemas/CodeableConcept'
        detailString:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _detailString:
          $ref: '#/components/schemas/Element'
        detailBoolean:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          pattern: ^true|false$
          type: boolean
        _detailBoolean:
          $ref: '#/components/schemas/Element'
        detailInteger:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _detailInteger:
          $ref: '#/components/schemas/Element'
        detailRatio:
          description: >-
            The target value of the focus to be achieved to signify the
            fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any focus
            value at or below the high value. Similarly, if the high value is
            missing, it indicates that the goal is achieved at any focus value
            at or above the low value.
          $ref: '#/components/schemas/Ratio'
        dueDate:
          description: >-
            Indicates either the date or the duration after start by which the
            goal should be met.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _dueDate:
          $ref: '#/components/schemas/Element'
        dueDuration:
          description: >-
            Indicates either the date or the duration after start by which the
            goal should be met.
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    GraphDefinition:
      description: >-
        A formal computable definition of a graph of resources - that is, a
        coherent set of resources that form a graph by following references. The
        Graph Definition resource defines a set and makes rules about the set.
      properties:
        resourceType:
          description: This is a GraphDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this graph definition when
            it is referenced in a specification, model, design or an instance;
            also called its canonical identifier. This SHOULD be globally unique
            and SHOULD be a literal address at which at which an authoritative
            instance of this graph definition is (or will be) published. This
            URL can be the target of a canonical reference. It SHALL remain the
            same when the graph definition is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the graph
            definition when it is referenced in a specification, model, design
            or instance. This is an arbitrary value managed by the graph
            definition author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the graph definition. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this graph definition. Enables tracking the life-cycle
            of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this graph definition is authored
            for testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the graph definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the graph definition
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the graph
            definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the graph definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate graph definition instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the graph definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this graph definition is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        start:
          $ref: '#/components/schemas/code'
        _start:
          $ref: '#/components/schemas/Element'
        profile:
          $ref: '#/components/schemas/canonical'
        link:
          description: Links this graph makes rules about.
          items:
            $ref: '#/components/schemas/GraphDefinition_Link'
          type: array
      additionalProperties: false
      required:
        - resourceType
    GraphDefinition_Link:
      description: >-
        A formal computable definition of a graph of resources - that is, a
        coherent set of resources that form a graph by following references. The
        Graph Definition resource defines a set and makes rules about the set.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            A FHIR expression that identifies one of FHIR References to other
            resources.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        sliceName:
          $ref: '#/components/schemas/string'
        _sliceName:
          $ref: '#/components/schemas/Element'
        min:
          $ref: '#/components/schemas/integer'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            Information about why this link is of interest in this graph
            definition.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        target:
          description: Potential target for the link.
          items:
            $ref: '#/components/schemas/GraphDefinition_Target'
          type: array
      additionalProperties: false
    GraphDefinition_Target:
      description: >-
        A formal computable definition of a graph of resources - that is, a
        coherent set of resources that form a graph by following references. The
        Graph Definition resource defines a set and makes rules about the set.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        params:
          $ref: '#/components/schemas/string'
        _params:
          $ref: '#/components/schemas/Element'
        profile:
          $ref: '#/components/schemas/canonical'
        compartment:
          description: Compartment Consistency Rules.
          items:
            $ref: '#/components/schemas/GraphDefinition_Compartment'
          type: array
        link:
          description: Additional links from target resource.
          items:
            $ref: '#/components/schemas/GraphDefinition_Link'
          type: array
      additionalProperties: false
    GraphDefinition_Compartment:
      description: >-
        A formal computable definition of a graph of resources - that is, a
        coherent set of resources that form a graph by following references. The
        Graph Definition resource defines a set and makes rules about the set.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: >-
            Defines how the compartment rule is used - whether it it is used to
            test whether resources are subject to the rule, or whether it is a
            rule that must be followed.
          enum:
            - condition
            - requirement
        _use:
          $ref: '#/components/schemas/Element'
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        rule:
          description: identical | matching | different | no-rule | custom.
          enum:
            - identical
            - matching
            - different
            - custom
        _rule:
          $ref: '#/components/schemas/Element'
        expression:
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Group:
      description: >-
        Represents a defined collection of entities that may be discussed or
        acted upon collectively but which are not expected to act collectively,
        and are not formally or legally recognized; i.e. a collection of
        entities that isn't an Organization.
      properties:
        resourceType:
          description: This is a Group resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique business identifier for this group.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          description: >-
            Indicates whether the record for the group is available for use or
            is merely being retained for historical purposes.
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Identifies the broad classification of the kind of resources the
            group includes.
          enum:
            - person
            - animal
            - practitioner
            - device
            - medication
            - substance
        _type:
          $ref: '#/components/schemas/Element'
        actual:
          description: >-
            If true, indicates that the resource refers to a specific group of
            real individuals.  If false, the group defines a set of intended
            individuals.
          $ref: '#/components/schemas/boolean'
        _actual:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            Provides a specific type of resource the group includes; e.g. "cow",
            "syringe", etc.
          $ref: '#/components/schemas/CodeableConcept'
        name:
          description: >-
            A label assigned to the group for human identification and
            communication.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        quantity:
          description: >-
            A count of the number of resource instances that are part of the
            group.
          $ref: '#/components/schemas/unsignedInt'
        _quantity:
          $ref: '#/components/schemas/Element'
        managingEntity:
          description: >-
            Entity responsible for defining and maintaining Group
            characteristics and/or registered members.
          $ref: '#/components/schemas/Reference'
        characteristic:
          description: >-
            Identifies traits whose presence r absence is shared by members of
            the group.
          items:
            $ref: '#/components/schemas/Group_Characteristic'
          type: array
        member:
          description: Identifies the resource instances that are members of the group.
          items:
            $ref: '#/components/schemas/Group_Member'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Group_Characteristic:
      description: >-
        Represents a defined collection of entities that may be discussed or
        acted upon collectively but which are not expected to act collectively,
        and are not formally or legally recognized; i.e. a collection of
        entities that isn't an Organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        valueCodeableConcept:
          description: >-
            The value of the trait that holds (or does not hold - see 'exclude')
            for members of the group.
          $ref: '#/components/schemas/CodeableConcept'
        valueBoolean:
          description: >-
            The value of the trait that holds (or does not hold - see 'exclude')
            for members of the group.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueQuantity:
          description: >-
            The value of the trait that holds (or does not hold - see 'exclude')
            for members of the group.
          $ref: '#/components/schemas/Quantity'
        valueRange:
          description: >-
            The value of the trait that holds (or does not hold - see 'exclude')
            for members of the group.
          $ref: '#/components/schemas/Range'
        valueReference:
          description: >-
            The value of the trait that holds (or does not hold - see 'exclude')
            for members of the group.
          $ref: '#/components/schemas/Reference'
        exclude:
          description: >-
            If true, indicates the characteristic is one that is NOT held by
            members of the group.
          $ref: '#/components/schemas/boolean'
        _exclude:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The period over which the characteristic is tested; e.g. the patient
            had an operation during the month of June.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
      required:
        - code
    Group_Member:
      description: >-
        Represents a defined collection of entities that may be discussed or
        acted upon collectively but which are not expected to act collectively,
        and are not formally or legally recognized; i.e. a collection of
        entities that isn't an Organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        entity:
          description: >-
            A reference to the entity that is a member of the group. Must be
            consistent with Group.type. If the entity is another group, then the
            type must be the same.
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        inactive:
          description: >-
            A flag to indicate that the member is no longer in the group, but
            previously may have been a member.
          $ref: '#/components/schemas/boolean'
        _inactive:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - entity
    GuidanceResponse:
      description: >-
        A guidance response is the formal response to a guidance request,
        including any output parameters returned by the evaluation, as well as
        the description of any proposed actions to be taken.
      properties:
        resourceType:
          description: This is a GuidanceResponse resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        requestIdentifier:
          description: >-
            The identifier of the request associated with this response. If an
            identifier was given as part of the request, it will be reproduced
            here to enable the requester to more easily identify the response in
            a multi-request scenario.
          $ref: '#/components/schemas/Identifier'
        identifier:
          description: >-
            Allows a service to provide  unique, business identifiers for the
            response.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        moduleUri:
          description: >-
            An identifier, CodeableConcept or canonical reference to the
            guidance that was requested.
          pattern: ^\S*$
          type: string
        _moduleUri:
          $ref: '#/components/schemas/Element'
        moduleCanonical:
          description: >-
            An identifier, CodeableConcept or canonical reference to the
            guidance that was requested.
          pattern: ^\S*$
          type: string
        _moduleCanonical:
          $ref: '#/components/schemas/Element'
        moduleCodeableConcept:
          description: >-
            An identifier, CodeableConcept or canonical reference to the
            guidance that was requested.
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: >-
            The status of the response. If the evaluation is completed
            successfully, the status will indicate success. However, in order to
            complete the evaluation, the engine may require more information. In
            this case, the status will be data-required, and the response will
            contain a description of the additional required information. If the
            evaluation completed successfully, but the engine determines that a
            potentially more accurate response could be provided if more data
            was available, the status will be data-requested, and the response
            will contain a description of the additional requested information.
          enum:
            - success
            - data-requested
            - data-required
            - in-progress
            - failure
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The encounter during which this response was created or to which the
            creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        occurrenceDateTime:
          $ref: '#/components/schemas/dateTime'
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        performer:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: >-
            Describes the reason for the guidance response in coded or textual
            form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates the reason the request was initiated. This is typically
            provided as a parameter to the evaluation and echoed by the service,
            although for some use cases, such as subscription- or event-based
            scenarios, it may provide an indication of the cause for the
            response.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Provides a mechanism to communicate additional information about the
            response.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        evaluationMessage:
          description: >-
            Messages resulting from the evaluation of the artifact or artifacts.
            As part of evaluating the request, the engine may produce
            informational or warning messages. These messages will be provided
            by this element.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        outputParameters:
          description: >-
            The output parameters of the evaluation, if any. Many modules will
            result in the return of specific resources such as procedure or
            communication requests that are returned as part of the operation
            result. However, modules may define specific outputs that would be
            returned as the result of the evaluation, and these would be
            returned in this element.
          $ref: '#/components/schemas/Reference'
        result:
          $ref: '#/components/schemas/Reference'
        dataRequirement:
          description: >-
            If the evaluation could not be completed due to lack of information,
            or additional information would potentially result in a more
            accurate response, this element will a description of the data
            required in order to proceed with the evaluation. A subsequent
            request to the service should include this data.
          items:
            $ref: '#/components/schemas/DataRequirement'
          type: array
      additionalProperties: false
      required:
        - resourceType
    HealthcareService:
      description: The details of a healthcare service available at a location.
      properties:
        resourceType:
          description: This is a HealthcareService resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: External identifiers for this item.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          description: >-
            This flag is used to mark the record to not be used. This is not
            used when a center is closed for maintenance, or for holidays, the
            notAvailable period is to be used for this.
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        providedBy:
          $ref: '#/components/schemas/Reference'
        category:
          description: >-
            Identifies the broad category of service being performed or
            delivered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        type:
          description: The specific type of service that may be delivered or performed.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialty:
          description: >-
            Collection of specialties handled by the service site. This is more
            of a medical term.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        location:
          description: The location(s) where this healthcare service may be provided.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        name:
          description: >-
            Further description of the service as it would be presented to a
            consumer while searching.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            Any additional description of the service and/or any specific issues
            not covered by the other attributes, which can be displayed as
            further detail under the serviceName.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        extraDetails:
          description: >-
            Extra details about the service that can't be placed in the other
            fields.
          $ref: '#/components/schemas/markdown'
        _extraDetails:
          $ref: '#/components/schemas/Element'
        photo:
          description: >-
            If there is a photo/symbol associated with this HealthcareService,
            it may be included here to facilitate quick identification of the
            service in a list.
          $ref: '#/components/schemas/Attachment'
        telecom:
          description: List of contacts related to this specific healthcare service.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        coverageArea:
          description: >-
            The location(s) that this service is available to (not where the
            service is provided).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        serviceProvisionCode:
          description: >-
            The code(s) that detail the conditions under which the healthcare
            service is available/offered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        eligibility:
          description: >-
            Does this service have specific eligibility requirements that need
            to be met in order to use the service?
          items:
            $ref: '#/components/schemas/HealthcareService_Eligibility'
          type: array
        program:
          description: Programs that this service is applicable to.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        characteristic:
          description: Collection of characteristics (attributes).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        communication:
          description: >-
            Some services are specifically made available in multiple languages,
            this property permits a directory to declare the languages this is
            offered in. Typically this is only provided where a service operates
            in communities with mixed languages used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        referralMethod:
          description: >-
            Ways that the service accepts referrals, if this is not provided
            then it is implied that no referral is required.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        appointmentRequired:
          description: >-
            Indicates whether or not a prospective consumer will require an
            appointment for a particular service at a site to be provided by the
            Organization. Indicates if an appointment is required for access to
            this service.
          $ref: '#/components/schemas/boolean'
        _appointmentRequired:
          $ref: '#/components/schemas/Element'
        availableTime:
          description: A collection of times that the Service Site is available.
          items:
            $ref: '#/components/schemas/HealthcareService_AvailableTime'
          type: array
        notAvailable:
          description: >-
            The HealthcareService is not available during this period of time
            due to the provided reason.
          items:
            $ref: '#/components/schemas/HealthcareService_NotAvailable'
          type: array
        availabilityExceptions:
          description: >-
            A description of site availability exceptions, e.g. public holiday
            availability. Succinctly describing all possible exceptions to
            normal site availability as details in the available Times and not
            available Times.
          $ref: '#/components/schemas/string'
        _availabilityExceptions:
          $ref: '#/components/schemas/Element'
        endpoint:
          description: >-
            Technical endpoints providing access to services operated for the
            specific healthcare services defined at this resource.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    HealthcareService_Eligibility:
      description: The details of a healthcare service available at a location.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        comment:
          $ref: '#/components/schemas/markdown'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    HealthcareService_AvailableTime:
      description: The details of a healthcare service available at a location.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        daysOfWeek:
          description: >-
            Indicates which days of the week are available between the start and
            end Times.
          items:
            enum:
              - mon
              - tue
              - wed
              - thu
              - fri
              - sat
              - sun
          type: array
        _daysOfWeek:
          description: Extensions for daysOfWeek
          items:
            $ref: '#/components/schemas/Element'
          type: array
        allDay:
          description: >-
            Is this always available? (hence times are irrelevant) e.g. 24 hour
            service.
          $ref: '#/components/schemas/boolean'
        _allDay:
          $ref: '#/components/schemas/Element'
        availableStartTime:
          description: >-
            The opening time of day. Note: If the AllDay flag is set, then this
            time is ignored.
          $ref: '#/components/schemas/time'
        _availableStartTime:
          $ref: '#/components/schemas/Element'
        availableEndTime:
          description: >-
            The closing time of day. Note: If the AllDay flag is set, then this
            time is ignored.
          $ref: '#/components/schemas/time'
        _availableEndTime:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    HealthcareService_NotAvailable:
      description: The details of a healthcare service available at a location.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            The reason that can be presented to the user as to why this time is
            not available.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        during:
          description: >-
            Service is not available (seasonally or for a public holiday) from
            this date.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    ImagingStudy:
      description: >-
        Representation of the content produced in a DICOM imaging study. A study
        comprises a set of series, each of which includes a set of
        Service-Object Pair Instances (SOP Instances - images or other data)
        acquired or produced in a common context.  A series is of only one
        modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple
        series of different modalities.
      properties:
        resourceType:
          description: This is a ImagingStudy resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers for the ImagingStudy such as DICOM Study Instance UID,
            and Accession Number.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The current state of the ImagingStudy.
          enum:
            - registered
            - available
            - cancelled
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        modality:
          description: >-
            A list of all the series.modality values that are actual acquisition
            modalities, i.e. those in the DICOM Context Group 29 (value set OID
            1.2.840.10008.6.1.19).
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The healthcare event (e.g. a patient and healthcare provider
            interaction) during which this ImagingStudy is made.
          $ref: '#/components/schemas/Reference'
        started:
          $ref: '#/components/schemas/dateTime'
        _started:
          $ref: '#/components/schemas/Element'
        basedOn:
          description: >-
            A list of the diagnostic requests that resulted in this imaging
            study being performed.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        referrer:
          $ref: '#/components/schemas/Reference'
        interpreter:
          description: Who read the study and interpreted the images or other content.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        endpoint:
          description: >-
            The network service providing access (e.g., query, view, or
            retrieval) for the study. See implementation notes for information
            about using DICOM endpoints. A study-level endpoint applies to each
            series in the study, unless overridden by a series-level endpoint
            with the same Endpoint.connectionType.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        numberOfSeries:
          description: >-
            Number of Series in the Study. This value given may be larger than
            the number of series elements this Resource contains due to resource
            availability, security, or other factors. This element should be
            present if any series elements are present.
          $ref: '#/components/schemas/unsignedInt'
        _numberOfSeries:
          $ref: '#/components/schemas/Element'
        numberOfInstances:
          description: >-
            Number of SOP Instances in Study. This value given may be larger
            than the number of instance elements this resource contains due to
            resource availability, security, or other factors. This element
            should be present if any instance elements are present.
          $ref: '#/components/schemas/unsignedInt'
        _numberOfInstances:
          $ref: '#/components/schemas/Element'
        procedureReference:
          $ref: '#/components/schemas/Reference'
        procedureCode:
          description: The code for the performed procedure type.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        location:
          description: >-
            The principal physical location where the ImagingStudy was
            performed.
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: >-
            Description of clinical condition indicating why the ImagingStudy
            was requested.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Indicates another resource whose existence justifies this Study.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Per the recommended DICOM mapping, this element is derived from the
            Study Description attribute (0008,1030). Observations or findings
            about the imaging study should be recorded in another resource, e.g.
            Observation, and not in this element.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        description:
          description: >-
            The Imaging Manager description of the study. Institution-generated
            description or classification of the Study (component) performed.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        series:
          description: Each study has one or more series of images or other content.
          items:
            $ref: '#/components/schemas/ImagingStudy_Series'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    ImagingStudy_Series:
      description: >-
        Representation of the content produced in a DICOM imaging study. A study
        comprises a set of series, each of which includes a set of
        Service-Object Pair Instances (SOP Instances - images or other data)
        acquired or produced in a common context.  A series is of only one
        modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple
        series of different modalities.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        uid:
          $ref: '#/components/schemas/id'
        _uid:
          $ref: '#/components/schemas/Element'
        number:
          $ref: '#/components/schemas/unsignedInt'
        _number:
          $ref: '#/components/schemas/Element'
        modality:
          $ref: '#/components/schemas/Coding'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        numberOfInstances:
          description: >-
            Number of SOP Instances in the Study. The value given may be larger
            than the number of instance elements this resource contains due to
            resource availability, security, or other factors. This element
            should be present if any instance elements are present.
          $ref: '#/components/schemas/unsignedInt'
        _numberOfInstances:
          $ref: '#/components/schemas/Element'
        endpoint:
          description: >-
            The network service providing access (e.g., query, view, or
            retrieval) for this series. See implementation notes for information
            about using DICOM endpoints. A series-level endpoint, if present,
            has precedence over a study-level endpoint with the same
            Endpoint.connectionType.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        bodySite:
          description: >-
            The anatomic structures examined. See DICOM Part 16 Annex L
            (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html)
            for DICOM to SNOMED-CT mappings. The bodySite may indicate the
            laterality of body part imaged; if so, it shall be consistent with
            any content of ImagingStudy.series.laterality.
          $ref: '#/components/schemas/Coding'
        laterality:
          description: >-
            The laterality of the (possibly paired) anatomic structures
            examined. E.g., the left knee, both lungs, or unpaired abdomen. If
            present, shall be consistent with any laterality information
            indicated in ImagingStudy.series.bodySite.
          $ref: '#/components/schemas/Coding'
        specimen:
          description: 'The specimen imaged, e.g., for whole slide imaging of a biopsy.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        started:
          $ref: '#/components/schemas/dateTime'
        _started:
          $ref: '#/components/schemas/Element'
        performer:
          description: >-
            Indicates who or what performed the series and how they were
            involved.
          items:
            $ref: '#/components/schemas/ImagingStudy_Performer'
          type: array
        instance:
          description: >-
            A single SOP instance within the series, e.g. an image, or
            presentation state.
          items:
            $ref: '#/components/schemas/ImagingStudy_Instance'
          type: array
      additionalProperties: false
      required:
        - modality
    ImagingStudy_Performer:
      description: >-
        Representation of the content produced in a DICOM imaging study. A study
        comprises a set of series, each of which includes a set of
        Service-Object Pair Instances (SOP Instances - images or other data)
        acquired or produced in a common context.  A series is of only one
        modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple
        series of different modalities.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        function:
          description: >-
            Distinguishes the type of involvement of the performer in the
            series.
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    ImagingStudy_Instance:
      description: >-
        Representation of the content produced in a DICOM imaging study. A study
        comprises a set of series, each of which includes a set of
        Service-Object Pair Instances (SOP Instances - images or other data)
        acquired or produced in a common context.  A series is of only one
        modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple
        series of different modalities.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        uid:
          $ref: '#/components/schemas/id'
        _uid:
          $ref: '#/components/schemas/Element'
        sopClass:
          $ref: '#/components/schemas/Coding'
        number:
          $ref: '#/components/schemas/unsignedInt'
        _number:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - sopClass
    Immunization:
      description: >-
        Describes the event of a patient being administered a vaccine or a
        record of an immunization as reported by a patient, a clinician or
        another party.
      properties:
        resourceType:
          description: This is a Immunization resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this immunization record.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
        vaccineCode:
          $ref: '#/components/schemas/CodeableConcept'
        patient:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The visit or admission or other contact between patient and health
            care provider the immunization was performed as part of.
          $ref: '#/components/schemas/Reference'
        occurrenceDateTime:
          description: Date vaccine administered or was to be administered.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrenceString:
          description: Date vaccine administered or was to be administered.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _occurrenceString:
          $ref: '#/components/schemas/Element'
        recorded:
          description: >-
            The date the occurrence of the immunization was first captured in
            the record - potentially significantly after the occurrence of the
            event.
          $ref: '#/components/schemas/dateTime'
        _recorded:
          $ref: '#/components/schemas/Element'
        primarySource:
          description: >-
            An indication that the content of the record is based on information
            from the person who administered the vaccine. This reflects the
            context under which the data was originally recorded.
          $ref: '#/components/schemas/boolean'
        _primarySource:
          $ref: '#/components/schemas/Element'
        reportOrigin:
          description: >-
            The source of the data when the report of the immunization event is
            not based on information from the person who administered the
            vaccine.
          $ref: '#/components/schemas/CodeableConcept'
        location:
          description: >-
            The service delivery location where the vaccine administration
            occurred.
          $ref: '#/components/schemas/Reference'
        manufacturer:
          $ref: '#/components/schemas/Reference'
        lotNumber:
          $ref: '#/components/schemas/string'
        _lotNumber:
          $ref: '#/components/schemas/Element'
        expirationDate:
          $ref: '#/components/schemas/date'
        _expirationDate:
          $ref: '#/components/schemas/Element'
        site:
          $ref: '#/components/schemas/CodeableConcept'
        route:
          $ref: '#/components/schemas/CodeableConcept'
        doseQuantity:
          $ref: '#/components/schemas/Quantity'
        performer:
          description: Indicates who performed the immunization event.
          items:
            $ref: '#/components/schemas/Immunization_Performer'
          type: array
        note:
          description: >-
            Extra information about the immunization that is not conveyed by the
            other attributes.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        reasonCode:
          description: Reasons why the vaccine was administered.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Condition, Observation or DiagnosticReport that supports why the
            immunization was administered.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        isSubpotent:
          description: >-
            Indication if a dose is considered to be subpotent. By default, a
            dose should be considered to be potent.
          $ref: '#/components/schemas/boolean'
        _isSubpotent:
          $ref: '#/components/schemas/Element'
        subpotentReason:
          description: Reason why a dose is considered to be subpotent.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        education:
          description: >-
            Educational material presented to the patient (or guardian) at the
            time of vaccine administration.
          items:
            $ref: '#/components/schemas/Immunization_Education'
          type: array
        programEligibility:
          description: Indicates a patient's eligibility for a funding program.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        fundingSource:
          description: >-
            Indicates the source of the vaccine actually administered. This may
            be different than the patient eligibility (e.g. the patient may be
            eligible for a publically purchased vaccine but due to inventory
            issues, vaccine purchased with private funds was actually
            administered).
          $ref: '#/components/schemas/CodeableConcept'
        reaction:
          description: >-
            Categorical data indicating that an adverse event is associated in
            time to an immunization.
          items:
            $ref: '#/components/schemas/Immunization_Reaction'
          type: array
        protocolApplied:
          description: >-
            The protocol (set of recommendations) being followed by the provider
            who administered the dose.
          items:
            $ref: '#/components/schemas/Immunization_ProtocolApplied'
          type: array
      additionalProperties: false
      required:
        - patient
        - vaccineCode
        - resourceType
    Immunization_Performer:
      description: >-
        Describes the event of a patient being administered a vaccine or a
        record of an immunization as reported by a patient, a clinician or
        another party.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        function:
          description: >-
            Describes the type of performance (e.g. ordering provider,
            administering provider, etc.).
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    Immunization_Education:
      description: >-
        Describes the event of a patient being administered a vaccine or a
        record of an immunization as reported by a patient, a clinician or
        another party.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        documentType:
          $ref: '#/components/schemas/string'
        _documentType:
          $ref: '#/components/schemas/Element'
        reference:
          description: >-
            Reference pointer to the educational material given to the patient
            if the information was on line.
          $ref: '#/components/schemas/uri'
        _reference:
          $ref: '#/components/schemas/Element'
        publicationDate:
          $ref: '#/components/schemas/dateTime'
        _publicationDate:
          $ref: '#/components/schemas/Element'
        presentationDate:
          $ref: '#/components/schemas/dateTime'
        _presentationDate:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Immunization_Reaction:
      description: >-
        Describes the event of a patient being administered a vaccine or a
        record of an immunization as reported by a patient, a clinician or
        another party.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        detail:
          $ref: '#/components/schemas/Reference'
        reported:
          $ref: '#/components/schemas/boolean'
        _reported:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Immunization_ProtocolApplied:
      description: >-
        Describes the event of a patient being administered a vaccine or a
        record of an immunization as reported by a patient, a clinician or
        another party.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        series:
          description: >-
            One possible path to achieve presumed immunity against a disease -
            within the context of an authority.
          $ref: '#/components/schemas/string'
        _series:
          $ref: '#/components/schemas/Element'
        authority:
          description: >-
            Indicates the authority who published the protocol (e.g. ACIP) that
            is being followed.
          $ref: '#/components/schemas/Reference'
        targetDisease:
          description: >-
            The vaccine preventable disease the dose is being administered
            against.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        doseNumberPositiveInt:
          description: Nominal position in a series.
          pattern: '^[1-9][0-9]*$'
          type: number
        _doseNumberPositiveInt:
          $ref: '#/components/schemas/Element'
        doseNumberString:
          description: Nominal position in a series.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _doseNumberString:
          $ref: '#/components/schemas/Element'
        seriesDosesPositiveInt:
          description: The recommended number of doses to achieve immunity.
          pattern: '^[1-9][0-9]*$'
          type: number
        _seriesDosesPositiveInt:
          $ref: '#/components/schemas/Element'
        seriesDosesString:
          description: The recommended number of doses to achieve immunity.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _seriesDosesString:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ImmunizationEvaluation:
      description: >-
        Describes a comparison of an immunization event against published
        recommendations to determine if the administration is "valid" in
        relation to those  recommendations.
      properties:
        resourceType:
          description: This is a ImmunizationEvaluation resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this immunization evaluation record.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: >-
            Indicates the current status of the evaluation of the vaccination
            administration event.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        patient:
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date the evaluation of the vaccine administration event was
            performed.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        authority:
          $ref: '#/components/schemas/Reference'
        targetDisease:
          $ref: '#/components/schemas/CodeableConcept'
        immunizationEvent:
          $ref: '#/components/schemas/Reference'
        doseStatus:
          description: >-
            Indicates if the dose is valid or not valid with respect to the
            published recommendations.
          $ref: '#/components/schemas/CodeableConcept'
        doseStatusReason:
          description: >-
            Provides an explanation as to why the vaccine administration event
            is valid or not relative to the published recommendations.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        series:
          description: >-
            One possible path to achieve presumed immunity against a disease -
            within the context of an authority.
          $ref: '#/components/schemas/string'
        _series:
          $ref: '#/components/schemas/Element'
        doseNumberPositiveInt:
          description: Nominal position in a series.
          pattern: '^[1-9][0-9]*$'
          type: number
        _doseNumberPositiveInt:
          $ref: '#/components/schemas/Element'
        doseNumberString:
          description: Nominal position in a series.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _doseNumberString:
          $ref: '#/components/schemas/Element'
        seriesDosesPositiveInt:
          description: The recommended number of doses to achieve immunity.
          pattern: '^[1-9][0-9]*$'
          type: number
        _seriesDosesPositiveInt:
          $ref: '#/components/schemas/Element'
        seriesDosesString:
          description: The recommended number of doses to achieve immunity.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _seriesDosesString:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - doseStatus
        - patient
        - targetDisease
        - immunizationEvent
        - resourceType
    ImmunizationRecommendation:
      description: >-
        A patient's point-in-time set of recommendations (i.e. forecasting)
        according to a published schedule with optional supporting
        justification.
      properties:
        resourceType:
          description: This is a ImmunizationRecommendation resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            A unique identifier assigned to this particular recommendation
            record.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        patient:
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        authority:
          $ref: '#/components/schemas/Reference'
        recommendation:
          description: Vaccine administration recommendations.
          items:
            $ref: '#/components/schemas/ImmunizationRecommendation_Recommendation'
          type: array
      additionalProperties: false
      required:
        - patient
        - recommendation
        - resourceType
    ImmunizationRecommendation_Recommendation:
      description: >-
        A patient's point-in-time set of recommendations (i.e. forecasting)
        according to a published schedule with optional supporting
        justification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        vaccineCode:
          description: Vaccine(s) or vaccine group that pertain to the recommendation.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        targetDisease:
          $ref: '#/components/schemas/CodeableConcept'
        contraindicatedVaccineCode:
          description: Vaccine(s) which should not be used to fulfill the recommendation.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        forecastStatus:
          description: >-
            Indicates the patient status with respect to the path to immunity
            for the target disease.
          $ref: '#/components/schemas/CodeableConcept'
        forecastReason:
          description: The reason for the assigned forecast status.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        dateCriterion:
          description: >-
            Vaccine date recommendations.  For example, earliest date to
            administer, latest date to administer, etc.
          items:
            $ref: '#/components/schemas/ImmunizationRecommendation_DateCriterion'
          type: array
        description:
          description: >-
            Contains the description about the protocol under which the vaccine
            was administered.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        series:
          description: >-
            One possible path to achieve presumed immunity against a disease -
            within the context of an authority.
          $ref: '#/components/schemas/string'
        _series:
          $ref: '#/components/schemas/Element'
        doseNumberPositiveInt:
          description: >-
            Nominal position of the recommended dose in a series (e.g. dose 2 is
            the next recommended dose).
          pattern: '^[1-9][0-9]*$'
          type: number
        _doseNumberPositiveInt:
          $ref: '#/components/schemas/Element'
        doseNumberString:
          description: >-
            Nominal position of the recommended dose in a series (e.g. dose 2 is
            the next recommended dose).
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _doseNumberString:
          $ref: '#/components/schemas/Element'
        seriesDosesPositiveInt:
          description: The recommended number of doses to achieve immunity.
          pattern: '^[1-9][0-9]*$'
          type: number
        _seriesDosesPositiveInt:
          $ref: '#/components/schemas/Element'
        seriesDosesString:
          description: The recommended number of doses to achieve immunity.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _seriesDosesString:
          $ref: '#/components/schemas/Element'
        supportingImmunization:
          description: >-
            Immunization event history and/or evaluation that supports the
            status and recommendation.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        supportingPatientInformation:
          description: >-
            Patient Information that supports the status and recommendation.
            This includes patient observations, adverse reactions and
            allergy/intolerance information.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - forecastStatus
    ImmunizationRecommendation_DateCriterion:
      description: >-
        A patient's point-in-time set of recommendations (i.e. forecasting)
        according to a published schedule with optional supporting
        justification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            Date classification of recommendation.  For example, earliest date
            to give, latest date to give, etc.
          $ref: '#/components/schemas/CodeableConcept'
        value:
          $ref: '#/components/schemas/dateTime'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - code
    ImplementationGuide:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        resourceType:
          description: This is a ImplementationGuide resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this implementation guide
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this implementation guide is (or will be)
            published. This URL can be the target of a canonical reference. It
            SHALL remain the same when the implementation guide is stored on
            different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the
            implementation guide when it is referenced in a specification,
            model, design or instance. This is an arbitrary value managed by the
            implementation guide author and is not expected to be globally
            unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
            managed version is not available. There is also no expectation that
            versions can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the implementation guide. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the implementation
            guide.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this implementation guide. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this implementation guide is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the implementation guide was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the implementation
            guide changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            implementation guide.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the implementation guide
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate implementation guide
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the implementation guide is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the implementation guide and/or
            its contents. Copyright statements are generally legal restrictions
            on the use and publishing of the implementation guide.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        packageId:
          description: >-
            The NPM package name for this Implementation Guide, used in the NPM
            package distribution, which is the primary mechanism by which FHIR
            based tooling manages IG dependencies. This value must be globally
            unique, and should be assigned with care.
          $ref: '#/components/schemas/id'
        _packageId:
          $ref: '#/components/schemas/Element'
        license:
          description: >-
            The license that applies to this Implementation Guide, using an SPDX
            license code, or 'not-open-source'.
          enum:
            - not-open-source
            - 0BSD
            - AAL
            - Abstyles
            - Adobe-2006
            - Adobe-Glyph
            - ADSL
            - AFL-1.1
            - AFL-1.2
            - AFL-2.0
            - AFL-2.1
            - AFL-3.0
            - Afmparse
            - AGPL-1.0-only
            - AGPL-1.0-or-later
            - AGPL-3.0-only
            - AGPL-3.0-or-later
            - Aladdin
            - AMDPLPA
            - AML
            - AMPAS
            - ANTLR-PD
            - Apache-1.0
            - Apache-1.1
            - Apache-2.0
            - APAFML
            - APL-1.0
            - APSL-1.0
            - APSL-1.1
            - APSL-1.2
            - APSL-2.0
            - Artistic-1.0-cl8
            - Artistic-1.0-Perl
            - Artistic-1.0
            - Artistic-2.0
            - Bahyph
            - Barr
            - Beerware
            - BitTorrent-1.0
            - BitTorrent-1.1
            - Borceux
            - BSD-1-Clause
            - BSD-2-Clause-FreeBSD
            - BSD-2-Clause-NetBSD
            - BSD-2-Clause-Patent
            - BSD-2-Clause
            - BSD-3-Clause-Attribution
            - BSD-3-Clause-Clear
            - BSD-3-Clause-LBNL
            - BSD-3-Clause-No-Nuclear-License-2014
            - BSD-3-Clause-No-Nuclear-License
            - BSD-3-Clause-No-Nuclear-Warranty
            - BSD-3-Clause
            - BSD-4-Clause-UC
            - BSD-4-Clause
            - BSD-Protection
            - BSD-Source-Code
            - BSL-1.0
            - bzip2-1.0.5
            - bzip2-1.0.6
            - Caldera
            - CATOSL-1.1
            - CC-BY-1.0
            - CC-BY-2.0
            - CC-BY-2.5
            - CC-BY-3.0
            - CC-BY-4.0
            - CC-BY-NC-1.0
            - CC-BY-NC-2.0
            - CC-BY-NC-2.5
            - CC-BY-NC-3.0
            - CC-BY-NC-4.0
            - CC-BY-NC-ND-1.0
            - CC-BY-NC-ND-2.0
            - CC-BY-NC-ND-2.5
            - CC-BY-NC-ND-3.0
            - CC-BY-NC-ND-4.0
            - CC-BY-NC-SA-1.0
            - CC-BY-NC-SA-2.0
            - CC-BY-NC-SA-2.5
            - CC-BY-NC-SA-3.0
            - CC-BY-NC-SA-4.0
            - CC-BY-ND-1.0
            - CC-BY-ND-2.0
            - CC-BY-ND-2.5
            - CC-BY-ND-3.0
            - CC-BY-ND-4.0
            - CC-BY-SA-1.0
            - CC-BY-SA-2.0
            - CC-BY-SA-2.5
            - CC-BY-SA-3.0
            - CC-BY-SA-4.0
            - CC0-1.0
            - CDDL-1.0
            - CDDL-1.1
            - CDLA-Permissive-1.0
            - CDLA-Sharing-1.0
            - CECILL-1.0
            - CECILL-1.1
            - CECILL-2.0
            - CECILL-2.1
            - CECILL-B
            - CECILL-C
            - ClArtistic
            - CNRI-Jython
            - CNRI-Python-GPL-Compatible
            - CNRI-Python
            - Condor-1.1
            - CPAL-1.0
            - CPL-1.0
            - CPOL-1.02
            - Crossword
            - CrystalStacker
            - CUA-OPL-1.0
            - Cube
            - curl
            - D-FSL-1.0
            - diffmark
            - DOC
            - Dotseqn
            - DSDP
            - dvipdfm
            - ECL-1.0
            - ECL-2.0
            - EFL-1.0
            - EFL-2.0
            - eGenix
            - Entessa
            - EPL-1.0
            - EPL-2.0
            - ErlPL-1.1
            - EUDatagrid
            - EUPL-1.0
            - EUPL-1.1
            - EUPL-1.2
            - Eurosym
            - Fair
            - Frameworx-1.0
            - FreeImage
            - FSFAP
            - FSFUL
            - FSFULLR
            - FTL
            - GFDL-1.1-only
            - GFDL-1.1-or-later
            - GFDL-1.2-only
            - GFDL-1.2-or-later
            - GFDL-1.3-only
            - GFDL-1.3-or-later
            - Giftware
            - GL2PS
            - Glide
            - Glulxe
            - gnuplot
            - GPL-1.0-only
            - GPL-1.0-or-later
            - GPL-2.0-only
            - GPL-2.0-or-later
            - GPL-3.0-only
            - GPL-3.0-or-later
            - gSOAP-1.3b
            - HaskellReport
            - HPND
            - IBM-pibs
            - ICU
            - IJG
            - ImageMagick
            - iMatix
            - Imlib2
            - Info-ZIP
            - Intel-ACPI
            - Intel
            - Interbase-1.0
            - IPA
            - IPL-1.0
            - ISC
            - JasPer-2.0
            - JSON
            - LAL-1.2
            - LAL-1.3
            - Latex2e
            - Leptonica
            - LGPL-2.0-only
            - LGPL-2.0-or-later
            - LGPL-2.1-only
            - LGPL-2.1-or-later
            - LGPL-3.0-only
            - LGPL-3.0-or-later
            - LGPLLR
            - Libpng
            - libtiff
            - LiLiQ-P-1.1
            - LiLiQ-R-1.1
            - LiLiQ-Rplus-1.1
            - Linux-OpenIB
            - LPL-1.0
            - LPL-1.02
            - LPPL-1.0
            - LPPL-1.1
            - LPPL-1.2
            - LPPL-1.3a
            - LPPL-1.3c
            - MakeIndex
            - MirOS
            - MIT-0
            - MIT-advertising
            - MIT-CMU
            - MIT-enna
            - MIT-feh
            - MIT
            - MITNFA
            - Motosoto
            - mpich2
            - MPL-1.0
            - MPL-1.1
            - MPL-2.0-no-copyleft-exception
            - MPL-2.0
            - MS-PL
            - MS-RL
            - MTLL
            - Multics
            - Mup
            - NASA-1.3
            - Naumen
            - NBPL-1.0
            - NCSA
            - Net-SNMP
            - NetCDF
            - Newsletr
            - NGPL
            - NLOD-1.0
            - NLPL
            - Nokia
            - NOSL
            - Noweb
            - NPL-1.0
            - NPL-1.1
            - NPOSL-3.0
            - NRL
            - NTP
            - OCCT-PL
            - OCLC-2.0
            - ODbL-1.0
            - OFL-1.0
            - OFL-1.1
            - OGTSL
            - OLDAP-1.1
            - OLDAP-1.2
            - OLDAP-1.3
            - OLDAP-1.4
            - OLDAP-2.0.1
            - OLDAP-2.0
            - OLDAP-2.1
            - OLDAP-2.2.1
            - OLDAP-2.2.2
            - OLDAP-2.2
            - OLDAP-2.3
            - OLDAP-2.4
            - OLDAP-2.5
            - OLDAP-2.6
            - OLDAP-2.7
            - OLDAP-2.8
            - OML
            - OpenSSL
            - OPL-1.0
            - OSET-PL-2.1
            - OSL-1.0
            - OSL-1.1
            - OSL-2.0
            - OSL-2.1
            - OSL-3.0
            - PDDL-1.0
            - PHP-3.0
            - PHP-3.01
            - Plexus
            - PostgreSQL
            - psfrag
            - psutils
            - Python-2.0
            - Qhull
            - QPL-1.0
            - Rdisc
            - RHeCos-1.1
            - RPL-1.1
            - RPL-1.5
            - RPSL-1.0
            - RSA-MD
            - RSCPL
            - Ruby
            - SAX-PD
            - Saxpath
            - SCEA
            - Sendmail
            - SGI-B-1.0
            - SGI-B-1.1
            - SGI-B-2.0
            - SimPL-2.0
            - SISSL-1.2
            - SISSL
            - Sleepycat
            - SMLNJ
            - SMPPL
            - SNIA
            - Spencer-86
            - Spencer-94
            - Spencer-99
            - SPL-1.0
            - SugarCRM-1.1.3
            - SWL
            - TCL
            - TCP-wrappers
            - TMate
            - TORQUE-1.1
            - TOSL
            - Unicode-DFS-2015
            - Unicode-DFS-2016
            - Unicode-TOU
            - Unlicense
            - UPL-1.0
            - Vim
            - VOSTROM
            - VSL-1.0
            - W3C-19980720
            - W3C-20150513
            - W3C
            - Watcom-1.0
            - Wsuipa
            - WTFPL
            - X11
            - Xerox
            - XFree86-1.1
            - xinetd
            - Xnet
            - xpp
            - XSkat
            - YPL-1.0
            - YPL-1.1
            - Zed
            - Zend-2.0
            - Zimbra-1.3
            - Zimbra-1.4
            - zlib-acknowledgement
            - Zlib
            - ZPL-1.1
            - ZPL-2.0
            - ZPL-2.1
        _license:
          $ref: '#/components/schemas/Element'
        fhirVersion:
          description: >-
            The version(s) of the FHIR specification that this
            ImplementationGuide targets - e.g. describes how to use. The value
            of this element is the formal version of the specification, without
            the revision number, e.g. [publication].[major].[minor], which is
            4.0.1. for this version.
          items:
            enum:
              - '0.01'
              - '0.05'
              - '0.06'
              - '0.11'
              - 0.0.80
              - 0.0.81
              - 0.0.82
              - 0.4.0
              - 0.5.0
              - 1.0.0
              - 1.0.1
              - 1.0.2
              - 1.1.0
              - 1.4.0
              - 1.6.0
              - 1.8.0
              - 3.0.0
              - 3.0.1
              - 3.3.0
              - 3.5.0
              - 4.0.0
              - 4.0.1
          type: array
        _fhirVersion:
          description: Extensions for fhirVersion
          items:
            $ref: '#/components/schemas/Element'
          type: array
        dependsOn:
          description: >-
            Another implementation guide that this implementation depends on.
            Typically, an implementation guide uses value sets, profiles
            etc.defined in other implementation guides.
          items:
            $ref: '#/components/schemas/ImplementationGuide_DependsOn'
          type: array
        global:
          description: >-
            A set of profiles that all resources covered by this implementation
            guide must conform to.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Global'
          type: array
        definition:
          description: >-
            The information needed by an IG publisher tool to publish the whole
            implementation guide.
          $ref: '#/components/schemas/ImplementationGuide_Definition'
        manifest:
          description: >-
            Information about an assembled implementation guide, created by the
            publication tooling.
          $ref: '#/components/schemas/ImplementationGuide_Manifest'
      additionalProperties: false
      required:
        - resourceType
    ImplementationGuide_DependsOn:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        uri:
          description: >-
            A canonical reference to the Implementation guide for the
            dependency.
          $ref: '#/components/schemas/canonical'
        packageId:
          description: >-
            The NPM package name for the Implementation Guide that this IG
            depends on.
          $ref: '#/components/schemas/id'
        _packageId:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The version of the IG that is depended on, when the correct version
            is required to understand the IG correctly.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - uri
    ImplementationGuide_Global:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        profile:
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
      required:
        - profile
    ImplementationGuide_Definition:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        grouping:
          description: >-
            A logical group of resources. Logical groups can be used when
            building pages.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Grouping'
          type: array
        resource:
          description: >-
            A resource that is part of the implementation guide. Conformance
            resources (value set, structure definition, capability statements
            etc.) are obvious candidates for inclusion, but any kind of resource
            can be included as an example resource.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Resource'
          type: array
        page:
          description: >-
            A page / section in the implementation guide. The root page is the
            implementation guide home page.
          $ref: '#/components/schemas/ImplementationGuide_Page'
        parameter:
          description: Defines how IG is built by tools.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Parameter'
          type: array
        template:
          description: A template for building resources.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Template'
          type: array
      additionalProperties: false
      required:
        - resource
    ImplementationGuide_Grouping:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            The human-readable title to display for the package of resources
            when rendering the implementation guide.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ImplementationGuide_Resource:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          $ref: '#/components/schemas/Reference'
        fhirVersion:
          description: >-
            Indicates the FHIR Version(s) this artifact is intended to apply to.
            If no versions are specified, the resource is assumed to apply to
            all the versions stated in ImplementationGuide.fhirVersion.
          items:
            enum:
              - '0.01'
              - '0.05'
              - '0.06'
              - '0.11'
              - 0.0.80
              - 0.0.81
              - 0.0.82
              - 0.4.0
              - 0.5.0
              - 1.0.0
              - 1.0.1
              - 1.0.2
              - 1.1.0
              - 1.4.0
              - 1.6.0
              - 1.8.0
              - 3.0.0
              - 3.0.1
              - 3.3.0
              - 3.5.0
              - 4.0.0
              - 4.0.1
          type: array
        _fhirVersion:
          description: Extensions for fhirVersion
          items:
            $ref: '#/components/schemas/Element'
          type: array
        name:
          description: >-
            A human assigned name for the resource. All resources SHOULD have a
            name, but the name may be extracted from the resource (e.g.
            ValueSet.name).
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A description of the reason that a resource has been included in the
            implementation guide.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        exampleBoolean:
          description: >-
            If true or a reference, indicates the resource is an example
            instance.  If a reference is present, indicates that the example is
            an example of the specified profile.
          pattern: ^true|false$
          type: boolean
        _exampleBoolean:
          $ref: '#/components/schemas/Element'
        exampleCanonical:
          description: >-
            If true or a reference, indicates the resource is an example
            instance.  If a reference is present, indicates that the example is
            an example of the specified profile.
          pattern: ^\S*$
          type: string
        _exampleCanonical:
          $ref: '#/components/schemas/Element'
        groupingId:
          $ref: '#/components/schemas/id'
        _groupingId:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - reference
    ImplementationGuide_Page:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        nameUrl:
          description: The source address for the page.
          pattern: ^\S*$
          type: string
        _nameUrl:
          $ref: '#/components/schemas/Element'
        nameReference:
          $ref: '#/components/schemas/Reference'
        title:
          description: >-
            A short title used to represent this page in navigational structures
            such as table of contents, bread crumbs, etc.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        generation:
          description: A code that indicates how the page is generated.
          enum:
            - html
            - markdown
            - xml
            - generated
        _generation:
          $ref: '#/components/schemas/Element'
        page:
          description: Nested Pages/Sections under this page.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Page'
          type: array
      additionalProperties: false
    ImplementationGuide_Parameter:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            apply | path-resource | path-pages | path-tx-cache |
            expansion-parameter | rule-broken-links | generate-xml |
            generate-json | generate-turtle | html-template.
          enum:
            - apply
            - path-resource
            - path-pages
            - path-tx-cache
            - expansion-parameter
            - rule-broken-links
            - generate-xml
            - generate-json
            - generate-turtle
            - html-template
        _code:
          $ref: '#/components/schemas/Element'
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ImplementationGuide_Template:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        source:
          $ref: '#/components/schemas/string'
        _source:
          $ref: '#/components/schemas/Element'
        scope:
          $ref: '#/components/schemas/string'
        _scope:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ImplementationGuide_Manifest:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        rendering:
          description: >-
            A pointer to official web page, PDF or other rendering of the
            implementation guide.
          $ref: '#/components/schemas/url'
        _rendering:
          $ref: '#/components/schemas/Element'
        resource:
          description: >-
            A resource that is part of the implementation guide. Conformance
            resources (value set, structure definition, capability statements
            etc.) are obvious candidates for inclusion, but any kind of resource
            can be included as an example resource.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Resource1'
          type: array
        page:
          description: Information about a page within the IG.
          items:
            $ref: '#/components/schemas/ImplementationGuide_Page1'
          type: array
        image:
          description: Indicates a relative path to an image that exists within the IG.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _image:
          description: Extensions for image
          items:
            $ref: '#/components/schemas/Element'
          type: array
        other:
          description: >-
            Indicates the relative path of an additional non-page, non-image
            file that is part of the IG - e.g. zip, jar and similar files that
            could be the target of a hyperlink in a derived IG.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _other:
          description: Extensions for other
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
      required:
        - resource
    ImplementationGuide_Resource1:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          $ref: '#/components/schemas/Reference'
        exampleBoolean:
          description: >-
            If true or a reference, indicates the resource is an example
            instance.  If a reference is present, indicates that the example is
            an example of the specified profile.
          pattern: ^true|false$
          type: boolean
        _exampleBoolean:
          $ref: '#/components/schemas/Element'
        exampleCanonical:
          description: >-
            If true or a reference, indicates the resource is an example
            instance.  If a reference is present, indicates that the example is
            an example of the specified profile.
          pattern: ^\S*$
          type: string
        _exampleCanonical:
          $ref: '#/components/schemas/Element'
        relativePath:
          $ref: '#/components/schemas/url'
        _relativePath:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - reference
    ImplementationGuide_Page1:
      description: >-
        A set of rules of how a particular interoperability or standards problem
        is solved - typically through the use of FHIR resources. This resource
        is used to gather all the parts of an implementation guide into a
        logical whole and to publish a computable definition of all the parts.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        anchor:
          description: The name of an anchor available on the page.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _anchor:
          description: Extensions for anchor
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    InsurancePlan:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        resourceType:
          description: This is a InsurancePlan resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this health insurance product which
            remain constant as the resource is updated and propagates from
            server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The current state of the health insurance product.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: The kind of health insurance product.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        name:
          description: >-
            Official name of the health insurance product as designated by the
            owner.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        alias:
          description: >-
            A list of alternate names that the product is known as, or was known
            as in the past.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _alias:
          description: Extensions for alias
          items:
            $ref: '#/components/schemas/Element'
          type: array
        period:
          $ref: '#/components/schemas/Period'
        ownedBy:
          description: >-
            The entity that is providing  the health insurance product and
            underwriting the risk.  This is typically an insurance carriers,
            other third-party payers, or health plan sponsors comonly referred
            to as 'payers'.
          $ref: '#/components/schemas/Reference'
        administeredBy:
          description: >-
            An organization which administer other services such as
            underwriting, customer service and/or claims processing on behalf of
            the health insurance product owner.
          $ref: '#/components/schemas/Reference'
        coverageArea:
          description: >-
            The geographic region in which a health insurance product's benefits
            apply.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        contact:
          description: The contact for the health insurance product for a certain purpose.
          items:
            $ref: '#/components/schemas/InsurancePlan_Contact'
          type: array
        endpoint:
          description: >-
            The technical endpoints providing access to services operated for
            the health insurance product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        network:
          description: Reference to the network included in the health insurance product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        coverage:
          description: Details about the coverage offered by the insurance product.
          items:
            $ref: '#/components/schemas/InsurancePlan_Coverage'
          type: array
        plan:
          description: Details about an insurance plan.
          items:
            $ref: '#/components/schemas/InsurancePlan_Plan'
          type: array
      additionalProperties: false
      required:
        - resourceType
    InsurancePlan_Contact:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        purpose:
          $ref: '#/components/schemas/CodeableConcept'
        name:
          $ref: '#/components/schemas/HumanName'
        telecom:
          description: >-
            A contact detail (e.g. a telephone number or an email address) by
            which the party may be contacted.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          $ref: '#/components/schemas/Address'
      additionalProperties: false
    InsurancePlan_Coverage:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Type of coverage  (Medical; Dental; Mental Health; Substance Abuse;
            Vision; Drug; Short Term; Long Term Care; Hospice; Home Health).
          $ref: '#/components/schemas/CodeableConcept'
        network:
          description: Reference to the network that providing the type of coverage.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        benefit:
          description: Specific benefits under this type of coverage.
          items:
            $ref: '#/components/schemas/InsurancePlan_Benefit'
          type: array
      additionalProperties: false
      required:
        - type
        - benefit
    InsurancePlan_Benefit:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Type of benefit (primary care; speciality care; inpatient;
            outpatient).
          $ref: '#/components/schemas/CodeableConcept'
        requirement:
          $ref: '#/components/schemas/string'
        _requirement:
          $ref: '#/components/schemas/Element'
        limit:
          description: The specific limits on the benefit.
          items:
            $ref: '#/components/schemas/InsurancePlan_Limit'
          type: array
      additionalProperties: false
      required:
        - type
    InsurancePlan_Limit:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The maximum amount of a service item a plan will pay for a covered
            benefit.  For examples. wellness visits, or eyeglasses.
          $ref: '#/components/schemas/Quantity'
        code:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    InsurancePlan_Plan:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this health insurance plan which
            remain constant as the resource is updated and propagates from
            server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        coverageArea:
          description: >-
            The geographic region in which a health insurance plan's benefits
            apply.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        network:
          description: Reference to the network that providing the type of coverage.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        generalCost:
          description: Overall costs associated with the plan.
          items:
            $ref: '#/components/schemas/InsurancePlan_GeneralCost'
          type: array
        specificCost:
          description: Costs associated with the coverage provided by the product.
          items:
            $ref: '#/components/schemas/InsurancePlan_SpecificCost'
          type: array
      additionalProperties: false
    InsurancePlan_GeneralCost:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        groupSize:
          $ref: '#/components/schemas/positiveInt'
        _groupSize:
          $ref: '#/components/schemas/Element'
        cost:
          $ref: '#/components/schemas/Money'
        comment:
          description: >-
            Additional information about the general costs associated with this
            plan.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    InsurancePlan_SpecificCost:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            General category of benefit (Medical; Dental; Vision; Drug; Mental
            Health; Substance Abuse; Hospice, Home Health).
          $ref: '#/components/schemas/CodeableConcept'
        benefit:
          description: List of the specific benefits under this category of benefit.
          items:
            $ref: '#/components/schemas/InsurancePlan_Benefit1'
          type: array
      additionalProperties: false
      required:
        - category
    InsurancePlan_Benefit1:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Type of specific benefit (preventative; primary care office visit;
            speciality office visit; hospitalization; emergency room; urgent
            care).
          $ref: '#/components/schemas/CodeableConcept'
        cost:
          description: List of the costs associated with a specific benefit.
          items:
            $ref: '#/components/schemas/InsurancePlan_Cost'
          type: array
      additionalProperties: false
      required:
        - type
    InsurancePlan_Cost:
      description: Details of a Health Insurance product/plan provided by an organization.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Type of cost (copay; individual cap; family cap; coinsurance;
            deductible).
          $ref: '#/components/schemas/CodeableConcept'
        applicability:
          description: >-
            Whether the cost applies to in-network or out-of-network providers
            (in-network; out-of-network; other).
          $ref: '#/components/schemas/CodeableConcept'
        qualifiers:
          description: >-
            Additional information about the cost, such as information about
            funding sources (e.g. HSA, HRA, FSA, RRA).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        value:
          description: >-
            The actual cost value. (some of the costs may be represented as
            percentages rather than currency, e.g. 10% coinsurance).
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
      required:
        - type
    Invoice:
      description: >-
        Invoice containing collected ChargeItems from an Account with calculated
        individual and total price for Billing purpose.
      properties:
        resourceType:
          description: This is a Invoice resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier of this Invoice, often used for reference in
            correspondence about this invoice or for tracking of payments.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The current state of the Invoice.
          enum:
            - draft
            - issued
            - balanced
            - cancelled
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        cancelledReason:
          description: >-
            In case of Invoice cancellation a reason must be given (entered in
            error, superseded by corrected invoice etc.).
          $ref: '#/components/schemas/string'
        _cancelledReason:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Type of Invoice depending on domain, realm an usage (e.g.
            internal/external, dental, preliminary).
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The individual or set of individuals receiving the goods and
            services billed in this invoice.
          $ref: '#/components/schemas/Reference'
        recipient:
          description: >-
            The individual or Organization responsible for balancing of this
            invoice.
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        participant:
          description: >-
            Indicates who or what performed or participated in the charged
            service.
          items:
            $ref: '#/components/schemas/Invoice_Participant'
          type: array
        issuer:
          $ref: '#/components/schemas/Reference'
        account:
          $ref: '#/components/schemas/Reference'
        lineItem:
          description: >-
            Each line item represents one charge for goods and services
            rendered. Details such as date, code and amount are found in the
            referenced ChargeItem resource.
          items:
            $ref: '#/components/schemas/Invoice_LineItem'
          type: array
        totalPriceComponent:
          description: >-
            The total amount for the Invoice may be calculated as the sum of the
            line items with surcharges/deductions that apply in certain
            conditions.  The priceComponent element can be used to offer
            transparency to the recipient of the Invoice of how the total price
            was calculated.
          items:
            $ref: '#/components/schemas/Invoice_PriceComponent'
          type: array
        totalNet:
          $ref: '#/components/schemas/Money'
        totalGross:
          $ref: '#/components/schemas/Money'
        paymentTerms:
          description: >-
            Payment details such as banking details, period of payment,
            deductibles, methods of payment.
          $ref: '#/components/schemas/markdown'
        _paymentTerms:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            Comments made about the invoice by the issuer, subject, or other
            participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Invoice_Participant:
      description: >-
        Invoice containing collected ChargeItems from an Account with calculated
        individual and total price for Billing purpose.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        role:
          description: >-
            Describes the type of involvement (e.g. transcriptionist, creator
            etc.). If the invoice has been created automatically, the
            Participant may be a billing engine or another kind of device.
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          description: >-
            The device, practitioner, etc. who performed or participated in the
            service.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    Invoice_LineItem:
      description: >-
        Invoice containing collected ChargeItems from an Account with calculated
        individual and total price for Billing purpose.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequence:
          $ref: '#/components/schemas/positiveInt'
        _sequence:
          $ref: '#/components/schemas/Element'
        chargeItemReference:
          description: >-
            The ChargeItem contains information such as the billing code, date,
            amount etc. If no further details are required for the lineItem,
            inline billing codes can be added using the CodeableConcept data
            type instead of the Reference.
          $ref: '#/components/schemas/Reference'
        chargeItemCodeableConcept:
          description: >-
            The ChargeItem contains information such as the billing code, date,
            amount etc. If no further details are required for the lineItem,
            inline billing codes can be added using the CodeableConcept data
            type instead of the Reference.
          $ref: '#/components/schemas/CodeableConcept'
        priceComponent:
          description: >-
            The price for a ChargeItem may be calculated as a base price with
            surcharges/deductions that apply in certain conditions. A
            ChargeItemDefinition resource that defines the prices, factors and
            conditions that apply to a billing code is currently under
            development. The priceComponent element can be used to offer
            transparency to the recipient of the Invoice as to how the prices
            have been calculated.
          items:
            $ref: '#/components/schemas/Invoice_PriceComponent'
          type: array
      additionalProperties: false
    Invoice_PriceComponent:
      description: >-
        Invoice containing collected ChargeItems from an Account with calculated
        individual and total price for Billing purpose.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: This code identifies the type of the component.
          enum:
            - base
            - surcharge
            - deduction
            - discount
            - tax
            - informational
        _type:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code that identifies the component. Codes may be used to
            differentiate between kinds of taxes, surcharges, discounts etc.
          $ref: '#/components/schemas/CodeableConcept'
        factor:
          description: >-
            The factor that has been applied on the base price for calculating
            this component.
          $ref: '#/components/schemas/decimal'
        _factor:
          $ref: '#/components/schemas/Element'
        amount:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
    Library:
      description: >-
        The Library resource is a general-purpose container for knowledge asset
        definitions. It can be used to describe and expose existing knowledge
        assets such as logic libraries and information model descriptions, as
        well as to describe a collection of knowledge assets.
      properties:
        resourceType:
          description: This is a Library resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this library when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this library is (or will be) published. This URL can be
            the target of a canonical reference. It SHALL remain the same when
            the library is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this library when it is
            represented in other formats, or referenced in a specification,
            model, design or an instance. e.g. CMS or NQF identifiers for a
            measure artifact. Note that at least one identifier is required for
            non-experimental active artifacts.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the library
            when it is referenced in a specification, model, design or instance.
            This is an arbitrary value managed by the library author and is not
            expected to be globally unique. For example, it might be a timestamp
            (e.g. yyyymmdd) if a managed version is not available. There is also
            no expectation that versions can be placed in a lexicographical
            sequence. To provide a version consistent with the Decision Support
            Service specification, use the format Major.Minor.Revision (e.g.
            1.0.0). For more information on versioning knowledge assets, refer
            to the Decision Support Service specification. Note that a version
            is required for non-experimental active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the library. This name should be
            usable as an identifier for the module by machine processing
            applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the library giving additional
            information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this library. Enables tracking the life-cycle of the
            content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this library is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Identifies the type of library such as a Logic Library, Model
            Definition, Asset Collection, or Module Definition.
          $ref: '#/components/schemas/CodeableConcept'
        subjectCodeableConcept:
          description: >-
            A code or group definition that describes the intended subject of
            the contents of the library.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            A code or group definition that describes the intended subject of
            the contents of the library.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date  (and optionally time) when the library was published. The
            date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the library changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            library.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the library from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate library instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the library is intended to be
            used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this library is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description of how the library is used from a clinical
            perspective.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the library and/or its contents.
            Copyright statements are generally legal restrictions on the use and
            publishing of the library.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the library content was or is planned to be
            in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the library. Topics
            provide a high-level categorization of the library that can be
            useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        parameter:
          description: The parameter element defines parameters used by the library.
          items:
            $ref: '#/components/schemas/ParameterDefinition'
          type: array
        dataRequirement:
          description: >-
            Describes a set of data that must be provided in order to be able to
            successfully perform the computations defined by the library.
          items:
            $ref: '#/components/schemas/DataRequirement'
          type: array
        content:
          description: >-
            The content of the library as an Attachment. The content may be a
            reference to a url, or may be directly embedded as a base-64 string.
            Either way, the contentType of the attachment determines how to
            interpret the content.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
      additionalProperties: false
      required:
        - type
        - resourceType
    Linkage:
      description: >-
        Identifies two or more records (resource instances) that refer to the
        same real-world "occurrence".
      properties:
        resourceType:
          description: This is a Linkage resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        active:
          description: >-
            Indicates whether the asserted set of linkages are considered to be
            "in effect".
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            Identifies the user or organization responsible for asserting the
            linkages as well as the user or organization who establishes the
            context in which the nature of each linkage is evaluated.
          $ref: '#/components/schemas/Reference'
        item:
          description: >-
            Identifies which record considered as the reference to the same
            real-world occurrence as well as how the items should be evaluated
            within the collection of linked items.
          items:
            $ref: '#/components/schemas/Linkage_Item'
          type: array
      additionalProperties: false
      required:
        - item
        - resourceType
    Linkage_Item:
      description: >-
        Identifies two or more records (resource instances) that refer to the
        same real-world "occurrence".
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Distinguishes which item is "source of truth" (if any) and which
            items are no longer considered to be current representations.
          enum:
            - source
            - alternate
            - historical
        _type:
          $ref: '#/components/schemas/Element'
        resource:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resource
    List:
      description: A list is a curated collection of resources.
      properties:
        resourceType:
          description: This is a List resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier for the List assigned for business purposes outside the
            context of FHIR.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Indicates the current state of this list.
          enum:
            - current
            - retired
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        mode:
          description: >-
            How this list was prepared - whether it is a working list that is
            suitable for being maintained on an ongoing basis, or if it
            represents a snapshot of a list of items from another source, or
            whether it is a prepared list where items may be marked as added,
            modified or deleted.
          enum:
            - working
            - snapshot
            - changes
        _mode:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The common subject (or patient) of the resources that are in the
            list if there is one.
          $ref: '#/components/schemas/Reference'
        encounter:
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        source:
          description: >-
            The entity responsible for deciding what the contents of the list
            were. Where the list was created by a human, this is the same as the
            author of the list.
          $ref: '#/components/schemas/Reference'
        orderedBy:
          $ref: '#/components/schemas/CodeableConcept'
        note:
          description: Comments that apply to the overall list.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        entry:
          description: Entries in this list.
          items:
            $ref: '#/components/schemas/List_Entry'
          type: array
        emptyReason:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - resourceType
    List_Entry:
      description: A list is a curated collection of resources.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        flag:
          description: >-
            The flag allows the system constructing the list to indicate the
            role and significance of the item in the list.
          $ref: '#/components/schemas/CodeableConcept'
        deleted:
          $ref: '#/components/schemas/boolean'
        _deleted:
          $ref: '#/components/schemas/Element'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        item:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - item
    Location:
      description: >-
        Details and position information for a physical place where services are
        provided and resources and participants may be stored, found, contained,
        or accommodated.
      properties:
        resourceType:
          description: This is a Location resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique code or number identifying the location to its users.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: >-
            The status property covers the general availability of the resource,
            not the current value which may be covered by the operationStatus,
            or by a schedule/slots if they are configured for the location.
          enum:
            - active
            - suspended
            - inactive
        _status:
          $ref: '#/components/schemas/Element'
        operationalStatus:
          description: >-
            The operational status covers operation values most relevant to beds
            (but can also apply to rooms/units/chairs/etc. such as an isolation
            unit/dialysis chair). This typically covers concepts such as
            contamination, housekeeping, and other activities like maintenance.
          $ref: '#/components/schemas/Coding'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        alias:
          description: >-
            A list of alternate names that the location is known as, or was
            known as, in the past.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _alias:
          description: Extensions for alias
          items:
            $ref: '#/components/schemas/Element'
          type: array
        description:
          description: >-
            Description of the Location, which helps in finding or referencing
            the place.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        mode:
          description: >-
            Indicates whether a resource instance represents a specific location
            or a class of locations.
          enum:
            - instance
            - kind
        _mode:
          $ref: '#/components/schemas/Element'
        type:
          description: Indicates the type of function performed at the location.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        telecom:
          description: >-
            The contact details of communication devices available at the
            location. This can include phone numbers, fax numbers, mobile
            numbers, email addresses and web sites.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          $ref: '#/components/schemas/Address'
        physicalType:
          $ref: '#/components/schemas/CodeableConcept'
        position:
          description: >-
            The absolute geographic location of the Location, expressed using
            the WGS84 datum (This is the same co-ordinate system used in KML).
          $ref: '#/components/schemas/Location_Position'
        managingOrganization:
          description: >-
            The organization responsible for the provisioning and upkeep of the
            location.
          $ref: '#/components/schemas/Reference'
        partOf:
          $ref: '#/components/schemas/Reference'
        hoursOfOperation:
          description: What days/times during a week is this location usually open.
          items:
            $ref: '#/components/schemas/Location_HoursOfOperation'
          type: array
        availabilityExceptions:
          description: >-
            A description of when the locations opening ours are different to
            normal, e.g. public holiday availability. Succinctly describing all
            possible exceptions to normal site availability as detailed in the
            opening hours Times.
          $ref: '#/components/schemas/string'
        _availabilityExceptions:
          $ref: '#/components/schemas/Element'
        endpoint:
          description: >-
            Technical endpoints providing access to services operated for the
            location.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Location_Position:
      description: >-
        Details and position information for a physical place where services are
        provided and resources and participants may be stored, found, contained,
        or accommodated.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        longitude:
          description: >-
            Longitude. The value domain and the interpretation are the same as
            for the text of the longitude element in KML (see notes below).
          $ref: '#/components/schemas/decimal'
        _longitude:
          $ref: '#/components/schemas/Element'
        latitude:
          description: >-
            Latitude. The value domain and the interpretation are the same as
            for the text of the latitude element in KML (see notes below).
          $ref: '#/components/schemas/decimal'
        _latitude:
          $ref: '#/components/schemas/Element'
        altitude:
          description: >-
            Altitude. The value domain and the interpretation are the same as
            for the text of the altitude element in KML (see notes below).
          $ref: '#/components/schemas/decimal'
        _altitude:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Location_HoursOfOperation:
      description: >-
        Details and position information for a physical place where services are
        provided and resources and participants may be stored, found, contained,
        or accommodated.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        daysOfWeek:
          description: >-
            Indicates which days of the week are available between the start and
            end Times.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _daysOfWeek:
          description: Extensions for daysOfWeek
          items:
            $ref: '#/components/schemas/Element'
          type: array
        allDay:
          $ref: '#/components/schemas/boolean'
        _allDay:
          $ref: '#/components/schemas/Element'
        openingTime:
          $ref: '#/components/schemas/time'
        _openingTime:
          $ref: '#/components/schemas/Element'
        closingTime:
          $ref: '#/components/schemas/time'
        _closingTime:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Measure:
      description: The Measure resource provides the definition of a quality measure.
      properties:
        resourceType:
          description: This is a Measure resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this measure when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this measure is (or will be) published. This URL can be
            the target of a canonical reference. It SHALL remain the same when
            the measure is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this measure when it is
            represented in other formats, or referenced in a specification,
            model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the measure
            when it is referenced in a specification, model, design or instance.
            This is an arbitrary value managed by the measure author and is not
            expected to be globally unique. For example, it might be a timestamp
            (e.g. yyyymmdd) if a managed version is not available. There is also
            no expectation that versions can be placed in a lexicographical
            sequence. To provide a version consistent with the Decision Support
            Service specification, use the format Major.Minor.Revision (e.g.
            1.0.0). For more information on versioning knowledge assets, refer
            to the Decision Support Service specification. Note that a version
            is required for non-experimental active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the measure. This name should be
            usable as an identifier for the module by machine processing
            applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the measure giving additional
            information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this measure. Enables tracking the life-cycle of the
            content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this measure is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: >-
            The intended subjects for the measure. If this element is not
            provided, a Patient subject is assumed, but the subject of the
            measure can be anything.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            The intended subjects for the measure. If this element is not
            provided, a Patient subject is assumed, but the subject of the
            measure can be anything.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date  (and optionally time) when the measure was published. The
            date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the measure changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            measure.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the measure from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate measure instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the measure is intended to be
            used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this measure is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description, from a clinical perspective, of how the
            measure is used.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the measure and/or its contents.
            Copyright statements are generally legal restrictions on the use and
            publishing of the measure.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the measure content was or is planned to be
            in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the measure. Topics
            provide a high-level categorization grouping types of measures that
            can be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        library:
          description: >-
            A reference to a Library resource containing the formal logic used
            by the measure.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        disclaimer:
          description: >-
            Notices and disclaimers regarding the use of the measure or related
            to intellectual property (such as code systems) referenced by the
            measure.
          $ref: '#/components/schemas/markdown'
        _disclaimer:
          $ref: '#/components/schemas/Element'
        scoring:
          description: >-
            Indicates how the calculation is performed for the measure,
            including proportion, ratio, continuous-variable, and cohort. The
            value set is extensible, allowing additional measure scoring types
            to be represented.
          $ref: '#/components/schemas/CodeableConcept'
        compositeScoring:
          description: >-
            If this is a composite measure, the scoring method used to combine
            the component measures to determine the composite score.
          $ref: '#/components/schemas/CodeableConcept'
        type:
          description: >-
            Indicates whether the measure is used to examine a process, an
            outcome over time, a patient-reported outcome, or a structure
            measure such as utilization.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        riskAdjustment:
          description: >-
            A description of the risk adjustment factors that may impact the
            resulting score for the measure and how they may be accounted for
            when computing and reporting measure results.
          $ref: '#/components/schemas/string'
        _riskAdjustment:
          $ref: '#/components/schemas/Element'
        rateAggregation:
          description: >-
            Describes how to combine the information calculated, based on logic
            in each of several populations, into one summarized result.
          $ref: '#/components/schemas/string'
        _rateAggregation:
          $ref: '#/components/schemas/Element'
        rationale:
          description: >-
            Provides a succinct statement of the need for the measure. Usually
            includes statements pertaining to importance criterion: impact, gap
            in care, and evidence.
          $ref: '#/components/schemas/markdown'
        _rationale:
          $ref: '#/components/schemas/Element'
        clinicalRecommendationStatement:
          description: >-
            Provides a summary of relevant clinical guidelines or other clinical
            recommendations supporting the measure.
          $ref: '#/components/schemas/markdown'
        _clinicalRecommendationStatement:
          $ref: '#/components/schemas/Element'
        improvementNotation:
          description: >-
            Information on whether an increase or decrease in score is the
            preferred result (e.g., a higher score indicates better quality OR a
            lower score indicates better quality OR quality is within a range).
          $ref: '#/components/schemas/CodeableConcept'
        definition:
          description: >-
            Provides a description of an individual term used within the
            measure.
          items:
            $ref: '#/components/schemas/markdown'
          type: array
        _definition:
          description: Extensions for definition
          items:
            $ref: '#/components/schemas/Element'
          type: array
        guidance:
          description: >-
            Additional guidance for the measure including how it can be used in
            a clinical context, and the intent of the measure.
          $ref: '#/components/schemas/markdown'
        _guidance:
          $ref: '#/components/schemas/Element'
        group:
          description: A group of population criteria for the measure.
          items:
            $ref: '#/components/schemas/Measure_Group'
          type: array
        supplementalData:
          description: >-
            The supplemental data criteria for the measure report, specified as
            either the name of a valid CQL expression within a referenced
            library, or a valid FHIR Resource Path.
          items:
            $ref: '#/components/schemas/Measure_SupplementalData'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Measure_Group:
      description: The Measure resource provides the definition of a quality measure.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            Indicates a meaning for the group. This can be as simple as a unique
            identifier, or it can establish meaning in a broader context by
            drawing from a terminology, allowing groups to be correlated across
            measures.
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        population:
          description: A population criteria for the measure.
          items:
            $ref: '#/components/schemas/Measure_Population'
          type: array
        stratifier:
          description: >-
            The stratifier criteria for the measure report, specified as either
            the name of a valid CQL expression defined within a referenced
            library or a valid FHIR Resource Path.
          items:
            $ref: '#/components/schemas/Measure_Stratifier'
          type: array
      additionalProperties: false
    Measure_Population:
      description: The Measure resource provides the definition of a quality measure.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        criteria:
          description: >-
            An expression that specifies the criteria for the population,
            typically the name of an expression in a library.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
      required:
        - criteria
    Measure_Stratifier:
      description: The Measure resource provides the definition of a quality measure.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            Indicates a meaning for the stratifier. This can be as simple as a
            unique identifier, or it can establish meaning in a broader context
            by drawing from a terminology, allowing stratifiers to be correlated
            across measures.
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        criteria:
          description: >-
            An expression that specifies the criteria for the stratifier. This
            is typically the name of an expression defined within a referenced
            library, but it may also be a path to a stratifier element.
          $ref: '#/components/schemas/Expression'
        component:
          description: >-
            A component of the stratifier criteria for the measure report,
            specified as either the name of a valid CQL expression defined
            within a referenced library or a valid FHIR Resource Path.
          items:
            $ref: '#/components/schemas/Measure_Component'
          type: array
      additionalProperties: false
    Measure_Component:
      description: The Measure resource provides the definition of a quality measure.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            Indicates a meaning for the stratifier component. This can be as
            simple as a unique identifier, or it can establish meaning in a
            broader context by drawing from a terminology, allowing stratifiers
            to be correlated across measures.
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            The human readable description of this stratifier criteria
            component.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        criteria:
          description: >-
            An expression that specifies the criteria for this component of the
            stratifier. This is typically the name of an expression defined
            within a referenced library, but it may also be a path to a
            stratifier element.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
      required:
        - criteria
    Measure_SupplementalData:
      description: The Measure resource provides the definition of a quality measure.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            Indicates a meaning for the supplemental data. This can be as simple
            as a unique identifier, or it can establish meaning in a broader
            context by drawing from a terminology, allowing supplemental data to
            be correlated across measures.
          $ref: '#/components/schemas/CodeableConcept'
        usage:
          description: >-
            An indicator of the intended usage for the supplemental data
            element. Supplemental data indicates the data is additional
            information requested to augment the measure information. Risk
            adjustment factor indicates the data is additional information used
            to calculate risk adjustment factors when applying a risk model to
            the measure calculation.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        criteria:
          description: >-
            The criteria for the supplemental data. This is typically the name
            of a valid expression defined within a referenced library, but it
            may also be a path to a specific data element. The criteria defines
            the data to be returned for this element.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
      required:
        - criteria
    MeasureReport:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        resourceType:
          description: This is a MeasureReport resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            A formal identifier that is used to identify this MeasureReport when
            it is represented in other formats or referenced in a specification,
            model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: >-
            The MeasureReport status. No data will be available until the
            MeasureReport status is complete.
          enum:
            - complete
            - pending
            - error
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of measure report. This may be an individual report, which
            provides the score for the measure for an individual member of the
            population; a subject-listing, which returns the list of members
            that meet the various criteria in the measure; a summary report,
            which returns a population count for each of the criteria in the
            measure; or a data-collection, which enables the MeasureReport to be
            used to exchange the data-of-interest for a quality measure.
          enum:
            - individual
            - subject-list
            - summary
            - data-collection
        _type:
          $ref: '#/components/schemas/Element'
        measure:
          description: >-
            A reference to the Measure that was calculated to produce this
            report.
          $ref: '#/components/schemas/canonical'
        subject:
          description: >-
            Optional subject identifying the individual or individuals the
            report is for.
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        reporter:
          description: >-
            The individual, location, or organization that is reporting the
            data.
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        improvementNotation:
          description: >-
            Whether improvement in the measure is noted by an increase or
            decrease in the measure score.
          $ref: '#/components/schemas/CodeableConcept'
        group:
          description: >-
            The results of the calculation, one for each population group in the
            measure.
          items:
            $ref: '#/components/schemas/MeasureReport_Group'
          type: array
        evaluatedResource:
          description: >-
            A reference to a Bundle containing the Resources that were used in
            the calculation of this measure.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - period
        - measure
        - resourceType
    MeasureReport_Group:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            The meaning of the population group as defined in the measure
            definition.
          $ref: '#/components/schemas/CodeableConcept'
        population:
          description: >-
            The populations that make up the population group, one for each type
            of population appropriate for the measure.
          items:
            $ref: '#/components/schemas/MeasureReport_Population'
          type: array
        measureScore:
          description: >-
            The measure score for this population group, calculated as
            appropriate for the measure type and scoring method, and based on
            the contents of the populations defined in the group.
          $ref: '#/components/schemas/Quantity'
        stratifier:
          description: >-
            When a measure includes multiple stratifiers, there will be a
            stratifier group for each stratifier defined by the measure.
          items:
            $ref: '#/components/schemas/MeasureReport_Stratifier'
          type: array
      additionalProperties: false
    MeasureReport_Population:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        count:
          $ref: '#/components/schemas/integer'
        _count:
          $ref: '#/components/schemas/Element'
        subjectResults:
          description: >-
            This element refers to a List of subject level MeasureReport
            resources, one for each subject in this population.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MeasureReport_Stratifier:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            The meaning of this stratifier, as defined in the measure
            definition.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        stratum:
          description: >-
            This element contains the results for a single stratum within the
            stratifier. For example, when stratifying on administrative gender,
            there will be four strata, one for each possible gender value.
          items:
            $ref: '#/components/schemas/MeasureReport_Stratum'
          type: array
      additionalProperties: false
    MeasureReport_Stratum:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          description: >-
            The value for this stratum, expressed as a CodeableConcept. When
            defining stratifiers on complex values, the value must be rendered
            such that the value for each stratum within the stratifier is
            unique.
          $ref: '#/components/schemas/CodeableConcept'
        component:
          description: A stratifier component value.
          items:
            $ref: '#/components/schemas/MeasureReport_Component'
          type: array
        population:
          description: >-
            The populations that make up the stratum, one for each type of
            population appropriate to the measure.
          items:
            $ref: '#/components/schemas/MeasureReport_Population1'
          type: array
        measureScore:
          description: >-
            The measure score for this stratum, calculated as appropriate for
            the measure type and scoring method, and based on only the members
            of this stratum.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    MeasureReport_Component:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        value:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - code
        - value
    MeasureReport_Population1:
      description: >-
        The MeasureReport resource contains the results of the calculation of a
        measure; and optionally a reference to the resources involved in that
        calculation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        count:
          $ref: '#/components/schemas/integer'
        _count:
          $ref: '#/components/schemas/Element'
        subjectResults:
          description: >-
            This element refers to a List of subject level MeasureReport
            resources, one for each subject in this population in this stratum.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Media:
      description: >-
        A photo, video, or audio recording acquired or used in healthcare. The
        actual content may be inline or provided by direct reference.
      properties:
        resourceType:
          description: This is a Media resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers associated with the image - these may include
            identifiers for the image itself, identifiers for the context of its
            collection (e.g. series ids) and context ids such as accession
            numbers or other workflow identifiers.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A procedure that is fulfilled in whole or in part by the creation of
            this media.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A larger event of which this particular event is a component or
            step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            A code that classifies whether the media is an image, video or audio
            recording or some other media category.
          $ref: '#/components/schemas/CodeableConcept'
        modality:
          description: >-
            Details of the type of the media - usually, how it was acquired
            (what type of device). If images sourced from a DICOM system, are
            wrapped in a Media resource, then this is the modality.
          $ref: '#/components/schemas/CodeableConcept'
        view:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          $ref: '#/components/schemas/Reference'
        createdDateTime:
          description: The date and time(s) at which the media was collected.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _createdDateTime:
          $ref: '#/components/schemas/Element'
        createdPeriod:
          $ref: '#/components/schemas/Period'
        issued:
          description: >-
            The date and time this version of the media was made available to
            providers, typically after having been reviewed.
          $ref: '#/components/schemas/instant'
        _issued:
          $ref: '#/components/schemas/Element'
        operator:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: Describes why the event occurred in coded or textual form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        bodySite:
          description: >-
            Indicates the site on the subject's body where the observation was
            made (i.e. the target site).
          $ref: '#/components/schemas/CodeableConcept'
        deviceName:
          description: >-
            The name of the device / manufacturer of the device  that was used
            to make the recording.
          $ref: '#/components/schemas/string'
        _deviceName:
          $ref: '#/components/schemas/Element'
        device:
          $ref: '#/components/schemas/Reference'
        height:
          $ref: '#/components/schemas/positiveInt'
        _height:
          $ref: '#/components/schemas/Element'
        width:
          $ref: '#/components/schemas/positiveInt'
        _width:
          $ref: '#/components/schemas/Element'
        frames:
          description: >-
            The number of frames in a photo. This is used with a multi-page fax,
            or an imaging acquisition context that takes multiple slices in a
            single image, or an animated gif. If there is more than one frame,
            this SHALL have a value in order to alert interface software that a
            multi-frame capable rendering widget is required.
          $ref: '#/components/schemas/positiveInt'
        _frames:
          $ref: '#/components/schemas/Element'
        duration:
          $ref: '#/components/schemas/decimal'
        _duration:
          $ref: '#/components/schemas/Element'
        content:
          description: >-
            The actual content of the media - inline or by direct reference to
            the media source file.
          $ref: '#/components/schemas/Attachment'
        note:
          description: >-
            Comments made about the media by the performer, subject or other
            participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - content
        - resourceType
    Medication:
      description: >-
        This resource is primarily used for the identification and definition of
        a medication for the purposes of prescribing, dispensing, and
        administering a medication as well as for making statements about
        medication use.
      properties:
        resourceType:
          description: This is a Medication resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifier for this medication.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        code:
          description: >-
            A code (or set of codes) that specify this medication, or a textual
            description if no code is available. Usage note: This could be a
            standard medication code such as a code from RxNorm, SNOMED CT, IDMP
            etc. It could also be a national or local formulary code, optionally
            with translations to other code systems.
          $ref: '#/components/schemas/CodeableConcept'
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        manufacturer:
          description: >-
            Describes the details of the manufacturer of the medication
            product.  This is not intended to represent the distributor of a
            medication product.
          $ref: '#/components/schemas/Reference'
        form:
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          description: >-
            Specific amount of the drug in the packaged product.  For example,
            when specifying a product that has the same strength (For example,
            Insulin glargine 100 unit per mL solution for injection), this
            attribute provides additional clarification of the package amount
            (For example, 3 mL, 10mL, etc.).
          $ref: '#/components/schemas/Ratio'
        ingredient:
          description: Identifies a particular constituent of interest in the product.
          items:
            $ref: '#/components/schemas/Medication_Ingredient'
          type: array
        batch:
          $ref: '#/components/schemas/Medication_Batch'
      additionalProperties: false
      required:
        - resourceType
    Medication_Ingredient:
      description: >-
        This resource is primarily used for the identification and definition of
        a medication for the purposes of prescribing, dispensing, and
        administering a medication as well as for making statements about
        medication use.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemCodeableConcept:
          description: >-
            The actual ingredient - either a substance (simple ingredient) or
            another medication of a medication.
          $ref: '#/components/schemas/CodeableConcept'
        itemReference:
          description: >-
            The actual ingredient - either a substance (simple ingredient) or
            another medication of a medication.
          $ref: '#/components/schemas/Reference'
        isActive:
          description: >-
            Indication of whether this ingredient affects the therapeutic action
            of the drug.
          $ref: '#/components/schemas/boolean'
        _isActive:
          $ref: '#/components/schemas/Element'
        strength:
          description: >-
            Specifies how many (or how much) of the items there are in this
            Medication.  For example, 250 mg per tablet.  This is expressed as a
            ratio where the numerator is 250mg and the denominator is 1 tablet.
          $ref: '#/components/schemas/Ratio'
      additionalProperties: false
    Medication_Batch:
      description: >-
        This resource is primarily used for the identification and definition of
        a medication for the purposes of prescribing, dispensing, and
        administering a medication as well as for making statements about
        medication use.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        lotNumber:
          $ref: '#/components/schemas/string'
        _lotNumber:
          $ref: '#/components/schemas/Element'
        expirationDate:
          $ref: '#/components/schemas/dateTime'
        _expirationDate:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MedicationAdministration:
      description: >-
        Describes the event of a patient consuming or otherwise being
        administered a medication.  This may be as simple as swallowing a tablet
        or it may be a long running infusion.  Related resources tie this event
        to the authorizing prescription, and the specific encounter between
        patient and health care practitioner.
      properties:
        resourceType:
          description: This is a MedicationAdministration resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers associated with this Medication Administration that are
            defined by business processes and/or used to refer to it when a
            direct URL reference to the resource itself is not appropriate. They
            are business identifiers assigned to this resource by the performer
            or other systems and remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiates:
          description: >-
            A protocol, guideline, orderset, or other definition that was
            adhered to in whole or in part by this event.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiates:
          description: Extensions for instantiates
          items:
            $ref: '#/components/schemas/Element'
          type: array
        partOf:
          description: >-
            A larger event of which this particular event is a component or
            step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: >-
            Will generally be set to show that the administration has been
            completed.  For some long running administrations such as infusions,
            it is possible for an administration to be started but not completed
            or it may be paused while some other process is under way.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          description: A code indicating why the administration was not performed.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        category:
          description: >-
            Indicates where the medication is expected to be consumed or
            administered.
          $ref: '#/components/schemas/CodeableConcept'
        medicationCodeableConcept:
          description: >-
            Identifies the medication that was administered. This is either a
            link to a resource representing the details of the medication or a
            simple attribute carrying a code that identifies the medication from
            a known list of medications.
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          description: >-
            Identifies the medication that was administered. This is either a
            link to a resource representing the details of the medication or a
            simple attribute carrying a code that identifies the medication from
            a known list of medications.
          $ref: '#/components/schemas/Reference'
        subject:
          $ref: '#/components/schemas/Reference'
        context:
          description: >-
            The visit, admission, or other contact between patient and health
            care provider during which the medication administration was
            performed.
          $ref: '#/components/schemas/Reference'
        supportingInformation:
          description: >-
            Additional information (for example, patient height and weight) that
            supports the administration of the medication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        effectiveDateTime:
          description: >-
            A specific date/time or interval of time during which the
            administration took place (or did not take place, when the
            'notGiven' attribute is true). For many administrations, such as
            swallowing a tablet the use of dateTime is more appropriate.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _effectiveDateTime:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            A specific date/time or interval of time during which the
            administration took place (or did not take place, when the
            'notGiven' attribute is true). For many administrations, such as
            swallowing a tablet the use of dateTime is more appropriate.
          $ref: '#/components/schemas/Period'
        performer:
          description: >-
            Indicates who or what performed the medication administration and
            how they were involved.
          items:
            $ref: '#/components/schemas/MedicationAdministration_Performer'
          type: array
        reasonCode:
          description: A code indicating why the medication was given.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Condition or observation that supports why the medication was
            administered.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        request:
          description: >-
            The original request, instruction or authority to perform the
            administration.
          $ref: '#/components/schemas/Reference'
        device:
          description: >-
            The device used in administering the medication to the patient.  For
            example, a particular infusion pump.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Extra information about the medication administration that is not
            conveyed by the other attributes.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        dosage:
          description: >-
            Describes the medication dosage information details e.g. dose, rate,
            site, route, etc.
          $ref: '#/components/schemas/MedicationAdministration_Dosage'
        eventHistory:
          description: >-
            A summary of the events of interest that have occurred, such as when
            the administration was verified.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    MedicationAdministration_Performer:
      description: >-
        Describes the event of a patient consuming or otherwise being
        administered a medication.  This may be as simple as swallowing a tablet
        or it may be a long running infusion.  Related resources tie this event
        to the authorizing prescription, and the specific encounter between
        patient and health care practitioner.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        function:
          description: >-
            Distinguishes the type of involvement of the performer in the
            medication administration.
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    MedicationAdministration_Dosage:
      description: >-
        Describes the event of a patient consuming or otherwise being
        administered a medication.  This may be as simple as swallowing a tablet
        or it may be a long running infusion.  Related resources tie this event
        to the authorizing prescription, and the specific encounter between
        patient and health care practitioner.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        site:
          description: >-
            A coded specification of the anatomic site where the medication
            first entered the body.  For example, "left arm".
          $ref: '#/components/schemas/CodeableConcept'
        route:
          description: >-
            A code specifying the route or physiological path of administration
            of a therapeutic agent into or onto the patient.  For example,
            topical, intravenous, etc.
          $ref: '#/components/schemas/CodeableConcept'
        method:
          description: >-
            A coded value indicating the method by which the medication is
            intended to be or was introduced into or on the body.  This
            attribute will most often NOT be populated.  It is most commonly
            used for injections.  For example, Slow Push, Deep IV.
          $ref: '#/components/schemas/CodeableConcept'
        dose:
          description: >-
            The amount of the medication given at one administration event.
            Use this value when the administration is essentially an
            instantaneous event such as a swallowing a tablet or giving an
            injection.
          $ref: '#/components/schemas/Quantity'
        rateRatio:
          description: >-
            Identifies the speed with which the medication was or will be
            introduced into the patient.  Typically, the rate for an infusion
            e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a
            rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:
            200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.
          $ref: '#/components/schemas/Ratio'
        rateQuantity:
          description: >-
            Identifies the speed with which the medication was or will be
            introduced into the patient.  Typically, the rate for an infusion
            e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a
            rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:
            200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    MedicationDispense:
      description: >-
        Indicates that a medication product is to be or has been dispensed for a
        named person/patient.  This includes a description of the medication
        product (supply) provided and the instructions for administering the
        medication.  The medication dispense is the result of a pharmacy system
        responding to a medication order.
      properties:
        resourceType:
          description: This is a MedicationDispense resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers associated with this Medication Dispense that are
            defined by business processes and/or used to refer to it when a
            direct URL reference to the resource itself is not appropriate. They
            are business identifiers assigned to this resource by the performer
            or other systems and remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        partOf:
          description: The procedure that trigger the dispense.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReasonCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        statusReasonReference:
          $ref: '#/components/schemas/Reference'
        category:
          description: >-
            Indicates the type of medication dispense (for example, where the
            medication is expected to be consumed or administered (i.e.
            inpatient or outpatient)).
          $ref: '#/components/schemas/CodeableConcept'
        medicationCodeableConcept:
          description: >-
            Identifies the medication being administered. This is either a link
            to a resource representing the details of the medication or a simple
            attribute carrying a code that identifies the medication from a
            known list of medications.
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          description: >-
            Identifies the medication being administered. This is either a link
            to a resource representing the details of the medication or a simple
            attribute carrying a code that identifies the medication from a
            known list of medications.
          $ref: '#/components/schemas/Reference'
        subject:
          description: >-
            A link to a resource representing the person or the group to whom
            the medication will be given.
          $ref: '#/components/schemas/Reference'
        context:
          description: >-
            The encounter or episode of care that establishes the context for
            this event.
          $ref: '#/components/schemas/Reference'
        supportingInformation:
          description: Additional information that supports the medication being dispensed.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        performer:
          description: Indicates who or what performed the event.
          items:
            $ref: '#/components/schemas/MedicationDispense_Performer'
          type: array
        location:
          $ref: '#/components/schemas/Reference'
        authorizingPrescription:
          description: Indicates the medication order that is being dispensed against.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        type:
          description: >-
            Indicates the type of dispensing event that is performed. For
            example, Trial Fill, Completion of Trial, Partial Fill, Emergency
            Fill, Samples, etc.
          $ref: '#/components/schemas/CodeableConcept'
        quantity:
          description: >-
            The amount of medication that has been dispensed. Includes unit of
            measure.
          $ref: '#/components/schemas/Quantity'
        daysSupply:
          $ref: '#/components/schemas/Quantity'
        whenPrepared:
          $ref: '#/components/schemas/dateTime'
        _whenPrepared:
          $ref: '#/components/schemas/Element'
        whenHandedOver:
          description: >-
            The time the dispensed product was provided to the patient or their
            representative.
          $ref: '#/components/schemas/dateTime'
        _whenHandedOver:
          $ref: '#/components/schemas/Element'
        destination:
          description: >-
            Identification of the facility/location where the medication was
            shipped to, as part of the dispense event.
          $ref: '#/components/schemas/Reference'
        receiver:
          description: >-
            Identifies the person who picked up the medication.  This will
            usually be a patient or their caregiver, but some cases exist where
            it can be a healthcare professional.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Extra information about the dispense that could not be conveyed in
            the other attributes.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        dosageInstruction:
          description: Indicates how the medication is to be used by the patient.
          items:
            $ref: '#/components/schemas/Dosage'
          type: array
        substitution:
          description: >-
            Indicates whether or not substitution was made as part of the
            dispense.  In some cases, substitution will be expected but does not
            happen, in other cases substitution is not expected but does
            happen.  This block explains what substitution did or did not happen
            and why.  If nothing is specified, substitution was not done.
          $ref: '#/components/schemas/MedicationDispense_Substitution'
        detectedIssue:
          description: >-
            Indicates an actual or potential clinical issue with or between one
            or more active or proposed clinical actions for a patient; e.g.
            drug-drug interaction, duplicate therapy, dosage alert etc.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        eventHistory:
          description: >-
            A summary of the events of interest that have occurred, such as when
            the dispense was verified.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MedicationDispense_Performer:
      description: >-
        Indicates that a medication product is to be or has been dispensed for a
        named person/patient.  This includes a description of the medication
        product (supply) provided and the instructions for administering the
        medication.  The medication dispense is the result of a pharmacy system
        responding to a medication order.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        function:
          description: >-
            Distinguishes the type of performer in the dispense.  For example,
            date enterer, packager, final checker.
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          description: >-
            The device, practitioner, etc. who performed the action.  It should
            be assumed that the actor is the dispenser of the medication.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    MedicationDispense_Substitution:
      description: >-
        Indicates that a medication product is to be or has been dispensed for a
        named person/patient.  This includes a description of the medication
        product (supply) provided and the instructions for administering the
        medication.  The medication dispense is the result of a pharmacy system
        responding to a medication order.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        wasSubstituted:
          description: >-
            True if the dispenser dispensed a different drug or product from
            what was prescribed.
          $ref: '#/components/schemas/boolean'
        _wasSubstituted:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            A code signifying whether a different drug was dispensed from what
            was prescribed.
          $ref: '#/components/schemas/CodeableConcept'
        reason:
          description: >-
            Indicates the reason for the substitution (or lack of substitution)
            from what was prescribed.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        responsibleParty:
          description: >-
            The person or organization that has primary responsibility for the
            substitution.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    MedicationKnowledge:
      description: Information about a medication that is used to support knowledge.
      properties:
        resourceType:
          description: This is a MedicationKnowledge resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            A code that specifies this medication, or a textual description if
            no code is available. Usage note: This could be a standard
            medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It
            could also be a national or local formulary code, optionally with
            translations to other code systems.
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: >-
            A code to indicate if the medication is in active use.  The status
            refers to the validity about the information of the medication and
            not to its medicinal properties.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        manufacturer:
          description: >-
            Describes the details of the manufacturer of the medication
            product.  This is not intended to represent the distributor of a
            medication product.
          $ref: '#/components/schemas/Reference'
        doseForm:
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          description: >-
            Specific amount of the drug in the packaged product.  For example,
            when specifying a product that has the same strength (For example,
            Insulin glargine 100 unit per mL solution for injection), this
            attribute provides additional clarification of the package amount
            (For example, 3 mL, 10mL, etc.).
          $ref: '#/components/schemas/Quantity'
        synonym:
          description: >-
            Additional names for a medication, for example, the name(s) given to
            a medication in different countries.  For example, acetaminophen and
            paracetamol or salbutamol and albuterol.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _synonym:
          description: Extensions for synonym
          items:
            $ref: '#/components/schemas/Element'
          type: array
        relatedMedicationKnowledge:
          description: Associated or related knowledge about a medication.
          items:
            $ref: >-
              #/components/schemas/MedicationKnowledge_RelatedMedicationKnowledge
          type: array
        associatedMedication:
          description: >-
            Associated or related medications.  For example, if the medication
            is a branded product (e.g. Crestor), this is the Therapeutic Moeity
            (e.g. Rosuvastatin) or if this is a generic medication (e.g.
            Rosuvastatin), this would link to a branded product (e.g. Crestor).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        productType:
          description: >-
            Category of the medication or product (e.g. branded product,
            therapeutic moeity, generic product, innovator product, etc.).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        monograph:
          description: Associated documentation about the medication.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Monograph'
          type: array
        ingredient:
          description: Identifies a particular constituent of interest in the product.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Ingredient'
          type: array
        preparationInstruction:
          $ref: '#/components/schemas/markdown'
        _preparationInstruction:
          $ref: '#/components/schemas/Element'
        intendedRoute:
          description: The intended or approved route of administration.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        cost:
          description: The price of the medication.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Cost'
          type: array
        monitoringProgram:
          description: The program under which the medication is reviewed.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_MonitoringProgram'
          type: array
        administrationGuidelines:
          description: Guidelines for the administration of the medication.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_AdministrationGuidelines'
          type: array
        medicineClassification:
          description: >-
            Categorization of the medication within a formulary or
            classification system.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_MedicineClassification'
          type: array
        packaging:
          $ref: '#/components/schemas/MedicationKnowledge_Packaging'
        drugCharacteristic:
          description: >-
            Specifies descriptive properties of the medicine, such as color,
            shape, imprints, etc.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_DrugCharacteristic'
          type: array
        contraindication:
          description: >-
            Potential clinical issue with or between medication(s) (for example,
            drug-drug interaction, drug-disease contraindication, drug-allergy
            interaction, etc.).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        regulatory:
          description: Regulatory information about a medication.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Regulatory'
          type: array
        kinetics:
          description: >-
            The time course of drug absorption, distribution, metabolism and
            excretion of a medication from the body.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Kinetics'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MedicationKnowledge_RelatedMedicationKnowledge:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        reference:
          description: Associated documentation about the associated medication knowledge.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - reference
        - type
    MedicationKnowledge_Monograph:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The category of documentation about the medication. (e.g.
            professional monograph, patient education monograph).
          $ref: '#/components/schemas/CodeableConcept'
        source:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MedicationKnowledge_Ingredient:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemCodeableConcept:
          description: >-
            The actual ingredient - either a substance (simple ingredient) or
            another medication.
          $ref: '#/components/schemas/CodeableConcept'
        itemReference:
          description: >-
            The actual ingredient - either a substance (simple ingredient) or
            another medication.
          $ref: '#/components/schemas/Reference'
        isActive:
          description: >-
            Indication of whether this ingredient affects the therapeutic action
            of the drug.
          $ref: '#/components/schemas/boolean'
        _isActive:
          $ref: '#/components/schemas/Element'
        strength:
          description: >-
            Specifies how many (or how much) of the items there are in this
            Medication.  For example, 250 mg per tablet.  This is expressed as a
            ratio where the numerator is 250mg and the denominator is 1 tablet.
          $ref: '#/components/schemas/Ratio'
      additionalProperties: false
    MedicationKnowledge_Cost:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The category of the cost information.  For example, manufacturers'
            cost, patient cost, claim reimbursement cost, actual acquisition
            cost.
          $ref: '#/components/schemas/CodeableConcept'
        source:
          $ref: '#/components/schemas/string'
        _source:
          $ref: '#/components/schemas/Element'
        cost:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - cost
        - type
    MedicationKnowledge_MonitoringProgram:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MedicationKnowledge_AdministrationGuidelines:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        dosage:
          description: Dosage for the medication for the specific guidelines.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Dosage'
          type: array
        indicationCodeableConcept:
          description: >-
            Indication for use that apply to the specific administration
            guidelines.
          $ref: '#/components/schemas/CodeableConcept'
        indicationReference:
          description: >-
            Indication for use that apply to the specific administration
            guidelines.
          $ref: '#/components/schemas/Reference'
        patientCharacteristics:
          description: >-
            Characteristics of the patient that are relevant to the
            administration guidelines (for example, height, weight, gender,
            etc.).
          items:
            $ref: '#/components/schemas/MedicationKnowledge_PatientCharacteristics'
          type: array
      additionalProperties: false
    MedicationKnowledge_Dosage:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The type of dosage (for example, prophylaxis, maintenance,
            therapeutic, etc.).
          $ref: '#/components/schemas/CodeableConcept'
        dosage:
          description: Dosage for the medication for the specific guidelines.
          items:
            $ref: '#/components/schemas/Dosage'
          type: array
      additionalProperties: false
      required:
        - dosage
        - type
    MedicationKnowledge_PatientCharacteristics:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        characteristicCodeableConcept:
          description: >-
            Specific characteristic that is relevant to the administration
            guideline (e.g. height, weight, gender).
          $ref: '#/components/schemas/CodeableConcept'
        characteristicQuantity:
          description: >-
            Specific characteristic that is relevant to the administration
            guideline (e.g. height, weight, gender).
          $ref: '#/components/schemas/Quantity'
        value:
          description: 'The specific characteristic (e.g. height, weight, gender, etc.).'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _value:
          description: Extensions for value
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    MedicationKnowledge_MedicineClassification:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The type of category for the medication (for example, therapeutic
            classification, therapeutic sub-classification).
          $ref: '#/components/schemas/CodeableConcept'
        classification:
          description: >-
            Specific category assigned to the medication (e.g. anti-infective,
            anti-hypertensive, antibiotic, etc.).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - type
    MedicationKnowledge_Packaging:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            A code that defines the specific type of packaging that the
            medication can be found in (e.g. blister sleeve, tube, bottle).
          $ref: '#/components/schemas/CodeableConcept'
        quantity:
          description: >-
            The number of product units the package would contain if fully
            loaded.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    MedicationKnowledge_DrugCharacteristic:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            A code specifying which characteristic of the medicine is being
            described (for example, colour, shape, imprint).
          $ref: '#/components/schemas/CodeableConcept'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueString:
          description: Description of the characteristic.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueBase64Binary:
          description: Description of the characteristic.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MedicationKnowledge_Regulatory:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        regulatoryAuthority:
          $ref: '#/components/schemas/Reference'
        substitution:
          description: >-
            Specifies if changes are allowed when dispensing a medication from a
            regulatory perspective.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Substitution'
          type: array
        schedule:
          description: Specifies the schedule of a medication in jurisdiction.
          items:
            $ref: '#/components/schemas/MedicationKnowledge_Schedule'
          type: array
        maxDispense:
          description: >-
            The maximum number of units of the medication that can be dispensed
            in a period.
          $ref: '#/components/schemas/MedicationKnowledge_MaxDispense'
      additionalProperties: false
      required:
        - regulatoryAuthority
    MedicationKnowledge_Substitution:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        allowed:
          description: >-
            Specifies if regulation allows for changes in the medication when
            dispensing.
          $ref: '#/components/schemas/boolean'
        _allowed:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - type
    MedicationKnowledge_Schedule:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        schedule:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - schedule
    MedicationKnowledge_MaxDispense:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        period:
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
      required:
        - quantity
    MedicationKnowledge_Kinetics:
      description: Information about a medication that is used to support knowledge.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        areaUnderCurve:
          description: The drug concentration measured at certain discrete points in time.
          items:
            $ref: '#/components/schemas/Quantity'
          type: array
        lethalDose50:
          description: The median lethal dose of a drug.
          items:
            $ref: '#/components/schemas/Quantity'
          type: array
        halfLifePeriod:
          description: >-
            The time required for any specified property (e.g., the
            concentration of a substance in the body) to decrease by half.
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    MedicationRequest:
      description: >-
        An order or request for both supply of the medication and the
        instructions for administration of the medication to a patient. The
        resource is called "MedicationRequest" rather than
        "MedicationPrescription" or "MedicationOrder" to generalize the use
        across inpatient and outpatient settings, including care plans, etc.,
        and to harmonize with workflow patterns.
      properties:
        resourceType:
          description: This is a MedicationRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers associated with this medication request that are defined
            by business processes and/or used to refer to it when a direct URL
            reference to the resource itself is not appropriate. They are
            business identifiers assigned to this resource by the performer or
            other systems and remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: >-
            A code specifying the current state of the order.  Generally, this
            will be active or completed state.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
        intent:
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            Indicates the type of medication request (for example, where the
            medication is expected to be consumed or administered (i.e.
            inpatient or outpatient)).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: >-
            Indicates how quickly the Medication Request should be addressed
            with respect to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        doNotPerform:
          description: >-
            If true indicates that the provider is asking for the medication
            request not to occur.
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          $ref: '#/components/schemas/Element'
        reportedBoolean:
          description: >-
            Indicates if this record was captured as a secondary 'reported'
            record rather than as an original primary source-of-truth record.
            It may also indicate the source of the report.
          pattern: ^true|false$
          type: boolean
        _reportedBoolean:
          $ref: '#/components/schemas/Element'
        reportedReference:
          description: >-
            Indicates if this record was captured as a secondary 'reported'
            record rather than as an original primary source-of-truth record.
            It may also indicate the source of the report.
          $ref: '#/components/schemas/Reference'
        medicationCodeableConcept:
          description: >-
            Identifies the medication being requested. This is a link to a
            resource that represents the medication which may be the details of
            the medication or simply an attribute carrying a code that
            identifies the medication from a known list of medications.
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          description: >-
            Identifies the medication being requested. This is a link to a
            resource that represents the medication which may be the details of
            the medication or simply an attribute carrying a code that
            identifies the medication from a known list of medications.
          $ref: '#/components/schemas/Reference'
        subject:
          description: >-
            A link to a resource representing the person or set of individuals
            to whom the medication will be given.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this [x] was created or to which the
            creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        supportingInformation:
          description: >-
            Include additional information (for example, patient height and
            weight) that supports the ordering of the medication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        authoredOn:
          description: >-
            The date (and perhaps time) when the prescription was initially
            written or authored on.
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        requester:
          description: >-
            The individual, organization, or device that initiated the request
            and has responsibility for its activation.
          $ref: '#/components/schemas/Reference'
        performer:
          description: >-
            The specified desired performer of the medication treatment (e.g.
            the performer of the medication administration).
          $ref: '#/components/schemas/Reference'
        performerType:
          description: >-
            Indicates the type of performer of the administration of the
            medication.
          $ref: '#/components/schemas/CodeableConcept'
        recorder:
          description: >-
            The person who entered the order on behalf of another individual for
            example in the case of a verbal or a telephone order.
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: >-
            The reason or the indication for ordering or not ordering the
            medication.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Condition or observation that supports why the medication was
            ordered.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a protocol, guideline, orderset, or other
            definition that is adhered to in whole or in part by this
            MedicationRequest.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        _instantiatesCanonical:
          description: Extensions for instantiatesCanonical
          items:
            $ref: '#/components/schemas/Element'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this MedicationRequest.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: >-
            A plan or request that is fulfilled in whole or in part by this
            medication request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        groupIdentifier:
          description: >-
            A shared identifier common to all requests that were authorized more
            or less simultaneously by a single author, representing the
            identifier of the requisition or prescription.
          $ref: '#/components/schemas/Identifier'
        courseOfTherapyType:
          description: >-
            The description of the overall patte3rn of the administration of the
            medication to the patient.
          $ref: '#/components/schemas/CodeableConcept'
        insurance:
          description: >-
            Insurance plans, coverage extensions, pre-authorizations and/or
            pre-determinations that may be required for delivering the requested
            service.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Extra information about the prescription that could not be conveyed
            by the other attributes.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        dosageInstruction:
          description: Indicates how the medication is to be used by the patient.
          items:
            $ref: '#/components/schemas/Dosage'
          type: array
        dispenseRequest:
          description: >-
            Indicates the specific details for the dispense or medication supply
            part of a medication request (also known as a Medication
            Prescription or Medication Order).  Note that this information is
            not always sent with the order.  There may be in some settings (e.g.
            hospitals) institutional or system support for completing the
            dispense details in the pharmacy department.
          $ref: '#/components/schemas/MedicationRequest_DispenseRequest'
        substitution:
          description: >-
            Indicates whether or not substitution can or should be part of the
            dispense. In some cases, substitution must happen, in other cases
            substitution must not happen. This block explains the prescriber's
            intent. If nothing is specified substitution may be done.
          $ref: '#/components/schemas/MedicationRequest_Substitution'
        priorPrescription:
          description: >-
            A link to a resource representing an earlier order related order or
            prescription.
          $ref: '#/components/schemas/Reference'
        detectedIssue:
          description: >-
            Indicates an actual or potential clinical issue with or between one
            or more active or proposed clinical actions for a patient; e.g.
            Drug-drug interaction, duplicate therapy, dosage alert etc.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        eventHistory:
          description: >-
            Links to Provenance records for past versions of this resource or
            fulfilling request or event resources that identify key state
            transitions or updates that are likely to be relevant to a user
            looking at the current version of the resource.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    MedicationRequest_DispenseRequest:
      description: >-
        An order or request for both supply of the medication and the
        instructions for administration of the medication to a patient. The
        resource is called "MedicationRequest" rather than
        "MedicationPrescription" or "MedicationOrder" to generalize the use
        across inpatient and outpatient settings, including care plans, etc.,
        and to harmonize with workflow patterns.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        initialFill:
          description: >-
            Indicates the quantity or duration for the first dispense of the
            medication.
          $ref: '#/components/schemas/MedicationRequest_InitialFill'
        dispenseInterval:
          description: >-
            The minimum period of time that must occur between dispenses of the
            medication.
          $ref: '#/components/schemas/Duration'
        validityPeriod:
          description: >-
            This indicates the validity period of a prescription (stale dating
            the Prescription).
          $ref: '#/components/schemas/Period'
        numberOfRepeatsAllowed:
          description: >-
            An integer indicating the number of times, in addition to the
            original dispense, (aka refills or repeats) that the patient can
            receive the prescribed medication. Usage Notes: This integer does
            not include the original order dispense. This means that if an order
            indicates dispense 30 tablets plus "3 repeats", then the order can
            be dispensed a total of 4 times and the patient can receive a total
            of 120 tablets.  A prescriber may explicitly say that zero refills
            are permitted after the initial dispense.
          $ref: '#/components/schemas/unsignedInt'
        _numberOfRepeatsAllowed:
          $ref: '#/components/schemas/Element'
        quantity:
          $ref: '#/components/schemas/Quantity'
        expectedSupplyDuration:
          description: >-
            Identifies the period time over which the supplied product is
            expected to be used, or the length of time the dispense is expected
            to last.
          $ref: '#/components/schemas/Duration'
        performer:
          description: >-
            Indicates the intended dispensing Organization specified by the
            prescriber.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MedicationRequest_InitialFill:
      description: >-
        An order or request for both supply of the medication and the
        instructions for administration of the medication to a patient. The
        resource is called "MedicationRequest" rather than
        "MedicationPrescription" or "MedicationOrder" to generalize the use
        across inpatient and outpatient settings, including care plans, etc.,
        and to harmonize with workflow patterns.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        duration:
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    MedicationRequest_Substitution:
      description: >-
        An order or request for both supply of the medication and the
        instructions for administration of the medication to a patient. The
        resource is called "MedicationRequest" rather than
        "MedicationPrescription" or "MedicationOrder" to generalize the use
        across inpatient and outpatient settings, including care plans, etc.,
        and to harmonize with workflow patterns.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        allowedBoolean:
          description: >-
            True if the prescriber allows a different drug to be dispensed from
            what was prescribed.
          pattern: ^true|false$
          type: boolean
        _allowedBoolean:
          $ref: '#/components/schemas/Element'
        allowedCodeableConcept:
          description: >-
            True if the prescriber allows a different drug to be dispensed from
            what was prescribed.
          $ref: '#/components/schemas/CodeableConcept'
        reason:
          description: >-
            Indicates the reason for the substitution, or why substitution must
            or must not be performed.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    MedicationStatement:
      description: >-
        A record of a medication that is being consumed by a patient.   A
        MedicationStatement may indicate that the patient may be taking the
        medication now or has taken the medication in the past or will be taking
        the medication in the future.  The source of this information can be the
        patient, significant other (such as a family member or spouse), or a
        clinician.  A common scenario where this information is captured is
        during the history taking process during a patient visit or stay.   The
        medication information may come from sources such as the patient's
        memory, from a prescription bottle,  or from a list of medications the
        patient, clinician or other party maintains.


        The primary difference between a medication statement and a medication
        administration is that the medication administration has complete
        administration information and is based on actual administration
        information from the person who administered the medication.  A
        medication statement is often, if not always, less specific.  There is
        no required date/time when the medication was administered, in fact we
        only know that a source has reported the patient is taking this
        medication, where details such as time, quantity, or rate or even
        medication product may be incomplete or missing or less precise.  As
        stated earlier, the medication statement information may come from the
        patient's memory, from a prescription bottle or from a list of
        medications the patient, clinician or other party maintains.  Medication
        administration is more formal and is not missing detailed information.
      properties:
        resourceType:
          description: This is a MedicationStatement resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers associated with this Medication Statement that are
            defined by business processes and/or used to refer to it when a
            direct URL reference to the resource itself is not appropriate. They
            are business identifiers assigned to this resource by the performer
            or other systems and remain constant as the resource is updated and
            propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A plan, proposal or order that is fulfilled in whole or in part by
            this event.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A larger event of which this particular event is a component or
            step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: >-
            A code representing the patient or other source's judgment about the
            state of the medication used that this statement is about.
            Generally, this will be active or completed.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          description: >-
            Captures the reason for the current state of the
            MedicationStatement.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        category:
          description: >-
            Indicates where the medication is expected to be consumed or
            administered.
          $ref: '#/components/schemas/CodeableConcept'
        medicationCodeableConcept:
          description: >-
            Identifies the medication being administered. This is either a link
            to a resource representing the details of the medication or a simple
            attribute carrying a code that identifies the medication from a
            known list of medications.
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          description: >-
            Identifies the medication being administered. This is either a link
            to a resource representing the details of the medication or a simple
            attribute carrying a code that identifies the medication from a
            known list of medications.
          $ref: '#/components/schemas/Reference'
        subject:
          $ref: '#/components/schemas/Reference'
        context:
          description: >-
            The encounter or episode of care that establishes the context for
            this MedicationStatement.
          $ref: '#/components/schemas/Reference'
        effectiveDateTime:
          description: >-
            The interval of time during which it is being asserted that the
            patient is/was/will be taking the medication (or was not taking,
            when the MedicationStatement.taken element is No).
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _effectiveDateTime:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The interval of time during which it is being asserted that the
            patient is/was/will be taking the medication (or was not taking,
            when the MedicationStatement.taken element is No).
          $ref: '#/components/schemas/Period'
        dateAsserted:
          description: >-
            The date when the medication statement was asserted by the
            information source.
          $ref: '#/components/schemas/dateTime'
        _dateAsserted:
          $ref: '#/components/schemas/Element'
        informationSource:
          description: >-
            The person or organization that provided the information about the
            taking of this medication. Note: Use derivedFrom when a
            MedicationStatement is derived from other resources, e.g. Claim or
            MedicationRequest.
          $ref: '#/components/schemas/Reference'
        derivedFrom:
          description: >-
            Allows linking the MedicationStatement to the underlying
            MedicationRequest, or to other information that supports or is used
            to derive the MedicationStatement.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        reasonCode:
          description: A reason for why the medication is being/was taken.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Condition or observation that supports why the medication is
            being/was taken.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Provides extra information about the medication statement that is
            not conveyed by the other attributes.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        dosage:
          description: >-
            Indicates how the medication is/was or should be taken by the
            patient.
          items:
            $ref: '#/components/schemas/Dosage'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    MedicinalProduct:
      description: >-
        Detailed definition of a medicinal product, typically for uses other
        than direct patient care (e.g. regulatory use).
      properties:
        resourceType:
          description: This is a MedicinalProduct resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifier for this product. Could be an MPID.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        domain:
          $ref: '#/components/schemas/Coding'
        combinedPharmaceuticalDoseForm:
          description: >-
            The dose form for a single part product, or combined form of a
            multiple part product.
          $ref: '#/components/schemas/CodeableConcept'
        legalStatusOfSupply:
          description: >-
            The legal status of supply of the medicinal product as classified by
            the regulator.
          $ref: '#/components/schemas/CodeableConcept'
        additionalMonitoringIndicator:
          description: >-
            Whether the Medicinal Product is subject to additional monitoring
            for regulatory reasons.
          $ref: '#/components/schemas/CodeableConcept'
        specialMeasures:
          description: >-
            Whether the Medicinal Product is subject to special measures for
            regulatory reasons.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _specialMeasures:
          description: Extensions for specialMeasures
          items:
            $ref: '#/components/schemas/Element'
          type: array
        paediatricUseIndicator:
          $ref: '#/components/schemas/CodeableConcept'
        productClassification:
          description: Allows the product to be classified by various systems.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        marketingStatus:
          description: >-
            Marketing status of the medicinal product, in contrast to marketing
            authorizaton.
          items:
            $ref: '#/components/schemas/MarketingStatus'
          type: array
        pharmaceuticalProduct:
          description: Pharmaceutical aspects of product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        packagedMedicinalProduct:
          description: Package representation for the product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        attachedDocument:
          description: 'Supporting documentation, typically for regulatory submission.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        masterFile:
          description: >-
            A master file for to the medicinal product (e.g. Pharmacovigilance
            System Master File).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        contact:
          description: 'A product specific contact, person (in a role), or an organization.'
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        clinicalTrial:
          description: Clinical trials or studies that this product is involved in.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        name:
          description: 'The product''s name, including full name and possibly coded parts.'
          items:
            $ref: '#/components/schemas/MedicinalProduct_Name'
          type: array
        crossReference:
          description: >-
            Reference to another product, e.g. for linking authorised to
            investigational product.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        manufacturingBusinessOperation:
          description: >-
            An operation applied to the product, for manufacturing or
            adminsitrative purpose.
          items:
            $ref: >-
              #/components/schemas/MedicinalProduct_ManufacturingBusinessOperation
          type: array
        specialDesignation:
          description: >-
            Indicates if the medicinal product has an orphan designation for the
            treatment of a rare disease.
          items:
            $ref: '#/components/schemas/MedicinalProduct_SpecialDesignation'
          type: array
      additionalProperties: false
      required:
        - name
        - resourceType
    MedicinalProduct_Name:
      description: >-
        Detailed definition of a medicinal product, typically for uses other
        than direct patient care (e.g. regulatory use).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        productName:
          $ref: '#/components/schemas/string'
        _productName:
          $ref: '#/components/schemas/Element'
        namePart:
          description: Coding words or phrases of the name.
          items:
            $ref: '#/components/schemas/MedicinalProduct_NamePart'
          type: array
        countryLanguage:
          description: Country where the name applies.
          items:
            $ref: '#/components/schemas/MedicinalProduct_CountryLanguage'
          type: array
      additionalProperties: false
    MedicinalProduct_NamePart:
      description: >-
        Detailed definition of a medicinal product, typically for uses other
        than direct patient care (e.g. regulatory use).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        part:
          $ref: '#/components/schemas/string'
        _part:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/Coding'
      additionalProperties: false
      required:
        - type
    MedicinalProduct_CountryLanguage:
      description: >-
        Detailed definition of a medicinal product, typically for uses other
        than direct patient care (e.g. regulatory use).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        country:
          $ref: '#/components/schemas/CodeableConcept'
        jurisdiction:
          $ref: '#/components/schemas/CodeableConcept'
        language:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - country
        - language
    MedicinalProduct_ManufacturingBusinessOperation:
      description: >-
        Detailed definition of a medicinal product, typically for uses other
        than direct patient care (e.g. regulatory use).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operationType:
          $ref: '#/components/schemas/CodeableConcept'
        authorisationReferenceNumber:
          $ref: '#/components/schemas/Identifier'
        effectiveDate:
          $ref: '#/components/schemas/dateTime'
        _effectiveDate:
          $ref: '#/components/schemas/Element'
        confidentialityIndicator:
          $ref: '#/components/schemas/CodeableConcept'
        manufacturer:
          description: The manufacturer or establishment associated with the process.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        regulator:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MedicinalProduct_SpecialDesignation:
      description: >-
        Detailed definition of a medicinal product, typically for uses other
        than direct patient care (e.g. regulatory use).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: 'Identifier for the designation, or procedure number.'
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        intendedUse:
          $ref: '#/components/schemas/CodeableConcept'
        indicationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        indicationReference:
          $ref: '#/components/schemas/Reference'
        status:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        species:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    MedicinalProductAuthorization:
      description: The regulatory authorization of a medicinal product.
      properties:
        resourceType:
          description: This is a MedicinalProductAuthorization resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifier for the marketing authorization, as assigned by
            a regulator.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        subject:
          $ref: '#/components/schemas/Reference'
        country:
          description: The country in which the marketing authorization has been granted.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        jurisdiction:
          description: Jurisdiction within a country.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        status:
          $ref: '#/components/schemas/CodeableConcept'
        statusDate:
          $ref: '#/components/schemas/dateTime'
        _statusDate:
          $ref: '#/components/schemas/Element'
        restoreDate:
          description: >-
            The date when a suspended the marketing or the marketing
            authorization of the product is anticipated to be restored.
          $ref: '#/components/schemas/dateTime'
        _restoreDate:
          $ref: '#/components/schemas/Element'
        validityPeriod:
          description: >-
            The beginning of the time period in which the marketing
            authorization is in the specific status shall be specified A
            complete date consisting of day, month and year shall be specified
            using the ISO 8601 date format.
          $ref: '#/components/schemas/Period'
        dataExclusivityPeriod:
          description: >-
            A period of time after authorization before generic product
            applicatiosn can be submitted.
          $ref: '#/components/schemas/Period'
        dateOfFirstAuthorization:
          description: >-
            The date when the first authorization was granted by a Medicines
            Regulatory Agency.
          $ref: '#/components/schemas/dateTime'
        _dateOfFirstAuthorization:
          $ref: '#/components/schemas/Element'
        internationalBirthDate:
          description: >-
            Date of first marketing authorization for a company's new medicinal
            product in any country in the World.
          $ref: '#/components/schemas/dateTime'
        _internationalBirthDate:
          $ref: '#/components/schemas/Element'
        legalBasis:
          $ref: '#/components/schemas/CodeableConcept'
        jurisdictionalAuthorization:
          description: Authorization in areas within a country.
          items:
            $ref: >-
              #/components/schemas/MedicinalProductAuthorization_JurisdictionalAuthorization
          type: array
        holder:
          $ref: '#/components/schemas/Reference'
        regulator:
          $ref: '#/components/schemas/Reference'
        procedure:
          description: >-
            The regulatory procedure for granting or amending a marketing
            authorization.
          $ref: '#/components/schemas/MedicinalProductAuthorization_Procedure'
      additionalProperties: false
      required:
        - resourceType
    MedicinalProductAuthorization_JurisdictionalAuthorization:
      description: The regulatory authorization of a medicinal product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: The assigned number for the marketing authorization.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        country:
          $ref: '#/components/schemas/CodeableConcept'
        jurisdiction:
          description: Jurisdiction within a country.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        legalStatusOfSupply:
          $ref: '#/components/schemas/CodeableConcept'
        validityPeriod:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    MedicinalProductAuthorization_Procedure:
      description: The regulatory authorization of a medicinal product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          $ref: '#/components/schemas/Identifier'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        datePeriod:
          $ref: '#/components/schemas/Period'
        dateDateTime:
          description: Date of procedure.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _dateDateTime:
          $ref: '#/components/schemas/Element'
        application:
          description: Applcations submitted to obtain a marketing authorization.
          items:
            $ref: '#/components/schemas/MedicinalProductAuthorization_Procedure'
          type: array
      additionalProperties: false
      required:
        - type
    MedicinalProductContraindication:
      description: >-
        The clinical particulars - indications, contraindications etc. of a
        medicinal product, including for regulatory purposes.
      properties:
        resourceType:
          description: This is a MedicinalProductContraindication resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subject:
          description: The medication for which this is an indication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        disease:
          $ref: '#/components/schemas/CodeableConcept'
        diseaseStatus:
          $ref: '#/components/schemas/CodeableConcept'
        comorbidity:
          description: A comorbidity (concurrent condition) or coinfection.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        therapeuticIndication:
          description: >-
            Information about the use of the medicinal product in relation to
            other therapies as part of the indication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        otherTherapy:
          description: >-
            Information about the use of the medicinal product in relation to
            other therapies described as part of the indication.
          items:
            $ref: '#/components/schemas/MedicinalProductContraindication_OtherTherapy'
          type: array
        population:
          description: The population group to which this applies.
          items:
            $ref: '#/components/schemas/Population'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MedicinalProductContraindication_OtherTherapy:
      description: >-
        The clinical particulars - indications, contraindications etc. of a
        medicinal product, including for regulatory purposes.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        therapyRelationshipType:
          description: >-
            The type of relationship between the medicinal product indication or
            contraindication and another therapy.
          $ref: '#/components/schemas/CodeableConcept'
        medicationCodeableConcept:
          description: >-
            Reference to a specific medication (active substance, medicinal
            product or class of products) as part of an indication or
            contraindication.
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          description: >-
            Reference to a specific medication (active substance, medicinal
            product or class of products) as part of an indication or
            contraindication.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - therapyRelationshipType
    MedicinalProductIndication:
      description: Indication for the Medicinal Product.
      properties:
        resourceType:
          description: This is a MedicinalProductIndication resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subject:
          description: The medication for which this is an indication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        diseaseSymptomProcedure:
          description: >-
            The disease, symptom or procedure that is the indication for
            treatment.
          $ref: '#/components/schemas/CodeableConcept'
        diseaseStatus:
          description: >-
            The status of the disease or symptom for which the indication
            applies.
          $ref: '#/components/schemas/CodeableConcept'
        comorbidity:
          description: >-
            Comorbidity (concurrent condition) or co-infection as part of the
            indication.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        intendedEffect:
          description: >-
            The intended effect, aim or strategy to be achieved by the
            indication.
          $ref: '#/components/schemas/CodeableConcept'
        duration:
          $ref: '#/components/schemas/Quantity'
        otherTherapy:
          description: >-
            Information about the use of the medicinal product in relation to
            other therapies described as part of the indication.
          items:
            $ref: '#/components/schemas/MedicinalProductIndication_OtherTherapy'
          type: array
        undesirableEffect:
          description: Describe the undesirable effects of the medicinal product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        population:
          description: The population group to which this applies.
          items:
            $ref: '#/components/schemas/Population'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MedicinalProductIndication_OtherTherapy:
      description: Indication for the Medicinal Product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        therapyRelationshipType:
          description: >-
            The type of relationship between the medicinal product indication or
            contraindication and another therapy.
          $ref: '#/components/schemas/CodeableConcept'
        medicationCodeableConcept:
          description: >-
            Reference to a specific medication (active substance, medicinal
            product or class of products) as part of an indication or
            contraindication.
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          description: >-
            Reference to a specific medication (active substance, medicinal
            product or class of products) as part of an indication or
            contraindication.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - therapyRelationshipType
    MedicinalProductIngredient:
      description: An ingredient of a manufactured item or pharmaceutical product.
      properties:
        resourceType:
          description: This is a MedicinalProductIngredient resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            The identifier(s) of this Ingredient that are assigned by business
            processes and/or used to refer to it when a direct URL reference to
            the resource itself is not appropriate.
          $ref: '#/components/schemas/Identifier'
        role:
          $ref: '#/components/schemas/CodeableConcept'
        allergenicIndicator:
          $ref: '#/components/schemas/boolean'
        _allergenicIndicator:
          $ref: '#/components/schemas/Element'
        manufacturer:
          description: Manufacturer of this Ingredient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        specifiedSubstance:
          description: A specified substance that comprises this ingredient.
          items:
            $ref: '#/components/schemas/MedicinalProductIngredient_SpecifiedSubstance'
          type: array
        substance:
          $ref: '#/components/schemas/MedicinalProductIngredient_Substance'
      additionalProperties: false
      required:
        - role
        - resourceType
    MedicinalProductIngredient_SpecifiedSubstance:
      description: An ingredient of a manufactured item or pharmaceutical product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        group:
          $ref: '#/components/schemas/CodeableConcept'
        confidentiality:
          $ref: '#/components/schemas/CodeableConcept'
        strength:
          description: >-
            Quantity of the substance or specified substance present in the
            manufactured item or pharmaceutical product.
          items:
            $ref: '#/components/schemas/MedicinalProductIngredient_Strength'
          type: array
      additionalProperties: false
      required:
        - code
        - group
    MedicinalProductIngredient_Strength:
      description: An ingredient of a manufactured item or pharmaceutical product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        presentation:
          description: >-
            The quantity of substance in the unit of presentation, or in the
            volume (or mass) of the single pharmaceutical product or
            manufactured item.
          $ref: '#/components/schemas/Ratio'
        presentationLowLimit:
          description: >-
            A lower limit for the quantity of substance in the unit of
            presentation. For use when there is a range of strengths, this is
            the lower limit, with the presentation attribute becoming the upper
            limit.
          $ref: '#/components/schemas/Ratio'
        concentration:
          $ref: '#/components/schemas/Ratio'
        concentrationLowLimit:
          description: >-
            A lower limit for the strength per unitary volume (or mass), for
            when there is a range. The concentration attribute then becomes the
            upper limit.
          $ref: '#/components/schemas/Ratio'
        measurementPoint:
          $ref: '#/components/schemas/string'
        _measurementPoint:
          $ref: '#/components/schemas/Element'
        country:
          description: The country or countries for which the strength range applies.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        referenceStrength:
          description: Strength expressed in terms of a reference substance.
          items:
            $ref: '#/components/schemas/MedicinalProductIngredient_ReferenceStrength'
          type: array
      additionalProperties: false
      required:
        - presentation
    MedicinalProductIngredient_ReferenceStrength:
      description: An ingredient of a manufactured item or pharmaceutical product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        substance:
          $ref: '#/components/schemas/CodeableConcept'
        strength:
          $ref: '#/components/schemas/Ratio'
        strengthLowLimit:
          $ref: '#/components/schemas/Ratio'
        measurementPoint:
          $ref: '#/components/schemas/string'
        _measurementPoint:
          $ref: '#/components/schemas/Element'
        country:
          description: The country or countries for which the strength range applies.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - strength
    MedicinalProductIngredient_Substance:
      description: An ingredient of a manufactured item or pharmaceutical product.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        strength:
          description: >-
            Quantity of the substance or specified substance present in the
            manufactured item or pharmaceutical product.
          items:
            $ref: '#/components/schemas/MedicinalProductIngredient_Strength'
          type: array
      additionalProperties: false
      required:
        - code
    MedicinalProductInteraction:
      description: >-
        The interactions of the medicinal product with other medicinal products,
        or other forms of interactions.
      properties:
        resourceType:
          description: This is a MedicinalProductInteraction resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subject:
          description: The medication for which this is a described interaction.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        interactant:
          description: 'The specific medication, food or laboratory test that interacts.'
          items:
            $ref: '#/components/schemas/MedicinalProductInteraction_Interactant'
          type: array
        type:
          description: >-
            The type of the interaction e.g. drug-drug interaction, drug-food
            interaction, drug-lab test interaction.
          $ref: '#/components/schemas/CodeableConcept'
        effect:
          description: >-
            The effect of the interaction, for example "reduced gastric
            absorption of primary medication".
          $ref: '#/components/schemas/CodeableConcept'
        incidence:
          $ref: '#/components/schemas/CodeableConcept'
        management:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - resourceType
    MedicinalProductInteraction_Interactant:
      description: >-
        The interactions of the medicinal product with other medicinal products,
        or other forms of interactions.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        itemReference:
          $ref: '#/components/schemas/Reference'
        itemCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    MedicinalProductManufactured:
      description: The manufactured item as contained in the packaged medicinal product.
      properties:
        resourceType:
          description: This is a MedicinalProductManufactured resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        manufacturedDoseForm:
          description: >-
            Dose form as manufactured and before any transformation into the
            pharmaceutical product.
          $ref: '#/components/schemas/CodeableConcept'
        unitOfPresentation:
          description: >-
            The “real world” units in which the quantity of the manufactured
            item is described.
          $ref: '#/components/schemas/CodeableConcept'
        quantity:
          $ref: '#/components/schemas/Quantity'
        manufacturer:
          description: >-
            Manufacturer of the item (Note that this should be named
            "manufacturer" but it currently causes technical issues).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        ingredient:
          description: Ingredient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        physicalCharacteristics:
          $ref: '#/components/schemas/ProdCharacteristic'
        otherCharacteristics:
          description: Other codeable characteristics.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - quantity
        - manufacturedDoseForm
        - resourceType
    MedicinalProductPackaged:
      description: A medicinal product in a container or package.
      properties:
        resourceType:
          description: This is a MedicinalProductPackaged resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        subject:
          description: The product with this is a pack for.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        legalStatusOfSupply:
          description: >-
            The legal status of supply of the medicinal product as classified by
            the regulator.
          $ref: '#/components/schemas/CodeableConcept'
        marketingStatus:
          description: Marketing information.
          items:
            $ref: '#/components/schemas/MarketingStatus'
          type: array
        marketingAuthorization:
          $ref: '#/components/schemas/Reference'
        manufacturer:
          description: Manufacturer of this Package Item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        batchIdentifier:
          description: Batch numbering.
          items:
            $ref: '#/components/schemas/MedicinalProductPackaged_BatchIdentifier'
          type: array
        packageItem:
          description: >-
            A packaging item, as a contained for medicine, possibly with other
            packaging items within.
          items:
            $ref: '#/components/schemas/MedicinalProductPackaged_PackageItem'
          type: array
      additionalProperties: false
      required:
        - packageItem
        - resourceType
    MedicinalProductPackaged_BatchIdentifier:
      description: A medicinal product in a container or package.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        outerPackaging:
          $ref: '#/components/schemas/Identifier'
        immediatePackaging:
          description: >-
            A number appearing on the immediate packaging (and not the outer
            packaging).
          $ref: '#/components/schemas/Identifier'
      additionalProperties: false
      required:
        - outerPackaging
    MedicinalProductPackaged_PackageItem:
      description: A medicinal product in a container or package.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Including possibly Data Carrier Identifier.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        quantity:
          description: >-
            The quantity of this package in the medicinal product, at the
            current level of packaging. The outermost is always 1.
          $ref: '#/components/schemas/Quantity'
        material:
          description: Material type of the package item.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        alternateMaterial:
          description: A possible alternate material for the packaging.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        device:
          description: A device accompanying a medicinal product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        manufacturedItem:
          description: >-
            The manufactured item as contained in the packaged medicinal
            product.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        packageItem:
          description: Allows containers within containers.
          items:
            $ref: '#/components/schemas/MedicinalProductPackaged_PackageItem'
          type: array
        physicalCharacteristics:
          $ref: '#/components/schemas/ProdCharacteristic'
        otherCharacteristics:
          description: Other codeable characteristics.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        shelfLifeStorage:
          description: Shelf Life and storage information.
          items:
            $ref: '#/components/schemas/ProductShelfLife'
          type: array
        manufacturer:
          description: Manufacturer of this Package Item.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - quantity
        - type
    MedicinalProductPharmaceutical:
      description: >-
        A pharmaceutical product described in terms of its composition and dose
        form.
      properties:
        resourceType:
          description: This is a MedicinalProductPharmaceutical resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: An identifier for the pharmaceutical medicinal product.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        administrableDoseForm:
          $ref: '#/components/schemas/CodeableConcept'
        unitOfPresentation:
          $ref: '#/components/schemas/CodeableConcept'
        ingredient:
          description: Ingredient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        device:
          description: Accompanying device.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        characteristics:
          description: Characteristics e.g. a products onset of action.
          items:
            $ref: >-
              #/components/schemas/MedicinalProductPharmaceutical_Characteristics
          type: array
        routeOfAdministration:
          description: >-
            The path by which the pharmaceutical product is taken into or makes
            contact with the body.
          items:
            $ref: >-
              #/components/schemas/MedicinalProductPharmaceutical_RouteOfAdministration
          type: array
      additionalProperties: false
      required:
        - administrableDoseForm
        - routeOfAdministration
        - resourceType
    MedicinalProductPharmaceutical_Characteristics:
      description: >-
        A pharmaceutical product described in terms of its composition and dose
        form.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - code
    MedicinalProductPharmaceutical_RouteOfAdministration:
      description: >-
        A pharmaceutical product described in terms of its composition and dose
        form.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        firstDose:
          description: >-
            The first dose (dose quantity) administered in humans can be
            specified, for a product under investigation, using a numerical
            value and its unit of measurement.
          $ref: '#/components/schemas/Quantity'
        maxSingleDose:
          description: >-
            The maximum single dose that can be administered as per the protocol
            of a clinical trial can be specified using a numerical value and its
            unit of measurement.
          $ref: '#/components/schemas/Quantity'
        maxDosePerDay:
          description: >-
            The maximum dose per day (maximum dose quantity to be administered
            in any one 24-h period) that can be administered as per the protocol
            referenced in the clinical trial authorisation.
          $ref: '#/components/schemas/Quantity'
        maxDosePerTreatmentPeriod:
          description: >-
            The maximum dose per treatment period that can be administered as
            per the protocol referenced in the clinical trial authorisation.
          $ref: '#/components/schemas/Ratio'
        maxTreatmentPeriod:
          description: >-
            The maximum treatment period during which an Investigational
            Medicinal Product can be administered as per the protocol referenced
            in the clinical trial authorisation.
          $ref: '#/components/schemas/Duration'
        targetSpecies:
          description: A species for which this route applies.
          items:
            $ref: '#/components/schemas/MedicinalProductPharmaceutical_TargetSpecies'
          type: array
      additionalProperties: false
      required:
        - code
    MedicinalProductPharmaceutical_TargetSpecies:
      description: >-
        A pharmaceutical product described in terms of its composition and dose
        form.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        withdrawalPeriod:
          description: >-
            A species specific time during which consumption of animal product
            is not appropriate.
          items:
            $ref: >-
              #/components/schemas/MedicinalProductPharmaceutical_WithdrawalPeriod
          type: array
      additionalProperties: false
      required:
        - code
    MedicinalProductPharmaceutical_WithdrawalPeriod:
      description: >-
        A pharmaceutical product described in terms of its composition and dose
        form.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        tissue:
          description: >-
            Coded expression for the type of tissue for which the withdrawal
            period applues, e.g. meat, milk.
          $ref: '#/components/schemas/CodeableConcept'
        value:
          $ref: '#/components/schemas/Quantity'
        supportingInformation:
          $ref: '#/components/schemas/string'
        _supportingInformation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - tissue
        - value
    MedicinalProductUndesirableEffect:
      description: Describe the undesirable effects of the medicinal product.
      properties:
        resourceType:
          description: This is a MedicinalProductUndesirableEffect resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subject:
          description: The medication for which this is an indication.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        symptomConditionEffect:
          $ref: '#/components/schemas/CodeableConcept'
        classification:
          $ref: '#/components/schemas/CodeableConcept'
        frequencyOfOccurrence:
          $ref: '#/components/schemas/CodeableConcept'
        population:
          description: The population group to which this applies.
          items:
            $ref: '#/components/schemas/Population'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MessageDefinition:
      description: >-
        Defines the characteristics of a message that can be shared between
        systems, including the type of event that initiates the message, the
        content to be transmitted and what response(s), if any, are permitted.
      properties:
        resourceType:
          description: This is a MessageDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            The business identifier that is used to reference the
            MessageDefinition and *is* expected to be consistent from server to
            server.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this message definition
            when it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the message
            definition when it is referenced in a specification, model, design
            or instance. This is an arbitrary value managed by the message
            definition author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the message definition. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the message
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        replaces:
          description: A MessageDefinition that is superseded by this definition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        status:
          description: >-
            The status of this message definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this message definition is authored
            for testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the message definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the message definition
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            message definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the message definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate message definition instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the message definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this message definition is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the message definition and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the message definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        base:
          description: >-
            The MessageDefinition that is the basis for the contents of this
            resource.
          $ref: '#/components/schemas/canonical'
        parent:
          description: >-
            Identifies a protocol or workflow that this MessageDefinition
            represents a step in.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        eventCoding:
          $ref: '#/components/schemas/Coding'
        eventUri:
          description: Event code or link to the EventDefinition.
          pattern: ^\S*$
          type: string
        _eventUri:
          $ref: '#/components/schemas/Element'
        category:
          description: The impact of the content of the message.
          enum:
            - consequence
            - currency
            - notification
        _category:
          $ref: '#/components/schemas/Element'
        focus:
          description: >-
            Identifies the resource (or resources) that are being addressed by
            the event.  For example, the Encounter for an admit message or two
            Account records for a merge.
          items:
            $ref: '#/components/schemas/MessageDefinition_Focus'
          type: array
        responseRequired:
          description: >-
            Declare at a message definition level whether a response is required
            or only upon error or success, or never.
          enum:
            - always
            - on-error
            - never
            - on-success
        _responseRequired:
          $ref: '#/components/schemas/Element'
        allowedResponse:
          description: >-
            Indicates what types of messages may be sent as an application-level
            response to this message.
          items:
            $ref: '#/components/schemas/MessageDefinition_AllowedResponse'
          type: array
        graph:
          description: >-
            Canonical reference to a GraphDefinition. If a URL is provided, it
            is the canonical reference to a [[[GraphDefinition]]] that it
            controls what resources are to be added to the bundle when building
            the document. The GraphDefinition can also specify profiles that
            apply to the various resources.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MessageDefinition_Focus:
      description: >-
        Defines the characteristics of a message that can be shared between
        systems, including the type of event that initiates the message, the
        content to be transmitted and what response(s), if any, are permitted.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        profile:
          description: >-
            A profile that reflects constraints for the focal resource (and
            potentially for related resources).
          $ref: '#/components/schemas/canonical'
        min:
          description: >-
            Identifies the minimum number of resources of this type that must be
            pointed to by a message in order for it to be valid against this
            MessageDefinition.
          $ref: '#/components/schemas/unsignedInt'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          description: >-
            Identifies the maximum number of resources of this type that must be
            pointed to by a message in order for it to be valid against this
            MessageDefinition.
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MessageDefinition_AllowedResponse:
      description: >-
        Defines the characteristics of a message that can be shared between
        systems, including the type of event that initiates the message, the
        content to be transmitted and what response(s), if any, are permitted.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        message:
          description: >-
            A reference to the message definition that must be adhered to by
            this supported response.
          $ref: '#/components/schemas/canonical'
        situation:
          description: >-
            Provides a description of the circumstances in which this response
            should be used (as opposed to one of the alternative responses).
          $ref: '#/components/schemas/markdown'
        _situation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - message
    MessageHeader:
      description: >-
        The header for a message exchange that is either requesting or
        responding to an action.  The reference(s) that are the subject of the
        action as well as other information related to the action are typically
        transmitted in a bundle in which the MessageHeader resource instance is
        the first resource in the bundle.
      properties:
        resourceType:
          description: This is a MessageHeader resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        eventCoding:
          description: >-
            Code that identifies the event this message represents and connects
            it with its definition. Events defined as part of the FHIR
            specification have the system value
            "http://terminology.hl7.org/CodeSystem/message-events".
            Alternatively uri to the EventDefinition.
          $ref: '#/components/schemas/Coding'
        eventUri:
          description: >-
            Code that identifies the event this message represents and connects
            it with its definition. Events defined as part of the FHIR
            specification have the system value
            "http://terminology.hl7.org/CodeSystem/message-events".
            Alternatively uri to the EventDefinition.
          pattern: ^\S*$
          type: string
        _eventUri:
          $ref: '#/components/schemas/Element'
        destination:
          description: The destination application which the message is intended for.
          items:
            $ref: '#/components/schemas/MessageHeader_Destination'
          type: array
        sender:
          description: >-
            Identifies the sending system to allow the use of a trust
            relationship.
          $ref: '#/components/schemas/Reference'
        enterer:
          description: >-
            The person or device that performed the data entry leading to this
            message. When there is more than one candidate, pick the most
            proximal to the message. Can provide other enterers in extensions.
          $ref: '#/components/schemas/Reference'
        author:
          description: >-
            The logical author of the message - the person or device that
            decided the described event should happen. When there is more than
            one candidate, pick the most proximal to the MessageHeader. Can
            provide other authors in extensions.
          $ref: '#/components/schemas/Reference'
        source:
          $ref: '#/components/schemas/MessageHeader_Source'
        responsible:
          description: >-
            The person or organization that accepts overall responsibility for
            the contents of the message. The implication is that the message
            event happened under the policies of the responsible party.
          $ref: '#/components/schemas/Reference'
        reason:
          description: >-
            Coded indication of the cause for the event - indicates  a reason
            for the occurrence of the event that is a focus of this message.
          $ref: '#/components/schemas/CodeableConcept'
        response:
          description: >-
            Information about the message that this message is a response to.
            Only present if this message is a response.
          $ref: '#/components/schemas/MessageHeader_Response'
        focus:
          description: >-
            The actual data of the message - a reference to the root/focus class
            of the event.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        definition:
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
      required:
        - source
        - resourceType
    MessageHeader_Destination:
      description: >-
        The header for a message exchange that is either requesting or
        responding to an action.  The reference(s) that are the subject of the
        action as well as other information related to the action are typically
        transmitted in a bundle in which the MessageHeader resource instance is
        the first resource in the bundle.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        target:
          description: >-
            Identifies the target end system in situations where the initial
            message transmission is to an intermediary system.
          $ref: '#/components/schemas/Reference'
        endpoint:
          $ref: '#/components/schemas/url'
        _endpoint:
          $ref: '#/components/schemas/Element'
        receiver:
          description: >-
            Allows data conveyed by a message to be addressed to a particular
            person or department when routing to a specific application isn't
            sufficient.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MessageHeader_Source:
      description: >-
        The header for a message exchange that is either requesting or
        responding to an action.  The reference(s) that are the subject of the
        action as well as other information related to the action are typically
        transmitted in a bundle in which the MessageHeader resource instance is
        the first resource in the bundle.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        software:
          $ref: '#/components/schemas/string'
        _software:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            Can convey versions of multiple systems in situations where a
            message passes through multiple hands.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            An e-mail, phone, website or other contact point to use to resolve
            issues with message communications.
          $ref: '#/components/schemas/ContactPoint'
        endpoint:
          $ref: '#/components/schemas/url'
        _endpoint:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MessageHeader_Response:
      description: >-
        The header for a message exchange that is either requesting or
        responding to an action.  The reference(s) that are the subject of the
        action as well as other information related to the action are typically
        transmitted in a bundle in which the MessageHeader resource instance is
        the first resource in the bundle.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            The MessageHeader.id of the message to which this message is a
            response.
          $ref: '#/components/schemas/id'
        _identifier:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            Code that identifies the type of response to the message - whether
            it was successful or not, and whether it should be resent or not.
          enum:
            - ok
            - transient-error
            - fatal-error
        _code:
          $ref: '#/components/schemas/Element'
        details:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MolecularSequence:
      description: Raw data describing a biological sequence.
      properties:
        resourceType:
          description: This is a MolecularSequence resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            A unique identifier for this particular sequence instance. This is a
            FHIR-defined id.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        type:
          description: Amino Acid Sequence/ DNA Sequence / RNA Sequence.
          enum:
            - aa
            - dna
            - rna
        _type:
          $ref: '#/components/schemas/Element'
        coordinateSystem:
          description: >-
            Whether the sequence is numbered starting at 0 (0-based numbering or
            coordinates, inclusive start, exclusive end) or starting at 1
            (1-based numbering, inclusive start and inclusive end).
          $ref: '#/components/schemas/integer'
        _coordinateSystem:
          $ref: '#/components/schemas/Element'
        patient:
          $ref: '#/components/schemas/Reference'
        specimen:
          $ref: '#/components/schemas/Reference'
        device:
          $ref: '#/components/schemas/Reference'
        performer:
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        referenceSeq:
          description: >-
            A sequence that is used as a reference to describe variants that are
            present in a sequence analyzed.
          $ref: '#/components/schemas/MolecularSequence_ReferenceSeq'
        variant:
          description: >-
            The definition of variant here originates from Sequence ontology
            ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)).
            This element can represent amino acid or nucleic sequence
            change(including insertion,deletion,SNP,etc.)  It can represent some
            complex mutation or segment variation with the assist of CIGAR
            string.
          items:
            $ref: '#/components/schemas/MolecularSequence_Variant'
          type: array
        observedSeq:
          description: >-
            Sequence that was observed. It is the result marked by referenceSeq
            along with variant records on referenceSeq. This shall start from
            referenceSeq.windowStart and end by referenceSeq.windowEnd.
          $ref: '#/components/schemas/string'
        _observedSeq:
          $ref: '#/components/schemas/Element'
        quality:
          description: >-
            An experimental feature attribute that defines the quality of the
            feature in a quantitative way, such as a phred quality score
            ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).
          items:
            $ref: '#/components/schemas/MolecularSequence_Quality'
          type: array
        readCoverage:
          description: >-
            Coverage (read depth or depth) is the average number of reads
            representing a given nucleotide in the reconstructed sequence.
          $ref: '#/components/schemas/integer'
        _readCoverage:
          $ref: '#/components/schemas/Element'
        repository:
          description: >-
            Configurations of the external repository. The repository shall
            store target's observedSeq or records related with target's
            observedSeq.
          items:
            $ref: '#/components/schemas/MolecularSequence_Repository'
          type: array
        pointer:
          description: Pointer to next atomic sequence which at most contains one variant.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        structureVariant:
          description: Information about chromosome structure variation.
          items:
            $ref: '#/components/schemas/MolecularSequence_StructureVariant'
          type: array
      additionalProperties: false
      required:
        - resourceType
    MolecularSequence_ReferenceSeq:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        chromosome:
          description: >-
            Structural unit composed of a nucleic acid molecule which controls
            its own replication through the interaction of specific proteins at
            one or more origins of replication
            ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).
          $ref: '#/components/schemas/CodeableConcept'
        genomeBuild:
          description: >-
            The Genome Build used for reference, following GRCh build versions
            e.g. 'GRCh 37'.  Version number must be included if a versioned
            release of a primary build was used.
          $ref: '#/components/schemas/string'
        _genomeBuild:
          $ref: '#/components/schemas/Element'
        orientation:
          description: >-
            A relative reference to a DNA strand based on gene orientation. The
            strand that contains the open reading frame of the gene is the
            "sense" strand, and the opposite complementary strand is the
            "antisense" strand.
          enum:
            - sense
            - antisense
        _orientation:
          $ref: '#/components/schemas/Element'
        referenceSeqId:
          description: >-
            Reference identifier of reference sequence submitted to NCBI. It
            must match the type in the MolecularSequence.type field. For
            example, the prefix, “NG_” identifies reference sequence for genes,
            “NM_” for messenger RNA transcripts, and “NP_” for amino acid
            sequences.
          $ref: '#/components/schemas/CodeableConcept'
        referenceSeqPointer:
          $ref: '#/components/schemas/Reference'
        referenceSeqString:
          $ref: '#/components/schemas/string'
        _referenceSeqString:
          $ref: '#/components/schemas/Element'
        strand:
          description: >-
            An absolute reference to a strand. The Watson strand is the strand
            whose 5'-end is on the short arm of the chromosome, and the Crick
            strand as the one whose 5'-end is on the long arm.
          enum:
            - watson
            - crick
        _strand:
          $ref: '#/components/schemas/Element'
        windowStart:
          description: >-
            Start position of the window on the reference sequence. If the
            coordinate system is either 0-based or 1-based, then start position
            is inclusive.
          $ref: '#/components/schemas/integer'
        _windowStart:
          $ref: '#/components/schemas/Element'
        windowEnd:
          description: >-
            End position of the window on the reference sequence. If the
            coordinate system is 0-based then end is exclusive and does not
            include the last position. If the coordinate system is 1-base, then
            end is inclusive and includes the last position.
          $ref: '#/components/schemas/integer'
        _windowEnd:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MolecularSequence_Variant:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        start:
          description: >-
            Start position of the variant on the  reference sequence. If the
            coordinate system is either 0-based or 1-based, then start position
            is inclusive.
          $ref: '#/components/schemas/integer'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          description: >-
            End position of the variant on the reference sequence. If the
            coordinate system is 0-based then end is exclusive and does not
            include the last position. If the coordinate system is 1-base, then
            end is inclusive and includes the last position.
          $ref: '#/components/schemas/integer'
        _end:
          $ref: '#/components/schemas/Element'
        observedAllele:
          description: >-
            An allele is one of a set of coexisting sequence variants of a gene
            ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).
            Nucleotide(s)/amino acids from start position of sequence to stop
            position of sequence on the positive (+) strand of the observed
            sequence. When the sequence  type is DNA, it should be the sequence
            on the positive (+) strand. This will lay in the range between
            variant.start and variant.end.
          $ref: '#/components/schemas/string'
        _observedAllele:
          $ref: '#/components/schemas/Element'
        referenceAllele:
          description: >-
            An allele is one of a set of coexisting sequence variants of a gene
            ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).
            Nucleotide(s)/amino acids from start position of sequence to stop
            position of sequence on the positive (+) strand of the reference
            sequence. When the sequence  type is DNA, it should be the sequence
            on the positive (+) strand. This will lay in the range between
            variant.start and variant.end.
          $ref: '#/components/schemas/string'
        _referenceAllele:
          $ref: '#/components/schemas/Element'
        cigar:
          description: >-
            Extended CIGAR string for aligning the sequence with reference
            bases. See detailed documentation
            [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).
          $ref: '#/components/schemas/string'
        _cigar:
          $ref: '#/components/schemas/Element'
        variantPointer:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    MolecularSequence_Quality:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: INDEL / SNP / Undefined variant.
          enum:
            - indel
            - snp
            - unknown
        _type:
          $ref: '#/components/schemas/Element'
        standardSequence:
          $ref: '#/components/schemas/CodeableConcept'
        start:
          description: >-
            Start position of the sequence. If the coordinate system is either
            0-based or 1-based, then start position is inclusive.
          $ref: '#/components/schemas/integer'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          description: >-
            End position of the sequence. If the coordinate system is 0-based
            then end is exclusive and does not include the last position. If the
            coordinate system is 1-base, then end is inclusive and includes the
            last position.
          $ref: '#/components/schemas/integer'
        _end:
          $ref: '#/components/schemas/Element'
        score:
          description: >-
            The score of an experimentally derived feature such as a p-value
            ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685)).
          $ref: '#/components/schemas/Quantity'
        method:
          $ref: '#/components/schemas/CodeableConcept'
        truthTP:
          description: >-
            True positives, from the perspective of the truth data, i.e. the
            number of sites in the Truth Call Set for which there are paths
            through the Query Call Set that are consistent with all of the
            alleles at this site, and for which there is an accurate genotype
            call for the event.
          $ref: '#/components/schemas/decimal'
        _truthTP:
          $ref: '#/components/schemas/Element'
        queryTP:
          description: >-
            True positives, from the perspective of the query data, i.e. the
            number of sites in the Query Call Set for which there are paths
            through the Truth Call Set that are consistent with all of the
            alleles at this site, and for which there is an accurate genotype
            call for the event.
          $ref: '#/components/schemas/decimal'
        _queryTP:
          $ref: '#/components/schemas/Element'
        truthFN:
          description: >-
            False negatives, i.e. the number of sites in the Truth Call Set for
            which there is no path through the Query Call Set that is consistent
            with all of the alleles at this site, or sites for which there is an
            inaccurate genotype call for the event. Sites with correct variant
            but incorrect genotype are counted here.
          $ref: '#/components/schemas/decimal'
        _truthFN:
          $ref: '#/components/schemas/Element'
        queryFP:
          description: >-
            False positives, i.e. the number of sites in the Query Call Set for
            which there is no path through the Truth Call Set that is consistent
            with this site. Sites with correct variant but incorrect genotype
            are counted here.
          $ref: '#/components/schemas/decimal'
        _queryFP:
          $ref: '#/components/schemas/Element'
        gtFP:
          description: >-
            The number of false positives where the non-REF alleles in the Truth
            and Query Call Sets match (i.e. cases where the truth is 1/1 and the
            query is 0/1 or similar).
          $ref: '#/components/schemas/decimal'
        _gtFP:
          $ref: '#/components/schemas/Element'
        precision:
          $ref: '#/components/schemas/decimal'
        _precision:
          $ref: '#/components/schemas/Element'
        recall:
          $ref: '#/components/schemas/decimal'
        _recall:
          $ref: '#/components/schemas/Element'
        fScore:
          description: >-
            Harmonic mean of Recall and Precision, computed as: 2 * precision *
            recall / (precision + recall).
          $ref: '#/components/schemas/decimal'
        _fScore:
          $ref: '#/components/schemas/Element'
        roc:
          description: >-
            Receiver Operator Characteristic (ROC) Curve  to give
            sensitivity/specificity tradeoff.
          $ref: '#/components/schemas/MolecularSequence_Roc'
      additionalProperties: false
    MolecularSequence_Roc:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        score:
          description: >-
            Invidual data point representing the GQ (genotype quality) score
            threshold.
          items:
            $ref: '#/components/schemas/integer'
          type: array
        _score:
          description: Extensions for score
          items:
            $ref: '#/components/schemas/Element'
          type: array
        numTP:
          description: >-
            The number of true positives if the GQ score threshold was set to
            "score" field value.
          items:
            $ref: '#/components/schemas/integer'
          type: array
        _numTP:
          description: Extensions for numTP
          items:
            $ref: '#/components/schemas/Element'
          type: array
        numFP:
          description: >-
            The number of false positives if the GQ score threshold was set to
            "score" field value.
          items:
            $ref: '#/components/schemas/integer'
          type: array
        _numFP:
          description: Extensions for numFP
          items:
            $ref: '#/components/schemas/Element'
          type: array
        numFN:
          description: >-
            The number of false negatives if the GQ score threshold was set to
            "score" field value.
          items:
            $ref: '#/components/schemas/integer'
          type: array
        _numFN:
          description: Extensions for numFN
          items:
            $ref: '#/components/schemas/Element'
          type: array
        precision:
          description: >-
            Calculated precision if the GQ score threshold was set to "score"
            field value.
          items:
            $ref: '#/components/schemas/decimal'
          type: array
        _precision:
          description: Extensions for precision
          items:
            $ref: '#/components/schemas/Element'
          type: array
        sensitivity:
          description: >-
            Calculated sensitivity if the GQ score threshold was set to "score"
            field value.
          items:
            $ref: '#/components/schemas/decimal'
          type: array
        _sensitivity:
          description: Extensions for sensitivity
          items:
            $ref: '#/components/schemas/Element'
          type: array
        fMeasure:
          description: >-
            Calculated fScore if the GQ score threshold was set to "score" field
            value.
          items:
            $ref: '#/components/schemas/decimal'
          type: array
        _fMeasure:
          description: Extensions for fMeasure
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    MolecularSequence_Repository:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Click and see / RESTful API / Need login to see / RESTful API with
            authentication / Other ways to see resource.
          enum:
            - directlink
            - openapi
            - login
            - oauth
            - other
        _type:
          $ref: '#/components/schemas/Element'
        url:
          description: >-
            URI of an external repository which contains further details about
            the genetics data.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            URI of an external repository which contains further details about
            the genetics data.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        datasetId:
          description: >-
            Id of the variant in this external repository. The server will
            understand how to use this id to call for more info about datasets
            in external repository.
          $ref: '#/components/schemas/string'
        _datasetId:
          $ref: '#/components/schemas/Element'
        variantsetId:
          description: >-
            Id of the variantset in this external repository. The server will
            understand how to use this id to call for more info about
            variantsets in external repository.
          $ref: '#/components/schemas/string'
        _variantsetId:
          $ref: '#/components/schemas/Element'
        readsetId:
          $ref: '#/components/schemas/string'
        _readsetId:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MolecularSequence_StructureVariant:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        variantType:
          $ref: '#/components/schemas/CodeableConcept'
        exact:
          description: >-
            Used to indicate if the outer and inner start-end values have the
            same meaning.
          $ref: '#/components/schemas/boolean'
        _exact:
          $ref: '#/components/schemas/Element'
        length:
          $ref: '#/components/schemas/integer'
        _length:
          $ref: '#/components/schemas/Element'
        outer:
          $ref: '#/components/schemas/MolecularSequence_Outer'
        inner:
          $ref: '#/components/schemas/MolecularSequence_Inner'
      additionalProperties: false
    MolecularSequence_Outer:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        start:
          description: >-
            Structural variant outer start. If the coordinate system is either
            0-based or 1-based, then start position is inclusive.
          $ref: '#/components/schemas/integer'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          description: >-
            Structural variant outer end. If the coordinate system is 0-based
            then end is exclusive and does not include the last position. If the
            coordinate system is 1-base, then end is inclusive and includes the
            last position.
          $ref: '#/components/schemas/integer'
        _end:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    MolecularSequence_Inner:
      description: Raw data describing a biological sequence.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        start:
          description: >-
            Structural variant inner start. If the coordinate system is either
            0-based or 1-based, then start position is inclusive.
          $ref: '#/components/schemas/integer'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          description: >-
            Structural variant inner end. If the coordinate system is 0-based
            then end is exclusive and does not include the last position. If the
            coordinate system is 1-base, then end is inclusive and includes the
            last position.
          $ref: '#/components/schemas/integer'
        _end:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    NamingSystem:
      description: >-
        A curated namespace that issues unique symbols within that namespace for
        the identification of concepts, people, devices, etc.  Represents a
        "System" used within the Identifier and Coding data types.
      properties:
        resourceType:
          description: This is a NamingSystem resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            A natural language name identifying the naming system. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this naming system. Enables tracking the life-cycle of
            the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        kind:
          description: >-
            Indicates the purpose for the naming system - what kinds of things
            does it make unique?
          enum:
            - codesystem
            - identifier
            - root
        _kind:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the naming system was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the naming system
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the naming
            system.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        responsible:
          description: >-
            The name of the organization that is responsible for issuing
            identifiers or codes for this namespace and ensuring their
            non-collision.
          $ref: '#/components/schemas/string'
        _responsible:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Categorizes a naming system for easier search by grouping related
            naming systems.
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            A free text natural language description of the naming system from a
            consumer's perspective. Details about what the namespace identifies
            including scope, granularity, version labeling, etc.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate naming system instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the naming system is intended
            to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        usage:
          description: >-
            Provides guidance on the use of the namespace, including the
            handling of formatting characters, use of upper vs. lower case, etc.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        uniqueId:
          description: >-
            Indicates how the system may be identified when referenced in
            electronic exchange.
          items:
            $ref: '#/components/schemas/NamingSystem_UniqueId'
          type: array
      additionalProperties: false
      required:
        - uniqueId
        - resourceType
    NamingSystem_UniqueId:
      description: >-
        A curated namespace that issues unique symbols within that namespace for
        the identification of concepts, people, devices, etc.  Represents a
        "System" used within the Identifier and Coding data types.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Identifies the unique identifier scheme used for this particular
            identifier.
          enum:
            - oid
            - uuid
            - uri
            - other
        _type:
          $ref: '#/components/schemas/Element'
        value:
          description: >-
            The string that should be sent over the wire to identify the code
            system or identifier system.
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
        preferred:
          description: >-
            Indicates whether this identifier is the "preferred" identifier of
            this type.
          $ref: '#/components/schemas/boolean'
        _preferred:
          $ref: '#/components/schemas/Element'
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            Identifies the period of time over which this identifier is
            considered appropriate to refer to the naming system.  Outside of
            this window, the identifier might be non-deterministic.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    NutritionOrder:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        resourceType:
          description: This is a NutritionOrder resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers assigned to this order by the order sender or by the
            order receiver.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined protocol, guideline, orderset or
            other definition that is adhered to in whole or in part by this
            NutritionOrder.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this NutritionOrder.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        instantiates:
          description: >-
            The URL pointing to a protocol, guideline, orderset or other
            definition that is adhered to in whole or in part by this
            NutritionOrder.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiates:
          description: Extensions for instantiates
          items:
            $ref: '#/components/schemas/Element'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        intent:
          description: >-
            Indicates the level of authority/intentionality associated with the
            NutrionOrder and where the request fits into the workflow chain.
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            The person (patient) who needs the nutrition order for an oral diet,
            nutritional supplement and/or enteral or formula feeding.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            An encounter that provides additional information about the
            healthcare context in which this request is made.
          $ref: '#/components/schemas/Reference'
        dateTime:
          $ref: '#/components/schemas/dateTime'
        _dateTime:
          $ref: '#/components/schemas/Element'
        orderer:
          description: >-
            The practitioner that holds legal responsibility for ordering the
            diet, nutritional supplement, or formula feedings.
          $ref: '#/components/schemas/Reference'
        allergyIntolerance:
          description: >-
            A link to a record of allergies or intolerances  which should be
            included in the nutrition order.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        foodPreferenceModifier:
          description: >-
            This modifier is used to convey order-specific modifiers about the
            type of food that should be given. These can be derived from patient
            allergies, intolerances, or preferences such as Halal, Vegan or
            Kosher. This modifier applies to the entire nutrition order
            inclusive of the oral diet, nutritional supplements and enteral
            formula feedings.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        excludeFoodModifier:
          description: >-
            This modifier is used to convey Order-specific modifier about the
            type of oral food or oral fluids that should not be given. These can
            be derived from patient allergies, intolerances, or preferences such
            as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should
            not be necessary to repeat allergy or intolerance information
            captured in the referenced AllergyIntolerance resource in the
            excludeFoodModifier, this element may be used to convey additional
            specificity related to foods that should be eliminated from the
            patient’s diet for any reason.  This modifier applies to the entire
            nutrition order inclusive of the oral diet, nutritional supplements
            and enteral formula feedings.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        oralDiet:
          $ref: '#/components/schemas/NutritionOrder_OralDiet'
        supplement:
          description: >-
            Oral nutritional products given in order to add further nutritional
            value to the patient's diet.
          items:
            $ref: '#/components/schemas/NutritionOrder_Supplement'
          type: array
        enteralFormula:
          description: >-
            Feeding provided through the gastrointestinal tract via a tube,
            catheter, or stoma that delivers nutrition distal to the oral
            cavity.
          $ref: '#/components/schemas/NutritionOrder_EnteralFormula'
        note:
          description: >-
            Comments made about the {{title}} by the requester, performer,
            subject or other participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - patient
        - resourceType
    NutritionOrder_OralDiet:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The kind of diet or dietary restriction such as fiber restricted
            diet or diabetic diet.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        schedule:
          description: >-
            The time period and frequency at which the diet should be given.
            The diet should be given for the combination of all schedules if
            more than one schedule is present.
          items:
            $ref: '#/components/schemas/Timing'
          type: array
        nutrient:
          description: >-
            Class that defines the quantity and type of nutrient modifications
            (for example carbohydrate, fiber or sodium) required for the oral
            diet.
          items:
            $ref: '#/components/schemas/NutritionOrder_Nutrient'
          type: array
        texture:
          description: >-
            Class that describes any texture modifications required for the
            patient to safely consume various types of solid foods.
          items:
            $ref: '#/components/schemas/NutritionOrder_Texture'
          type: array
        fluidConsistencyType:
          description: >-
            The required consistency (e.g. honey-thick, nectar-thick, thin,
            thickened.) of liquids or fluids served to the patient.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        instruction:
          description: >-
            Free text or additional instructions or information pertaining to
            the oral diet.
          $ref: '#/components/schemas/string'
        _instruction:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    NutritionOrder_Nutrient:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifier:
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    NutritionOrder_Texture:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifier:
          description: >-
            Any texture modifications (for solid foods) that should be made,
            e.g. easy to chew, chopped, ground, and pureed.
          $ref: '#/components/schemas/CodeableConcept'
        foodType:
          description: >-
            The food type(s) (e.g. meats, all foods)  that the texture
            modification applies to.  This could be all foods types.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    NutritionOrder_Supplement:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            The kind of nutritional supplement product required such as a high
            protein or pediatric clear liquid supplement.
          $ref: '#/components/schemas/CodeableConcept'
        productName:
          description: >-
            The product or brand name of the nutritional supplement such as
            "Acme Protein Shake".
          $ref: '#/components/schemas/string'
        _productName:
          $ref: '#/components/schemas/Element'
        schedule:
          description: >-
            The time period and frequency at which the supplement(s) should be
            given.  The supplement should be given for the combination of all
            schedules if more than one schedule is present.
          items:
            $ref: '#/components/schemas/Timing'
          type: array
        quantity:
          $ref: '#/components/schemas/Quantity'
        instruction:
          description: >-
            Free text or additional instructions or information pertaining to
            the oral supplement.
          $ref: '#/components/schemas/string'
        _instruction:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    NutritionOrder_EnteralFormula:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        baseFormulaType:
          description: >-
            The type of enteral or infant formula such as an adult standard
            formula with fiber or a soy-based infant formula.
          $ref: '#/components/schemas/CodeableConcept'
        baseFormulaProductName:
          description: >-
            The product or brand name of the enteral or infant formula product
            such as "ACME Adult Standard Formula".
          $ref: '#/components/schemas/string'
        _baseFormulaProductName:
          $ref: '#/components/schemas/Element'
        additiveType:
          description: >-
            Indicates the type of modular component such as protein,
            carbohydrate, fat or fiber to be provided in addition to or mixed
            with the base formula.
          $ref: '#/components/schemas/CodeableConcept'
        additiveProductName:
          description: >-
            The product or brand name of the type of modular component to be
            added to the formula.
          $ref: '#/components/schemas/string'
        _additiveProductName:
          $ref: '#/components/schemas/Element'
        caloricDensity:
          description: >-
            The amount of energy (calories) that the formula should provide per
            specified volume, typically per mL or fluid oz.  For example, an
            infant may require a formula that provides 24 calories per fluid
            ounce or an adult may require an enteral formula that provides 1.5
            calorie/mL.
          $ref: '#/components/schemas/Quantity'
        routeofAdministration:
          description: >-
            The route or physiological path of administration into the patient's
            gastrointestinal  tract for purposes of providing the formula
            feeding, e.g. nasogastric tube.
          $ref: '#/components/schemas/CodeableConcept'
        administration:
          description: >-
            Formula administration instructions as structured data.  This
            repeating structure allows for changing the administration rate or
            volume over time for both bolus and continuous feeding.  An example
            of this would be an instruction to increase the rate of continuous
            feeding every 2 hours.
          items:
            $ref: '#/components/schemas/NutritionOrder_Administration'
          type: array
        maxVolumeToDeliver:
          description: >-
            The maximum total quantity of formula that may be administered to a
            subject over the period of time, e.g. 1440 mL over 24 hours.
          $ref: '#/components/schemas/Quantity'
        administrationInstruction:
          description: >-
            Free text formula administration, feeding instructions or additional
            instructions or information.
          $ref: '#/components/schemas/string'
        _administrationInstruction:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    NutritionOrder_Administration:
      description: >-
        A request to supply a diet, formula feeding (enteral) or oral
        nutritional supplement to a patient/resident.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        schedule:
          description: >-
            The time period and frequency at which the enteral formula should be
            delivered to the patient.
          $ref: '#/components/schemas/Timing'
        quantity:
          description: >-
            The volume of formula to provide to the patient per the specified
            administration schedule.
          $ref: '#/components/schemas/Quantity'
        rateQuantity:
          description: >-
            The rate of administration of formula via a feeding pump, e.g. 60 mL
            per hour, according to the specified schedule.
          $ref: '#/components/schemas/Quantity'
        rateRatio:
          description: >-
            The rate of administration of formula via a feeding pump, e.g. 60 mL
            per hour, according to the specified schedule.
          $ref: '#/components/schemas/Ratio'
      additionalProperties: false
    Observation:
      description: >-
        Measurements and simple assertions made about a patient, device or other
        subject.
      properties:
        resourceType:
          description: This is a Observation resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this observation.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A plan, proposal or order that is fulfilled in whole or in part by
            this event.  For example, a MedicationRequest may require a patient
            to have laboratory test performed before  it is dispensed.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A larger event of which this particular Observation is a component
            or step.  For example,  an observation as part of a procedure.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: The status of the result value.
          enum:
            - registered
            - preliminary
            - final
            - amended
            - corrected
            - cancelled
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        category:
          description: A code that classifies the general type of observation being made.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        code:
          description: >-
            Describes what was observed. Sometimes this is called the
            observation "name".
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            The patient, or group of patients, location, or device this
            observation is about and into whose record the observation is
            placed. If the actual focus of the observation is different from the
            subject (or a sample of, part, or region of the subject), the
            `focus` element or the `code` itself specifies the actual focus of
            the observation.
          $ref: '#/components/schemas/Reference'
        focus:
          description: >-
            The actual focus of an observation when it is not the patient of
            record representing something or someone associated with the patient
            such as a spouse, parent, fetus, or donor. For example, fetus
            observations in a mother's record.  The focus of an observation
            could also be an existing condition,  an intervention, the subject's
            diet,  another observation of the subject,  or a body structure such
            as tumor or implanted device.   An example use case would be using
            the Observation resource to capture whether the mother is trained to
            change her child's tracheostomy tube. In this example, the child is
            the patient of record and the mother is the focus.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        encounter:
          description: >-
            The healthcare event  (e.g. a patient and healthcare provider
            interaction) during which this observation is made.
          $ref: '#/components/schemas/Reference'
        effectiveDateTime:
          description: >-
            The time or time-period the observed value is asserted as being
            true. For biological subjects - e.g. human patients - this is
            usually called the "physiologically relevant time". This is usually
            either the time of the procedure or of specimen collection, but very
            often the source of the date/time is not known, only the date/time
            itself.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _effectiveDateTime:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The time or time-period the observed value is asserted as being
            true. For biological subjects - e.g. human patients - this is
            usually called the "physiologically relevant time". This is usually
            either the time of the procedure or of specimen collection, but very
            often the source of the date/time is not known, only the date/time
            itself.
          $ref: '#/components/schemas/Period'
        effectiveTiming:
          description: >-
            The time or time-period the observed value is asserted as being
            true. For biological subjects - e.g. human patients - this is
            usually called the "physiologically relevant time". This is usually
            either the time of the procedure or of specimen collection, but very
            often the source of the date/time is not known, only the date/time
            itself.
          $ref: '#/components/schemas/Timing'
        effectiveInstant:
          description: >-
            The time or time-period the observed value is asserted as being
            true. For biological subjects - e.g. human patients - this is
            usually called the "physiologically relevant time". This is usually
            either the time of the procedure or of specimen collection, but very
            often the source of the date/time is not known, only the date/time
            itself.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _effectiveInstant:
          $ref: '#/components/schemas/Element'
        issued:
          description: >-
            The date and time this version of the observation was made available
            to providers, typically after the results have been reviewed and
            verified.
          $ref: '#/components/schemas/instant'
        _issued:
          $ref: '#/components/schemas/Element'
        performer:
          description: Who was responsible for asserting the observed value as "true".
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        valueQuantity:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Quantity'
        valueCodeableConcept:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/CodeableConcept'
        valueString:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueRange:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Ratio'
        valueSampledData:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/SampledData'
        valueTime:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valuePeriod:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Period'
        dataAbsentReason:
          description: >-
            Provides a reason why the expected value in the element
            Observation.value[x] is missing.
          $ref: '#/components/schemas/CodeableConcept'
        interpretation:
          description: >-
            A categorical assessment of an observation value.  For example,
            high, low, normal.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: Comments about the observation or the results.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        bodySite:
          description: >-
            Indicates the site on the subject's body where the observation was
            made (i.e. the target site).
          $ref: '#/components/schemas/CodeableConcept'
        method:
          $ref: '#/components/schemas/CodeableConcept'
        specimen:
          $ref: '#/components/schemas/Reference'
        device:
          $ref: '#/components/schemas/Reference'
        referenceRange:
          description: >-
            Guidance on how to interpret the value by comparison to a normal or
            recommended range.  Multiple reference ranges are interpreted as an
            "OR".   In other words, to represent two distinct target
            populations, two `referenceRange` elements would be used.
          items:
            $ref: '#/components/schemas/Observation_ReferenceRange'
          type: array
        hasMember:
          description: >-
            This observation is a group observation (e.g. a battery, a panel of
            tests, a set of vital sign measurements) that includes the target as
            a member of the group.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        derivedFrom:
          description: >-
            The target resource that represents a measurement from which this
            observation value is derived. For example, a calculated anion gap or
            a fetal measurement based on an ultrasound image.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        component:
          description: >-
            Some observations have multiple component observations.  These
            component observations are expressed as separate code value pairs
            that share the same attributes.  Examples include systolic and
            diastolic component observations for blood pressure measurement and
            multiple component observations for genetics observations.
          items:
            $ref: '#/components/schemas/Observation_Component'
          type: array
      additionalProperties: false
      required:
        - code
        - resourceType
    Observation_ReferenceRange:
      description: >-
        Measurements and simple assertions made about a patient, device or other
        subject.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        low:
          description: >-
            The value of the low bound of the reference range.  The low bound of
            the reference range endpoint is inclusive of the value (e.g.
            reference range is >=5 - <=9). If the low bound is omitted,  it is
            assumed to be meaningless (e.g. reference range is <=2.3).
          $ref: '#/components/schemas/Quantity'
        high:
          description: >-
            The value of the high bound of the reference range.  The high bound
            of the reference range endpoint is inclusive of the value (e.g.
            reference range is >=5 - <=9). If the high bound is omitted,  it is
            assumed to be meaningless (e.g. reference range is >= 2.3).
          $ref: '#/components/schemas/Quantity'
        type:
          description: >-
            Codes to indicate the what part of the targeted reference population
            it applies to. For example, the normal or therapeutic range.
          $ref: '#/components/schemas/CodeableConcept'
        appliesTo:
          description: >-
            Codes to indicate the target population this reference range applies
            to.  For example, a reference range may be based on the normal
            population or a particular sex or race.  Multiple `appliesTo`  are
            interpreted as an "AND" of the target populations.  For example, to
            represent a target population of African American females, both a
            code of female and a code for African American would be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        age:
          description: >-
            The age at which this reference range is applicable. This is a
            neonatal age (e.g. number of weeks at term) if the meaning says so.
          $ref: '#/components/schemas/Range'
        text:
          description: >-
            Text based reference range in an observation which may be used when
            a quantitative range is not appropriate for an observation.  An
            example would be a reference value of "Negative" or a list or table
            of "normals".
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Observation_Component:
      description: >-
        Measurements and simple assertions made about a patient, device or other
        subject.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            Describes what was observed. Sometimes this is called the
            observation "code".
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Quantity'
        valueCodeableConcept:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/CodeableConcept'
        valueString:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueRange:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Range'
        valueRatio:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Ratio'
        valueSampledData:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/SampledData'
        valueTime:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valuePeriod:
          description: >-
            The information determined as a result of making the observation, if
            the information has a simple value.
          $ref: '#/components/schemas/Period'
        dataAbsentReason:
          description: >-
            Provides a reason why the expected value in the element
            Observation.component.value[x] is missing.
          $ref: '#/components/schemas/CodeableConcept'
        interpretation:
          description: >-
            A categorical assessment of an observation value.  For example,
            high, low, normal.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        referenceRange:
          description: >-
            Guidance on how to interpret the value by comparison to a normal or
            recommended range.
          items:
            $ref: '#/components/schemas/Observation_ReferenceRange'
          type: array
      additionalProperties: false
      required:
        - code
    ObservationDefinition:
      description: >-
        Set of definitional characteristics for a kind of observation or
        measurement produced or consumed by an orderable health care service.
      properties:
        resourceType:
          description: This is a ObservationDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: A code that classifies the general type of observation.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        code:
          description: >-
            Describes what will be observed. Sometimes this is called the
            observation "name".
          $ref: '#/components/schemas/CodeableConcept'
        identifier:
          description: A unique identifier assigned to this ObservationDefinition artifact.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        permittedDataType:
          description: >-
            The data types allowed for the value element of the instance
            observations conforming to this ObservationDefinition.
          items:
            enum:
              - Quantity
              - CodeableConcept
              - string
              - boolean
              - integer
              - Range
              - Ratio
              - SampledData
              - time
              - dateTime
              - Period
          type: array
        _permittedDataType:
          description: Extensions for permittedDataType
          items:
            $ref: '#/components/schemas/Element'
          type: array
        multipleResultsAllowed:
          description: >-
            Multiple results allowed for observations conforming to this
            ObservationDefinition.
          $ref: '#/components/schemas/boolean'
        _multipleResultsAllowed:
          $ref: '#/components/schemas/Element'
        method:
          $ref: '#/components/schemas/CodeableConcept'
        preferredReportName:
          description: >-
            The preferred name to be used when reporting the results of
            observations conforming to this ObservationDefinition.
          $ref: '#/components/schemas/string'
        _preferredReportName:
          $ref: '#/components/schemas/Element'
        quantitativeDetails:
          $ref: '#/components/schemas/ObservationDefinition_QuantitativeDetails'
        qualifiedInterval:
          description: >-
            Multiple  ranges of results qualified by different contexts for
            ordinal or continuous observations conforming to this
            ObservationDefinition.
          items:
            $ref: '#/components/schemas/ObservationDefinition_QualifiedInterval'
          type: array
        validCodedValueSet:
          description: >-
            The set of valid coded results for the observations  conforming to
            this ObservationDefinition.
          $ref: '#/components/schemas/Reference'
        normalCodedValueSet:
          description: >-
            The set of normal coded results for the observations conforming to
            this ObservationDefinition.
          $ref: '#/components/schemas/Reference'
        abnormalCodedValueSet:
          description: >-
            The set of abnormal coded results for the observation conforming to
            this ObservationDefinition.
          $ref: '#/components/schemas/Reference'
        criticalCodedValueSet:
          description: >-
            The set of critical coded results for the observation conforming to
            this ObservationDefinition.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
        - resourceType
    ObservationDefinition_QuantitativeDetails:
      description: >-
        Set of definitional characteristics for a kind of observation or
        measurement produced or consumed by an orderable health care service.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        customaryUnit:
          description: >-
            Customary unit used to report quantitative results of observations
            conforming to this ObservationDefinition.
          $ref: '#/components/schemas/CodeableConcept'
        unit:
          description: >-
            SI unit used to report quantitative results of observations
            conforming to this ObservationDefinition.
          $ref: '#/components/schemas/CodeableConcept'
        conversionFactor:
          description: >-
            Factor for converting value expressed with SI unit to value
            expressed with customary unit.
          $ref: '#/components/schemas/decimal'
        _conversionFactor:
          $ref: '#/components/schemas/Element'
        decimalPrecision:
          description: >-
            Number of digits after decimal separator when the results of such
            observations are of type Quantity.
          $ref: '#/components/schemas/integer'
        _decimalPrecision:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ObservationDefinition_QualifiedInterval:
      description: >-
        Set of definitional characteristics for a kind of observation or
        measurement produced or consumed by an orderable health care service.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          description: >-
            The category of interval of values for continuous or ordinal
            observations conforming to this ObservationDefinition.
          enum:
            - reference
            - critical
            - absolute
        _category:
          $ref: '#/components/schemas/Element'
        range:
          description: >-
            The low and high values determining the interval. There may be only
            one of the two.
          $ref: '#/components/schemas/Range'
        context:
          description: >-
            Codes to indicate the health context the range applies to. For
            example, the normal or therapeutic range.
          $ref: '#/components/schemas/CodeableConcept'
        appliesTo:
          description: >-
            Codes to indicate the target population this reference range applies
            to.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        gender:
          description: Sex of the population the range applies to.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          $ref: '#/components/schemas/Element'
        age:
          description: >-
            The age at which this reference range is applicable. This is a
            neonatal age (e.g. number of weeks at term) if the meaning says so.
          $ref: '#/components/schemas/Range'
        gestationalAge:
          description: >-
            The gestational age to which this reference range is applicable, in
            the context of pregnancy.
          $ref: '#/components/schemas/Range'
        condition:
          $ref: '#/components/schemas/string'
        _condition:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    OperationDefinition:
      description: >-
        A formal computable definition of an operation (on the RESTful
        interface) or a named query (using the search interaction).
      properties:
        resourceType:
          description: This is a OperationDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this operation definition
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this operation definition is (or will be)
            published. This URL can be the target of a canonical reference. It
            SHALL remain the same when the operation definition is stored on
            different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the
            operation definition when it is referenced in a specification,
            model, design or instance. This is an arbitrary value managed by the
            operation definition author and is not expected to be globally
            unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
            managed version is not available. There is also no expectation that
            versions can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the operation definition. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the operation
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this operation definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        kind:
          description: Whether this is an operation or a named query.
          enum:
            - operation
            - query
        _kind:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this operation definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the operation definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the operation
            definition changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            operation definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the operation definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate operation definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the operation definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this operation definition is needed and why it
            has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        affectsState:
          description: >-
            Whether the operation affects state. Side effects such as producing
            audit trail entries do not count as 'affecting  state'.
          $ref: '#/components/schemas/boolean'
        _affectsState:
          $ref: '#/components/schemas/Element'
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            Additional information about how to use this operation or named
            query.
          $ref: '#/components/schemas/markdown'
        _comment:
          $ref: '#/components/schemas/Element'
        base:
          description: >-
            Indicates that this operation definition is a constraining profile
            on the base.
          $ref: '#/components/schemas/canonical'
        resource:
          description: The types on which this operation can be executed.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _resource:
          description: Extensions for resource
          items:
            $ref: '#/components/schemas/Element'
          type: array
        system:
          description: >-
            Indicates whether this operation or named query can be invoked at
            the system level (e.g. without needing to choose a resource type for
            the context).
          $ref: '#/components/schemas/boolean'
        _system:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Indicates whether this operation or named query can be invoked at
            the resource type level for any given resource type level (e.g.
            without needing to choose a specific resource id for the context).
          $ref: '#/components/schemas/boolean'
        _type:
          $ref: '#/components/schemas/Element'
        instance:
          description: >-
            Indicates whether this operation can be invoked on a particular
            instance of one of the given types.
          $ref: '#/components/schemas/boolean'
        _instance:
          $ref: '#/components/schemas/Element'
        inputProfile:
          description: >-
            Additional validation information for the in parameters - a single
            profile that covers all the parameters. The profile is a constraint
            on the parameters resource as a whole.
          $ref: '#/components/schemas/canonical'
        outputProfile:
          description: >-
            Additional validation information for the out parameters - a single
            profile that covers all the parameters. The profile is a constraint
            on the parameters resource.
          $ref: '#/components/schemas/canonical'
        parameter:
          description: The parameters for the operation/query.
          items:
            $ref: '#/components/schemas/OperationDefinition_Parameter'
          type: array
        overload:
          description: >-
            Defines an appropriate combination of parameters to use when
            invoking this operation, to help code generators when generating
            overloaded parameter sets for this operation.
          items:
            $ref: '#/components/schemas/OperationDefinition_Overload'
          type: array
      additionalProperties: false
      required:
        - resourceType
    OperationDefinition_Parameter:
      description: >-
        A formal computable definition of an operation (on the RESTful
        interface) or a named query (using the search interaction).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/code'
        _name:
          $ref: '#/components/schemas/Element'
        use:
          description: Whether this is an input or an output parameter.
          enum:
            - in
            - out
        _use:
          $ref: '#/components/schemas/Element'
        min:
          description: >-
            The minimum number of times this parameter SHALL appear in the
            request or response.
          $ref: '#/components/schemas/integer'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          description: >-
            The maximum number of times this element is permitted to appear in
            the request or response.
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
        documentation:
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/code'
        _type:
          $ref: '#/components/schemas/Element'
        targetProfile:
          description: >-
            Used when the type is "Reference" or "canonical", and identifies a
            profile structure or implementation Guide that applies to the target
            of the reference this parameter refers to. If any profiles are
            specified, then the content must conform to at least one of them.
            The URL can be a local reference - to a contained
            StructureDefinition, or a reference to another StructureDefinition
            or Implementation Guide by a canonical URL. When an implementation
            guide is specified, the target resource SHALL conform to at least
            one profile defined in the implementation guide.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        searchType:
          description: >-
            How the parameter is understood as a search parameter. This is only
            used if the parameter type is 'string'.
          enum:
            - number
            - date
            - string
            - token
            - reference
            - composite
            - quantity
            - uri
            - special
        _searchType:
          $ref: '#/components/schemas/Element'
        binding:
          description: >-
            Binds to a value set if this parameter is coded (code, Coding,
            CodeableConcept).
          $ref: '#/components/schemas/OperationDefinition_Binding'
        referencedFrom:
          description: >-
            Identifies other resource parameters within the operation invocation
            that are expected to resolve to this resource.
          items:
            $ref: '#/components/schemas/OperationDefinition_ReferencedFrom'
          type: array
        part:
          description: The parts of a nested Parameter.
          items:
            $ref: '#/components/schemas/OperationDefinition_Parameter'
          type: array
      additionalProperties: false
    OperationDefinition_Binding:
      description: >-
        A formal computable definition of an operation (on the RESTful
        interface) or a named query (using the search interaction).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        strength:
          description: >-
            Indicates the degree of conformance expectations associated with
            this binding - that is, the degree to which the provided value set
            must be adhered to in the instances.
          enum:
            - required
            - extensible
            - preferred
            - example
        _strength:
          $ref: '#/components/schemas/Element'
        valueSet:
          description: >-
            Points to the value set or external definition (e.g. implicit value
            set) that identifies the set of codes to be used.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
      required:
        - valueSet
    OperationDefinition_ReferencedFrom:
      description: >-
        A formal computable definition of an operation (on the RESTful
        interface) or a named query (using the search interaction).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        source:
          description: >-
            The name of the parameter or dot-separated path of parameter names
            pointing to the resource parameter that is expected to contain a
            reference to this resource.
          $ref: '#/components/schemas/string'
        _source:
          $ref: '#/components/schemas/Element'
        sourceId:
          description: >-
            The id of the element in the referencing resource that is expected
            to resolve to this resource.
          $ref: '#/components/schemas/string'
        _sourceId:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    OperationDefinition_Overload:
      description: >-
        A formal computable definition of an operation (on the RESTful
        interface) or a named query (using the search interaction).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        parameterName:
          description: Name of parameter to include in overload.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _parameterName:
          description: Extensions for parameterName
          items:
            $ref: '#/components/schemas/Element'
          type: array
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    OperationOutcome:
      description: >-
        A collection of error, warning, or information messages that result from
        a system action.
      properties:
        resourceType:
          description: This is a OperationOutcome resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        issue:
          description: >-
            An error, warning, or information message that results from a system
            action.
          items:
            $ref: '#/components/schemas/OperationOutcome_Issue'
          type: array
      additionalProperties: false
      required:
        - issue
        - resourceType
    OperationOutcome_Issue:
      description: >-
        A collection of error, warning, or information messages that result from
        a system action.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        severity:
          description: >-
            Indicates whether the issue indicates a variation from successful
            processing.
          enum:
            - fatal
            - error
            - warning
            - information
        _severity:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            Describes the type of the issue. The system that creates an
            OperationOutcome SHALL choose the most applicable code from the
            IssueType value set, and may additional provide its own code for the
            error in the details element.
          enum:
            - invalid
            - structure
            - required
            - value
            - invariant
            - security
            - login
            - unknown
            - expired
            - forbidden
            - suppressed
            - processing
            - not-supported
            - duplicate
            - multiple-matches
            - not-found
            - deleted
            - too-long
            - code-invalid
            - extension
            - too-costly
            - business-rule
            - conflict
            - transient
            - lock-error
            - no-store
            - exception
            - timeout
            - incomplete
            - throttled
            - informational
        _code:
          $ref: '#/components/schemas/Element'
        details:
          description: >-
            Additional details about the error. This may be a text description
            of the error or a system code that identifies the error.
          $ref: '#/components/schemas/CodeableConcept'
        diagnostics:
          $ref: '#/components/schemas/string'
        _diagnostics:
          $ref: '#/components/schemas/Element'
        location:
          description: >-
            This element is deprecated because it is XML specific. It is
            replaced by issue.expression, which is format independent, and
            simpler to parse.


            For resource issues, this will be a simple XPath limited to element
            names, repetition indicators and the default child accessor that
            identifies one of the elements in the resource that caused this
            issue to be raised.  For HTTP errors, will be "http." + the
            parameter name.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _location:
          description: Extensions for location
          items:
            $ref: '#/components/schemas/Element'
          type: array
        expression:
          description: >-
            A [simple subset of FHIRPath](fhirpath.html#simple) limited to
            element names, repetition indicators and the default child accessor
            that identifies one of the elements in the resource that caused this
            issue to be raised.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _expression:
          description: Extensions for expression
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    Organization:
      description: >-
        A formally or informally recognized grouping of people or organizations
        formed for the purpose of achieving some form of collective action.
        Includes companies, institutions, corporations, departments, community
        groups, healthcare practice groups, payer/insurer, etc.
      properties:
        resourceType:
          description: This is a Organization resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier for the organization that is used to identify the
            organization across multiple disparate systems.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        type:
          description: The kind(s) of organization that this is.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        alias:
          description: >-
            A list of alternate names that the organization is known as, or was
            known as in the past.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _alias:
          description: Extensions for alias
          items:
            $ref: '#/components/schemas/Element'
          type: array
        telecom:
          description: A contact detail for the organization.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          description: An address for the organization.
          items:
            $ref: '#/components/schemas/Address'
          type: array
        partOf:
          $ref: '#/components/schemas/Reference'
        contact:
          description: Contact for the organization for a certain purpose.
          items:
            $ref: '#/components/schemas/Organization_Contact'
          type: array
        endpoint:
          description: >-
            Technical endpoints providing access to services operated for the
            organization.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Organization_Contact:
      description: >-
        A formally or informally recognized grouping of people or organizations
        formed for the purpose of achieving some form of collective action.
        Includes companies, institutions, corporations, departments, community
        groups, healthcare practice groups, payer/insurer, etc.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        purpose:
          $ref: '#/components/schemas/CodeableConcept'
        name:
          $ref: '#/components/schemas/HumanName'
        telecom:
          description: >-
            A contact detail (e.g. a telephone number or an email address) by
            which the party may be contacted.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          $ref: '#/components/schemas/Address'
      additionalProperties: false
    OrganizationAffiliation:
      description: >-
        Defines an affiliation/assotiation/relationship between 2 distinct
        oganizations, that is not a part-of relationship/sub-division
        relationship.
      properties:
        resourceType:
          description: This is a OrganizationAffiliation resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifiers that are specific to this role.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The period during which the participatingOrganization is affiliated
            with the primary organization.
          $ref: '#/components/schemas/Period'
        organization:
          description: >-
            Organization where the role is available (primary organization/has
            members).
          $ref: '#/components/schemas/Reference'
        participatingOrganization:
          description: >-
            The Participating Organization provides/performs the role(s) defined
            by the code to the Primary Organization (e.g. providing services or
            is a member of).
          $ref: '#/components/schemas/Reference'
        network:
          description: >-
            Health insurance provider network in which the
            participatingOrganization provides the role's services (if defined)
            at the indicated locations (if defined).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        code:
          description: >-
            Definition of the role the participatingOrganization plays in the
            association.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialty:
          description: >-
            Specific specialty of the participatingOrganization in the context
            of the role.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        location:
          description: The location(s) at which the role occurs.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        healthcareService:
          description: Healthcare services provided through the role.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        telecom:
          description: >-
            Contact details at the participatingOrganization relevant to this
            Affiliation.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        endpoint:
          description: >-
            Technical endpoints providing access to services operated for this
            role.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Parameters:
      description: >-
        This resource is a non-persisted resource used to pass information into
        and back from an [operation](operations.html). It has no other use, and
        there is no RESTful endpoint associated with it.
      properties:
        resourceType:
          description: This is a Parameters resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        parameter:
          description: A parameter passed to or received from the operation.
          items:
            $ref: '#/components/schemas/Parameters_Parameter'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Parameters_Parameter:
      description: >-
        This resource is a non-persisted resource used to pass information into
        and back from an [operation](operations.html). It has no other use, and
        there is no RESTful endpoint associated with it.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        valueBase64Binary:
          description: If the parameter is a data type.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: If the parameter is a data type.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: If the parameter is a data type.
          pattern: ^\S*$
          type: string
        _valueCanonical:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: If the parameter is a data type.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: If the parameter is a data type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: If the parameter is a data type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: If the parameter is a data type.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueId:
          description: If the parameter is a data type.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: If the parameter is a data type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _valueInstant:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: If the parameter is a data type.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: If the parameter is a data type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          $ref: '#/components/schemas/Element'
        valueOid:
          description: If the parameter is a data type.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: If the parameter is a data type.
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          $ref: '#/components/schemas/Element'
        valueString:
          description: If the parameter is a data type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: If the parameter is a data type.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: If the parameter is a data type.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: If the parameter is a data type.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: If the parameter is a data type.
          pattern: ^\S*$
          type: string
        _valueUrl:
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: If the parameter is a data type.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _valueUuid:
          $ref: '#/components/schemas/Element'
        valueAddress:
          $ref: '#/components/schemas/Address'
        valueAge:
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          $ref: '#/components/schemas/Count'
        valueDistance:
          $ref: '#/components/schemas/Distance'
        valueDuration:
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          $ref: '#/components/schemas/Money'
        valuePeriod:
          $ref: '#/components/schemas/Period'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueRange:
          $ref: '#/components/schemas/Range'
        valueRatio:
          $ref: '#/components/schemas/Ratio'
        valueReference:
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          $ref: '#/components/schemas/Signature'
        valueTiming:
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          $ref: '#/components/schemas/Meta'
        resource:
          $ref: '#/components/schemas/ResourceList'
        part:
          description: A named part of a multi-part parameter.
          items:
            $ref: '#/components/schemas/Parameters_Parameter'
          type: array
      additionalProperties: false
    Patient:
      description: >-
        Demographics and other administrative information about an individual or
        animal receiving care or other health-related services.
      properties:
        resourceType:
          description: This is a Patient resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: An identifier for this patient.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          description: >-
            Whether this patient record is in active use.

            Many systems use this property to mark as non-current patients, such
            as those that have not been seen for a period of time based on an
            organization's business rules.


            It is often used to filter patient lists to exclude inactive
            patients


            Deceased patients may also be marked as inactive for the same
            reasons, but may be active for some time after death.
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        name:
          description: A name associated with the individual.
          items:
            $ref: '#/components/schemas/HumanName'
          type: array
        telecom:
          description: >-
            A contact detail (e.g. a telephone number or an email address) by
            which the individual may be contacted.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        gender:
          description: >-
            Administrative Gender - the gender that the patient is considered to
            have for administration and record keeping purposes.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          $ref: '#/components/schemas/Element'
        birthDate:
          $ref: '#/components/schemas/date'
        _birthDate:
          $ref: '#/components/schemas/Element'
        deceasedBoolean:
          description: Indicates if the individual is deceased or not.
          pattern: ^true|false$
          type: boolean
        _deceasedBoolean:
          $ref: '#/components/schemas/Element'
        deceasedDateTime:
          description: Indicates if the individual is deceased or not.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _deceasedDateTime:
          $ref: '#/components/schemas/Element'
        address:
          description: An address for the individual.
          items:
            $ref: '#/components/schemas/Address'
          type: array
        maritalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        multipleBirthBoolean:
          description: >-
            Indicates whether the patient is part of a multiple (boolean) or
            indicates the actual birth order (integer).
          pattern: ^true|false$
          type: boolean
        _multipleBirthBoolean:
          $ref: '#/components/schemas/Element'
        multipleBirthInteger:
          description: >-
            Indicates whether the patient is part of a multiple (boolean) or
            indicates the actual birth order (integer).
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _multipleBirthInteger:
          $ref: '#/components/schemas/Element'
        photo:
          description: Image of the patient.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        contact:
          description: 'A contact party (e.g. guardian, partner, friend) for the patient.'
          items:
            $ref: '#/components/schemas/Patient_Contact'
          type: array
        communication:
          description: >-
            A language which may be used to communicate with the patient about
            his or her health.
          items:
            $ref: '#/components/schemas/Patient_Communication'
          type: array
        generalPractitioner:
          description: Patient's nominated care provider.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        managingOrganization:
          $ref: '#/components/schemas/Reference'
        link:
          description: >-
            Link to another patient resource that concerns the same actual
            patient.
          items:
            $ref: '#/components/schemas/Patient_Link'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Patient_Contact:
      description: >-
        Demographics and other administrative information about an individual or
        animal receiving care or other health-related services.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        relationship:
          description: >-
            The nature of the relationship between the patient and the contact
            person.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        name:
          $ref: '#/components/schemas/HumanName'
        telecom:
          description: >-
            A contact detail for the person, e.g. a telephone number or an email
            address.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          $ref: '#/components/schemas/Address'
        gender:
          description: >-
            Administrative Gender - the gender that the contact person is
            considered to have for administration and record keeping purposes.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          $ref: '#/components/schemas/Element'
        organization:
          description: >-
            Organization on behalf of which the contact is acting or for which
            the contact is working.
          $ref: '#/components/schemas/Reference'
        period:
          description: >-
            The period during which this contact person or organization is valid
            to be contacted relating to this patient.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Patient_Communication:
      description: >-
        Demographics and other administrative information about an individual or
        animal receiving care or other health-related services.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        language:
          description: >-
            The ISO-639-1 alpha 2 code in lower case for the language,
            optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for
            the region in upper case; e.g. "en" for English, or "en-US" for
            American English versus "en-EN" for England English.
          $ref: '#/components/schemas/CodeableConcept'
        preferred:
          description: >-
            Indicates whether or not the patient prefers this language (over
            other languages he masters up a certain level).
          $ref: '#/components/schemas/boolean'
        _preferred:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - language
    Patient_Link:
      description: >-
        Demographics and other administrative information about an individual or
        animal receiving care or other health-related services.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        other:
          $ref: '#/components/schemas/Reference'
        type:
          description: >-
            The type of link between this patient resource and another patient
            resource.
          enum:
            - replaced-by
            - replaces
            - refer
            - seealso
        _type:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - other
    PaymentNotice:
      description: >-
        This resource provides the status of the payment for goods and services
        rendered, and the request and response resource references.
      properties:
        resourceType:
          description: This is a PaymentNotice resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this payment notice.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        request:
          $ref: '#/components/schemas/Reference'
        response:
          $ref: '#/components/schemas/Reference'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        provider:
          description: >-
            The practitioner who is responsible for the services rendered to the
            patient.
          $ref: '#/components/schemas/Reference'
        payment:
          $ref: '#/components/schemas/Reference'
        paymentDate:
          $ref: '#/components/schemas/date'
        _paymentDate:
          $ref: '#/components/schemas/Element'
        payee:
          description: >-
            The party who will receive or has received payment that is the
            subject of this notification.
          $ref: '#/components/schemas/Reference'
        recipient:
          $ref: '#/components/schemas/Reference'
        amount:
          $ref: '#/components/schemas/Money'
        paymentStatus:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
      required:
        - amount
        - recipient
        - payment
        - resourceType
    PaymentReconciliation:
      description: >-
        This resource provides the details including amount of a payment and
        allocates the payment items being paid.
      properties:
        resourceType:
          description: This is a PaymentReconciliation resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this payment reconciliation.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The period of time for which payments have been gathered into this
            bulk payment for settlement.
          $ref: '#/components/schemas/Period'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        paymentIssuer:
          $ref: '#/components/schemas/Reference'
        request:
          $ref: '#/components/schemas/Reference'
        requestor:
          description: >-
            The practitioner who is responsible for the services rendered to the
            patient.
          $ref: '#/components/schemas/Reference'
        outcome:
          description: The outcome of a request for a reconciliation.
          enum:
            - queued
            - complete
            - error
            - partial
        _outcome:
          $ref: '#/components/schemas/Element'
        disposition:
          description: >-
            A human readable description of the status of the request for the
            reconciliation.
          $ref: '#/components/schemas/string'
        _disposition:
          $ref: '#/components/schemas/Element'
        paymentDate:
          $ref: '#/components/schemas/date'
        _paymentDate:
          $ref: '#/components/schemas/Element'
        paymentAmount:
          $ref: '#/components/schemas/Money'
        paymentIdentifier:
          $ref: '#/components/schemas/Identifier'
        detail:
          description: >-
            Distribution of the payment amount for a previously acknowledged
            payable.
          items:
            $ref: '#/components/schemas/PaymentReconciliation_Detail'
          type: array
        formCode:
          $ref: '#/components/schemas/CodeableConcept'
        processNote:
          description: >-
            A note that describes or explains the processing in a human readable
            form.
          items:
            $ref: '#/components/schemas/PaymentReconciliation_ProcessNote'
          type: array
      additionalProperties: false
      required:
        - paymentAmount
        - resourceType
    PaymentReconciliation_Detail:
      description: >-
        This resource provides the details including amount of a payment and
        allocates the payment items being paid.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Unique identifier for the current payment item for the referenced
            payable.
          $ref: '#/components/schemas/Identifier'
        predecessor:
          description: >-
            Unique identifier for the prior payment item for the referenced
            payable.
          $ref: '#/components/schemas/Identifier'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        request:
          description: >-
            A resource, such as a Claim, the evaluation of which could lead to
            payment.
          $ref: '#/components/schemas/Reference'
        submitter:
          $ref: '#/components/schemas/Reference'
        response:
          description: >-
            A resource, such as a ClaimResponse, which contains a commitment to
            payment.
          $ref: '#/components/schemas/Reference'
        date:
          $ref: '#/components/schemas/date'
        _date:
          $ref: '#/components/schemas/Element'
        responsible:
          description: >-
            A reference to the individual who is responsible for inquiries
            regarding the response and its payment.
          $ref: '#/components/schemas/Reference'
        payee:
          $ref: '#/components/schemas/Reference'
        amount:
          $ref: '#/components/schemas/Money'
      additionalProperties: false
      required:
        - type
    PaymentReconciliation_ProcessNote:
      description: >-
        This resource provides the details including amount of a payment and
        allocates the payment items being paid.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The business purpose of the note text.
          enum:
            - display
            - print
            - printoper
        _type:
          $ref: '#/components/schemas/Element'
        text:
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Person:
      description: >-
        Demographics and administrative information about a person independent
        of a specific health-related context.
      properties:
        resourceType:
          description: This is a Person resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifier for a person within a particular scope.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        name:
          description: A name associated with the person.
          items:
            $ref: '#/components/schemas/HumanName'
          type: array
        telecom:
          description: >-
            A contact detail for the person, e.g. a telephone number or an email
            address.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        gender:
          description: Administrative Gender.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          $ref: '#/components/schemas/Element'
        birthDate:
          $ref: '#/components/schemas/date'
        _birthDate:
          $ref: '#/components/schemas/Element'
        address:
          description: One or more addresses for the person.
          items:
            $ref: '#/components/schemas/Address'
          type: array
        photo:
          description: >-
            An image that can be displayed as a thumbnail of the person to
            enhance the identification of the individual.
          $ref: '#/components/schemas/Attachment'
        managingOrganization:
          $ref: '#/components/schemas/Reference'
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        link:
          description: Link to a resource that concerns the same actual person.
          items:
            $ref: '#/components/schemas/Person_Link'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Person_Link:
      description: >-
        Demographics and administrative information about a person independent
        of a specific health-related context.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        target:
          $ref: '#/components/schemas/Reference'
        assurance:
          description: >-
            Level of assurance that this link is associated with the target
            resource.
          enum:
            - level1
            - level2
            - level3
            - level4
        _assurance:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - target
    PlanDefinition:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        resourceType:
          description: This is a PlanDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this plan definition when
            it is referenced in a specification, model, design or an instance;
            also called its canonical identifier. This SHOULD be globally unique
            and SHOULD be a literal address at which at which an authoritative
            instance of this plan definition is (or will be) published. This URL
            can be the target of a canonical reference. It SHALL remain the same
            when the plan definition is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this plan definition
            when it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the plan
            definition when it is referenced in a specification, model, design
            or instance. This is an arbitrary value managed by the plan
            definition author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence. To provide a version
            consistent with the Decision Support Service specification, use the
            format Major.Minor.Revision (e.g. 1.0.0). For more information on
            versioning knowledge assets, refer to the Decision Support Service
            specification. Note that a version is required for non-experimental
            active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the plan definition. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the plan definition giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            A high-level category for the plan definition that distinguishes the
            kinds of systems that would be interested in the plan definition.
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: >-
            The status of this plan definition. Enables tracking the life-cycle
            of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this plan definition is authored
            for testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: >-
            A code or group definition that describes the intended subject of
            the plan definition.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            A code or group definition that describes the intended subject of
            the plan definition.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date  (and optionally time) when the plan definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the plan definition
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the plan
            definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the plan definition from
            a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate plan definition instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the plan definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this plan definition is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description of how the plan definition is used from a
            clinical perspective.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the plan definition and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the plan definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the plan definition content was or is
            planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the plan definition.
            Topics provide a high-level categorization of the definition that
            can be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        library:
          description: >-
            A reference to a Library resource containing any formal logic used
            by the plan definition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        goal:
          description: >-
            Goals that describe what the activities within the plan are intended
            to achieve. For example, weight loss, restoring an activity of daily
            living, obtaining herd immunity via immunization, meeting a process
            improvement objective, etc.
          items:
            $ref: '#/components/schemas/PlanDefinition_Goal'
          type: array
        action:
          description: An action or group of actions to be taken as part of the plan.
          items:
            $ref: '#/components/schemas/PlanDefinition_Action'
          type: array
      additionalProperties: false
      required:
        - resourceType
    PlanDefinition_Goal:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            Human-readable and/or coded description of a specific desired
            objective of care, such as "control blood pressure" or "negotiate an
            obstacle course" or "dance with child at wedding".
          $ref: '#/components/schemas/CodeableConcept'
        priority:
          description: >-
            Identifies the expected level of importance associated with
            reaching/sustaining the defined goal.
          $ref: '#/components/schemas/CodeableConcept'
        start:
          $ref: '#/components/schemas/CodeableConcept'
        addresses:
          description: >-
            Identifies problems, conditions, issues, or concerns the goal is
            intended to address.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        documentation:
          description: >-
            Didactic or other informational resources associated with the goal
            that provide further supporting information about the goal.
            Information resources can include inline text commentary and links
            to web resources.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        target:
          description: Indicates what should be done and within what timeframe.
          items:
            $ref: '#/components/schemas/PlanDefinition_Target'
          type: array
      additionalProperties: false
      required:
        - description
    PlanDefinition_Target:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        measure:
          description: >-
            The parameter whose value is to be tracked, e.g. body weight, blood
            pressure, or hemoglobin A1c level.
          $ref: '#/components/schemas/CodeableConcept'
        detailQuantity:
          description: >-
            The target value of the measure to be achieved to signify
            fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any value at
            or below the high value. Similarly, if the high value is missing, it
            indicates that the goal is achieved at any value at or above the low
            value.
          $ref: '#/components/schemas/Quantity'
        detailRange:
          description: >-
            The target value of the measure to be achieved to signify
            fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any value at
            or below the high value. Similarly, if the high value is missing, it
            indicates that the goal is achieved at any value at or above the low
            value.
          $ref: '#/components/schemas/Range'
        detailCodeableConcept:
          description: >-
            The target value of the measure to be achieved to signify
            fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or
            low or both values of the range can be specified. When a low value
            is missing, it indicates that the goal is achieved at any value at
            or below the high value. Similarly, if the high value is missing, it
            indicates that the goal is achieved at any value at or above the low
            value.
          $ref: '#/components/schemas/CodeableConcept'
        due:
          description: >-
            Indicates the timeframe after the start of the goal in which the
            goal should be met.
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    PlanDefinition_Action:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        prefix:
          $ref: '#/components/schemas/string'
        _prefix:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A brief description of the action used to provide a summary to
            display to the user.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        textEquivalent:
          description: >-
            A text equivalent of the action to be performed. This provides a
            human-interpretable description of the action when the definition is
            consumed by a system that might not be capable of interpreting it
            dynamically.
          $ref: '#/components/schemas/string'
        _textEquivalent:
          $ref: '#/components/schemas/Element'
        priority:
          description: >-
            Indicates how quickly the action should be addressed with respect to
            other actions.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code that provides meaning for the action or action group. For
            example, a section may have a LOINC code for the section of a
            documentation template.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reason:
          description: A description of why this action is necessary or appropriate.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        documentation:
          description: >-
            Didactic or other informational resources associated with the action
            that can be provided to the CDS recipient. Information resources can
            include inline text commentary and links to web resources.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        goalId:
          description: >-
            Identifies goals that this action supports. The reference must be to
            a goal element defined within this plan definition.
          items:
            $ref: '#/components/schemas/id'
          type: array
        _goalId:
          description: Extensions for goalId
          items:
            $ref: '#/components/schemas/Element'
          type: array
        subjectCodeableConcept:
          description: >-
            A code or group definition that describes the intended subject of
            the action and its children, if any.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            A code or group definition that describes the intended subject of
            the action and its children, if any.
          $ref: '#/components/schemas/Reference'
        trigger:
          description: A description of when the action should be triggered.
          items:
            $ref: '#/components/schemas/TriggerDefinition'
          type: array
        condition:
          description: >-
            An expression that describes applicability criteria or start/stop
            conditions for the action.
          items:
            $ref: '#/components/schemas/PlanDefinition_Condition'
          type: array
        input:
          description: Defines input data requirements for the action.
          items:
            $ref: '#/components/schemas/DataRequirement'
          type: array
        output:
          description: 'Defines the outputs of the action, if any.'
          items:
            $ref: '#/components/schemas/DataRequirement'
          type: array
        relatedAction:
          description: >-
            A relationship to another action such as "before" or "30-60 minutes
            after start of".
          items:
            $ref: '#/components/schemas/PlanDefinition_RelatedAction'
          type: array
        timingDateTime:
          description: An optional value describing when the action should be performed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timingDateTime:
          $ref: '#/components/schemas/Element'
        timingAge:
          $ref: '#/components/schemas/Age'
        timingPeriod:
          $ref: '#/components/schemas/Period'
        timingDuration:
          $ref: '#/components/schemas/Duration'
        timingRange:
          $ref: '#/components/schemas/Range'
        timingTiming:
          $ref: '#/components/schemas/Timing'
        participant:
          description: Indicates who should participate in performing the action described.
          items:
            $ref: '#/components/schemas/PlanDefinition_Participant'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        groupingBehavior:
          description: Defines the grouping behavior for the action and its children.
          enum:
            - visual-group
            - logical-group
            - sentence-group
        _groupingBehavior:
          $ref: '#/components/schemas/Element'
        selectionBehavior:
          description: Defines the selection behavior for the action and its children.
          enum:
            - any
            - all
            - all-or-none
            - exactly-one
            - at-most-one
            - one-or-more
        _selectionBehavior:
          $ref: '#/components/schemas/Element'
        requiredBehavior:
          description: Defines the required behavior for the action.
          enum:
            - must
            - could
            - must-unless-documented
        _requiredBehavior:
          $ref: '#/components/schemas/Element'
        precheckBehavior:
          description: Defines whether the action should usually be preselected.
          enum:
            - 'yes'
            - 'no'
        _precheckBehavior:
          $ref: '#/components/schemas/Element'
        cardinalityBehavior:
          description: Defines whether the action can be selected multiple times.
          enum:
            - single
            - multiple
        _cardinalityBehavior:
          $ref: '#/components/schemas/Element'
        definitionCanonical:
          description: >-
            A reference to an ActivityDefinition that describes the action to be
            taken in detail, or a PlanDefinition that describes a series of
            actions to be taken.
          pattern: ^\S*$
          type: string
        _definitionCanonical:
          $ref: '#/components/schemas/Element'
        definitionUri:
          description: >-
            A reference to an ActivityDefinition that describes the action to be
            taken in detail, or a PlanDefinition that describes a series of
            actions to be taken.
          pattern: ^\S*$
          type: string
        _definitionUri:
          $ref: '#/components/schemas/Element'
        transform:
          description: >-
            A reference to a StructureMap resource that defines a transform that
            can be executed to produce the intent resource using the
            ActivityDefinition instance as the input.
          $ref: '#/components/schemas/canonical'
        dynamicValue:
          description: >-
            Customizations that should be applied to the statically defined
            resource. For example, if the dosage of a medication must be
            computed based on the patient's weight, a customization would be
            used to specify an expression that calculated the weight, and the
            path on the resource that would contain the result.
          items:
            $ref: '#/components/schemas/PlanDefinition_DynamicValue'
          type: array
        action:
          description: >-
            Sub actions that are contained within the action. The behavior of
            this action determines the functionality of the sub-actions. For
            example, a selection behavior of at-most-one indicates that of the
            sub-actions, at most one may be chosen as part of realizing the
            action definition.
          items:
            $ref: '#/components/schemas/PlanDefinition_Action'
          type: array
      additionalProperties: false
    PlanDefinition_Condition:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        kind:
          description: The kind of condition.
          enum:
            - applicability
            - start
            - stop
        _kind:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            An expression that returns true or false, indicating whether the
            condition is satisfied.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
    PlanDefinition_RelatedAction:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        actionId:
          $ref: '#/components/schemas/id'
        _actionId:
          $ref: '#/components/schemas/Element'
        relationship:
          description: The relationship of this action to the related action.
          enum:
            - before-start
            - before
            - before-end
            - concurrent-with-start
            - concurrent
            - concurrent-with-end
            - after-start
            - after
            - after-end
        _relationship:
          $ref: '#/components/schemas/Element'
        offsetDuration:
          description: >-
            A duration or range of durations to apply to the relationship. For
            example, 30-60 minutes before.
          $ref: '#/components/schemas/Duration'
        offsetRange:
          description: >-
            A duration or range of durations to apply to the relationship. For
            example, 30-60 minutes before.
          $ref: '#/components/schemas/Range'
      additionalProperties: false
    PlanDefinition_Participant:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of participant in the action.
          enum:
            - patient
            - practitioner
            - related-person
            - device
        _type:
          $ref: '#/components/schemas/Element'
        role:
          description: >-
            The role the participant should play in performing the described
            action.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    PlanDefinition_DynamicValue:
      description: >-
        This resource allows for the definition of various types of plans as a
        sharable, consumable, and executable artifact. The resource is general
        enough to support the description of a broad range of clinical artifacts
        such as clinical decision support rules, order sets and protocols.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        path:
          description: >-
            The path to the element to be customized. This is the path on the
            resource that will hold the result of the calculation defined by the
            expression. The specified path SHALL be a FHIRPath resolveable on
            the specified target type of the ActivityDefinition, and SHALL
            consist only of identifiers, constant indexers, and a restricted
            subset of functions. The path is allowed to contain qualifiers (.)
            to traverse sub-elements, as well as indexers ([x]) to traverse
            multiple-cardinality sub-elements (see the [Simple FHIRPath
            Profile](fhirpath.html#simple) for full details).
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        expression:
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
    Practitioner:
      description: >-
        A person who is directly or indirectly involved in the provisioning of
        healthcare.
      properties:
        resourceType:
          description: This is a Practitioner resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: An identifier that applies to this person in this role.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        name:
          description: The name(s) associated with the practitioner.
          items:
            $ref: '#/components/schemas/HumanName'
          type: array
        telecom:
          description: >-
            A contact detail for the practitioner, e.g. a telephone number or an
            email address.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        address:
          description: "Address(es) of the practitioner that are not role specific (typically home address). \rWork addresses are not typically entered in this property as they are usually role dependent."
          items:
            $ref: '#/components/schemas/Address'
          type: array
        gender:
          description: >-
            Administrative Gender - the gender that the person is considered to
            have for administration and record keeping purposes.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          $ref: '#/components/schemas/Element'
        birthDate:
          $ref: '#/components/schemas/date'
        _birthDate:
          $ref: '#/components/schemas/Element'
        photo:
          description: Image of the person.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        qualification:
          description: >-
            The official certifications, training, and licenses that authorize
            or otherwise pertain to the provision of care by the practitioner.
            For example, a medical license issued by a medical board authorizing
            the practitioner to practice medicine within a certian locality.
          items:
            $ref: '#/components/schemas/Practitioner_Qualification'
          type: array
        communication:
          description: A language the practitioner can use in patient communication.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Practitioner_Qualification:
      description: >-
        A person who is directly or indirectly involved in the provisioning of
        healthcare.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            An identifier that applies to this person's qualification in this
            role.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        period:
          $ref: '#/components/schemas/Period'
        issuer:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
    PractitionerRole:
      description: >-
        A specific set of Roles/Locations/specialties/services that a
        practitioner may perform at an organization for a period of time.
      properties:
        resourceType:
          description: This is a PractitionerRole resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business Identifiers that are specific to a role/location.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The period during which the person is authorized to act as a
            practitioner in these role(s) for the organization.
          $ref: '#/components/schemas/Period'
        practitioner:
          description: >-
            Practitioner that is able to provide the defined services for the
            organization.
          $ref: '#/components/schemas/Reference'
        organization:
          description: >-
            The organization where the Practitioner performs the roles
            associated.
          $ref: '#/components/schemas/Reference'
        code:
          description: >-
            Roles which this practitioner is authorized to perform for the
            organization.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialty:
          description: Specific specialty of the practitioner.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        location:
          description: The location(s) at which this practitioner provides care.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        healthcareService:
          description: >-
            The list of healthcare services that this worker provides for this
            role's Organization/Location(s).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        telecom:
          description: Contact details that are specific to the role/location/service.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        availableTime:
          description: >-
            A collection of times the practitioner is available or performing
            this role at the location and/or healthcareservice.
          items:
            $ref: '#/components/schemas/PractitionerRole_AvailableTime'
          type: array
        notAvailable:
          description: >-
            The practitioner is not available or performing this role during
            this period of time due to the provided reason.
          items:
            $ref: '#/components/schemas/PractitionerRole_NotAvailable'
          type: array
        availabilityExceptions:
          description: >-
            A description of site availability exceptions, e.g. public holiday
            availability. Succinctly describing all possible exceptions to
            normal site availability as details in the available Times and not
            available Times.
          $ref: '#/components/schemas/string'
        _availabilityExceptions:
          $ref: '#/components/schemas/Element'
        endpoint:
          description: >-
            Technical endpoints providing access to services operated for the
            practitioner with this role.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    PractitionerRole_AvailableTime:
      description: >-
        A specific set of Roles/Locations/specialties/services that a
        practitioner may perform at an organization for a period of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        daysOfWeek:
          description: >-
            Indicates which days of the week are available between the start and
            end Times.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _daysOfWeek:
          description: Extensions for daysOfWeek
          items:
            $ref: '#/components/schemas/Element'
          type: array
        allDay:
          description: >-
            Is this always available? (hence times are irrelevant) e.g. 24 hour
            service.
          $ref: '#/components/schemas/boolean'
        _allDay:
          $ref: '#/components/schemas/Element'
        availableStartTime:
          description: >-
            The opening time of day. Note: If the AllDay flag is set, then this
            time is ignored.
          $ref: '#/components/schemas/time'
        _availableStartTime:
          $ref: '#/components/schemas/Element'
        availableEndTime:
          description: >-
            The closing time of day. Note: If the AllDay flag is set, then this
            time is ignored.
          $ref: '#/components/schemas/time'
        _availableEndTime:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    PractitionerRole_NotAvailable:
      description: >-
        A specific set of Roles/Locations/specialties/services that a
        practitioner may perform at an organization for a period of time.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            The reason that can be presented to the user as to why this time is
            not available.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        during:
          description: >-
            Service is not available (seasonally or for a public holiday) from
            this date.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Procedure:
      description: >-
        An action that is or was performed on or for a patient. This can be a
        physical intervention like an operation, or less invasive like long term
        services, counseling, or hypnotherapy.
      properties:
        resourceType:
          description: This is a Procedure resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this procedure by the performer or
            other systems which remain constant as the resource is updated and
            is propagated from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined protocol, guideline, order set or
            other definition that is adhered to in whole or in part by this
            Procedure.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            order set or other definition that is adhered to in whole or in part
            by this Procedure.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: >-
            A reference to a resource that contains details of the request for
            this procedure.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A larger event of which this particular procedure is a component or
            step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: >-
            A code specifying the state of the procedure. Generally, this will
            be the in-progress or completed state.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            A code that classifies the procedure for searching, sorting and
            display purposes (e.g. "Surgical Procedure").
          $ref: '#/components/schemas/CodeableConcept'
        code:
          description: >-
            The specific procedure that is performed. Use text if the exact
            nature of the procedure cannot be coded (e.g. "Laparoscopic
            Appendectomy").
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this Procedure was created or performed
            or to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        performedDateTime:
          description: >-
            Estimated or actual date, date-time, period, or age when the
            procedure was performed.  Allows a period to support complex
            procedures that span more than one date, and also allows for the
            length of the procedure to be captured.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _performedDateTime:
          $ref: '#/components/schemas/Element'
        performedPeriod:
          description: >-
            Estimated or actual date, date-time, period, or age when the
            procedure was performed.  Allows a period to support complex
            procedures that span more than one date, and also allows for the
            length of the procedure to be captured.
          $ref: '#/components/schemas/Period'
        performedString:
          description: >-
            Estimated or actual date, date-time, period, or age when the
            procedure was performed.  Allows a period to support complex
            procedures that span more than one date, and also allows for the
            length of the procedure to be captured.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _performedString:
          $ref: '#/components/schemas/Element'
        performedAge:
          description: >-
            Estimated or actual date, date-time, period, or age when the
            procedure was performed.  Allows a period to support complex
            procedures that span more than one date, and also allows for the
            length of the procedure to be captured.
          $ref: '#/components/schemas/Age'
        performedRange:
          description: >-
            Estimated or actual date, date-time, period, or age when the
            procedure was performed.  Allows a period to support complex
            procedures that span more than one date, and also allows for the
            length of the procedure to be captured.
          $ref: '#/components/schemas/Range'
        recorder:
          description: >-
            Individual who recorded the record and takes responsibility for its
            content.
          $ref: '#/components/schemas/Reference'
        asserter:
          $ref: '#/components/schemas/Reference'
        performer:
          description: Limited to "real" people rather than equipment.
          items:
            $ref: '#/components/schemas/Procedure_Performer'
          type: array
        location:
          description: >-
            The location where the procedure actually happened.  E.g. a newborn
            at home, a tracheostomy at a restaurant.
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: >-
            The coded reason why the procedure was performed. This may be a
            coded entity of some type, or may simply be present as text.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: The justification of why the procedure was performed.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        bodySite:
          description: >-
            Detailed and structured anatomical location information. Multiple
            locations are allowed - e.g. multiple punch biopsies of a lesion.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        outcome:
          description: >-
            The outcome of the procedure - did it resolve the reasons for the
            procedure being performed?
          $ref: '#/components/schemas/CodeableConcept'
        report:
          description: >-
            This could be a histology result, pathology report, surgical report,
            etc.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        complication:
          description: >-
            Any complications that occurred during the procedure, or in the
            immediate post-performance period. These are generally tracked
            separately from the notes, which will typically describe the
            procedure itself rather than any 'post procedure' issues.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        complicationDetail:
          description: >-
            Any complications that occurred during the procedure, or in the
            immediate post-performance period.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        followUp:
          description: >-
            If the procedure required specific follow up - e.g. removal of
            sutures. The follow up may be represented as a simple note or could
            potentially be more complex, in which case the CarePlan resource can
            be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: Any other notes and comments about the procedure.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        focalDevice:
          description: >-
            A device that is implanted, removed or otherwise manipulated
            (calibration, battery replacement, fitting a prosthesis, attaching a
            wound-vac, etc.) as a focal portion of the Procedure.
          items:
            $ref: '#/components/schemas/Procedure_FocalDevice'
          type: array
        usedReference:
          description: >-
            Identifies medications, devices and any other substance used as part
            of the procedure.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        usedCode:
          description: Identifies coded items that were used as part of the procedure.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    Procedure_Performer:
      description: >-
        An action that is or was performed on or for a patient. This can be a
        physical intervention like an operation, or less invasive like long term
        services, counseling, or hypnotherapy.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        function:
          description: >-
            Distinguishes the type of involvement of the performer in the
            procedure. For example, surgeon, anaesthetist, endoscopist.
          $ref: '#/components/schemas/CodeableConcept'
        actor:
          $ref: '#/components/schemas/Reference'
        onBehalfOf:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - actor
    Procedure_FocalDevice:
      description: >-
        An action that is or was performed on or for a patient. This can be a
        physical intervention like an operation, or less invasive like long term
        services, counseling, or hypnotherapy.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        action:
          $ref: '#/components/schemas/CodeableConcept'
        manipulated:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - manipulated
    Provenance:
      description: >-
        Provenance of a resource is a record that describes entities and
        processes involved in producing and delivering or otherwise influencing
        that resource. Provenance provides a critical foundation for assessing
        authenticity, enabling trust, and allowing reproducibility. Provenance
        assertions are a form of contextual metadata and can themselves become
        important records with their own provenance. Provenance statement
        indicates clinical significance in terms of confidence in authenticity,
        reliability, and trustworthiness, integrity, and stage in lifecycle
        (e.g. Document Completion - has the artifact been legally
        authenticated), all of which may impact security, privacy, and trust
        policies.
      properties:
        resourceType:
          description: This is a Provenance resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        target:
          description: >-
            The Reference(s) that were generated or updated by  the activity
            described in this resource. A provenance can point to more than one
            target if multiple resources were created/updated by the same
            activity.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        occurredPeriod:
          $ref: '#/components/schemas/Period'
        occurredDateTime:
          description: The period during which the activity occurred.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurredDateTime:
          $ref: '#/components/schemas/Element'
        recorded:
          $ref: '#/components/schemas/instant'
        _recorded:
          $ref: '#/components/schemas/Element'
        policy:
          description: >-
            Policy or plan the activity was defined by. Typically, a single
            activity may have multiple applicable policy documents, such as
            patient consent, guarantor funding, etc.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _policy:
          description: Extensions for policy
          items:
            $ref: '#/components/schemas/Element'
          type: array
        location:
          $ref: '#/components/schemas/Reference'
        reason:
          description: The reason that the activity was taking place.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        activity:
          description: >-
            An activity is something that occurs over a period of time and acts
            upon or with entities; it may include consuming, processing,
            transforming, modifying, relocating, using, or generating entities.
          $ref: '#/components/schemas/CodeableConcept'
        agent:
          description: >-
            An actor taking a role in an activity  for which it can be assigned
            some degree of responsibility for the activity taking place.
          items:
            $ref: '#/components/schemas/Provenance_Agent'
          type: array
        entity:
          description: An entity used in this activity.
          items:
            $ref: '#/components/schemas/Provenance_Entity'
          type: array
        signature:
          description: >-
            A digital signature on the target Reference(s). The signer should
            match a Provenance.agent. The purpose of the signature is indicated.
          items:
            $ref: '#/components/schemas/Signature'
          type: array
      additionalProperties: false
      required:
        - agent
        - resourceType
        - target
    Provenance_Agent:
      description: >-
        Provenance of a resource is a record that describes entities and
        processes involved in producing and delivering or otherwise influencing
        that resource. Provenance provides a critical foundation for assessing
        authenticity, enabling trust, and allowing reproducibility. Provenance
        assertions are a form of contextual metadata and can themselves become
        important records with their own provenance. Provenance statement
        indicates clinical significance in terms of confidence in authenticity,
        reliability, and trustworthiness, integrity, and stage in lifecycle
        (e.g. Document Completion - has the artifact been legally
        authenticated), all of which may impact security, privacy, and trust
        policies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        role:
          description: >-
            The function of the agent with respect to the activity. The security
            role enabling the agent with respect to the activity.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        who:
          description: >-
            The individual, device or organization that participated in the
            event.
          $ref: '#/components/schemas/Reference'
        onBehalfOf:
          description: >-
            The individual, device, or organization for whom the change was
            made.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - who
    Provenance_Entity:
      description: >-
        Provenance of a resource is a record that describes entities and
        processes involved in producing and delivering or otherwise influencing
        that resource. Provenance provides a critical foundation for assessing
        authenticity, enabling trust, and allowing reproducibility. Provenance
        assertions are a form of contextual metadata and can themselves become
        important records with their own provenance. Provenance statement
        indicates clinical significance in terms of confidence in authenticity,
        reliability, and trustworthiness, integrity, and stage in lifecycle
        (e.g. Document Completion - has the artifact been legally
        authenticated), all of which may impact security, privacy, and trust
        policies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        role:
          description: How the entity was used during the activity.
          enum:
            - derivation
            - revision
            - quotation
            - source
            - removal
        _role:
          $ref: '#/components/schemas/Element'
        what:
          description: >-
            Identity of the  Entity used. May be a logical or physical uri and
            maybe absolute or relative.
          $ref: '#/components/schemas/Reference'
        agent:
          description: >-
            The entity is attributed to an agent to express the agent's
            responsibility for that entity, possibly along with other agents.
            This description can be understood as shorthand for saying that the
            agent was responsible for the activity which generated the entity.
          items:
            $ref: '#/components/schemas/Provenance_Agent'
          type: array
      additionalProperties: false
      required:
        - what
    Questionnaire:
      description: >-
        A structured set of questions intended to guide the collection of
        answers from end-users. Questionnaires provide detailed control over
        order, presentation, phraseology and grouping to allow coherent,
        consistent data collection.
      properties:
        resourceType:
          description: This is a Questionnaire resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this questionnaire when it
            is referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this questionnaire is (or will be) published. This URL
            can be the target of a canonical reference. It SHALL remain the same
            when the questionnaire is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this questionnaire when
            it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the
            questionnaire when it is referenced in a specification, model,
            design or instance. This is an arbitrary value managed by the
            questionnaire author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the questionnaire. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        derivedFrom:
          description: The URL of a Questionnaire that this Questionnaire is based on.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        status:
          description: >-
            The status of this questionnaire. Enables tracking the life-cycle of
            the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this questionnaire is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectType:
          description: >-
            The types of subjects that can be the subject of responses created
            for the questionnaire.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _subjectType:
          description: Extensions for subjectType
          items:
            $ref: '#/components/schemas/Element'
          type: array
        date:
          description: >-
            The date  (and optionally time) when the questionnaire was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the questionnaire
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            questionnaire.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the questionnaire from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate questionnaire instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the questionnaire is intended
            to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this questionnaire is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the questionnaire and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the questionnaire.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the questionnaire content was or is planned
            to be in active use.
          $ref: '#/components/schemas/Period'
        code:
          description: >-
            An identifier for this question or group of questions in a
            particular terminology such as LOINC.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        item:
          description: >-
            A particular question, question grouping or display text that is
            part of the questionnaire.
          items:
            $ref: '#/components/schemas/Questionnaire_Item'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Questionnaire_Item:
      description: >-
        A structured set of questions intended to guide the collection of
        answers from end-users. Questionnaires provide detailed control over
        order, presentation, phraseology and grouping to allow coherent,
        consistent data collection.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        linkId:
          description: >-
            An identifier that is unique within the Questionnaire allowing
            linkage to the equivalent item in a QuestionnaireResponse resource.
          $ref: '#/components/schemas/string'
        _linkId:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            This element is a URI that refers to an [[[ElementDefinition]]] that
            provides information about this item, including information that
            might otherwise be included in the instance of the Questionnaire
            resource. A detailed description of the construction of the URI is
            shown in Comments, below. If this element is present then the
            following element values MAY be derived from the Element Definition
            if the corresponding elements of this Questionnaire resource
            instance have no value:


            * code (ElementDefinition.code)

            * type (ElementDefinition.type)

            * required (ElementDefinition.min)

            * repeats (ElementDefinition.max)

            * maxLength (ElementDefinition.maxLength)

            * answerValueSet (ElementDefinition.binding)

            * options (ElementDefinition.binding).
          $ref: '#/components/schemas/uri'
        _definition:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A terminology code that corresponds to this group or question (e.g.
            a code from LOINC, which defines many questions and answers).
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        prefix:
          description: >-
            A short label for a particular group, question or set of display
            text within the questionnaire used for reference by the individual
            completing the questionnaire.
          $ref: '#/components/schemas/string'
        _prefix:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            The name of a section, the text of a question or text content for a
            display item.
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of questionnaire item this is - whether text for display, a
            grouping of other items or a particular type of data to be captured
            (string, integer, coded choice, etc.).
          enum:
            - group
            - display
            - boolean
            - decimal
            - integer
            - date
            - dateTime
            - time
            - string
            - text
            - url
            - choice
            - open-choice
            - attachment
            - reference
            - quantity
        _type:
          $ref: '#/components/schemas/Element'
        enableWhen:
          description: >-
            A constraint indicating that this item should only be enabled
            (displayed/allow answers to be captured) when the specified
            condition is true.
          items:
            $ref: '#/components/schemas/Questionnaire_EnableWhen'
          type: array
        enableBehavior:
          description: >-
            Controls how multiple enableWhen values are interpreted -  whether
            all or any must be true.
          enum:
            - all
            - any
        _enableBehavior:
          $ref: '#/components/schemas/Element'
        required:
          description: >-
            An indication, if true, that the item must be present in a
            "completed" QuestionnaireResponse.  If false, the item may be
            skipped when answering the questionnaire.
          $ref: '#/components/schemas/boolean'
        _required:
          $ref: '#/components/schemas/Element'
        repeats:
          description: >-
            An indication, if true, that the item may occur multiple times in
            the response, collecting multiple answers for questions or multiple
            sets of answers for groups.
          $ref: '#/components/schemas/boolean'
        _repeats:
          $ref: '#/components/schemas/Element'
        readOnly:
          description: >-
            An indication, when true, that the value cannot be changed by a
            human respondent to the Questionnaire.
          $ref: '#/components/schemas/boolean'
        _readOnly:
          $ref: '#/components/schemas/Element'
        maxLength:
          description: >-
            The maximum number of characters that are permitted in the answer to
            be considered a "valid" QuestionnaireResponse.
          $ref: '#/components/schemas/integer'
        _maxLength:
          $ref: '#/components/schemas/Element'
        answerValueSet:
          description: >-
            A reference to a value set containing a list of codes representing
            permitted answers for a "choice" or "open-choice" question.
          $ref: '#/components/schemas/canonical'
        answerOption:
          description: >-
            One of the permitted answers for a "choice" or "open-choice"
            question.
          items:
            $ref: '#/components/schemas/Questionnaire_AnswerOption'
          type: array
        initial:
          description: >-
            One or more values that should be pre-populated in the answer when
            initially rendering the questionnaire for user input.
          items:
            $ref: '#/components/schemas/Questionnaire_Initial'
          type: array
        item:
          description: >-
            Text, questions and other groups to be nested beneath a question or
            group.
          items:
            $ref: '#/components/schemas/Questionnaire_Item'
          type: array
      additionalProperties: false
    Questionnaire_EnableWhen:
      description: >-
        A structured set of questions intended to guide the collection of
        answers from end-users. Questionnaires provide detailed control over
        order, presentation, phraseology and grouping to allow coherent,
        consistent data collection.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        question:
          description: >-
            The linkId for the question whose answer (or lack of answer) governs
            whether this item is enabled.
          $ref: '#/components/schemas/string'
        _question:
          $ref: '#/components/schemas/Element'
        operator:
          description: Specifies the criteria by which the question is enabled.
          enum:
            - exists
            - =
            - '!='
            - '>'
            - <
            - '>='
            - <=
        _operator:
          $ref: '#/components/schemas/Element'
        answerBoolean:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: ^true|false$
          type: boolean
        _answerBoolean:
          $ref: '#/components/schemas/Element'
        answerDecimal:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _answerDecimal:
          $ref: '#/components/schemas/Element'
        answerInteger:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _answerInteger:
          $ref: '#/components/schemas/Element'
        answerDate:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _answerDate:
          $ref: '#/components/schemas/Element'
        answerDateTime:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _answerDateTime:
          $ref: '#/components/schemas/Element'
        answerTime:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _answerTime:
          $ref: '#/components/schemas/Element'
        answerString:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _answerString:
          $ref: '#/components/schemas/Element'
        answerCoding:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          $ref: '#/components/schemas/Coding'
        answerQuantity:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          $ref: '#/components/schemas/Quantity'
        answerReference:
          description: >-
            A value that the referenced question is tested using the specified
            operator in order for the item to be enabled.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Questionnaire_AnswerOption:
      description: >-
        A structured set of questions intended to guide the collection of
        answers from end-users. Questionnaires provide detailed control over
        order, presentation, phraseology and grouping to allow coherent,
        consistent data collection.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        valueInteger:
          description: A potential answer that's allowed as the answer to this question.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: A potential answer that's allowed as the answer to this question.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: A potential answer that's allowed as the answer to this question.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueString:
          description: A potential answer that's allowed as the answer to this question.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueCoding:
          $ref: '#/components/schemas/Coding'
        valueReference:
          $ref: '#/components/schemas/Reference'
        initialSelected:
          description: >-
            Indicates whether the answer value is selected when the list of
            possible answers is initially shown.
          $ref: '#/components/schemas/boolean'
        _initialSelected:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Questionnaire_Initial:
      description: >-
        A structured set of questions intended to guide the collection of
        answers from end-users. Questionnaires provide detailed control over
        order, presentation, phraseology and grouping to allow coherent,
        consistent data collection.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        valueBoolean:
          description: The actual value to for an initial answer.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: The actual value to for an initial answer.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: The actual value to for an initial answer.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: The actual value to for an initial answer.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The actual value to for an initial answer.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: The actual value to for an initial answer.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueString:
          description: The actual value to for an initial answer.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: The actual value to for an initial answer.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueAttachment:
          $ref: '#/components/schemas/Attachment'
        valueCoding:
          $ref: '#/components/schemas/Coding'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    QuestionnaireResponse:
      description: >-
        A structured set of questions and their answers. The questions are
        ordered and grouped into coherent subsets, corresponding to the
        structure of the grouping of the questionnaire being responded to.
      properties:
        resourceType:
          description: This is a QuestionnaireResponse resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            A business identifier assigned to a particular completed (or
            partially completed) questionnaire.
          $ref: '#/components/schemas/Identifier'
        basedOn:
          description: >-
            The order, proposal or plan that is fulfilled in whole or in part by
            this QuestionnaireResponse.  For example, a ServiceRequest seeking
            an intake assessment or a decision support recommendation to assess
            for post-partum depression.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A procedure or observation that this questionnaire was performed as
            part of the execution of.  For example, the surgery a checklist was
            executed as part of.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        questionnaire:
          description: >-
            The Questionnaire that defines and organizes the questions for which
            answers are being provided.
          $ref: '#/components/schemas/canonical'
        status:
          description: >-
            The position of the questionnaire response within its overall
            lifecycle.
          enum:
            - in-progress
            - completed
            - amended
            - entered-in-error
            - stopped
        _status:
          $ref: '#/components/schemas/Element'
        subject:
          description: >-
            The subject of the questionnaire response.  This could be a patient,
            organization, practitioner, device, etc.  This is who/what the
            answers apply to, but is not necessarily the source of information.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The Encounter during which this questionnaire response was created
            or to which the creation of this record is tightly associated.
          $ref: '#/components/schemas/Reference'
        authored:
          $ref: '#/components/schemas/dateTime'
        _authored:
          $ref: '#/components/schemas/Element'
        author:
          description: >-
            Person who received the answers to the questions in the
            QuestionnaireResponse and recorded them in the system.
          $ref: '#/components/schemas/Reference'
        source:
          $ref: '#/components/schemas/Reference'
        item:
          description: >-
            A group or question item from the original questionnaire for which
            answers are provided.
          items:
            $ref: '#/components/schemas/QuestionnaireResponse_Item'
          type: array
      additionalProperties: false
      required:
        - resourceType
    QuestionnaireResponse_Item:
      description: >-
        A structured set of questions and their answers. The questions are
        ordered and grouped into coherent subsets, corresponding to the
        structure of the grouping of the questionnaire being responded to.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        linkId:
          description: >-
            The item from the Questionnaire that corresponds to this item in the
            QuestionnaireResponse resource.
          $ref: '#/components/schemas/string'
        _linkId:
          $ref: '#/components/schemas/Element'
        definition:
          description: >-
            A reference to an [[[ElementDefinition]]] that provides the details
            for the item.
          $ref: '#/components/schemas/uri'
        _definition:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            Text that is displayed above the contents of the group or as the
            text of the question being answered.
          $ref: '#/components/schemas/string'
        _text:
          $ref: '#/components/schemas/Element'
        answer:
          description: The respondent's answer(s) to the question.
          items:
            $ref: '#/components/schemas/QuestionnaireResponse_Answer'
          type: array
        item:
          description: Questions or sub-groups nested beneath a question or group.
          items:
            $ref: '#/components/schemas/QuestionnaireResponse_Item'
          type: array
      additionalProperties: false
    QuestionnaireResponse_Answer:
      description: >-
        A structured set of questions and their answers. The questions are
        ordered and grouped into coherent subsets, corresponding to the
        structure of the grouping of the questionnaire being responded to.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        valueBoolean:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueString:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueAttachment:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          $ref: '#/components/schemas/Attachment'
        valueCoding:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          $ref: '#/components/schemas/Coding'
        valueQuantity:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          $ref: '#/components/schemas/Quantity'
        valueReference:
          description: >-
            The answer (or one of the answers) provided by the respondent to the
            question.
          $ref: '#/components/schemas/Reference'
        item:
          description: Nested groups and/or questions found within this particular answer.
          items:
            $ref: '#/components/schemas/QuestionnaireResponse_Item'
          type: array
      additionalProperties: false
    RelatedPerson:
      description: >-
        Information about a person that is involved in the care for a patient,
        but who is not the target of healthcare, nor has a formal responsibility
        in the care process.
      properties:
        resourceType:
          description: This is a RelatedPerson resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifier for a person within a particular scope.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        patient:
          $ref: '#/components/schemas/Reference'
        relationship:
          description: >-
            The nature of the relationship between a patient and the related
            person.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        name:
          description: A name associated with the person.
          items:
            $ref: '#/components/schemas/HumanName'
          type: array
        telecom:
          description: >-
            A contact detail for the person, e.g. a telephone number or an email
            address.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        gender:
          description: >-
            Administrative Gender - the gender that the person is considered to
            have for administration and record keeping purposes.
          enum:
            - male
            - female
            - other
            - unknown
        _gender:
          $ref: '#/components/schemas/Element'
        birthDate:
          $ref: '#/components/schemas/date'
        _birthDate:
          $ref: '#/components/schemas/Element'
        address:
          description: Address where the related person can be contacted or visited.
          items:
            $ref: '#/components/schemas/Address'
          type: array
        photo:
          description: Image of the person.
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        period:
          description: >-
            The period of time during which this relationship is or was active.
            If there are no dates defined, then the interval is unknown.
          $ref: '#/components/schemas/Period'
        communication:
          description: >-
            A language which may be used to communicate with about the patient's
            health.
          items:
            $ref: '#/components/schemas/RelatedPerson_Communication'
          type: array
      additionalProperties: false
      required:
        - patient
        - resourceType
    RelatedPerson_Communication:
      description: >-
        Information about a person that is involved in the care for a patient,
        but who is not the target of healthcare, nor has a formal responsibility
        in the care process.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        language:
          description: >-
            The ISO-639-1 alpha 2 code in lower case for the language,
            optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for
            the region in upper case; e.g. "en" for English, or "en-US" for
            American English versus "en-EN" for England English.
          $ref: '#/components/schemas/CodeableConcept'
        preferred:
          description: >-
            Indicates whether or not the patient prefers this language (over
            other languages he masters up a certain level).
          $ref: '#/components/schemas/boolean'
        _preferred:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - language
    RequestGroup:
      description: >-
        A group of related requests that can be used to capture intended
        activities that have inter-dependencies such as "give this medication
        after that one".
      properties:
        resourceType:
          description: This is a RequestGroup resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Allows a service to provide a unique, business identifier for the
            request.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            A canonical URL referencing a FHIR-defined protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this request.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        _instantiatesCanonical:
          description: Extensions for instantiatesCanonical
          items:
            $ref: '#/components/schemas/Element'
          type: array
        instantiatesUri:
          description: >-
            A URL referencing an externally defined protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this request.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: >-
            A plan, proposal or order that is fulfilled in whole or in part by
            this request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        replaces:
          description: >-
            Completed or terminated request(s) whose function is taken by this
            new request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        groupIdentifier:
          description: >-
            A shared identifier common to all requests that were authorized more
            or less simultaneously by a single author, representing the
            identifier of the requisition, prescription or similar form.
          $ref: '#/components/schemas/Identifier'
        status:
          description: >-
            The current state of the request. For request groups, the status
            reflects the status of all the requests in the group.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        intent:
          description: >-
            Indicates the level of authority/intentionality associated with the
            request and where the request fits into the workflow chain.
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        priority:
          description: >-
            Indicates how quickly the request should be addressed with respect
            to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          $ref: '#/components/schemas/Reference'
        authoredOn:
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        author:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: Describes the reason for the request group in coded or textual form.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates another resource whose existence justifies this request
            group.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: >-
            Provides a mechanism to communicate additional information about the
            response.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        action:
          description: 'The actions, if any, produced by the evaluation of the artifact.'
          items:
            $ref: '#/components/schemas/RequestGroup_Action'
          type: array
      additionalProperties: false
      required:
        - resourceType
    RequestGroup_Action:
      description: >-
        A group of related requests that can be used to capture intended
        activities that have inter-dependencies such as "give this medication
        after that one".
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        prefix:
          $ref: '#/components/schemas/string'
        _prefix:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A short description of the action used to provide a summary to
            display to the user.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        textEquivalent:
          description: >-
            A text equivalent of the action to be performed. This provides a
            human-interpretable description of the action when the definition is
            consumed by a system that might not be capable of interpreting it
            dynamically.
          $ref: '#/components/schemas/string'
        _textEquivalent:
          $ref: '#/components/schemas/Element'
        priority:
          description: >-
            Indicates how quickly the action should be addressed with respect to
            other actions.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code that provides meaning for the action or action group. For
            example, a section may have a LOINC code for a section of a
            documentation template.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        documentation:
          description: >-
            Didactic or other informational resources associated with the action
            that can be provided to the CDS recipient. Information resources can
            include inline text commentary and links to web resources.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        condition:
          description: >-
            An expression that describes applicability criteria, or start/stop
            conditions for the action.
          items:
            $ref: '#/components/schemas/RequestGroup_Condition'
          type: array
        relatedAction:
          description: >-
            A relationship to another action such as "before" or "30-60 minutes
            after start of".
          items:
            $ref: '#/components/schemas/RequestGroup_RelatedAction'
          type: array
        timingDateTime:
          description: An optional value describing when the action should be performed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timingDateTime:
          $ref: '#/components/schemas/Element'
        timingAge:
          $ref: '#/components/schemas/Age'
        timingPeriod:
          $ref: '#/components/schemas/Period'
        timingDuration:
          $ref: '#/components/schemas/Duration'
        timingRange:
          $ref: '#/components/schemas/Range'
        timingTiming:
          $ref: '#/components/schemas/Timing'
        participant:
          description: >-
            The participant that should perform or be responsible for this
            action.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        groupingBehavior:
          $ref: '#/components/schemas/code'
        _groupingBehavior:
          $ref: '#/components/schemas/Element'
        selectionBehavior:
          $ref: '#/components/schemas/code'
        _selectionBehavior:
          $ref: '#/components/schemas/Element'
        requiredBehavior:
          $ref: '#/components/schemas/code'
        _requiredBehavior:
          $ref: '#/components/schemas/Element'
        precheckBehavior:
          $ref: '#/components/schemas/code'
        _precheckBehavior:
          $ref: '#/components/schemas/Element'
        cardinalityBehavior:
          $ref: '#/components/schemas/code'
        _cardinalityBehavior:
          $ref: '#/components/schemas/Element'
        resource:
          description: >-
            The resource that is the target of the action (e.g.
            CommunicationRequest).
          $ref: '#/components/schemas/Reference'
        action:
          description: Sub actions.
          items:
            $ref: '#/components/schemas/RequestGroup_Action'
          type: array
      additionalProperties: false
    RequestGroup_Condition:
      description: >-
        A group of related requests that can be used to capture intended
        activities that have inter-dependencies such as "give this medication
        after that one".
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        kind:
          $ref: '#/components/schemas/code'
        _kind:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            An expression that returns true or false, indicating whether or not
            the condition is satisfied.
          $ref: '#/components/schemas/Expression'
      additionalProperties: false
    RequestGroup_RelatedAction:
      description: >-
        A group of related requests that can be used to capture intended
        activities that have inter-dependencies such as "give this medication
        after that one".
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        actionId:
          $ref: '#/components/schemas/id'
        _actionId:
          $ref: '#/components/schemas/Element'
        relationship:
          $ref: '#/components/schemas/code'
        _relationship:
          $ref: '#/components/schemas/Element'
        offsetDuration:
          description: >-
            A duration or range of durations to apply to the relationship. For
            example, 30-60 minutes before.
          $ref: '#/components/schemas/Duration'
        offsetRange:
          description: >-
            A duration or range of durations to apply to the relationship. For
            example, 30-60 minutes before.
          $ref: '#/components/schemas/Range'
      additionalProperties: false
    ResearchDefinition:
      description: >-
        The ResearchDefinition resource describes the conditional state
        (population and any exposures being compared within the population) and
        outcome (if specified) that the knowledge (evidence, assertion,
        recommendation) is about.
      properties:
        resourceType:
          description: This is a ResearchDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this research definition
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this research definition is (or will be)
            published. This URL can be the target of a canonical reference. It
            SHALL remain the same when the research definition is stored on
            different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this research
            definition when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the research
            definition when it is referenced in a specification, model, design
            or instance. This is an arbitrary value managed by the research
            definition author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence. To provide a version
            consistent with the Decision Support Service specification, use the
            format Major.Minor.Revision (e.g. 1.0.0). For more information on
            versioning knowledge assets, refer to the Decision Support Service
            specification. Note that a version is required for non-experimental
            active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the research definition. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the research
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        shortTitle:
          description: >-
            The short title provides an alternate title for use in informal
            descriptive contexts where the full, formal title is not necessary.
          $ref: '#/components/schemas/string'
        _shortTitle:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the ResearchDefinition giving
            additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this research definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this research definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: >-
            The intended subjects for the ResearchDefinition. If this element is
            not provided, a Patient subject is assumed, but the subject of the
            ResearchDefinition can be anything.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            The intended subjects for the ResearchDefinition. If this element is
            not provided, a Patient subject is assumed, but the subject of the
            ResearchDefinition can be anything.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date  (and optionally time) when the research definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the research
            definition changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            research definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the research definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _comment:
          description: Extensions for comment
          items:
            $ref: '#/components/schemas/Element'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate research definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the research definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this research definition is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description, from a clinical perspective, of how the
            ResearchDefinition is used.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the research definition and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the research definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the research definition content was or is
            planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the ResearchDefinition.
            Topics provide a high-level categorization grouping types of
            ResearchDefinitions that can be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        library:
          description: >-
            A reference to a Library resource containing the formal logic used
            by the ResearchDefinition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        population:
          description: >-
            A reference to a ResearchElementDefinition resource that defines the
            population for the research.
          $ref: '#/components/schemas/Reference'
        exposure:
          description: >-
            A reference to a ResearchElementDefinition resource that defines the
            exposure for the research.
          $ref: '#/components/schemas/Reference'
        exposureAlternative:
          description: >-
            A reference to a ResearchElementDefinition resource that defines the
            exposureAlternative for the research.
          $ref: '#/components/schemas/Reference'
        outcome:
          description: >-
            A reference to a ResearchElementDefinition resomece that defines the
            outcome for the research.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
        - population
    ResearchElementDefinition:
      description: >-
        The ResearchElementDefinition resource describes a "PICO" element that
        knowledge (evidence, assertion, recommendation) is about.
      properties:
        resourceType:
          description: This is a ResearchElementDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this research element
            definition when it is referenced in a specification, model, design
            or an instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this research element definition is (or
            will be) published. This URL can be the target of a canonical
            reference. It SHALL remain the same when the research element
            definition is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this research element
            definition when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the research
            element definition when it is referenced in a specification, model,
            design or instance. This is an arbitrary value managed by the
            research element definition author and is not expected to be
            globally unique. For example, it might be a timestamp (e.g.
            yyyymmdd) if a managed version is not available. There is also no
            expectation that versions can be placed in a lexicographical
            sequence. To provide a version consistent with the Decision Support
            Service specification, use the format Major.Minor.Revision (e.g.
            1.0.0). For more information on versioning knowledge assets, refer
            to the Decision Support Service specification. Note that a version
            is required for non-experimental active artifacts.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the research element definition.
            This name should be usable as an identifier for the module by
            machine processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the research element
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        shortTitle:
          description: >-
            The short title provides an alternate title for use in informal
            descriptive contexts where the full, formal title is not necessary.
          $ref: '#/components/schemas/string'
        _shortTitle:
          $ref: '#/components/schemas/Element'
        subtitle:
          description: >-
            An explanatory or alternate title for the ResearchElementDefinition
            giving additional information about its content.
          $ref: '#/components/schemas/string'
        _subtitle:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this research element definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this research element definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        subjectCodeableConcept:
          description: >-
            The intended subjects for the ResearchElementDefinition. If this
            element is not provided, a Patient subject is assumed, but the
            subject of the ResearchElementDefinition can be anything.
          $ref: '#/components/schemas/CodeableConcept'
        subjectReference:
          description: >-
            The intended subjects for the ResearchElementDefinition. If this
            element is not provided, a Patient subject is assumed, but the
            subject of the ResearchElementDefinition can be anything.
          $ref: '#/components/schemas/Reference'
        date:
          description: >-
            The date  (and optionally time) when the research element definition
            was published. The date must change when the business version
            changes and it must change if the status code changes. In addition,
            it should change when the substantive content of the research
            element definition changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            research element definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the research element
            definition from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _comment:
          description: Extensions for comment
          items:
            $ref: '#/components/schemas/Element'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate research element definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the research element
            definition is intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this research element definition is needed and
            why it has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        usage:
          description: >-
            A detailed description, from a clinical perspective, of how the
            ResearchElementDefinition is used.
          $ref: '#/components/schemas/string'
        _usage:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the research element definition
            and/or its contents. Copyright statements are generally legal
            restrictions on the use and publishing of the research element
            definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the research element definition content was
            or is planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the
            ResearchElementDefinition. Topics provide a high-level
            categorization grouping types of ResearchElementDefinitions that can
            be useful for filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        library:
          description: >-
            A reference to a Library resource containing the formal logic used
            by the ResearchElementDefinition.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        type:
          description: >-
            The type of research element, a population, an exposure, or an
            outcome.
          enum:
            - population
            - exposure
            - outcome
        _type:
          $ref: '#/components/schemas/Element'
        variableType:
          description: >-
            The type of the outcome (e.g. Dichotomous, Continuous, or
            Descriptive).
          enum:
            - dichotomous
            - continuous
            - descriptive
        _variableType:
          $ref: '#/components/schemas/Element'
        characteristic:
          description: >-
            A characteristic that defines the members of the research element.
            Multiple characteristics are applied with "and" semantics.
          items:
            $ref: '#/components/schemas/ResearchElementDefinition_Characteristic'
          type: array
      additionalProperties: false
      required:
        - characteristic
        - resourceType
    ResearchElementDefinition_Characteristic:
      description: >-
        The ResearchElementDefinition resource describes a "PICO" element that
        knowledge (evidence, assertion, recommendation) is about.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        definitionCodeableConcept:
          description: >-
            Define members of the research element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/CodeableConcept'
        definitionCanonical:
          description: >-
            Define members of the research element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          pattern: ^\S*$
          type: string
        _definitionCanonical:
          $ref: '#/components/schemas/Element'
        definitionExpression:
          description: >-
            Define members of the research element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/Expression'
        definitionDataRequirement:
          description: >-
            Define members of the research element using Codes (such as
            condition, medication, or observation), Expressions ( using an
            expression language such as FHIRPath or CQL) or DataRequirements
            (such as Diabetes diagnosis onset in the last year).
          $ref: '#/components/schemas/DataRequirement'
        usageContext:
          description: >-
            Use UsageContext to define the members of the population, such as
            Age Ranges, Genders, Settings.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        exclude:
          description: >-
            When true, members with this characteristic are excluded from the
            element.
          $ref: '#/components/schemas/boolean'
        _exclude:
          $ref: '#/components/schemas/Element'
        unitOfMeasure:
          $ref: '#/components/schemas/CodeableConcept'
        studyEffectiveDescription:
          $ref: '#/components/schemas/string'
        _studyEffectiveDescription:
          $ref: '#/components/schemas/Element'
        studyEffectiveDateTime:
          description: Indicates what effective period the study covers.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _studyEffectiveDateTime:
          $ref: '#/components/schemas/Element'
        studyEffectivePeriod:
          $ref: '#/components/schemas/Period'
        studyEffectiveDuration:
          $ref: '#/components/schemas/Duration'
        studyEffectiveTiming:
          $ref: '#/components/schemas/Timing'
        studyEffectiveTimeFromStart:
          $ref: '#/components/schemas/Duration'
        studyEffectiveGroupMeasure:
          description: >-
            Indicates how elements are aggregated within the study effective
            period.
          enum:
            - mean
            - median
            - mean-of-mean
            - mean-of-median
            - median-of-mean
            - median-of-median
        _studyEffectiveGroupMeasure:
          $ref: '#/components/schemas/Element'
        participantEffectiveDescription:
          $ref: '#/components/schemas/string'
        _participantEffectiveDescription:
          $ref: '#/components/schemas/Element'
        participantEffectiveDateTime:
          description: Indicates what effective period the study covers.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _participantEffectiveDateTime:
          $ref: '#/components/schemas/Element'
        participantEffectivePeriod:
          $ref: '#/components/schemas/Period'
        participantEffectiveDuration:
          $ref: '#/components/schemas/Duration'
        participantEffectiveTiming:
          $ref: '#/components/schemas/Timing'
        participantEffectiveTimeFromStart:
          $ref: '#/components/schemas/Duration'
        participantEffectiveGroupMeasure:
          description: >-
            Indicates how elements are aggregated within the study effective
            period.
          enum:
            - mean
            - median
            - mean-of-mean
            - mean-of-median
            - median-of-mean
            - median-of-median
        _participantEffectiveGroupMeasure:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ResearchStudy:
      description: >-
        A process where a researcher or organization plans and then executes a
        series of steps intended to increase the field of healthcare-related
        knowledge.  This includes studies of safety, efficacy, comparative
        effectiveness and other information about medications, devices,
        therapies and other interventional and investigative techniques.  A
        ResearchStudy involves the gathering of information about human or
        animal subjects.
      properties:
        resourceType:
          description: This is a ResearchStudy resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers assigned to this research study by the sponsor or other
            systems.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        protocol:
          description: >-
            The set of steps expected to be performed as part of the execution
            of the study.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A larger research study of which this particular study is a
            component or step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: The current state of the study.
          enum:
            - active
            - administratively-completed
            - approved
            - closed-to-accrual
            - closed-to-accrual-and-intervention
            - completed
            - disapproved
            - in-review
            - temporarily-closed-to-accrual
            - temporarily-closed-to-accrual-and-intervention
            - withdrawn
        _status:
          $ref: '#/components/schemas/Element'
        primaryPurposeType:
          description: >-
            The type of study based upon the intent of the study's activities. A
            classification of the intent of the study.
          $ref: '#/components/schemas/CodeableConcept'
        phase:
          description: >-
            The stage in the progression of a therapy from initial experimental
            use in humans in clinical trials to post-market evaluation.
          $ref: '#/components/schemas/CodeableConcept'
        category:
          description: >-
            Codes categorizing the type of study such as investigational vs.
            observational, type of blinding, type of randomization, safety vs.
            efficacy, etc.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        focus:
          description: >-
            The medication(s), food(s), therapy(ies), device(s) or other
            concerns or interventions that the study is seeking to gain more
            information about.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        condition:
          description: >-
            The condition that is the focus of the study.  For example, In a
            study to examine risk factors for Lupus, might have as an inclusion
            criterion "healthy volunteer", but the target condition code would
            be a Lupus SNOMED code.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        contact:
          description: >-
            Contact details to assist a user in learning more about or engaging
            with the study.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: 'Citations, references and other related documents.'
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        keyword:
          description: Key terms to aid in searching for or filtering the study.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        location:
          description: >-
            Indicates a country, state or other region where the study is taking
            place.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        enrollment:
          description: >-
            Reference to a Group that defines the criteria for and quantity of
            subjects participating in the study.  E.g. " 200 female Europeans
            between the ages of 20 and 45 with early onset diabetes".
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        period:
          description: >-
            Identifies the start date and the expected (or actual, depending on
            status) end date for the study.
          $ref: '#/components/schemas/Period'
        sponsor:
          description: >-
            An organization that initiates the investigation and is legally
            responsible for the study.
          $ref: '#/components/schemas/Reference'
        principalInvestigator:
          description: >-
            A researcher in a study who oversees multiple aspects of the study,
            such as concept development, protocol writing, protocol submission
            for IRB approval, participant recruitment, informed consent, data
            collection, analysis, interpretation and presentation.
          $ref: '#/components/schemas/Reference'
        site:
          description: A facility in which study activities are conducted.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        reasonStopped:
          description: >-
            A description and/or code explaining the premature termination of
            the study.
          $ref: '#/components/schemas/CodeableConcept'
        note:
          description: >-
            Comments made about the study by the performer, subject or other
            participants.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        arm:
          description: >-
            Describes an expected sequence of events for one of the participants
            of a study.  E.g. Exposure to drug A, wash-out, exposure to drug B,
            wash-out, follow-up.
          items:
            $ref: '#/components/schemas/ResearchStudy_Arm'
          type: array
        objective:
          description: >-
            A goal that the study is aiming to achieve in terms of a scientific
            question to be answered by the analysis of data collected during the
            study.
          items:
            $ref: '#/components/schemas/ResearchStudy_Objective'
          type: array
      additionalProperties: false
      required:
        - resourceType
    ResearchStudy_Arm:
      description: >-
        A process where a researcher or organization plans and then executes a
        series of steps intended to increase the field of healthcare-related
        knowledge.  This includes studies of safety, efficacy, comparative
        effectiveness and other information about medications, devices,
        therapies and other interventional and investigative techniques.  A
        ResearchStudy involves the gathering of information about human or
        animal subjects.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Categorization of study arm, e.g. experimental, active comparator,
            placebo comparater.
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            A succinct description of the path through the study that would be
            followed by a subject adhering to this arm.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ResearchStudy_Objective:
      description: >-
        A process where a researcher or organization plans and then executes a
        series of steps intended to increase the field of healthcare-related
        knowledge.  This includes studies of safety, efficacy, comparative
        effectiveness and other information about medications, devices,
        therapies and other interventional and investigative techniques.  A
        ResearchStudy involves the gathering of information about human or
        animal subjects.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    ResearchSubject:
      description: >-
        A physical entity which is the primary unit of operational and/or
        administrative interest in a study.
      properties:
        resourceType:
          description: This is a ResearchSubject resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Identifiers assigned to this research subject for a study.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: The current state of the subject.
          enum:
            - candidate
            - eligible
            - follow-up
            - ineligible
            - not-registered
            - off-study
            - on-study
            - on-study-intervention
            - on-study-observation
            - pending-on-study
            - potential-candidate
            - screening
            - withdrawn
        _status:
          $ref: '#/components/schemas/Element'
        period:
          description: >-
            The dates the subject began and ended their participation in the
            study.
          $ref: '#/components/schemas/Period'
        study:
          $ref: '#/components/schemas/Reference'
        individual:
          $ref: '#/components/schemas/Reference'
        assignedArm:
          description: >-
            The name of the arm in the study the subject is expected to follow
            as part of this study.
          $ref: '#/components/schemas/string'
        _assignedArm:
          $ref: '#/components/schemas/Element'
        actualArm:
          description: >-
            The name of the arm in the study the subject actually followed as
            part of this study.
          $ref: '#/components/schemas/string'
        _actualArm:
          $ref: '#/components/schemas/Element'
        consent:
          description: >-
            A record of the patient's informed agreement to participate in the
            study.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - study
        - individual
        - resourceType
    RiskAssessment:
      description: >-
        An assessment of the likely outcome(s) for a patient or other subject as
        well as the likelihood of each outcome.
      properties:
        resourceType:
          description: This is a RiskAssessment resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Business identifier assigned to the risk assessment.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A reference to the request that is fulfilled by this risk
            assessment.
          $ref: '#/components/schemas/Reference'
        parent:
          description: >-
            A reference to a resource that this risk assessment is part of, such
            as a Procedure.
          $ref: '#/components/schemas/Reference'
        status:
          description: >-
            The status of the RiskAssessment, using the same statuses as an
            Observation.
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        method:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        encounter:
          $ref: '#/components/schemas/Reference'
        occurrenceDateTime:
          description: The date (and possibly time) the risk assessment was performed.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        condition:
          description: >-
            For assessments or prognosis specific to a particular condition,
            indicates the condition being assessed.
          $ref: '#/components/schemas/Reference'
        performer:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: The reason the risk assessment was performed.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: Resources supporting the reason the risk assessment was performed.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        basis:
          description: >-
            Indicates the source data considered as part of the assessment (for
            example, FamilyHistory, Observations, Procedures, Conditions, etc.).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        prediction:
          description: Describes the expected outcome for the subject.
          items:
            $ref: '#/components/schemas/RiskAssessment_Prediction'
          type: array
        mitigation:
          description: >-
            A description of the steps that might be taken to reduce the
            identified risk(s).
          $ref: '#/components/schemas/string'
        _mitigation:
          $ref: '#/components/schemas/Element'
        note:
          description: Additional comments about the risk assessment.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    RiskAssessment_Prediction:
      description: >-
        An assessment of the likely outcome(s) for a patient or other subject as
        well as the likelihood of each outcome.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        outcome:
          description: >-
            One of the potential outcomes for the patient (e.g. remission,
            death,  a particular condition).
          $ref: '#/components/schemas/CodeableConcept'
        probabilityDecimal:
          description: Indicates how likely the outcome is (in the specified timeframe).
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _probabilityDecimal:
          $ref: '#/components/schemas/Element'
        probabilityRange:
          $ref: '#/components/schemas/Range'
        qualitativeRisk:
          description: >-
            Indicates how likely the outcome is (in the specified timeframe),
            expressed as a qualitative value (e.g. low, medium, or high).
          $ref: '#/components/schemas/CodeableConcept'
        relativeRisk:
          description: >-
            Indicates the risk for this particular subject (with their specific
            characteristics) divided by the risk of the population in general.
            (Numbers greater than 1 = higher risk than the population, numbers
            less than 1 = lower risk.).
          $ref: '#/components/schemas/decimal'
        _relativeRisk:
          $ref: '#/components/schemas/Element'
        whenPeriod:
          description: >-
            Indicates the period of time or age range of the subject to which
            the specified probability applies.
          $ref: '#/components/schemas/Period'
        whenRange:
          description: >-
            Indicates the period of time or age range of the subject to which
            the specified probability applies.
          $ref: '#/components/schemas/Range'
        rationale:
          $ref: '#/components/schemas/string'
        _rationale:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    RiskEvidenceSynthesis:
      description: >-
        The RiskEvidenceSynthesis resource describes the likelihood of an
        outcome in a population plus exposure state where the risk estimate is
        derived from a combination of research studies.
      properties:
        resourceType:
          description: This is a RiskEvidenceSynthesis resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this risk evidence
            synthesis when it is referenced in a specification, model, design or
            an instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this risk evidence synthesis is (or will
            be) published. This URL can be the target of a canonical reference.
            It SHALL remain the same when the risk evidence synthesis is stored
            on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this risk evidence
            synthesis when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the risk
            evidence synthesis when it is referenced in a specification, model,
            design or instance. This is an arbitrary value managed by the risk
            evidence synthesis author and is not expected to be globally unique.
            For example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the risk evidence synthesis.
            This name should be usable as an identifier for the module by
            machine processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the risk evidence
            synthesis.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this risk evidence synthesis. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the risk evidence synthesis was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the risk evidence
            synthesis changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the risk
            evidence synthesis.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the risk evidence
            synthesis from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate risk evidence synthesis
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the risk evidence synthesis is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        copyright:
          description: >-
            A copyright statement relating to the risk evidence synthesis and/or
            its contents. Copyright statements are generally legal restrictions
            on the use and publishing of the risk evidence synthesis.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        approvalDate:
          description: >-
            The date on which the resource content was approved by the
            publisher. Approval happens once when the content is officially
            approved for usage.
          $ref: '#/components/schemas/date'
        _approvalDate:
          $ref: '#/components/schemas/Element'
        lastReviewDate:
          description: >-
            The date on which the resource content was last reviewed. Review
            happens periodically after approval but does not change the original
            approval date.
          $ref: '#/components/schemas/date'
        _lastReviewDate:
          $ref: '#/components/schemas/Element'
        effectivePeriod:
          description: >-
            The period during which the risk evidence synthesis content was or
            is planned to be in active use.
          $ref: '#/components/schemas/Period'
        topic:
          description: >-
            Descriptive topics related to the content of the
            RiskEvidenceSynthesis. Topics provide a high-level categorization
            grouping types of EffectEvidenceSynthesiss that can be useful for
            filtering and searching.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        author:
          description: >-
            An individiual or organization primarily involved in the creation
            and maintenance of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        editor:
          description: >-
            An individual or organization primarily responsible for internal
            coherence of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        reviewer:
          description: >-
            An individual or organization primarily responsible for review of
            some aspect of the content.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        endorser:
          description: >-
            An individual or organization responsible for officially endorsing
            the content for use in some setting.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        relatedArtifact:
          description: >-
            Related artifacts such as additional documentation, justification,
            or bibliographic references.
          items:
            $ref: '#/components/schemas/RelatedArtifact'
          type: array
        synthesisType:
          $ref: '#/components/schemas/CodeableConcept'
        studyType:
          $ref: '#/components/schemas/CodeableConcept'
        population:
          description: >-
            A reference to a EvidenceVariable resource that defines the
            population for the research.
          $ref: '#/components/schemas/Reference'
        exposure:
          description: >-
            A reference to a EvidenceVariable resource that defines the exposure
            for the research.
          $ref: '#/components/schemas/Reference'
        outcome:
          description: >-
            A reference to a EvidenceVariable resomece that defines the outcome
            for the research.
          $ref: '#/components/schemas/Reference'
        sampleSize:
          $ref: '#/components/schemas/RiskEvidenceSynthesis_SampleSize'
        riskEstimate:
          $ref: '#/components/schemas/RiskEvidenceSynthesis_RiskEstimate'
        certainty:
          description: A description of the certainty of the risk estimate.
          items:
            $ref: '#/components/schemas/RiskEvidenceSynthesis_Certainty'
          type: array
      additionalProperties: false
      required:
        - outcome
        - resourceType
        - population
    RiskEvidenceSynthesis_SampleSize:
      description: >-
        The RiskEvidenceSynthesis resource describes the likelihood of an
        outcome in a population plus exposure state where the risk estimate is
        derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        numberOfStudies:
          $ref: '#/components/schemas/integer'
        _numberOfStudies:
          $ref: '#/components/schemas/Element'
        numberOfParticipants:
          $ref: '#/components/schemas/integer'
        _numberOfParticipants:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    RiskEvidenceSynthesis_RiskEstimate:
      description: >-
        The RiskEvidenceSynthesis resource describes the likelihood of an
        outcome in a population plus exposure state where the risk estimate is
        derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        value:
          $ref: '#/components/schemas/decimal'
        _value:
          $ref: '#/components/schemas/Element'
        unitOfMeasure:
          $ref: '#/components/schemas/CodeableConcept'
        denominatorCount:
          description: >-
            The sample size for the group that was measured for this risk
            estimate.
          $ref: '#/components/schemas/integer'
        _denominatorCount:
          $ref: '#/components/schemas/Element'
        numeratorCount:
          $ref: '#/components/schemas/integer'
        _numeratorCount:
          $ref: '#/components/schemas/Element'
        precisionEstimate:
          description: A description of the precision of the estimate for the effect.
          items:
            $ref: '#/components/schemas/RiskEvidenceSynthesis_PrecisionEstimate'
          type: array
      additionalProperties: false
    RiskEvidenceSynthesis_PrecisionEstimate:
      description: >-
        The RiskEvidenceSynthesis resource describes the likelihood of an
        outcome in a population plus exposure state where the risk estimate is
        derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        level:
          $ref: '#/components/schemas/decimal'
        _level:
          $ref: '#/components/schemas/Element'
        from:
          $ref: '#/components/schemas/decimal'
        _from:
          $ref: '#/components/schemas/Element'
        to:
          $ref: '#/components/schemas/decimal'
        _to:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    RiskEvidenceSynthesis_Certainty:
      description: >-
        The RiskEvidenceSynthesis resource describes the likelihood of an
        outcome in a population plus exposure state where the risk estimate is
        derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        rating:
          description: A rating of the certainty of the effect estimate.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        certaintySubcomponent:
          description: A description of a component of the overall certainty.
          items:
            $ref: '#/components/schemas/RiskEvidenceSynthesis_CertaintySubcomponent'
          type: array
      additionalProperties: false
    RiskEvidenceSynthesis_CertaintySubcomponent:
      description: >-
        The RiskEvidenceSynthesis resource describes the likelihood of an
        outcome in a population plus exposure state where the risk estimate is
        derived from a combination of research studies.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        rating:
          description: A rating of a subcomponent of rating certainty.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: >-
            A human-readable string to clarify or explain concepts about the
            resource.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
    Schedule:
      description: >-
        A container for slots of time that may be available for booking
        appointments.
      properties:
        resourceType:
          description: This is a Schedule resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: External Ids for this item.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        active:
          description: >-
            Whether this schedule record is in active use or should not be used
            (such as was entered in error).
          $ref: '#/components/schemas/boolean'
        _active:
          $ref: '#/components/schemas/Element'
        serviceCategory:
          description: >-
            A broad categorization of the service that is to be performed during
            this appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        serviceType:
          description: >-
            The specific service that is to be performed during this
            appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialty:
          description: >-
            The specialty of a practitioner that would be required to perform
            the service requested in this appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        actor:
          description: >-
            Slots that reference this schedule resource provide the availability
            details to these referenced resource(s).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        planningHorizon:
          description: >-
            The period of time that the slots that reference this Schedule
            resource cover (even if none exist). These  cover the amount of time
            that an organization's planning horizon; the interval for which they
            are currently accepting appointments. This does not define a
            "template" for planning outside these dates.
          $ref: '#/components/schemas/Period'
        comment:
          description: >-
            Comments on the availability to describe any extended information.
            Such as custom constraints on the slots that may be associated.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - actor
        - resourceType
    SearchParameter:
      description: >-
        A search parameter that defines a named search item that can be used to
        search/filter on a resource.
      properties:
        resourceType:
          description: This is a SearchParameter resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this search parameter when
            it is referenced in a specification, model, design or an instance;
            also called its canonical identifier. This SHOULD be globally unique
            and SHOULD be a literal address at which at which an authoritative
            instance of this search parameter is (or will be) published. This
            URL can be the target of a canonical reference. It SHALL remain the
            same when the search parameter is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the search
            parameter when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the search parameter
            author and is not expected to be globally unique. For example, it
            might be a timestamp (e.g. yyyymmdd) if a managed version is not
            available. There is also no expectation that versions can be placed
            in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the search parameter. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        derivedFrom:
          description: >-
            Where this search parameter is originally defined. If a derivedFrom
            is provided, then the details in the search parameter must be
            consistent with the definition from which it is defined. i.e. the
            parameter should have the same meaning, and (usually) the
            functionality should be a proper subset of the underlying search
            parameter.
          $ref: '#/components/schemas/canonical'
        status:
          description: >-
            The status of this search parameter. Enables tracking the life-cycle
            of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this search parameter is authored
            for testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the search parameter was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the search parameter
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the search
            parameter.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate search parameter instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the search parameter is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this search parameter is needed and why it has
            been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            The code used in the URL or the parameter name in a parameters
            resource for this search parameter.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        base:
          description: >-
            The base resource type(s) that this search parameter can be used
            against.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _base:
          description: Extensions for base
          items:
            $ref: '#/components/schemas/Element'
          type: array
        type:
          description: >-
            The type of value that a search parameter may contain, and how the
            content is interpreted.
          enum:
            - number
            - date
            - string
            - token
            - reference
            - composite
            - quantity
            - uri
            - special
        _type:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            A FHIRPath expression that returns a set of elements for the search
            parameter.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
        xpath:
          description: >-
            An XPath expression that returns a set of elements for the search
            parameter.
          $ref: '#/components/schemas/string'
        _xpath:
          $ref: '#/components/schemas/Element'
        xpathUsage:
          description: >-
            How the search parameter relates to the set of elements returned by
            evaluating the xpath query.
          enum:
            - normal
            - phonetic
            - nearby
            - distance
            - other
        _xpathUsage:
          $ref: '#/components/schemas/Element'
        target:
          description: Types of resource (if a resource is referenced).
          items:
            $ref: '#/components/schemas/code'
          type: array
        _target:
          description: Extensions for target
          items:
            $ref: '#/components/schemas/Element'
          type: array
        multipleOr:
          description: >-
            Whether multiple values are allowed for each time the parameter
            exists. Values are separated by commas, and the parameter matches if
            any of the values match.
          $ref: '#/components/schemas/boolean'
        _multipleOr:
          $ref: '#/components/schemas/Element'
        multipleAnd:
          description: >-
            Whether multiple parameters are allowed - e.g. more than one
            parameter with the same name. The search matches if all the
            parameters match.
          $ref: '#/components/schemas/boolean'
        _multipleAnd:
          $ref: '#/components/schemas/Element'
        comparator:
          description: Comparators supported for the search parameter.
          items:
            enum:
              - eq
              - ne
              - gt
              - lt
              - ge
              - le
              - sa
              - eb
              - ap
          type: array
        _comparator:
          description: Extensions for comparator
          items:
            $ref: '#/components/schemas/Element'
          type: array
        modifier:
          description: A modifier supported for the search parameter.
          items:
            enum:
              - missing
              - exact
              - contains
              - not
              - text
              - in
              - not-in
              - below
              - above
              - type
              - identifier
              - ofType
          type: array
        _modifier:
          description: Extensions for modifier
          items:
            $ref: '#/components/schemas/Element'
          type: array
        chain:
          description: >-
            Contains the names of any search parameters which may be chained to
            the containing search parameter. Chained parameters may be added to
            search parameters of type reference and specify that resources will
            only be returned if they contain a reference to a resource which
            matches the chained parameter value. Values for this field should be
            drawn from SearchParameter.code for a parameter on the target
            resource type.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _chain:
          description: Extensions for chain
          items:
            $ref: '#/components/schemas/Element'
          type: array
        component:
          description: Used to define the parts of a composite search parameter.
          items:
            $ref: '#/components/schemas/SearchParameter_Component'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SearchParameter_Component:
      description: >-
        A search parameter that defines a named search item that can be used to
        search/filter on a resource.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        definition:
          $ref: '#/components/schemas/canonical'
        expression:
          description: >-
            A sub-expression that defines how to extract values for this
            component from the output of the main SearchParameter.expression.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - definition
    ServiceRequest:
      description: >-
        A record of a request for service such as diagnostic investigations,
        treatments, or operations to be performed.
      properties:
        resourceType:
          description: This is a ServiceRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifiers assigned to this order instance by the orderer and/or
            the receiver and/or order fulfiller.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a FHIR-defined protocol, guideline, orderset or
            other definition that is adhered to in whole or in part by this
            ServiceRequest.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        instantiatesUri:
          description: >-
            The URL pointing to an externally maintained protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this ServiceRequest.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _instantiatesUri:
          description: Extensions for instantiatesUri
          items:
            $ref: '#/components/schemas/Element'
          type: array
        basedOn:
          description: Plan/proposal/order fulfilled by this request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        replaces:
          description: >-
            The request takes the place of the referenced completed or
            terminated request(s).
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        requisition:
          description: >-
            A shared identifier common to all service requests that were
            authorized more or less simultaneously by a single author,
            representing the composite or group identifier.
          $ref: '#/components/schemas/Identifier'
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        intent:
          description: >-
            Whether the request is a proposal, plan, an original order or a
            reflex order.
          $ref: '#/components/schemas/code'
        _intent:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            A code that classifies the service for searching, sorting and
            display purposes (e.g. "Surgical Procedure").
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        priority:
          description: >-
            Indicates how quickly the ServiceRequest should be addressed with
            respect to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        doNotPerform:
          description: >-
            Set this to true if the record is saying that the service/procedure
            should NOT be performed.
          $ref: '#/components/schemas/boolean'
        _doNotPerform:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            A code that identifies a particular service (i.e., procedure,
            diagnostic investigation, or panel of investigations) that have been
            requested.
          $ref: '#/components/schemas/CodeableConcept'
        orderDetail:
          description: >-
            Additional details and instructions about the how the services are
            to be delivered.   For example, and order for a urinary catheter may
            have an order detail for an external or indwelling catheter, or an
            order for a bandage may require additional instructions specifying
            how the bandage should be applied.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        quantityQuantity:
          description: >-
            An amount of service being requested which can be a quantity ( for
            example $1,500 home modification), a ratio ( for example, 20 half
            day visits per month), or a range (2.0 to 1.8 Gy per fraction).
          $ref: '#/components/schemas/Quantity'
        quantityRatio:
          description: >-
            An amount of service being requested which can be a quantity ( for
            example $1,500 home modification), a ratio ( for example, 20 half
            day visits per month), or a range (2.0 to 1.8 Gy per fraction).
          $ref: '#/components/schemas/Ratio'
        quantityRange:
          description: >-
            An amount of service being requested which can be a quantity ( for
            example $1,500 home modification), a ratio ( for example, 20 half
            day visits per month), or a range (2.0 to 1.8 Gy per fraction).
          $ref: '#/components/schemas/Range'
        subject:
          description: >-
            On whom or what the service is to be performed. This is usually a
            human patient, but can also be requested on animals, groups of
            humans or animals, devices such as dialysis machines, or even
            locations (typically for environmental scans).
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            An encounter that provides additional information about the
            healthcare context in which this request is made.
          $ref: '#/components/schemas/Reference'
        occurrenceDateTime:
          description: The date/time at which the requested service should occur.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        occurrenceTiming:
          $ref: '#/components/schemas/Timing'
        asNeededBoolean:
          description: >-
            If a CodeableConcept is present, it indicates the pre-condition for
            performing the service.  For example "pain", "on flare-up", etc.
          pattern: ^true|false$
          type: boolean
        _asNeededBoolean:
          $ref: '#/components/schemas/Element'
        asNeededCodeableConcept:
          description: >-
            If a CodeableConcept is present, it indicates the pre-condition for
            performing the service.  For example "pain", "on flare-up", etc.
          $ref: '#/components/schemas/CodeableConcept'
        authoredOn:
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        requester:
          description: >-
            The individual who initiated the request and has responsibility for
            its activation.
          $ref: '#/components/schemas/Reference'
        performerType:
          $ref: '#/components/schemas/CodeableConcept'
        performer:
          description: >-
            The desired performer for doing the requested service.  For example,
            the surgeon, dermatopathologist, endoscopist, etc.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        locationCode:
          description: >-
            The preferred location(s) where the procedure should actually happen
            in coded or free text form. E.g. at home or nursing day care center.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        locationReference:
          description: >-
            A reference to the the preferred location(s) where the procedure
            should actually happen. E.g. at home or nursing day care center.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        reasonCode:
          description: >-
            An explanation or justification for why this service is being
            requested in coded or textual form.   This is often for billing
            purposes.  May relate to the resources referred to in
            `supportingInfo`.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: >-
            Indicates another resource that provides a justification for why
            this service is being requested.   May relate to the resources
            referred to in `supportingInfo`.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        insurance:
          description: >-
            Insurance plans, coverage extensions, pre-authorizations and/or
            pre-determinations that may be needed for delivering the requested
            service.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        supportingInfo:
          description: >-
            Additional clinical information about the patient or specimen that
            may influence the services or their interpretations.     This
            information includes diagnosis, clinical findings and other
            observations.  In laboratory ordering these are typically referred
            to as "ask at order entry questions (AOEs)".  This includes
            observations explicitly requested by the producer (filler) to
            provide context or supporting information needed to complete the
            order. For example,  reporting the amount of inspired oxygen for
            blood gas measurements.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        specimen:
          description: One or more specimens that the laboratory procedure will use.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        bodySite:
          description: >-
            Anatomic location where the procedure should be performed. This is
            the target site.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: >-
            Any other notes and comments made about the service request. For
            example, internal billing notes.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        patientInstruction:
          description: >-
            Instructions in terms that are understood by the patient or
            consumer.
          $ref: '#/components/schemas/string'
        _patientInstruction:
          $ref: '#/components/schemas/Element'
        relevantHistory:
          description: Key events in the history of the request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - subject
        - resourceType
    Slot:
      description: >-
        A slot of time on a schedule that may be available for booking
        appointments.
      properties:
        resourceType:
          description: This is a Slot resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: External Ids for this item.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        serviceCategory:
          description: >-
            A broad categorization of the service that is to be performed during
            this appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        serviceType:
          description: >-
            The type of appointments that can be booked into this slot (ideally
            this would be an identifiable service - which is at a location,
            rather than the location itself). If provided then this overrides
            the value provided on the availability resource.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        specialty:
          description: >-
            The specialty of a practitioner that would be required to perform
            the service requested in this appointment.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        appointmentType:
          description: >-
            The style of appointment or patient that may be booked in the slot
            (not service type).
          $ref: '#/components/schemas/CodeableConcept'
        schedule:
          description: >-
            The schedule resource that this slot defines an interval of status
            information.
          $ref: '#/components/schemas/Reference'
        status:
          description: busy | free | busy-unavailable | busy-tentative | entered-in-error.
          enum:
            - busy
            - free
            - busy-unavailable
            - busy-tentative
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        start:
          $ref: '#/components/schemas/instant'
        _start:
          $ref: '#/components/schemas/Element'
        end:
          $ref: '#/components/schemas/instant'
        _end:
          $ref: '#/components/schemas/Element'
        overbooked:
          description: >-
            This slot has already been overbooked, appointments are unlikely to
            be accepted for this time.
          $ref: '#/components/schemas/boolean'
        _overbooked:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            Comments on the slot to describe any extended information. Such as
            custom constraints on the slot.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - schedule
        - resourceType
    Specimen:
      description: A sample to be used for analysis.
      properties:
        resourceType:
          description: This is a Specimen resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Id for specimen.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        accessionIdentifier:
          description: >-
            The identifier assigned by the lab when accessioning specimen(s).
            This is not necessarily the same as the specimen identifier,
            depending on local lab procedures.
          $ref: '#/components/schemas/Identifier'
        status:
          description: The availability of the specimen.
          enum:
            - available
            - unavailable
            - unsatisfactory
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          description: >-
            Where the specimen came from. This may be from patient(s), from a
            location (e.g., the source of an environmental sample), or a
            sampling of a substance or a device.
          $ref: '#/components/schemas/Reference'
        receivedTime:
          $ref: '#/components/schemas/dateTime'
        _receivedTime:
          $ref: '#/components/schemas/Element'
        parent:
          description: >-
            Reference to the parent (source) specimen which is used when the
            specimen was either derived from or a component of another specimen.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        request:
          description: >-
            Details concerning a service request that required a specimen to be
            collected.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        collection:
          $ref: '#/components/schemas/Specimen_Collection'
        processing:
          description: Details concerning processing and processing steps for the specimen.
          items:
            $ref: '#/components/schemas/Specimen_Processing'
          type: array
        container:
          description: >-
            The container holding the specimen.  The recursive nature of
            containers; i.e. blood in tube in tray in rack is not addressed
            here.
          items:
            $ref: '#/components/schemas/Specimen_Container'
          type: array
        condition:
          description: A mode or state of being that describes the nature of the specimen.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        note:
          description: >-
            To communicate any details or issues about the specimen or during
            the specimen collection. (for example: broken vial, sent with
            patient, frozen).
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Specimen_Collection:
      description: A sample to be used for analysis.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        collector:
          $ref: '#/components/schemas/Reference'
        collectedDateTime:
          description: >-
            Time when specimen was collected from subject - the physiologically
            relevant time.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _collectedDateTime:
          $ref: '#/components/schemas/Element'
        collectedPeriod:
          description: >-
            Time when specimen was collected from subject - the physiologically
            relevant time.
          $ref: '#/components/schemas/Period'
        duration:
          $ref: '#/components/schemas/Duration'
        quantity:
          description: >-
            The quantity of specimen collected; for instance the volume of a
            blood sample, or the physical measurement of an anatomic pathology
            sample.
          $ref: '#/components/schemas/Quantity'
        method:
          description: >-
            A coded value specifying the technique that is used to perform the
            procedure.
          $ref: '#/components/schemas/CodeableConcept'
        bodySite:
          description: >-
            Anatomical location from which the specimen was collected (if
            subject is a patient). This is the target site.  This element is not
            used for environmental specimens.
          $ref: '#/components/schemas/CodeableConcept'
        fastingStatusCodeableConcept:
          description: >-
            Abstinence or reduction from some or all food, drink, or both, for a
            period of time prior to sample collection.
          $ref: '#/components/schemas/CodeableConcept'
        fastingStatusDuration:
          description: >-
            Abstinence or reduction from some or all food, drink, or both, for a
            period of time prior to sample collection.
          $ref: '#/components/schemas/Duration'
      additionalProperties: false
    Specimen_Processing:
      description: A sample to be used for analysis.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        procedure:
          $ref: '#/components/schemas/CodeableConcept'
        additive:
          description: Material used in the processing step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        timeDateTime:
          description: >-
            A record of the time or period when the specimen processing
            occurred.  For example the time of sample fixation or the period of
            time the sample was in formalin.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _timeDateTime:
          $ref: '#/components/schemas/Element'
        timePeriod:
          description: >-
            A record of the time or period when the specimen processing
            occurred.  For example the time of sample fixation or the period of
            time the sample was in formalin.
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    Specimen_Container:
      description: A sample to be used for analysis.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Id for container. There may be multiple; a manufacturer's bar code,
            lab assigned identifier, etc. The container ID may differ from the
            specimen id in some circumstances.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            The type of container associated with the specimen (e.g. slide,
            aliquot, etc.).
          $ref: '#/components/schemas/CodeableConcept'
        capacity:
          $ref: '#/components/schemas/Quantity'
        specimenQuantity:
          description: >-
            The quantity of specimen in the container; may be volume,
            dimensions, or other appropriate measurements, depending on the
            specimen type.
          $ref: '#/components/schemas/Quantity'
        additiveCodeableConcept:
          description: >-
            Introduced substance to preserve, maintain or enhance the specimen.
            Examples: Formalin, Citrate, EDTA.
          $ref: '#/components/schemas/CodeableConcept'
        additiveReference:
          description: >-
            Introduced substance to preserve, maintain or enhance the specimen.
            Examples: Formalin, Citrate, EDTA.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    SpecimenDefinition:
      description: A kind of specimen with associated set of requirements.
      properties:
        resourceType:
          description: This is a SpecimenDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          $ref: '#/components/schemas/Identifier'
        typeCollected:
          $ref: '#/components/schemas/CodeableConcept'
        patientPreparation:
          description: Preparation of the patient for specimen collection.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        timeAspect:
          $ref: '#/components/schemas/string'
        _timeAspect:
          $ref: '#/components/schemas/Element'
        collection:
          description: The action to be performed for collecting the specimen.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        typeTested:
          description: >-
            Specimen conditioned in a container as expected by the testing
            laboratory.
          items:
            $ref: '#/components/schemas/SpecimenDefinition_TypeTested'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SpecimenDefinition_TypeTested:
      description: A kind of specimen with associated set of requirements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        isDerived:
          $ref: '#/components/schemas/boolean'
        _isDerived:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        preference:
          description: The preference for this type of conditioned specimen.
          enum:
            - preferred
            - alternate
        _preference:
          $ref: '#/components/schemas/Element'
        container:
          $ref: '#/components/schemas/SpecimenDefinition_Container'
        requirement:
          description: >-
            Requirements for delivery and special handling of this kind of
            conditioned specimen.
          $ref: '#/components/schemas/string'
        _requirement:
          $ref: '#/components/schemas/Element'
        retentionTime:
          description: >-
            The usual time that a specimen of this kind is retained after the
            ordered tests are completed, for the purpose of additional testing.
          $ref: '#/components/schemas/Duration'
        rejectionCriterion:
          description: >-
            Criterion for rejection of the specimen in its container by the
            laboratory.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        handling:
          description: >-
            Set of instructions for preservation/transport of the specimen at a
            defined temperature interval, prior the testing process.
          items:
            $ref: '#/components/schemas/SpecimenDefinition_Handling'
          type: array
      additionalProperties: false
    SpecimenDefinition_Container:
      description: A kind of specimen with associated set of requirements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        material:
          $ref: '#/components/schemas/CodeableConcept'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        cap:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        capacity:
          $ref: '#/components/schemas/Quantity'
        minimumVolumeQuantity:
          $ref: '#/components/schemas/Quantity'
        minimumVolumeString:
          description: The minimum volume to be conditioned in the container.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _minimumVolumeString:
          $ref: '#/components/schemas/Element'
        additive:
          description: >-
            Substance introduced in the kind of container to preserve, maintain
            or enhance the specimen. Examples: Formalin, Citrate, EDTA.
          items:
            $ref: '#/components/schemas/SpecimenDefinition_Additive'
          type: array
        preparation:
          description: >-
            Special processing that should be applied to the container for this
            kind of specimen.
          $ref: '#/components/schemas/string'
        _preparation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SpecimenDefinition_Additive:
      description: A kind of specimen with associated set of requirements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        additiveCodeableConcept:
          description: >-
            Substance introduced in the kind of container to preserve, maintain
            or enhance the specimen. Examples: Formalin, Citrate, EDTA.
          $ref: '#/components/schemas/CodeableConcept'
        additiveReference:
          description: >-
            Substance introduced in the kind of container to preserve, maintain
            or enhance the specimen. Examples: Formalin, Citrate, EDTA.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    SpecimenDefinition_Handling:
      description: A kind of specimen with associated set of requirements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        temperatureQualifier:
          description: >-
            It qualifies the interval of temperature, which characterizes an
            occurrence of handling. Conditions that are not related to
            temperature may be handled in the instruction element.
          $ref: '#/components/schemas/CodeableConcept'
        temperatureRange:
          $ref: '#/components/schemas/Range'
        maxDuration:
          description: >-
            The maximum time interval of preservation of the specimen with these
            conditions.
          $ref: '#/components/schemas/Duration'
        instruction:
          description: >-
            Additional textual instructions for the preservation or transport of
            the specimen. For instance, 'Protect from light exposure'.
          $ref: '#/components/schemas/string'
        _instruction:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    StructureDefinition:
      description: >-
        A definition of a FHIR structure. This resource is used to describe the
        underlying resources, data types defined in FHIR, and also for
        describing extensions and constraints on resources and data types.
      properties:
        resourceType:
          description: This is a StructureDefinition resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this structure definition
            when it is referenced in a specification, model, design or an
            instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this structure definition is (or will be)
            published. This URL can be the target of a canonical reference. It
            SHALL remain the same when the structure definition is stored on
            different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this structure
            definition when it is represented in other formats, or referenced in
            a specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the
            structure definition when it is referenced in a specification,
            model, design or instance. This is an arbitrary value managed by the
            structure definition author and is not expected to be globally
            unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
            managed version is not available. There is also no expectation that
            versions can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the structure definition. This
            name should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the structure
            definition.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this structure definition. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this structure definition is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the structure definition was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the structure
            definition changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            structure definition.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the structure definition
            from a consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate structure definition
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the structure definition is
            intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this structure definition is needed and why it
            has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the structure definition and/or
            its contents. Copyright statements are generally legal restrictions
            on the use and publishing of the structure definition.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        keyword:
          description: >-
            A set of key words or terms from external terminologies that may be
            used to assist with indexing and searching of templates nby
            describing the use of this structure definition, or the content it
            describes.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        fhirVersion:
          description: >-
            The version of the FHIR specification on which this
            StructureDefinition is based - this is the formal version of the
            specification, without the revision number, e.g.
            [publication].[major].[minor], which is 4.0.1. for this version.
          enum:
            - '0.01'
            - '0.05'
            - '0.06'
            - '0.11'
            - 0.0.80
            - 0.0.81
            - 0.0.82
            - 0.4.0
            - 0.5.0
            - 1.0.0
            - 1.0.1
            - 1.0.2
            - 1.1.0
            - 1.4.0
            - 1.6.0
            - 1.8.0
            - 3.0.0
            - 3.0.1
            - 3.3.0
            - 3.5.0
            - 4.0.0
            - 4.0.1
        _fhirVersion:
          $ref: '#/components/schemas/Element'
        _mapping:
          description: An external specification that the content is mapped to.
          items:
            $ref: '#/components/schemas/StructureDefinition_Mapping'
          type: array
        kind:
          description: Defines the kind of structure that this definition is describing.
          enum:
            - primitive-type
            - complex-type
            - resource
            - logical
        _kind:
          $ref: '#/components/schemas/Element'
        abstract:
          description: >-
            Whether structure this definition describes is abstract or not  -
            that is, whether the structure is not intended to be instantiated.
            For Resources and Data types, abstract types will never be
            exchanged  between systems.
          $ref: '#/components/schemas/boolean'
        _abstract:
          $ref: '#/components/schemas/Element'
        context:
          description: >-
            Identifies the types of resource or data type elements to which the
            extension can be applied.
          items:
            $ref: '#/components/schemas/StructureDefinition_Context'
          type: array
        contextInvariant:
          description: >-
            A set of rules as FHIRPath Invariants about when the extension can
            be used (e.g. co-occurrence variants for the extension). All the
            rules must be true.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _contextInvariant:
          description: Extensions for contextInvariant
          items:
            $ref: '#/components/schemas/Element'
          type: array
        type:
          description: >-
            The type this structure describes. If the derivation kind is
            'specialization' then this is the master definition for a type, and
            there is always one of these (a data type, an extension, a resource,
            including abstract ones). Otherwise the structure definition is a
            constraint on the stated type (and in this case, the type cannot be
            an abstract type).  References are URLs that are relative to
            http://hl7.org/fhir/StructureDefinition e.g. "string" is a reference
            to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are
            only allowed in logical models.
          $ref: '#/components/schemas/uri'
        _type:
          $ref: '#/components/schemas/Element'
        baseDefinition:
          description: >-
            An absolute URI that is the base structure from which this type is
            derived, either by specialization or constraint.
          $ref: '#/components/schemas/canonical'
        derivation:
          description: How the type relates to the baseDefinition.
          enum:
            - specialization
            - constraint
        _derivation:
          $ref: '#/components/schemas/Element'
        snapshot:
          description: >-
            A snapshot view is expressed in a standalone form that can be used
            and interpreted without considering the base StructureDefinition.
          $ref: '#/components/schemas/StructureDefinition_Snapshot'
        differential:
          description: >-
            A differential view is expressed relative to the base
            StructureDefinition - a statement of differences that it applies.
          $ref: '#/components/schemas/StructureDefinition_Differential'
      additionalProperties: false
      required:
        - resourceType
    StructureDefinition_Mapping:
      description: >-
        A definition of a FHIR structure. This resource is used to describe the
        underlying resources, data types defined in FHIR, and also for
        describing extensions and constraints on resources and data types.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identity:
          description: >-
            An Internal id that is used to identify this mapping set when
            specific mappings are made.
          $ref: '#/components/schemas/id'
        _identity:
          $ref: '#/components/schemas/Element'
        uri:
          description: >-
            An absolute URI that identifies the specification that this mapping
            is expressed to.
          $ref: '#/components/schemas/uri'
        _uri:
          $ref: '#/components/schemas/Element'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        comment:
          description: >-
            Comments about this mapping, including version notes, issues, scope
            limitations, and other important notes for usage.
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    StructureDefinition_Context:
      description: >-
        A definition of a FHIR structure. This resource is used to describe the
        underlying resources, data types defined in FHIR, and also for
        describing extensions and constraints on resources and data types.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            Defines how to interpret the expression that defines what the
            context of the extension is.
          enum:
            - fhirpath
            - element
            - extension
        _type:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            An expression that defines where an extension can be used in
            resources.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    StructureDefinition_Snapshot:
      description: >-
        A definition of a FHIR structure. This resource is used to describe the
        underlying resources, data types defined in FHIR, and also for
        describing extensions and constraints on resources and data types.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        element:
          description: Captures constraints on each element within the resource.
          items:
            $ref: '#/components/schemas/ElementDefinition'
          type: array
      additionalProperties: false
      required:
        - element
    StructureDefinition_Differential:
      description: >-
        A definition of a FHIR structure. This resource is used to describe the
        underlying resources, data types defined in FHIR, and also for
        describing extensions and constraints on resources and data types.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        element:
          description: Captures constraints on each element within the resource.
          items:
            $ref: '#/components/schemas/ElementDefinition'
          type: array
      additionalProperties: false
      required:
        - element
    StructureMap:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        resourceType:
          description: This is a StructureMap resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this structure map when it
            is referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this structure map is (or will be) published. This URL
            can be the target of a canonical reference. It SHALL remain the same
            when the structure map is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this structure map when
            it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the
            structure map when it is referenced in a specification, model,
            design or instance. This is an arbitrary value managed by the
            structure map author and is not expected to be globally unique. For
            example, it might be a timestamp (e.g. yyyymmdd) if a managed
            version is not available. There is also no expectation that versions
            can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the structure map. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this structure map. Enables tracking the life-cycle of
            the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this structure map is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the structure map was
            published. The date must change when the business version changes
            and it must change if the status code changes. In addition, it
            should change when the substantive content of the structure map
            changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            structure map.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the structure map from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate structure map instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the structure map is intended
            to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this structure map is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the structure map and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the structure map.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        structure:
          description: >-
            A structure definition used by this map. The structure definition
            may describe instances that are converted, or the instances that are
            produced.
          items:
            $ref: '#/components/schemas/StructureMap_Structure'
          type: array
        import:
          description: Other maps used by this map (canonical URLs).
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        group:
          description: >-
            Organizes the mapping into manageable chunks for human review/ease
            of maintenance.
          items:
            $ref: '#/components/schemas/StructureMap_Group'
          type: array
      additionalProperties: false
      required:
        - resourceType
        - group
    StructureMap_Structure:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          $ref: '#/components/schemas/canonical'
        mode:
          description: How the referenced structure is used in this mapping.
          enum:
            - source
            - queried
            - target
            - produced
        _mode:
          $ref: '#/components/schemas/Element'
        alias:
          $ref: '#/components/schemas/string'
        _alias:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            Documentation that describes how the structure is used in the
            mapping.
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - url
    StructureMap_Group:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/id'
        _name:
          $ref: '#/components/schemas/Element'
        extends:
          $ref: '#/components/schemas/id'
        _extends:
          $ref: '#/components/schemas/Element'
        typeMode:
          description: >-
            If this is the default rule set to apply for the source type or this
            combination of types.
          enum:
            - none
            - types
            - type-and-types
        _typeMode:
          $ref: '#/components/schemas/Element'
        documentation:
          description: >-
            Additional supporting documentation that explains the purpose of the
            group and the types of mappings within it.
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
        input:
          description: >-
            A name assigned to an instance of data. The instance must be
            provided when the mapping is invoked.
          items:
            $ref: '#/components/schemas/StructureMap_Input'
          type: array
        rule:
          description: Transform Rule from source to target.
          items:
            $ref: '#/components/schemas/StructureMap_Rule'
          type: array
      additionalProperties: false
      required:
        - input
        - rule
    StructureMap_Input:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/id'
        _name:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/string'
        _type:
          $ref: '#/components/schemas/Element'
        mode:
          description: Mode for this instance of data.
          enum:
            - source
            - target
        _mode:
          $ref: '#/components/schemas/Element'
        documentation:
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    StructureMap_Rule:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/id'
        _name:
          $ref: '#/components/schemas/Element'
        source:
          description: Source inputs to the mapping.
          items:
            $ref: '#/components/schemas/StructureMap_Source'
          type: array
        target:
          description: Content to create because of this mapping rule.
          items:
            $ref: '#/components/schemas/StructureMap_Target'
          type: array
        rule:
          description: Rules contained in this rule.
          items:
            $ref: '#/components/schemas/StructureMap_Rule'
          type: array
        dependent:
          description: Which other rules to apply in the context of this rule.
          items:
            $ref: '#/components/schemas/StructureMap_Dependent'
          type: array
        documentation:
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
      required:
        - source
    StructureMap_Source:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        context:
          $ref: '#/components/schemas/id'
        _context:
          $ref: '#/components/schemas/Element'
        min:
          description: >-
            Specified minimum cardinality for the element. This is optional; if
            present, it acts an implicit check on the input content.
          $ref: '#/components/schemas/integer'
        _min:
          $ref: '#/components/schemas/Element'
        max:
          description: >-
            Specified maximum cardinality for the element - a number or a "*".
            This is optional; if present, it acts an implicit check on the input
            content (* just serves as documentation; it's the default value).
          $ref: '#/components/schemas/string'
        _max:
          $ref: '#/components/schemas/Element'
        type:
          description: >-
            Specified type for the element. This works as a condition on the
            mapping - use for polymorphic elements.
          $ref: '#/components/schemas/string'
        _type:
          $ref: '#/components/schemas/Element'
        defaultValueBase64Binary:
          description: A value to use if there is no existing value in the source object.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _defaultValueBase64Binary:
          $ref: '#/components/schemas/Element'
        defaultValueBoolean:
          description: A value to use if there is no existing value in the source object.
          pattern: ^true|false$
          type: boolean
        _defaultValueBoolean:
          $ref: '#/components/schemas/Element'
        defaultValueCanonical:
          description: A value to use if there is no existing value in the source object.
          pattern: ^\S*$
          type: string
        _defaultValueCanonical:
          $ref: '#/components/schemas/Element'
        defaultValueCode:
          description: A value to use if there is no existing value in the source object.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _defaultValueCode:
          $ref: '#/components/schemas/Element'
        defaultValueDate:
          description: A value to use if there is no existing value in the source object.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _defaultValueDate:
          $ref: '#/components/schemas/Element'
        defaultValueDateTime:
          description: A value to use if there is no existing value in the source object.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _defaultValueDateTime:
          $ref: '#/components/schemas/Element'
        defaultValueDecimal:
          description: A value to use if there is no existing value in the source object.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _defaultValueDecimal:
          $ref: '#/components/schemas/Element'
        defaultValueId:
          description: A value to use if there is no existing value in the source object.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _defaultValueId:
          $ref: '#/components/schemas/Element'
        defaultValueInstant:
          description: A value to use if there is no existing value in the source object.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _defaultValueInstant:
          $ref: '#/components/schemas/Element'
        defaultValueInteger:
          description: A value to use if there is no existing value in the source object.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _defaultValueInteger:
          $ref: '#/components/schemas/Element'
        defaultValueMarkdown:
          description: A value to use if there is no existing value in the source object.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _defaultValueMarkdown:
          $ref: '#/components/schemas/Element'
        defaultValueOid:
          description: A value to use if there is no existing value in the source object.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _defaultValueOid:
          $ref: '#/components/schemas/Element'
        defaultValuePositiveInt:
          description: A value to use if there is no existing value in the source object.
          pattern: '^[1-9][0-9]*$'
          type: number
        _defaultValuePositiveInt:
          $ref: '#/components/schemas/Element'
        defaultValueString:
          description: A value to use if there is no existing value in the source object.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _defaultValueString:
          $ref: '#/components/schemas/Element'
        defaultValueTime:
          description: A value to use if there is no existing value in the source object.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _defaultValueTime:
          $ref: '#/components/schemas/Element'
        defaultValueUnsignedInt:
          description: A value to use if there is no existing value in the source object.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _defaultValueUnsignedInt:
          $ref: '#/components/schemas/Element'
        defaultValueUri:
          description: A value to use if there is no existing value in the source object.
          pattern: ^\S*$
          type: string
        _defaultValueUri:
          $ref: '#/components/schemas/Element'
        defaultValueUrl:
          description: A value to use if there is no existing value in the source object.
          pattern: ^\S*$
          type: string
        _defaultValueUrl:
          $ref: '#/components/schemas/Element'
        defaultValueUuid:
          description: A value to use if there is no existing value in the source object.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _defaultValueUuid:
          $ref: '#/components/schemas/Element'
        defaultValueAddress:
          $ref: '#/components/schemas/Address'
        defaultValueAge:
          $ref: '#/components/schemas/Age'
        defaultValueAnnotation:
          $ref: '#/components/schemas/Annotation'
        defaultValueAttachment:
          $ref: '#/components/schemas/Attachment'
        defaultValueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        defaultValueCoding:
          $ref: '#/components/schemas/Coding'
        defaultValueContactPoint:
          $ref: '#/components/schemas/ContactPoint'
        defaultValueCount:
          $ref: '#/components/schemas/Count'
        defaultValueDistance:
          $ref: '#/components/schemas/Distance'
        defaultValueDuration:
          $ref: '#/components/schemas/Duration'
        defaultValueHumanName:
          $ref: '#/components/schemas/HumanName'
        defaultValueIdentifier:
          $ref: '#/components/schemas/Identifier'
        defaultValueMoney:
          $ref: '#/components/schemas/Money'
        defaultValuePeriod:
          $ref: '#/components/schemas/Period'
        defaultValueQuantity:
          $ref: '#/components/schemas/Quantity'
        defaultValueRange:
          $ref: '#/components/schemas/Range'
        defaultValueRatio:
          $ref: '#/components/schemas/Ratio'
        defaultValueReference:
          $ref: '#/components/schemas/Reference'
        defaultValueSampledData:
          $ref: '#/components/schemas/SampledData'
        defaultValueSignature:
          $ref: '#/components/schemas/Signature'
        defaultValueTiming:
          $ref: '#/components/schemas/Timing'
        defaultValueContactDetail:
          $ref: '#/components/schemas/ContactDetail'
        defaultValueContributor:
          $ref: '#/components/schemas/Contributor'
        defaultValueDataRequirement:
          $ref: '#/components/schemas/DataRequirement'
        defaultValueExpression:
          $ref: '#/components/schemas/Expression'
        defaultValueParameterDefinition:
          $ref: '#/components/schemas/ParameterDefinition'
        defaultValueRelatedArtifact:
          $ref: '#/components/schemas/RelatedArtifact'
        defaultValueTriggerDefinition:
          $ref: '#/components/schemas/TriggerDefinition'
        defaultValueUsageContext:
          $ref: '#/components/schemas/UsageContext'
        defaultValueDosage:
          $ref: '#/components/schemas/Dosage'
        defaultValueMeta:
          $ref: '#/components/schemas/Meta'
        element:
          $ref: '#/components/schemas/string'
        _element:
          $ref: '#/components/schemas/Element'
        listMode:
          description: How to handle the list mode for this element.
          enum:
            - first
            - not_first
            - last
            - not_last
            - only_one
        _listMode:
          $ref: '#/components/schemas/Element'
        variable:
          $ref: '#/components/schemas/id'
        _variable:
          $ref: '#/components/schemas/Element'
        condition:
          $ref: '#/components/schemas/string'
        _condition:
          $ref: '#/components/schemas/Element'
        check:
          description: >-
            FHIRPath expression  - must be true or the mapping engine throws an
            error instead of completing.
          $ref: '#/components/schemas/string'
        _check:
          $ref: '#/components/schemas/Element'
        logMessage:
          description: >-
            A FHIRPath expression which specifies a message to put in the
            transform log when content matching the source rule is found.
          $ref: '#/components/schemas/string'
        _logMessage:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    StructureMap_Target:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        context:
          $ref: '#/components/schemas/id'
        _context:
          $ref: '#/components/schemas/Element'
        contextType:
          description: How to interpret the context.
          enum:
            - type
            - variable
        _contextType:
          $ref: '#/components/schemas/Element'
        element:
          $ref: '#/components/schemas/string'
        _element:
          $ref: '#/components/schemas/Element'
        variable:
          $ref: '#/components/schemas/id'
        _variable:
          $ref: '#/components/schemas/Element'
        listMode:
          description: 'If field is a list, how to manage the list.'
          items:
            enum:
              - first
              - share
              - last
              - collate
          type: array
        _listMode:
          description: Extensions for listMode
          items:
            $ref: '#/components/schemas/Element'
          type: array
        listRuleId:
          $ref: '#/components/schemas/id'
        _listRuleId:
          $ref: '#/components/schemas/Element'
        transform:
          description: How the data is copied / created.
          enum:
            - create
            - copy
            - truncate
            - escape
            - cast
            - append
            - translate
            - reference
            - dateOp
            - uuid
            - pointer
            - evaluate
            - cc
            - c
            - qty
            - id
            - cp
        _transform:
          $ref: '#/components/schemas/Element'
        parameter:
          description: Parameters to the transform.
          items:
            $ref: '#/components/schemas/StructureMap_Parameter'
          type: array
      additionalProperties: false
    StructureMap_Parameter:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        valueId:
          description: Parameter value - variable or literal.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          $ref: '#/components/schemas/Element'
        valueString:
          description: Parameter value - variable or literal.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: Parameter value - variable or literal.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: Parameter value - variable or literal.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: Parameter value - variable or literal.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    StructureMap_Dependent:
      description: >-
        A Map of relationships between 2 structures that can be used to
        transform data.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/id'
        _name:
          $ref: '#/components/schemas/Element'
        variable:
          description: Variable to pass to the rule or group.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _variable:
          description: Extensions for variable
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    Subscription:
      description: >-
        The subscription resource is used to define a push-based subscription
        from a server to another system. Once a subscription is registered with
        the server, the server checks every resource that is created or updated,
        and if the resource matches the given criteria, it sends a message on
        the defined "channel" so that another system can take an appropriate
        action.
      properties:
        resourceType:
          description: This is a Subscription resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: >-
            The status of the subscription, which marks the server state for
            managing the subscription.
          enum:
            - requested
            - active
            - error
            - 'off'
        _status:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details for a human to contact about the subscription. The
            primary use of this for system administrator troubleshooting.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
        end:
          $ref: '#/components/schemas/instant'
        _end:
          $ref: '#/components/schemas/Element'
        reason:
          $ref: '#/components/schemas/string'
        _reason:
          $ref: '#/components/schemas/Element'
        criteria:
          description: >-
            The rules that the server should use to determine when to generate
            notifications for this subscription.
          $ref: '#/components/schemas/string'
        _criteria:
          $ref: '#/components/schemas/Element'
        error:
          description: >-
            A record of the last error that occurred when the server processed a
            notification.
          $ref: '#/components/schemas/string'
        _error:
          $ref: '#/components/schemas/Element'
        channel:
          description: >-
            Details where to send notifications when resources are received that
            meet the criteria.
          $ref: '#/components/schemas/Subscription_Channel'
      additionalProperties: false
      required:
        - channel
        - resourceType
    Subscription_Channel:
      description: >-
        The subscription resource is used to define a push-based subscription
        from a server to another system. Once a subscription is registered with
        the server, the server checks every resource that is created or updated,
        and if the resource matches the given criteria, it sends a message on
        the defined "channel" so that another system can take an appropriate
        action.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of channel to send notifications on.
          enum:
            - rest-hook
            - websocket
            - email
            - sms
            - message
        _type:
          $ref: '#/components/schemas/Element'
        endpoint:
          $ref: '#/components/schemas/url'
        _endpoint:
          $ref: '#/components/schemas/Element'
        payload:
          description: >-
            The mime type to send the payload in - either application/fhir+xml,
            or application/fhir+json. If the payload is not present, then there
            is no payload in the notification, just a notification. The mime
            type "text/plain" may also be used for Email and SMS subscriptions.
          $ref: '#/components/schemas/code'
        _payload:
          $ref: '#/components/schemas/Element'
        header:
          description: >-
            Additional headers / information to send as part of the
            notification.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _header:
          description: Extensions for header
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    Substance:
      description: A homogeneous material with a definite composition.
      properties:
        resourceType:
          description: This is a Substance resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: Unique identifier for the substance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: A code to indicate if the substance is actively used.
          enum:
            - active
            - inactive
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            A code that classifies the general type of substance.  This is used
            for searching, sorting and display purposes.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          description: >-
            A description of the substance - its appearance, handling
            requirements, and other usage notes.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        instance:
          description: >-
            Substance may be used to describe a kind of substance, or a specific
            package/container of the substance: an instance.
          items:
            $ref: '#/components/schemas/Substance_Instance'
          type: array
        ingredient:
          description: A substance can be composed of other substances.
          items:
            $ref: '#/components/schemas/Substance_Ingredient'
          type: array
      additionalProperties: false
      required:
        - code
        - resourceType
    Substance_Instance:
      description: A homogeneous material with a definite composition.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier associated with the package/container (usually a label
            affixed directly).
          $ref: '#/components/schemas/Identifier'
        expiry:
          description: >-
            When the substance is no longer valid to use. For some substances, a
            single arbitrary date is used for expiry.
          $ref: '#/components/schemas/dateTime'
        _expiry:
          $ref: '#/components/schemas/Element'
        quantity:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Substance_Ingredient:
      description: A homogeneous material with a definite composition.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        quantity:
          description: >-
            The amount of the ingredient in the substance - a concentration
            ratio.
          $ref: '#/components/schemas/Ratio'
        substanceCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        substanceReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    SubstanceNucleicAcid:
      description: >-
        Nucleic acids are defined by three distinct elements: the base, sugar
        and linkage. Individual substance/moiety IDs will be created for each of
        these elements. The nucleotide sequence will be always entered in the
        5’-3’ direction.
      properties:
        resourceType:
          description: This is a SubstanceNucleicAcid resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequenceType:
          description: >-
            The type of the sequence shall be specified based on a controlled
            vocabulary.
          $ref: '#/components/schemas/CodeableConcept'
        numberOfSubunits:
          description: >-
            The number of linear sequences of nucleotides linked through
            phosphodiester bonds shall be described. Subunits would be strands
            of nucleic acids that are tightly associated typically through
            Watson-Crick base pairing. NOTE: If not specified in the reference
            source, the assumption is that there is 1 subunit.
          $ref: '#/components/schemas/integer'
        _numberOfSubunits:
          $ref: '#/components/schemas/Element'
        areaOfHybridisation:
          description: >-
            The area of hybridisation shall be described if applicable for
            double stranded RNA or DNA. The number associated with the subunit
            followed by the number associated to the residue shall be specified
            in increasing order. The underscore “” shall be used as separator as
            follows: “Subunitnumber Residue”.
          $ref: '#/components/schemas/string'
        _areaOfHybridisation:
          $ref: '#/components/schemas/Element'
        oligoNucleotideType:
          $ref: '#/components/schemas/CodeableConcept'
        subunit:
          description: >-
            Subunits are listed in order of decreasing length; sequences of the
            same length will be ordered by molecular weight; subunits that have
            identical sequences will be repeated multiple times.
          items:
            $ref: '#/components/schemas/SubstanceNucleicAcid_Subunit'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SubstanceNucleicAcid_Subunit:
      description: >-
        Nucleic acids are defined by three distinct elements: the base, sugar
        and linkage. Individual substance/moiety IDs will be created for each of
        these elements. The nucleotide sequence will be always entered in the
        5’-3’ direction.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subunit:
          description: >-
            Index of linear sequences of nucleic acids in order of decreasing
            length. Sequences of the same length will be ordered by molecular
            weight. Subunits that have identical sequences will be repeated and
            have sequential subscripts.
          $ref: '#/components/schemas/integer'
        _subunit:
          $ref: '#/components/schemas/Element'
        sequence:
          description: >-
            Actual nucleotide sequence notation from 5' to 3' end using standard
            single letter codes. In addition to the base sequence, sugar and
            type of phosphate or non-phosphate linkage should also be captured.
          $ref: '#/components/schemas/string'
        _sequence:
          $ref: '#/components/schemas/Element'
        length:
          $ref: '#/components/schemas/integer'
        _length:
          $ref: '#/components/schemas/Element'
        sequenceAttachment:
          $ref: '#/components/schemas/Attachment'
        fivePrime:
          description: >-
            The nucleotide present at the 5’ terminal shall be specified based
            on a controlled vocabulary. Since the sequence is represented from
            the 5' to the 3' end, the 5’ prime nucleotide is the letter at the
            first position in the sequence. A separate representation would be
            redundant.
          $ref: '#/components/schemas/CodeableConcept'
        threePrime:
          description: >-
            The nucleotide present at the 3’ terminal shall be specified based
            on a controlled vocabulary. Since the sequence is represented from
            the 5' to the 3' end, the 5’ prime nucleotide is the letter at the
            last position in the sequence. A separate representation would be
            redundant.
          $ref: '#/components/schemas/CodeableConcept'
        linkage:
          description: The linkages between sugar residues will also be captured.
          items:
            $ref: '#/components/schemas/SubstanceNucleicAcid_Linkage'
          type: array
        sugar:
          description: 5.3.6.8.1 Sugar ID (Mandatory).
          items:
            $ref: '#/components/schemas/SubstanceNucleicAcid_Sugar'
          type: array
      additionalProperties: false
    SubstanceNucleicAcid_Linkage:
      description: >-
        Nucleic acids are defined by three distinct elements: the base, sugar
        and linkage. Individual substance/moiety IDs will be created for each of
        these elements. The nucleotide sequence will be always entered in the
        5’-3’ direction.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        connectivity:
          description: >-
            The entity that links the sugar residues together should also be
            captured for nearly all naturally occurring nucleic acid the linkage
            is a phosphate group. For many synthetic oligonucleotides
            phosphorothioate linkages are often seen. Linkage connectivity is
            assumed to be 3’-5’. If the linkage is either 3’-3’ or 5’-5’ this
            should be specified.
          $ref: '#/components/schemas/string'
        _connectivity:
          $ref: '#/components/schemas/Element'
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          description: >-
            Each linkage will be registered as a fragment and have at least one
            name. A single name shall be assigned to each linkage.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        residueSite:
          $ref: '#/components/schemas/string'
        _residueSite:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstanceNucleicAcid_Sugar:
      description: >-
        Nucleic acids are defined by three distinct elements: the base, sugar
        and linkage. Individual substance/moiety IDs will be created for each of
        these elements. The nucleotide sequence will be always entered in the
        5’-3’ direction.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            The Substance ID of the sugar or sugar-like component that make up
            the nucleotide.
          $ref: '#/components/schemas/Identifier'
        name:
          description: >-
            The name of the sugar or sugar-like component that make up the
            nucleotide.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        residueSite:
          description: >-
            The residues that contain a given sugar will be captured. The order
            of given residues will be captured in the 5‘-3‘direction consistent
            with the base sequences listed above.
          $ref: '#/components/schemas/string'
        _residueSite:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstancePolymer:
      description: Todo.
      properties:
        resourceType:
          description: This is a SubstancePolymer resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        class:
          $ref: '#/components/schemas/CodeableConcept'
        geometry:
          $ref: '#/components/schemas/CodeableConcept'
        copolymerConnectivity:
          description: Todo.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        modification:
          description: Todo.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _modification:
          description: Extensions for modification
          items:
            $ref: '#/components/schemas/Element'
          type: array
        monomerSet:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstancePolymer_MonomerSet'
          type: array
        repeat:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstancePolymer_Repeat'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SubstancePolymer_MonomerSet:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        ratioType:
          $ref: '#/components/schemas/CodeableConcept'
        startingMaterial:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstancePolymer_StartingMaterial'
          type: array
      additionalProperties: false
    SubstancePolymer_StartingMaterial:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        material:
          $ref: '#/components/schemas/CodeableConcept'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        isDefining:
          $ref: '#/components/schemas/boolean'
        _isDefining:
          $ref: '#/components/schemas/Element'
        amount:
          $ref: '#/components/schemas/SubstanceAmount'
      additionalProperties: false
    SubstancePolymer_Repeat:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        numberOfUnits:
          $ref: '#/components/schemas/integer'
        _numberOfUnits:
          $ref: '#/components/schemas/Element'
        averageMolecularFormula:
          $ref: '#/components/schemas/string'
        _averageMolecularFormula:
          $ref: '#/components/schemas/Element'
        repeatUnitAmountType:
          $ref: '#/components/schemas/CodeableConcept'
        repeatUnit:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstancePolymer_RepeatUnit'
          type: array
      additionalProperties: false
    SubstancePolymer_RepeatUnit:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        orientationOfPolymerisation:
          $ref: '#/components/schemas/CodeableConcept'
        repeatUnit:
          $ref: '#/components/schemas/string'
        _repeatUnit:
          $ref: '#/components/schemas/Element'
        amount:
          $ref: '#/components/schemas/SubstanceAmount'
        degreeOfPolymerisation:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstancePolymer_DegreeOfPolymerisation'
          type: array
        structuralRepresentation:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstancePolymer_StructuralRepresentation'
          type: array
      additionalProperties: false
    SubstancePolymer_DegreeOfPolymerisation:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        degree:
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          $ref: '#/components/schemas/SubstanceAmount'
      additionalProperties: false
    SubstancePolymer_StructuralRepresentation:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        representation:
          $ref: '#/components/schemas/string'
        _representation:
          $ref: '#/components/schemas/Element'
        attachment:
          $ref: '#/components/schemas/Attachment'
      additionalProperties: false
    SubstanceProtein:
      description: >-
        A SubstanceProtein is defined as a single unit of a linear amino acid
        sequence, or a combination of subunits that are either covalently linked
        or have a defined invariant stoichiometric relationship. This includes
        all synthetic, recombinant and purified SubstanceProteins of defined
        sequence, whether the use is therapeutic or prophylactic. This set of
        elements will be used to describe albumins, coagulation factors,
        cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes,
        toxins, toxoids, recombinant vaccines, and immunomodulators.
      properties:
        resourceType:
          description: This is a SubstanceProtein resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sequenceType:
          description: >-
            The SubstanceProtein descriptive elements will only be used when a
            complete or partial amino acid sequence is available or derivable
            from a nucleic acid sequence.
          $ref: '#/components/schemas/CodeableConcept'
        numberOfSubunits:
          description: >-
            Number of linear sequences of amino acids linked through peptide
            bonds. The number of subunits constituting the SubstanceProtein
            shall be described. It is possible that the number of subunits can
            be variable.
          $ref: '#/components/schemas/integer'
        _numberOfSubunits:
          $ref: '#/components/schemas/Element'
        disulfideLinkage:
          description: >-
            The disulphide bond between two cysteine residues either on the same
            subunit or on two different subunits shall be described. The
            position of the disulfide bonds in the SubstanceProtein shall be
            listed in increasing order of subunit number and position within
            subunit followed by the abbreviation of the amino acids involved.
            The disulfide linkage positions shall actually contain the amino
            acid Cysteine at the respective positions.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _disulfideLinkage:
          description: Extensions for disulfideLinkage
          items:
            $ref: '#/components/schemas/Element'
          type: array
        subunit:
          description: >-
            This subclause refers to the description of each subunit
            constituting the SubstanceProtein. A subunit is a linear sequence of
            amino acids linked through peptide bonds. The Subunit information
            shall be provided when the finished SubstanceProtein is a complex of
            multiple sequences; subunits are not used to delineate domains
            within a single sequence. Subunits are listed in order of decreasing
            length; sequences of the same length will be ordered by decreasing
            molecular weight; subunits that have identical sequences will be
            repeated multiple times.
          items:
            $ref: '#/components/schemas/SubstanceProtein_Subunit'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SubstanceProtein_Subunit:
      description: >-
        A SubstanceProtein is defined as a single unit of a linear amino acid
        sequence, or a combination of subunits that are either covalently linked
        or have a defined invariant stoichiometric relationship. This includes
        all synthetic, recombinant and purified SubstanceProteins of defined
        sequence, whether the use is therapeutic or prophylactic. This set of
        elements will be used to describe albumins, coagulation factors,
        cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes,
        toxins, toxoids, recombinant vaccines, and immunomodulators.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        subunit:
          description: >-
            Index of primary sequences of amino acids linked through peptide
            bonds in order of decreasing length. Sequences of the same length
            will be ordered by molecular weight. Subunits that have identical
            sequences will be repeated and have sequential subscripts.
          $ref: '#/components/schemas/integer'
        _subunit:
          $ref: '#/components/schemas/Element'
        sequence:
          description: >-
            The sequence information shall be provided enumerating the amino
            acids from N- to C-terminal end using standard single-letter amino
            acid codes. Uppercase shall be used for L-amino acids and lowercase
            for D-amino acids. Transcribed SubstanceProteins will always be
            described using the translated sequence; for synthetic peptide
            containing amino acids that are not represented with a single letter
            code an X should be used within the sequence. The modified amino
            acids will be distinguished by their position in the sequence.
          $ref: '#/components/schemas/string'
        _sequence:
          $ref: '#/components/schemas/Element'
        length:
          $ref: '#/components/schemas/integer'
        _length:
          $ref: '#/components/schemas/Element'
        sequenceAttachment:
          description: >-
            The sequence information shall be provided enumerating the amino
            acids from N- to C-terminal end using standard single-letter amino
            acid codes. Uppercase shall be used for L-amino acids and lowercase
            for D-amino acids. Transcribed SubstanceProteins will always be
            described using the translated sequence; for synthetic peptide
            containing amino acids that are not represented with a single letter
            code an X should be used within the sequence. The modified amino
            acids will be distinguished by their position in the sequence.
          $ref: '#/components/schemas/Attachment'
        nTerminalModificationId:
          description: >-
            Unique identifier for molecular fragment modification based on the
            ISO 11238 Substance ID.
          $ref: '#/components/schemas/Identifier'
        nTerminalModification:
          description: >-
            The name of the fragment modified at the N-terminal of the
            SubstanceProtein shall be specified.
          $ref: '#/components/schemas/string'
        _nTerminalModification:
          $ref: '#/components/schemas/Element'
        cTerminalModificationId:
          description: >-
            Unique identifier for molecular fragment modification based on the
            ISO 11238 Substance ID.
          $ref: '#/components/schemas/Identifier'
        cTerminalModification:
          $ref: '#/components/schemas/string'
        _cTerminalModification:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstanceReferenceInformation:
      description: Todo.
      properties:
        resourceType:
          description: This is a SubstanceReferenceInformation resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        gene:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstanceReferenceInformation_Gene'
          type: array
        geneElement:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstanceReferenceInformation_GeneElement'
          type: array
        classification:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstanceReferenceInformation_Classification'
          type: array
        target:
          description: Todo.
          items:
            $ref: '#/components/schemas/SubstanceReferenceInformation_Target'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SubstanceReferenceInformation_Gene:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        geneSequenceOrigin:
          $ref: '#/components/schemas/CodeableConcept'
        gene:
          $ref: '#/components/schemas/CodeableConcept'
        source:
          description: Todo.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SubstanceReferenceInformation_GeneElement:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        element:
          $ref: '#/components/schemas/Identifier'
        source:
          description: Todo.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SubstanceReferenceInformation_Classification:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        domain:
          $ref: '#/components/schemas/CodeableConcept'
        classification:
          $ref: '#/components/schemas/CodeableConcept'
        subtype:
          description: Todo.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        source:
          description: Todo.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SubstanceReferenceInformation_Target:
      description: Todo.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        target:
          $ref: '#/components/schemas/Identifier'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        interaction:
          $ref: '#/components/schemas/CodeableConcept'
        organism:
          $ref: '#/components/schemas/CodeableConcept'
        organismType:
          $ref: '#/components/schemas/CodeableConcept'
        amountQuantity:
          $ref: '#/components/schemas/Quantity'
        amountRange:
          $ref: '#/components/schemas/Range'
        amountString:
          description: Todo.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _amountString:
          $ref: '#/components/schemas/Element'
        amountType:
          $ref: '#/components/schemas/CodeableConcept'
        source:
          description: Todo.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SubstanceSourceMaterial:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        resourceType:
          description: This is a SubstanceSourceMaterial resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        sourceMaterialClass:
          description: >-
            General high level classification of the source material specific to
            the origin of the material.
          $ref: '#/components/schemas/CodeableConcept'
        sourceMaterialType:
          description: >-
            The type of the source material shall be specified based on a
            controlled vocabulary. For vaccines, this subclause refers to the
            class of infectious agent.
          $ref: '#/components/schemas/CodeableConcept'
        sourceMaterialState:
          $ref: '#/components/schemas/CodeableConcept'
        organismId:
          description: >-
            The unique identifier associated with the source material parent
            organism shall be specified.
          $ref: '#/components/schemas/Identifier'
        organismName:
          description: >-
            The organism accepted Scientific name shall be provided based on the
            organism taxonomy.
          $ref: '#/components/schemas/string'
        _organismName:
          $ref: '#/components/schemas/Element'
        parentSubstanceId:
          description: >-
            The parent of the herbal drug Ginkgo biloba, Leaf is the substance
            ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L.
            (Whole plant).
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        parentSubstanceName:
          description: 'The parent substance of the Herbal Drug, or Herbal preparation.'
          items:
            $ref: '#/components/schemas/string'
          type: array
        _parentSubstanceName:
          description: Extensions for parentSubstanceName
          items:
            $ref: '#/components/schemas/Element'
          type: array
        countryOfOrigin:
          description: >-
            The country where the plant material is harvested or the countries
            where the plasma is sourced from as laid down in accordance with the
            Plasma Master File. For “Plasma-derived substances” the attribute
            country of origin provides information about the countries used for
            the manufacturing of the Cryopoor plama or Crioprecipitate.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        geographicalLocation:
          description: >-
            The place/region where the plant is harvested or the places/regions
            where the animal source material has its habitat.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _geographicalLocation:
          description: Extensions for geographicalLocation
          items:
            $ref: '#/components/schemas/Element'
          type: array
        developmentStage:
          description: >-
            Stage of life for animals, plants, insects and microorganisms. This
            information shall be provided only when the substance is
            significantly different in these stages (e.g. foetal bovine serum).
          $ref: '#/components/schemas/CodeableConcept'
        fractionDescription:
          description: >-
            Many complex materials are fractions of parts of plants, animals, or
            minerals. Fraction elements are often necessary to define both
            Substances and Specified Group 1 Substances. For substances derived
            from Plants, fraction information will be captured at the Substance
            information level ( . Oils, Juices and Exudates). Additional
            information for Extracts, such as extraction solvent composition,
            will be captured at the Specified Substance Group 1 information
            level. For plasma-derived products fraction information will be
            captured at the Substance and the Specified Substance Group 1
            levels.
          items:
            $ref: '#/components/schemas/SubstanceSourceMaterial_FractionDescription'
          type: array
        organism:
          description: >-
            This subclause describes the organism which the substance is derived
            from. For vaccines, the parent organism shall be specified based on
            these subclause elements. As an example, full taxonomy will be
            described for the Substance Name: ., Leaf.
          $ref: '#/components/schemas/SubstanceSourceMaterial_Organism'
        partDescription:
          description: To do.
          items:
            $ref: '#/components/schemas/SubstanceSourceMaterial_PartDescription'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SubstanceSourceMaterial_FractionDescription:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        fraction:
          description: >-
            This element is capturing information about the fraction of a plant
            part, or human plasma for fractionation.
          $ref: '#/components/schemas/string'
        _fraction:
          $ref: '#/components/schemas/Element'
        materialType:
          description: >-
            The specific type of the material constituting the component. For
            Herbal preparations the particulars of the extracts (liquid/dry) is
            described in Specified Substance Group 1.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    SubstanceSourceMaterial_Organism:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        family:
          $ref: '#/components/schemas/CodeableConcept'
        genus:
          description: >-
            The genus of an organism shall be specified; refers to the Latin
            epithet of the genus element of the plant/animal scientific name; it
            is present in names for genera, species and infraspecies.
          $ref: '#/components/schemas/CodeableConcept'
        species:
          description: >-
            The species of an organism shall be specified; refers to the Latin
            epithet of the species of the plant/animal; it is present in names
            for species and infraspecies.
          $ref: '#/components/schemas/CodeableConcept'
        intraspecificType:
          $ref: '#/components/schemas/CodeableConcept'
        intraspecificDescription:
          description: >-
            The intraspecific description of an organism shall be specified
            based on a controlled vocabulary. For Influenza Vaccine, the
            intraspecific description shall contain the syntax of the antigen in
            line with the WHO convention.
          $ref: '#/components/schemas/string'
        _intraspecificDescription:
          $ref: '#/components/schemas/Element'
        author:
          description: 4.9.13.6.1 Author type (Conditional).
          items:
            $ref: '#/components/schemas/SubstanceSourceMaterial_Author'
          type: array
        hybrid:
          $ref: '#/components/schemas/SubstanceSourceMaterial_Hybrid'
        organismGeneral:
          $ref: '#/components/schemas/SubstanceSourceMaterial_OrganismGeneral'
      additionalProperties: false
    SubstanceSourceMaterial_Author:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        authorType:
          description: >-
            The type of author of an organism species shall be specified. The
            parenthetical author of an organism species refers to the first
            author who published the plant/animal name (of any rank). The
            primary author of an organism species refers to the first author(s),
            who validly published the plant/animal name.
          $ref: '#/components/schemas/CodeableConcept'
        authorDescription:
          description: >-
            The author of an organism species shall be specified. The author
            year of an organism shall also be specified when applicable; refers
            to the year in which the first author(s) published the infraspecific
            plant/animal name (of any rank).
          $ref: '#/components/schemas/string'
        _authorDescription:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstanceSourceMaterial_Hybrid:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        maternalOrganismId:
          description: >-
            The identifier of the maternal species constituting the hybrid
            organism shall be specified based on a controlled vocabulary. For
            plants, the parents aren’t always known, and it is unlikely that it
            will be known which is maternal and which is paternal.
          $ref: '#/components/schemas/string'
        _maternalOrganismId:
          $ref: '#/components/schemas/Element'
        maternalOrganismName:
          description: >-
            The name of the maternal species constituting the hybrid organism
            shall be specified. For plants, the parents aren’t always known, and
            it is unlikely that it will be known which is maternal and which is
            paternal.
          $ref: '#/components/schemas/string'
        _maternalOrganismName:
          $ref: '#/components/schemas/Element'
        paternalOrganismId:
          description: >-
            The identifier of the paternal species constituting the hybrid
            organism shall be specified based on a controlled vocabulary.
          $ref: '#/components/schemas/string'
        _paternalOrganismId:
          $ref: '#/components/schemas/Element'
        paternalOrganismName:
          description: >-
            The name of the paternal species constituting the hybrid organism
            shall be specified.
          $ref: '#/components/schemas/string'
        _paternalOrganismName:
          $ref: '#/components/schemas/Element'
        hybridType:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    SubstanceSourceMaterial_OrganismGeneral:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        kingdom:
          $ref: '#/components/schemas/CodeableConcept'
        phylum:
          $ref: '#/components/schemas/CodeableConcept'
        class:
          $ref: '#/components/schemas/CodeableConcept'
        order:
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    SubstanceSourceMaterial_PartDescription:
      description: >-
        Source material shall capture information on the taxonomic and
        anatomical origins as well as the fraction of a material that can result
        in or can be modified to form a substance. This set of data elements
        shall be used to define polymer substances isolated from biological
        matrices. Taxonomic and anatomical origins shall be described using a
        controlled vocabulary as required. This information is captured for
        naturally derived polymers ( . starch) and structurally diverse
        substances. For Organisms belonging to the Kingdom Plantae the Substance
        level defines the fresh material of a single species or infraspecies,
        the Herbal Drug and the Herbal preparation. For Herbal preparations, the
        fraction information will be captured at the Substance information level
        and additional information for herbal extracts will be captured at the
        Specified Substance Group 1 information level. See for further
        explanation the Substance Class: Structurally Diverse and the herbal
        annex.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        part:
          $ref: '#/components/schemas/CodeableConcept'
        partLocation:
          description: >-
            The detailed anatomic location when the part can be extracted from
            different anatomical locations of the organism. Multiple alternative
            locations may apply.
          $ref: '#/components/schemas/CodeableConcept'
      additionalProperties: false
    SubstanceSpecification:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        resourceType:
          description: This is a SubstanceSpecification resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          $ref: '#/components/schemas/Identifier'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          $ref: '#/components/schemas/CodeableConcept'
        domain:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        source:
          description: Supporting literature.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        moiety:
          description: 'Moiety, for structural modifications.'
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Moiety'
          type: array
        property:
          description: >-
            General specifications for this substance, including how it is
            related to other substances.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Property'
          type: array
        referenceInformation:
          $ref: '#/components/schemas/Reference'
        structure:
          $ref: '#/components/schemas/SubstanceSpecification_Structure'
        code:
          description: Codes associated with the substance.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Code'
          type: array
        name:
          description: Names applicable to this substance.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Name'
          type: array
        molecularWeight:
          description: >-
            The molecular weight or weight range (for proteins, polymers or
            nucleic acids).
          items:
            $ref: '#/components/schemas/SubstanceSpecification_MolecularWeight'
          type: array
        relationship:
          description: >-
            A link between this substance and another, with details of the
            relationship.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Relationship'
          type: array
        nucleicAcid:
          $ref: '#/components/schemas/Reference'
        polymer:
          $ref: '#/components/schemas/Reference'
        protein:
          $ref: '#/components/schemas/Reference'
        sourceMaterial:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - resourceType
    SubstanceSpecification_Moiety:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        role:
          $ref: '#/components/schemas/CodeableConcept'
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        stereochemistry:
          $ref: '#/components/schemas/CodeableConcept'
        opticalActivity:
          $ref: '#/components/schemas/CodeableConcept'
        molecularFormula:
          $ref: '#/components/schemas/string'
        _molecularFormula:
          $ref: '#/components/schemas/Element'
        amountQuantity:
          $ref: '#/components/schemas/Quantity'
        amountString:
          description: Quantitative value for this moiety.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _amountString:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstanceSpecification_Property:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        parameters:
          description: >-
            Parameters that were used in the measurement of a property (e.g. for
            viscosity: measured at 20C with a pH of 7.1).
          $ref: '#/components/schemas/string'
        _parameters:
          $ref: '#/components/schemas/Element'
        definingSubstanceReference:
          description: >-
            A substance upon which a defining property depends (e.g. for
            solubility: in water, in alcohol).
          $ref: '#/components/schemas/Reference'
        definingSubstanceCodeableConcept:
          description: >-
            A substance upon which a defining property depends (e.g. for
            solubility: in water, in alcohol).
          $ref: '#/components/schemas/CodeableConcept'
        amountQuantity:
          $ref: '#/components/schemas/Quantity'
        amountString:
          description: Quantitative value for this property.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _amountString:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstanceSpecification_Structure:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        stereochemistry:
          $ref: '#/components/schemas/CodeableConcept'
        opticalActivity:
          $ref: '#/components/schemas/CodeableConcept'
        molecularFormula:
          $ref: '#/components/schemas/string'
        _molecularFormula:
          $ref: '#/components/schemas/Element'
        molecularFormulaByMoiety:
          description: >-
            Specified per moiety according to the Hill system, i.e. first C,
            then H, then alphabetical, each moiety separated by a dot.
          $ref: '#/components/schemas/string'
        _molecularFormulaByMoiety:
          $ref: '#/components/schemas/Element'
        isotope:
          description: >-
            Applicable for single substances that contain a radionuclide or a
            non-natural isotopic ratio.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Isotope'
          type: array
        molecularWeight:
          description: >-
            The molecular weight or weight range (for proteins, polymers or
            nucleic acids).
          $ref: '#/components/schemas/SubstanceSpecification_MolecularWeight'
        source:
          description: Supporting literature.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        representation:
          description: Molecular structural representation.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Representation'
          type: array
      additionalProperties: false
    SubstanceSpecification_Isotope:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/CodeableConcept'
        substitution:
          $ref: '#/components/schemas/CodeableConcept'
        halfLife:
          $ref: '#/components/schemas/Quantity'
        molecularWeight:
          description: >-
            The molecular weight or weight range (for proteins, polymers or
            nucleic acids).
          $ref: '#/components/schemas/SubstanceSpecification_MolecularWeight'
      additionalProperties: false
    SubstanceSpecification_MolecularWeight:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        method:
          $ref: '#/components/schemas/CodeableConcept'
        type:
          description: >-
            Type of molecular weight such as exact, average (also known as.
            number average), weight average.
          $ref: '#/components/schemas/CodeableConcept'
        amount:
          description: >-
            Used to capture quantitative values for a variety of elements. If
            only limits are given, the arithmetic mean would be the average. If
            only a single definite value for a given element is given, it would
            be captured in this field.
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    SubstanceSpecification_Representation:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        representation:
          description: >-
            The structural representation as text string in a format e.g. InChI,
            SMILES, MOLFILE, CDX.
          $ref: '#/components/schemas/string'
        _representation:
          $ref: '#/components/schemas/Element'
        attachment:
          $ref: '#/components/schemas/Attachment'
      additionalProperties: false
    SubstanceSpecification_Code:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          $ref: '#/components/schemas/CodeableConcept'
        statusDate:
          description: >-
            The date at which the code status is changed as part of the
            terminology maintenance.
          $ref: '#/components/schemas/dateTime'
        _statusDate:
          $ref: '#/components/schemas/Element'
        comment:
          $ref: '#/components/schemas/string'
        _comment:
          $ref: '#/components/schemas/Element'
        source:
          description: Supporting literature.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SubstanceSpecification_Name:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        type:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          $ref: '#/components/schemas/CodeableConcept'
        preferred:
          $ref: '#/components/schemas/boolean'
        _preferred:
          $ref: '#/components/schemas/Element'
        language:
          description: Language of the name.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        domain:
          description: >-
            The use context of this name for example if there is a different
            name a drug active ingredient as opposed to a food colour additive.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        jurisdiction:
          description: The jurisdiction where this name applies.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        synonym:
          description: A synonym of this name.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Name'
          type: array
        translation:
          description: A translation for this name.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Name'
          type: array
        official:
          description: Details of the official nature of this name.
          items:
            $ref: '#/components/schemas/SubstanceSpecification_Official'
          type: array
        source:
          description: Supporting literature.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SubstanceSpecification_Official:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        authority:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    SubstanceSpecification_Relationship:
      description: >-
        The detailed description of a substance, typically at a level beyond
        what is used for prescribing.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        substanceReference:
          description: >-
            A pointer to another substance, as a resource or just a
            representational code.
          $ref: '#/components/schemas/Reference'
        substanceCodeableConcept:
          description: >-
            A pointer to another substance, as a resource or just a
            representational code.
          $ref: '#/components/schemas/CodeableConcept'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        isDefining:
          description: >-
            For example where an enzyme strongly bonds with a particular
            substance, this is a defining relationship for that enzyme, out of
            several possible substance relationships.
          $ref: '#/components/schemas/boolean'
        _isDefining:
          $ref: '#/components/schemas/Element'
        amountQuantity:
          description: >-
            A numeric factor for the relationship, for instance to express that
            the salt of a substance has some percentage of the active substance
            in relation to some other.
          $ref: '#/components/schemas/Quantity'
        amountRange:
          description: >-
            A numeric factor for the relationship, for instance to express that
            the salt of a substance has some percentage of the active substance
            in relation to some other.
          $ref: '#/components/schemas/Range'
        amountRatio:
          description: >-
            A numeric factor for the relationship, for instance to express that
            the salt of a substance has some percentage of the active substance
            in relation to some other.
          $ref: '#/components/schemas/Ratio'
        amountString:
          description: >-
            A numeric factor for the relationship, for instance to express that
            the salt of a substance has some percentage of the active substance
            in relation to some other.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _amountString:
          $ref: '#/components/schemas/Element'
        amountRatioLowLimit:
          $ref: '#/components/schemas/Ratio'
        amountType:
          description: >-
            An operator for the amount, for example "average", "approximately",
            "less than".
          $ref: '#/components/schemas/CodeableConcept'
        source:
          description: Supporting literature.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    SupplyDelivery:
      description: Record of delivery of what is supplied.
      properties:
        resourceType:
          description: This is a SupplyDelivery resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier for the supply delivery event that is used to identify it
            across multiple disparate systems.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        basedOn:
          description: >-
            A plan, proposal or order that is fulfilled in whole or in part by
            this event.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        partOf:
          description: >-
            A larger event of which this particular event is a component or
            step.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: A code specifying the state of the dispense event.
          enum:
            - in-progress
            - completed
            - abandoned
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            A link to a resource representing the person whom the delivered item
            is for.
          $ref: '#/components/schemas/Reference'
        type:
          description: >-
            Indicates the type of dispensing event that is performed. Examples
            include: Trial Fill, Completion of Trial, Partial Fill, Emergency
            Fill, Samples, etc.
          $ref: '#/components/schemas/CodeableConcept'
        suppliedItem:
          $ref: '#/components/schemas/SupplyDelivery_SuppliedItem'
        occurrenceDateTime:
          description: The date or time(s) the activity occurred.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        occurrenceTiming:
          $ref: '#/components/schemas/Timing'
        supplier:
          description: >-
            The individual responsible for dispensing the medication, supplier
            or device.
          $ref: '#/components/schemas/Reference'
        destination:
          description: >-
            Identification of the facility/location where the Supply was shipped
            to, as part of the dispense event.
          $ref: '#/components/schemas/Reference'
        receiver:
          description: Identifies the person who picked up the Supply.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
      required:
        - resourceType
    SupplyDelivery_SuppliedItem:
      description: Record of delivery of what is supplied.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        quantity:
          description: >-
            The amount of supply that has been dispensed. Includes unit of
            measure.
          $ref: '#/components/schemas/Quantity'
        itemCodeableConcept:
          description: >-
            Identifies the medication, substance or device being dispensed. This
            is either a link to a resource representing the details of the item
            or a code that identifies the item from a known list.
          $ref: '#/components/schemas/CodeableConcept'
        itemReference:
          description: >-
            Identifies the medication, substance or device being dispensed. This
            is either a link to a resource representing the details of the item
            or a code that identifies the item from a known list.
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    SupplyRequest:
      description: >-
        A record of a request for a medication, substance or device used in the
        healthcare setting.
      properties:
        resourceType:
          description: This is a SupplyRequest resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Business identifiers assigned to this SupplyRequest by the author
            and/or other systems. These identifiers remain constant as the
            resource is updated and propagates from server to server.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          description: Status of the supply request.
          enum:
            - draft
            - active
            - suspended
            - cancelled
            - completed
            - entered-in-error
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        category:
          description: >-
            Category of supply, e.g.  central, non-stock, etc. This is used to
            support work flows associated with the supply process.
          $ref: '#/components/schemas/CodeableConcept'
        priority:
          description: >-
            Indicates how quickly this SupplyRequest should be addressed with
            respect to other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        itemCodeableConcept:
          description: >-
            The item that is requested to be supplied. This is either a link to
            a resource representing the details of the item or a code that
            identifies the item from a known list.
          $ref: '#/components/schemas/CodeableConcept'
        itemReference:
          description: >-
            The item that is requested to be supplied. This is either a link to
            a resource representing the details of the item or a code that
            identifies the item from a known list.
          $ref: '#/components/schemas/Reference'
        quantity:
          $ref: '#/components/schemas/Quantity'
        parameter:
          description: >-
            Specific parameters for the ordered item.  For example, the size of
            the indicated item.
          items:
            $ref: '#/components/schemas/SupplyRequest_Parameter'
          type: array
        occurrenceDateTime:
          description: When the request should be fulfilled.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _occurrenceDateTime:
          $ref: '#/components/schemas/Element'
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        occurrenceTiming:
          $ref: '#/components/schemas/Timing'
        authoredOn:
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        requester:
          $ref: '#/components/schemas/Reference'
        supplier:
          description: Who is intended to fulfill the request.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        reasonCode:
          description: The reason why the supply item was requested.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        reasonReference:
          description: The reason why the supply item was requested.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        deliverFrom:
          $ref: '#/components/schemas/Reference'
        deliverTo:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - quantity
        - resourceType
    SupplyRequest_Parameter:
      description: >-
        A record of a request for a medication, substance or device used in the
        healthcare setting.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/CodeableConcept'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueRange:
          $ref: '#/components/schemas/Range'
        valueBoolean:
          description: The value of the device detail.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Task:
      description: A task to be performed.
      properties:
        resourceType:
          description: This is a Task resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: The business identifier for this task.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        instantiatesCanonical:
          description: >-
            The URL pointing to a *FHIR*-defined protocol, guideline, orderset
            or other definition that is adhered to in whole or in part by this
            Task.
          $ref: '#/components/schemas/canonical'
        instantiatesUri:
          description: >-
            The URL pointing to an *externally* maintained  protocol, guideline,
            orderset or other definition that is adhered to in whole or in part
            by this Task.
          $ref: '#/components/schemas/uri'
        _instantiatesUri:
          $ref: '#/components/schemas/Element'
        basedOn:
          description: >-
            BasedOn refers to a higher-level authorization that triggered the
            creation of the task.  It references a "request" resource such as a
            ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc.
            which is distinct from the "request" resource the task is seeking to
            fulfill.  This latter resource is referenced by FocusOn.  For
            example, based on a ServiceRequest (= BasedOn), a task is created to
            fulfill a procedureRequest ( = FocusOn ) to collect a specimen from
            a patient.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        groupIdentifier:
          description: >-
            An identifier that links together multiple tasks and other requests
            that were created in the same context.
          $ref: '#/components/schemas/Identifier'
        partOf:
          description: Task that this particular task is part of.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        status:
          description: The current status of the task.
          enum:
            - draft
            - requested
            - received
            - accepted
            - rejected
            - ready
            - cancelled
            - in-progress
            - on-hold
            - failed
            - completed
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        statusReason:
          description: >-
            An explanation as to why this task is held, failed, was refused,
            etc.
          $ref: '#/components/schemas/CodeableConcept'
        businessStatus:
          $ref: '#/components/schemas/CodeableConcept'
        intent:
          description: >-
            Indicates the "level" of actionability associated with the Task,
            i.e. i+R[9]Cs this a proposed task, a planned task, an actionable
            task, etc.
          enum:
            - unknown
            - proposal
            - plan
            - order
            - original-order
            - reflex-order
            - filler-order
            - instance-order
            - option
        _intent:
          $ref: '#/components/schemas/Element'
        priority:
          description: >-
            Indicates how quickly the Task should be addressed with respect to
            other requests.
          $ref: '#/components/schemas/code'
        _priority:
          $ref: '#/components/schemas/Element'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        focus:
          description: >-
            The request being actioned or the resource being manipulated by this
            task.
          $ref: '#/components/schemas/Reference'
        for:
          description: >-
            The entity who benefits from the performance of the service
            specified in the task (e.g., the patient).
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            The healthcare event  (e.g. a patient and healthcare provider
            interaction) during which this task was created.
          $ref: '#/components/schemas/Reference'
        executionPeriod:
          description: >-
            Identifies the time action was first taken against the task (start)
            and/or the time final action was taken against the task prior to
            marking it as completed (end).
          $ref: '#/components/schemas/Period'
        authoredOn:
          $ref: '#/components/schemas/dateTime'
        _authoredOn:
          $ref: '#/components/schemas/Element'
        lastModified:
          $ref: '#/components/schemas/dateTime'
        _lastModified:
          $ref: '#/components/schemas/Element'
        requester:
          $ref: '#/components/schemas/Reference'
        performerType:
          description: The kind of participant that should perform the task.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        owner:
          description: >-
            Individual organization or Device currently responsible for task
            execution.
          $ref: '#/components/schemas/Reference'
        location:
          $ref: '#/components/schemas/Reference'
        reasonCode:
          description: >-
            A description or code indicating why this task needs to be
            performed.
          $ref: '#/components/schemas/CodeableConcept'
        reasonReference:
          $ref: '#/components/schemas/Reference'
        insurance:
          description: >-
            Insurance plans, coverage extensions, pre-authorizations and/or
            pre-determinations that may be relevant to the Task.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        note:
          description: Free-text information captured about the task as it progresses.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        relevantHistory:
          description: >-
            Links to Provenance records for past versions of this Task that
            identify key state transitions or updates that are likely to be
            relevant to a user looking at the current version of the task.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        restriction:
          description: >-
            If the Task.focus is a request resource and the task is seeking
            fulfillment (i.e. is asking for the request to be actioned), this
            element identifies any limitations on what parts of the referenced
            request should be actioned.
          $ref: '#/components/schemas/Task_Restriction'
        input:
          description: >-
            Additional information that may be needed in the execution of the
            task.
          items:
            $ref: '#/components/schemas/Task_Input'
          type: array
        output:
          description: Outputs produced by the Task.
          items:
            $ref: '#/components/schemas/Task_Output'
          type: array
      additionalProperties: false
      required:
        - resourceType
    Task_Restriction:
      description: A task to be performed.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        repetitions:
          $ref: '#/components/schemas/positiveInt'
        _repetitions:
          $ref: '#/components/schemas/Element'
        period:
          $ref: '#/components/schemas/Period'
        recipient:
          description: >-
            For requests that are targeted to more than on potential
            recipient/target, for whom is fulfillment sought?
          items:
            $ref: '#/components/schemas/Reference'
          type: array
      additionalProperties: false
    Task_Input:
      description: A task to be performed.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: >-
            A code or description indicating how the input is intended to be
            used as part of the task execution.
          $ref: '#/components/schemas/CodeableConcept'
        valueBase64Binary:
          description: The value of the input parameter as a basic type.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: The value of the input parameter as a basic type.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: The value of the input parameter as a basic type.
          pattern: ^\S*$
          type: string
        _valueCanonical:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: The value of the input parameter as a basic type.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: The value of the input parameter as a basic type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The value of the input parameter as a basic type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: The value of the input parameter as a basic type.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueId:
          description: The value of the input parameter as a basic type.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: The value of the input parameter as a basic type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _valueInstant:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: The value of the input parameter as a basic type.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: The value of the input parameter as a basic type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          $ref: '#/components/schemas/Element'
        valueOid:
          description: The value of the input parameter as a basic type.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: The value of the input parameter as a basic type.
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          $ref: '#/components/schemas/Element'
        valueString:
          description: The value of the input parameter as a basic type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: The value of the input parameter as a basic type.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: The value of the input parameter as a basic type.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: The value of the input parameter as a basic type.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: The value of the input parameter as a basic type.
          pattern: ^\S*$
          type: string
        _valueUrl:
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: The value of the input parameter as a basic type.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _valueUuid:
          $ref: '#/components/schemas/Element'
        valueAddress:
          $ref: '#/components/schemas/Address'
        valueAge:
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          $ref: '#/components/schemas/Count'
        valueDistance:
          $ref: '#/components/schemas/Distance'
        valueDuration:
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          $ref: '#/components/schemas/Money'
        valuePeriod:
          $ref: '#/components/schemas/Period'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueRange:
          $ref: '#/components/schemas/Range'
        valueRatio:
          $ref: '#/components/schemas/Ratio'
        valueReference:
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          $ref: '#/components/schemas/Signature'
        valueTiming:
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
      required:
        - type
    Task_Output:
      description: A task to be performed.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/CodeableConcept'
        valueBase64Binary:
          description: The value of the Output parameter as a basic type.
          pattern: '^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$'
          type: string
        _valueBase64Binary:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: The value of the Output parameter as a basic type.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueCanonical:
          description: The value of the Output parameter as a basic type.
          pattern: ^\S*$
          type: string
        _valueCanonical:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: The value of the Output parameter as a basic type.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueDate:
          description: The value of the Output parameter as a basic type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        _valueDate:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The value of the Output parameter as a basic type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: The value of the Output parameter as a basic type.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueId:
          description: The value of the Output parameter as a basic type.
          pattern: '^[A-Za-z0-9\-\.]{1,64}$'
          type: string
        _valueId:
          $ref: '#/components/schemas/Element'
        valueInstant:
          description: The value of the Output parameter as a basic type.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        _valueInstant:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: The value of the Output parameter as a basic type.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueMarkdown:
          description: The value of the Output parameter as a basic type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueMarkdown:
          $ref: '#/components/schemas/Element'
        valueOid:
          description: The value of the Output parameter as a basic type.
          pattern: '^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$'
          type: string
        _valueOid:
          $ref: '#/components/schemas/Element'
        valuePositiveInt:
          description: The value of the Output parameter as a basic type.
          pattern: '^[1-9][0-9]*$'
          type: number
        _valuePositiveInt:
          $ref: '#/components/schemas/Element'
        valueString:
          description: The value of the Output parameter as a basic type.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueTime:
          description: The value of the Output parameter as a basic type.
          pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$'
          type: string
        _valueTime:
          $ref: '#/components/schemas/Element'
        valueUnsignedInt:
          description: The value of the Output parameter as a basic type.
          pattern: '^[0]|([1-9][0-9]*)$'
          type: number
        _valueUnsignedInt:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: The value of the Output parameter as a basic type.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueUrl:
          description: The value of the Output parameter as a basic type.
          pattern: ^\S*$
          type: string
        _valueUrl:
          $ref: '#/components/schemas/Element'
        valueUuid:
          description: The value of the Output parameter as a basic type.
          pattern: >-
            ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
        _valueUuid:
          $ref: '#/components/schemas/Element'
        valueAddress:
          $ref: '#/components/schemas/Address'
        valueAge:
          $ref: '#/components/schemas/Age'
        valueAnnotation:
          $ref: '#/components/schemas/Annotation'
        valueAttachment:
          $ref: '#/components/schemas/Attachment'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueCoding:
          $ref: '#/components/schemas/Coding'
        valueContactPoint:
          $ref: '#/components/schemas/ContactPoint'
        valueCount:
          $ref: '#/components/schemas/Count'
        valueDistance:
          $ref: '#/components/schemas/Distance'
        valueDuration:
          $ref: '#/components/schemas/Duration'
        valueHumanName:
          $ref: '#/components/schemas/HumanName'
        valueIdentifier:
          $ref: '#/components/schemas/Identifier'
        valueMoney:
          $ref: '#/components/schemas/Money'
        valuePeriod:
          $ref: '#/components/schemas/Period'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueRange:
          $ref: '#/components/schemas/Range'
        valueRatio:
          $ref: '#/components/schemas/Ratio'
        valueReference:
          $ref: '#/components/schemas/Reference'
        valueSampledData:
          $ref: '#/components/schemas/SampledData'
        valueSignature:
          $ref: '#/components/schemas/Signature'
        valueTiming:
          $ref: '#/components/schemas/Timing'
        valueContactDetail:
          $ref: '#/components/schemas/ContactDetail'
        valueContributor:
          $ref: '#/components/schemas/Contributor'
        valueDataRequirement:
          $ref: '#/components/schemas/DataRequirement'
        valueExpression:
          $ref: '#/components/schemas/Expression'
        valueParameterDefinition:
          $ref: '#/components/schemas/ParameterDefinition'
        valueRelatedArtifact:
          $ref: '#/components/schemas/RelatedArtifact'
        valueTriggerDefinition:
          $ref: '#/components/schemas/TriggerDefinition'
        valueUsageContext:
          $ref: '#/components/schemas/UsageContext'
        valueDosage:
          $ref: '#/components/schemas/Dosage'
        valueMeta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
      required:
        - type
    TerminologyCapabilities:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        resourceType:
          description: This is a TerminologyCapabilities resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this terminology
            capabilities when it is referenced in a specification, model, design
            or an instance; also called its canonical identifier. This SHOULD be
            globally unique and SHOULD be a literal address at which at which an
            authoritative instance of this terminology capabilities is (or will
            be) published. This URL can be the target of a canonical reference.
            It SHALL remain the same when the terminology capabilities is stored
            on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The identifier that is used to identify this version of the
            terminology capabilities when it is referenced in a specification,
            model, design or instance. This is an arbitrary value managed by the
            terminology capabilities author and is not expected to be globally
            unique. For example, it might be a timestamp (e.g. yyyymmdd) if a
            managed version is not available. There is also no expectation that
            versions can be placed in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the terminology capabilities.
            This name should be usable as an identifier for the module by
            machine processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          description: >-
            A short, descriptive, user-friendly title for the terminology
            capabilities.
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this terminology capabilities. Enables tracking the
            life-cycle of the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this terminology capabilities is
            authored for testing purposes (or education/evaluation/marketing)
            and is not intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the terminology capabilities
            was published. The date must change when the business version
            changes and it must change if the status code changes. In addition,
            it should change when the substantive content of the terminology
            capabilities changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the
            terminology capabilities.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the terminology
            capabilities from a consumer's perspective. Typically, this is used
            when the capability statement describes a desired rather than an
            actual solution, for example as a formal expression of requirements
            as part of an RFP.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate terminology capabilities
            instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the terminology capabilities
            is intended to be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this terminology capabilities is needed and why
            it has been designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the terminology capabilities
            and/or its contents. Copyright statements are generally legal
            restrictions on the use and publishing of the terminology
            capabilities.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        kind:
          description: >-
            The way that this statement is intended to be used, to describe an
            actual running instance of software, a particular product (kind, not
            instance of software) or a class of implementation (e.g. a desired
            purchase).
          $ref: '#/components/schemas/code'
        _kind:
          $ref: '#/components/schemas/Element'
        software:
          description: >-
            Software that is covered by this terminology capability statement.
            It is used when the statement describes the capabilities of a
            particular software version, independent of an installation.
          $ref: '#/components/schemas/TerminologyCapabilities_Software'
        implementation:
          description: >-
            Identifies a specific implementation instance that is described by
            the terminology capability statement - i.e. a particular
            installation, rather than the capabilities of a software program.
          $ref: '#/components/schemas/TerminologyCapabilities_Implementation'
        lockedDate:
          $ref: '#/components/schemas/boolean'
        _lockedDate:
          $ref: '#/components/schemas/Element'
        codeSystem:
          description: >-
            Identifies a code system that is supported by the server. If there
            is a no code system URL, then this declares the general assumptions
            a client can make about support for any CodeSystem resource.
          items:
            $ref: '#/components/schemas/TerminologyCapabilities_CodeSystem'
          type: array
        expansion:
          description: >-
            Information about the
            [ValueSet/$expand](valueset-operation-expand.html) operation.
          $ref: '#/components/schemas/TerminologyCapabilities_Expansion'
        codeSearch:
          description: >-
            The degree to which the server supports the code search parameter on
            ValueSet, if it is supported.
          enum:
            - explicit
            - all
        _codeSearch:
          $ref: '#/components/schemas/Element'
        validateCode:
          description: >-
            Information about the
            [ValueSet/$validate-code](valueset-operation-validate-code.html)
            operation.
          $ref: '#/components/schemas/TerminologyCapabilities_ValidateCode'
        translation:
          description: >-
            Information about the
            [ConceptMap/$translate](conceptmap-operation-translate.html)
            operation.
          $ref: '#/components/schemas/TerminologyCapabilities_Translation'
        closure:
          $ref: '#/components/schemas/TerminologyCapabilities_Closure'
      additionalProperties: false
      required:
        - resourceType
    TerminologyCapabilities_Software:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        version:
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_Implementation:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        description:
          description: >-
            Information about the specific installation that this terminology
            capability statement relates to.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        url:
          $ref: '#/components/schemas/url'
        _url:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_CodeSystem:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        uri:
          $ref: '#/components/schemas/canonical'
        version:
          description: >-
            For the code system, a list of versions that are supported by the
            server.
          items:
            $ref: '#/components/schemas/TerminologyCapabilities_Version'
          type: array
        subsumption:
          description: >-
            True if subsumption is supported for this version of the code
            system.
          $ref: '#/components/schemas/boolean'
        _subsumption:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_Version:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          description: >-
            For version-less code systems, there should be a single version with
            no identifier.
          $ref: '#/components/schemas/string'
        _code:
          $ref: '#/components/schemas/Element'
        isDefault:
          $ref: '#/components/schemas/boolean'
        _isDefault:
          $ref: '#/components/schemas/Element'
        compositional:
          description: >-
            If the compositional grammar defined by the code system is
            supported.
          $ref: '#/components/schemas/boolean'
        _compositional:
          $ref: '#/components/schemas/Element'
        language:
          description: Language Displays supported.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _language:
          description: Extensions for language
          items:
            $ref: '#/components/schemas/Element'
          type: array
        filter:
          description: Filter Properties supported.
          items:
            $ref: '#/components/schemas/TerminologyCapabilities_Filter'
          type: array
        property:
          description: Properties supported for $lookup.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _property:
          description: Extensions for property
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    TerminologyCapabilities_Filter:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        op:
          description: Operations supported for the property.
          items:
            $ref: '#/components/schemas/code'
          type: array
        _op:
          description: Extensions for op
          items:
            $ref: '#/components/schemas/Element'
          type: array
      additionalProperties: false
    TerminologyCapabilities_Expansion:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        hierarchical:
          $ref: '#/components/schemas/boolean'
        _hierarchical:
          $ref: '#/components/schemas/Element'
        paging:
          $ref: '#/components/schemas/boolean'
        _paging:
          $ref: '#/components/schemas/Element'
        incomplete:
          $ref: '#/components/schemas/boolean'
        _incomplete:
          $ref: '#/components/schemas/Element'
        parameter:
          description: Supported expansion parameter.
          items:
            $ref: '#/components/schemas/TerminologyCapabilities_Parameter'
          type: array
        textFilter:
          $ref: '#/components/schemas/markdown'
        _textFilter:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_Parameter:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/code'
        _name:
          $ref: '#/components/schemas/Element'
        documentation:
          $ref: '#/components/schemas/string'
        _documentation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_ValidateCode:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        translations:
          $ref: '#/components/schemas/boolean'
        _translations:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_Translation:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        needsMap:
          $ref: '#/components/schemas/boolean'
        _needsMap:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TerminologyCapabilities_Closure:
      description: >-
        A TerminologyCapabilities resource documents a set of capabilities
        (behaviors) of a FHIR Terminology Server that may be used as a statement
        of actual server functionality or a statement of required or desired
        server implementation.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        translation:
          $ref: '#/components/schemas/boolean'
        _translation:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestReport:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        resourceType:
          description: This is a TestReport resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            Identifier for the TestScript assigned for external purposes outside
            the context of FHIR.
          $ref: '#/components/schemas/Identifier'
        name:
          description: >-
            A free text natural language name identifying the executed
            TestScript.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        status:
          description: The current state of this test report.
          enum:
            - completed
            - in-progress
            - waiting
            - stopped
            - entered-in-error
        _status:
          $ref: '#/components/schemas/Element'
        testScript:
          description: >-
            Ideally this is an absolute URL that is used to identify the
            version-specific TestScript that was executed, matching the
            `TestScript.url`.
          $ref: '#/components/schemas/Reference'
        result:
          description: The overall result from the execution of the TestScript.
          enum:
            - pass
            - fail
            - pending
        _result:
          $ref: '#/components/schemas/Element'
        score:
          description: >-
            The final score (percentage of tests passed) resulting from the
            execution of the TestScript.
          $ref: '#/components/schemas/decimal'
        _score:
          $ref: '#/components/schemas/Element'
        tester:
          description: >-
            Name of the tester producing this report (Organization or
            individual).
          $ref: '#/components/schemas/string'
        _tester:
          $ref: '#/components/schemas/Element'
        issued:
          $ref: '#/components/schemas/dateTime'
        _issued:
          $ref: '#/components/schemas/Element'
        participant:
          description: >-
            A participant in the test execution, either the execution engine, a
            client, or a server.
          items:
            $ref: '#/components/schemas/TestReport_Participant'
          type: array
        setup:
          description: >-
            The results of the series of required setup operations before the
            tests were executed.
          $ref: '#/components/schemas/TestReport_Setup'
        test:
          description: A test executed from the test script.
          items:
            $ref: '#/components/schemas/TestReport_Test'
          type: array
        teardown:
          description: >-
            The results of the series of operations required to clean up after
            all the tests were executed (successfully or otherwise).
          $ref: '#/components/schemas/TestReport_Teardown'
      additionalProperties: false
      required:
        - testScript
        - resourceType
    TestReport_Participant:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          description: The type of participant.
          enum:
            - test-engine
            - client
            - server
        _type:
          $ref: '#/components/schemas/Element'
        uri:
          $ref: '#/components/schemas/uri'
        _uri:
          $ref: '#/components/schemas/Element'
        display:
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestReport_Setup:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        action:
          description: Action would contain either an operation or an assertion.
          items:
            $ref: '#/components/schemas/TestReport_Action'
          type: array
      additionalProperties: false
      required:
        - action
    TestReport_Action:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operation:
          $ref: '#/components/schemas/TestReport_Operation'
        assert:
          $ref: '#/components/schemas/TestReport_Assert'
      additionalProperties: false
    TestReport_Operation:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        result:
          description: The result of this operation.
          enum:
            - pass
            - skip
            - fail
            - warning
            - error
        _result:
          $ref: '#/components/schemas/Element'
        message:
          $ref: '#/components/schemas/markdown'
        _message:
          $ref: '#/components/schemas/Element'
        detail:
          $ref: '#/components/schemas/uri'
        _detail:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestReport_Assert:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        result:
          description: The result of this assertion.
          enum:
            - pass
            - skip
            - fail
            - warning
            - error
        _result:
          $ref: '#/components/schemas/Element'
        message:
          $ref: '#/components/schemas/markdown'
        _message:
          $ref: '#/components/schemas/Element'
        detail:
          $ref: '#/components/schemas/string'
        _detail:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestReport_Test:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            The name of this test used for tracking/logging purposes by test
            engines.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A short description of the test used by test engines for tracking
            and reporting purposes.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        action:
          description: Action would contain either an operation or an assertion.
          items:
            $ref: '#/components/schemas/TestReport_Action1'
          type: array
      additionalProperties: false
      required:
        - action
    TestReport_Action1:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operation:
          $ref: '#/components/schemas/TestReport_Operation'
        assert:
          $ref: '#/components/schemas/TestReport_Assert'
      additionalProperties: false
    TestReport_Teardown:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        action:
          description: The teardown action will only contain an operation.
          items:
            $ref: '#/components/schemas/TestReport_Action2'
          type: array
      additionalProperties: false
      required:
        - action
    TestReport_Action2:
      description: A summary of information based on the results of executing a TestScript.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operation:
          $ref: '#/components/schemas/TestReport_Operation'
      additionalProperties: false
      required:
        - operation
    TestScript:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        resourceType:
          description: This is a TestScript resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this test script when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this test script is (or will be) published. This URL can
            be the target of a canonical reference. It SHALL remain the same
            when the test script is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this test script when
            it is represented in other formats, or referenced in a
            specification, model, design or an instance.
          $ref: '#/components/schemas/Identifier'
        version:
          description: >-
            The identifier that is used to identify this version of the test
            script when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the test script
            author and is not expected to be globally unique. For example, it
            might be a timestamp (e.g. yyyymmdd) if a managed version is not
            available. There is also no expectation that versions can be placed
            in a lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the test script. This name
            should be usable as an identifier for the module by machine
            processing applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this test script. Enables tracking the life-cycle of
            the content.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this test script is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date  (and optionally time) when the test script was published.
            The date must change when the business version changes and it must
            change if the status code changes. In addition, it should change
            when the substantive content of the test script changes.
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the test
            script.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the test script from a
            consumer's perspective.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate test script instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the test script is intended to
            be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        purpose:
          description: >-
            Explanation of why this test script is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the test script and/or its
            contents. Copyright statements are generally legal restrictions on
            the use and publishing of the test script.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        origin:
          description: >-
            An abstract server used in operations within this test script in the
            origin element.
          items:
            $ref: '#/components/schemas/TestScript_Origin'
          type: array
        destination:
          description: >-
            An abstract server used in operations within this test script in the
            destination element.
          items:
            $ref: '#/components/schemas/TestScript_Destination'
          type: array
        metadata:
          description: >-
            The required capability must exist and are assumed to function
            correctly on the FHIR server being tested.
          $ref: '#/components/schemas/TestScript_Metadata'
        fixture:
          description: >-
            Fixture in the test script - by reference (uri). All fixtures are
            required for the test script to execute.
          items:
            $ref: '#/components/schemas/TestScript_Fixture'
          type: array
        profile:
          description: Reference to the profile to be used for validation.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        variable:
          description: >-
            Variable is set based either on element value in response body or on
            header field value in the response headers.
          items:
            $ref: '#/components/schemas/TestScript_Variable'
          type: array
        setup:
          $ref: '#/components/schemas/TestScript_Setup'
        test:
          description: A test in this script.
          items:
            $ref: '#/components/schemas/TestScript_Test'
          type: array
        teardown:
          description: >-
            A series of operations required to clean up after all the tests are
            executed (successfully or otherwise).
          $ref: '#/components/schemas/TestScript_Teardown'
      additionalProperties: false
      required:
        - resourceType
    TestScript_Origin:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        index:
          description: >-
            Abstract name given to an origin server in this test script.  The
            name is provided as a number starting at 1.
          $ref: '#/components/schemas/integer'
        _index:
          $ref: '#/components/schemas/Element'
        profile:
          $ref: '#/components/schemas/Coding'
      additionalProperties: false
      required:
        - profile
    TestScript_Destination:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        index:
          description: >-
            Abstract name given to a destination server in this test script.
            The name is provided as a number starting at 1.
          $ref: '#/components/schemas/integer'
        _index:
          $ref: '#/components/schemas/Element'
        profile:
          $ref: '#/components/schemas/Coding'
      additionalProperties: false
      required:
        - profile
    TestScript_Metadata:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        link:
          description: A link to the FHIR specification that this test is covering.
          items:
            $ref: '#/components/schemas/TestScript_Link'
          type: array
        capability:
          description: >-
            Capabilities that must exist and are assumed to function correctly
            on the FHIR server being tested.
          items:
            $ref: '#/components/schemas/TestScript_Capability'
          type: array
      additionalProperties: false
      required:
        - capability
    TestScript_Link:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            URL to a particular requirement or feature within the FHIR
            specification.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        description:
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestScript_Capability:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        required:
          description: >-
            Whether or not the test execution will require the given
            capabilities of the server in order for this test script to execute.
          $ref: '#/components/schemas/boolean'
        _required:
          $ref: '#/components/schemas/Element'
        validated:
          description: >-
            Whether or not the test execution will validate the given
            capabilities of the server in order for this test script to execute.
          $ref: '#/components/schemas/boolean'
        _validated:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            Description of the capabilities that this test script is requiring
            the server to support.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        origin:
          description: Which origin server these requirements apply to.
          items:
            $ref: '#/components/schemas/integer'
          type: array
        _origin:
          description: Extensions for origin
          items:
            $ref: '#/components/schemas/Element'
          type: array
        destination:
          $ref: '#/components/schemas/integer'
        _destination:
          $ref: '#/components/schemas/Element'
        link:
          description: >-
            Links to the FHIR specification that describes this interaction and
            the resources involved in more detail.
          items:
            $ref: '#/components/schemas/uri'
          type: array
        _link:
          description: Extensions for link
          items:
            $ref: '#/components/schemas/Element'
          type: array
        capabilities:
          description: >-
            Minimum capabilities required of server for test script to execute
            successfully.   If server does not meet at a minimum the referenced
            capability statement, then all tests in this script are skipped.
          $ref: '#/components/schemas/canonical'
      additionalProperties: false
      required:
        - capabilities
    TestScript_Fixture:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        autocreate:
          description: >-
            Whether or not to implicitly create the fixture during setup. If
            true, the fixture is automatically created on each server being
            tested during setup, therefore no create operation is required for
            this fixture in the TestScript.setup section.
          $ref: '#/components/schemas/boolean'
        _autocreate:
          $ref: '#/components/schemas/Element'
        autodelete:
          description: >-
            Whether or not to implicitly delete the fixture during teardown. If
            true, the fixture is automatically deleted on each server being
            tested during teardown, therefore no delete operation is required
            for this fixture in the TestScript.teardown section.
          $ref: '#/components/schemas/boolean'
        _autodelete:
          $ref: '#/components/schemas/Element'
        resource:
          description: >-
            Reference to the resource (containing the contents of the resource
            needed for operations).
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    TestScript_Variable:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        defaultValue:
          $ref: '#/components/schemas/string'
        _defaultValue:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A free text natural language description of the variable and its
            purpose.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            The FHIRPath expression to evaluate against the fixture body. When
            variables are defined, only one of either expression, headerField or
            path must be specified.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
        headerField:
          description: >-
            Will be used to grab the HTTP header field value from the headers
            that sourceId is pointing to.
          $ref: '#/components/schemas/string'
        _headerField:
          $ref: '#/components/schemas/Element'
        hint:
          description: >-
            Displayable text string with hint help information to the user when
            entering a default value.
          $ref: '#/components/schemas/string'
        _hint:
          $ref: '#/components/schemas/Element'
        path:
          description: >-
            XPath or JSONPath to evaluate against the fixture body.  When
            variables are defined, only one of either expression, headerField or
            path must be specified.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        sourceId:
          description: >-
            Fixture to evaluate the XPath/JSONPath expression or the
            headerField  against within this variable.
          $ref: '#/components/schemas/id'
        _sourceId:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestScript_Setup:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        action:
          description: Action would contain either an operation or an assertion.
          items:
            $ref: '#/components/schemas/TestScript_Action'
          type: array
      additionalProperties: false
      required:
        - action
    TestScript_Action:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operation:
          $ref: '#/components/schemas/TestScript_Operation'
        assert:
          description: >-
            Evaluates the results of previous operations to determine if the
            server under test behaves appropriately.
          $ref: '#/components/schemas/TestScript_Assert'
      additionalProperties: false
    TestScript_Operation:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        type:
          $ref: '#/components/schemas/Coding'
        resource:
          description: >-
            The type of the resource.  See
            http://build.fhir.org/resourcelist.html.
          $ref: '#/components/schemas/code'
        _resource:
          $ref: '#/components/schemas/Element'
        label:
          description: >-
            The label would be used for tracking/logging purposes by test
            engines.
          $ref: '#/components/schemas/string'
        _label:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            The description would be used by test engines for tracking and
            reporting purposes.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        accept:
          $ref: '#/components/schemas/code'
        _accept:
          $ref: '#/components/schemas/Element'
        contentType:
          description: >-
            The mime-type to use for RESTful operation in the 'Content-Type'
            header.
          $ref: '#/components/schemas/code'
        _contentType:
          $ref: '#/components/schemas/Element'
        destination:
          description: >-
            The server where the request message is destined for.  Must be one
            of the server numbers listed in TestScript.destination section.
          $ref: '#/components/schemas/integer'
        _destination:
          $ref: '#/components/schemas/Element'
        encodeRequestUrl:
          description: >-
            Whether or not to implicitly send the request url in encoded format.
            The default is true to match the standard RESTful client behavior.
            Set to false when communicating with a server that does not support
            encoded url paths.
          $ref: '#/components/schemas/boolean'
        _encodeRequestUrl:
          $ref: '#/components/schemas/Element'
        method:
          description: >-
            The HTTP method the test engine MUST use for this operation
            regardless of any other operation details.
          enum:
            - delete
            - get
            - options
            - patch
            - post
            - put
            - head
        _method:
          $ref: '#/components/schemas/Element'
        origin:
          description: >-
            The server where the request message originates from.  Must be one
            of the server numbers listed in TestScript.origin section.
          $ref: '#/components/schemas/integer'
        _origin:
          $ref: '#/components/schemas/Element'
        params:
          description: >-
            Path plus parameters after [type].  Used to set parts of the request
            URL explicitly.
          $ref: '#/components/schemas/string'
        _params:
          $ref: '#/components/schemas/Element'
        requestHeader:
          description: Header elements would be used to set HTTP headers.
          items:
            $ref: '#/components/schemas/TestScript_RequestHeader'
          type: array
        requestId:
          $ref: '#/components/schemas/id'
        _requestId:
          $ref: '#/components/schemas/Element'
        responseId:
          $ref: '#/components/schemas/id'
        _responseId:
          $ref: '#/components/schemas/Element'
        sourceId:
          $ref: '#/components/schemas/id'
        _sourceId:
          $ref: '#/components/schemas/Element'
        targetId:
          description: >-
            Id of fixture used for extracting the [id],  [type], and [vid] for
            GET requests.
          $ref: '#/components/schemas/id'
        _targetId:
          $ref: '#/components/schemas/Element'
        url:
          $ref: '#/components/schemas/string'
        _url:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestScript_RequestHeader:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        field:
          $ref: '#/components/schemas/string'
        _field:
          $ref: '#/components/schemas/Element'
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestScript_Assert:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        label:
          description: >-
            The label would be used for tracking/logging purposes by test
            engines.
          $ref: '#/components/schemas/string'
        _label:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            The description would be used by test engines for tracking and
            reporting purposes.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        direction:
          description: The direction to use for the assertion.
          enum:
            - response
            - request
        _direction:
          $ref: '#/components/schemas/Element'
        compareToSourceId:
          description: >-
            Id of the source fixture used as the contents to be evaluated by
            either the "source/expression" or "sourceId/path" definition.
          $ref: '#/components/schemas/string'
        _compareToSourceId:
          $ref: '#/components/schemas/Element'
        compareToSourceExpression:
          description: >-
            The FHIRPath expression to evaluate against the source fixture. When
            compareToSourceId is defined, either compareToSourceExpression or
            compareToSourcePath must be defined, but not both.
          $ref: '#/components/schemas/string'
        _compareToSourceExpression:
          $ref: '#/components/schemas/Element'
        compareToSourcePath:
          description: >-
            XPath or JSONPath expression to evaluate against the source fixture.
            When compareToSourceId is defined, either compareToSourceExpression
            or compareToSourcePath must be defined, but not both.
          $ref: '#/components/schemas/string'
        _compareToSourcePath:
          $ref: '#/components/schemas/Element'
        contentType:
          description: >-
            The mime-type contents to compare against the request or response
            message 'Content-Type' header.
          $ref: '#/components/schemas/code'
        _contentType:
          $ref: '#/components/schemas/Element'
        expression:
          description: >-
            The FHIRPath expression to be evaluated against the request or
            response message contents - HTTP headers and payload.
          $ref: '#/components/schemas/string'
        _expression:
          $ref: '#/components/schemas/Element'
        headerField:
          $ref: '#/components/schemas/string'
        _headerField:
          $ref: '#/components/schemas/Element'
        minimumId:
          description: >-
            The ID of a fixture.  Asserts that the response contains at a
            minimum the fixture specified by minimumId.
          $ref: '#/components/schemas/string'
        _minimumId:
          $ref: '#/components/schemas/Element'
        navigationLinks:
          description: >-
            Whether or not the test execution performs validation on the bundle
            navigation links.
          $ref: '#/components/schemas/boolean'
        _navigationLinks:
          $ref: '#/components/schemas/Element'
        operator:
          description: >-
            The operator type defines the conditional behavior of the assert. If
            not defined, the default is equals.
          enum:
            - equals
            - notEquals
            - in
            - notIn
            - greaterThan
            - lessThan
            - empty
            - notEmpty
            - contains
            - notContains
            - eval
        _operator:
          $ref: '#/components/schemas/Element'
        path:
          description: >-
            The XPath or JSONPath expression to be evaluated against the fixture
            representing the response received from server.
          $ref: '#/components/schemas/string'
        _path:
          $ref: '#/components/schemas/Element'
        requestMethod:
          description: >-
            The request method or HTTP operation code to compare against that
            used by the client system under test.
          enum:
            - delete
            - get
            - options
            - patch
            - post
            - put
            - head
        _requestMethod:
          $ref: '#/components/schemas/Element'
        requestURL:
          description: >-
            The value to use in a comparison against the request URL path
            string.
          $ref: '#/components/schemas/string'
        _requestURL:
          $ref: '#/components/schemas/Element'
        resource:
          description: >-
            The type of the resource.  See
            http://build.fhir.org/resourcelist.html.
          $ref: '#/components/schemas/code'
        _resource:
          $ref: '#/components/schemas/Element'
        response:
          description: >-
            okay | created | noContent | notModified | bad | forbidden |
            notFound | methodNotAllowed | conflict | gone | preconditionFailed |
            unprocessable.
          enum:
            - okay
            - created
            - noContent
            - notModified
            - bad
            - forbidden
            - notFound
            - methodNotAllowed
            - conflict
            - gone
            - preconditionFailed
            - unprocessable
        _response:
          $ref: '#/components/schemas/Element'
        responseCode:
          $ref: '#/components/schemas/string'
        _responseCode:
          $ref: '#/components/schemas/Element'
        sourceId:
          description: >-
            Fixture to evaluate the XPath/JSONPath expression or the
            headerField  against.
          $ref: '#/components/schemas/id'
        _sourceId:
          $ref: '#/components/schemas/Element'
        validateProfileId:
          $ref: '#/components/schemas/id'
        _validateProfileId:
          $ref: '#/components/schemas/Element'
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
        warningOnly:
          description: >-
            Whether or not the test execution will produce a warning only on
            error for this assert.
          $ref: '#/components/schemas/boolean'
        _warningOnly:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    TestScript_Test:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            The name of this test used for tracking/logging purposes by test
            engines.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        description:
          description: >-
            A short description of the test used by test engines for tracking
            and reporting purposes.
          $ref: '#/components/schemas/string'
        _description:
          $ref: '#/components/schemas/Element'
        action:
          description: Action would contain either an operation or an assertion.
          items:
            $ref: '#/components/schemas/TestScript_Action1'
          type: array
      additionalProperties: false
      required:
        - action
    TestScript_Action1:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operation:
          $ref: '#/components/schemas/TestScript_Operation'
        assert:
          description: >-
            Evaluates the results of previous operations to determine if the
            server under test behaves appropriately.
          $ref: '#/components/schemas/TestScript_Assert'
      additionalProperties: false
    TestScript_Teardown:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        action:
          description: The teardown action will only contain an operation.
          items:
            $ref: '#/components/schemas/TestScript_Action2'
          type: array
      additionalProperties: false
      required:
        - action
    TestScript_Action2:
      description: >-
        A structured set of tests against a FHIR server or client implementation
        to determine compliance against the FHIR specification.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        operation:
          $ref: '#/components/schemas/TestScript_Operation'
      additionalProperties: false
      required:
        - operation
    ValueSet:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        resourceType:
          description: This is a ValueSet resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          description: >-
            An absolute URI that is used to identify this value set when it is
            referenced in a specification, model, design or an instance; also
            called its canonical identifier. This SHOULD be globally unique and
            SHOULD be a literal address at which at which an authoritative
            instance of this value set is (or will be) published. This URL can
            be the target of a canonical reference. It SHALL remain the same
            when the value set is stored on different servers.
          $ref: '#/components/schemas/uri'
        _url:
          $ref: '#/components/schemas/Element'
        identifier:
          description: >-
            A formal identifier that is used to identify this value set when it
            is represented in other formats, or referenced in a specification,
            model, design or an instance.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        version:
          description: >-
            The identifier that is used to identify this version of the value
            set when it is referenced in a specification, model, design or
            instance. This is an arbitrary value managed by the value set author
            and is not expected to be globally unique. For example, it might be
            a timestamp (e.g. yyyymmdd) if a managed version is not available.
            There is also no expectation that versions can be placed in a
            lexicographical sequence.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        name:
          description: >-
            A natural language name identifying the value set. This name should
            be usable as an identifier for the module by machine processing
            applications such as code generation.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        title:
          $ref: '#/components/schemas/string'
        _title:
          $ref: '#/components/schemas/Element'
        status:
          description: >-
            The status of this value set. Enables tracking the life-cycle of the
            content. The status of the value set applies to the value set
            definition (ValueSet.compose) and the associated ValueSet metadata.
            Expansions do not have a state.
          enum:
            - draft
            - active
            - retired
            - unknown
        _status:
          $ref: '#/components/schemas/Element'
        experimental:
          description: >-
            A Boolean value to indicate that this value set is authored for
            testing purposes (or education/evaluation/marketing) and is not
            intended to be used for genuine usage.
          $ref: '#/components/schemas/boolean'
        _experimental:
          $ref: '#/components/schemas/Element'
        date:
          description: >-
            The date (and optionally time) when the value set was created or
            revised (e.g. the 'content logical definition').
          $ref: '#/components/schemas/dateTime'
        _date:
          $ref: '#/components/schemas/Element'
        publisher:
          description: >-
            The name of the organization or individual that published the value
            set.
          $ref: '#/components/schemas/string'
        _publisher:
          $ref: '#/components/schemas/Element'
        contact:
          description: >-
            Contact details to assist a user in finding and communicating with
            the publisher.
          items:
            $ref: '#/components/schemas/ContactDetail'
          type: array
        description:
          description: >-
            A free text natural language description of the value set from a
            consumer's perspective. The textual description specifies the span
            of meanings for concepts to be included within the Value Set
            Expansion, and also may specify the intended use and limitations of
            the Value Set.
          $ref: '#/components/schemas/markdown'
        _description:
          $ref: '#/components/schemas/Element'
        useContext:
          description: >-
            The content was developed with a focus and intent of supporting the
            contexts that are listed. These contexts may be general categories
            (gender, age, ...) or may be references to specific programs
            (insurance plans, studies, ...) and may be used to assist with
            indexing and searching for appropriate value set instances.
          items:
            $ref: '#/components/schemas/UsageContext'
          type: array
        jurisdiction:
          description: >-
            A legal or geographic region in which the value set is intended to
            be used.
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        immutable:
          description: >-
            If this is set to 'true', then no new versions of the content
            logical definition can be created.  Note: Other metadata might still
            change.
          $ref: '#/components/schemas/boolean'
        _immutable:
          $ref: '#/components/schemas/Element'
        purpose:
          description: >-
            Explanation of why this value set is needed and why it has been
            designed as it has.
          $ref: '#/components/schemas/markdown'
        _purpose:
          $ref: '#/components/schemas/Element'
        copyright:
          description: >-
            A copyright statement relating to the value set and/or its contents.
            Copyright statements are generally legal restrictions on the use and
            publishing of the value set.
          $ref: '#/components/schemas/markdown'
        _copyright:
          $ref: '#/components/schemas/Element'
        compose:
          description: >-
            A set of criteria that define the contents of the value set by
            including or excluding codes selected from the specified code
            system(s) that the value set draws from. This is also known as the
            Content Logical Definition (CLD).
          $ref: '#/components/schemas/ValueSet_Compose'
        expansion:
          description: >-
            A value set can also be "expanded", where the value set is turned
            into a simple collection of enumerated codes. This element holds the
            expansion, if it has been performed.
          $ref: '#/components/schemas/ValueSet_Expansion'
      additionalProperties: false
      required:
        - resourceType
    ValueSet_Compose:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        lockedDate:
          description: >-
            The Locked Date is  the effective date that is used to determine the
            version of all referenced Code Systems and Value Set Definitions
            included in the compose that are not already tied to a specific
            version.
          $ref: '#/components/schemas/date'
        _lockedDate:
          $ref: '#/components/schemas/Element'
        inactive:
          description: >-
            Whether inactive codes - codes that are not approved for current use
            - are in the value set. If inactive = true, inactive codes are to be
            included in the expansion, if inactive = false, the inactive codes
            will not be included in the expansion. If absent, the behavior is
            determined by the implementation, or by the applicable $expand
            parameters (but generally, inactive codes would be expected to be
            included).
          $ref: '#/components/schemas/boolean'
        _inactive:
          $ref: '#/components/schemas/Element'
        include:
          description: Include one or more codes from a code system or other value set(s).
          items:
            $ref: '#/components/schemas/ValueSet_Include'
          type: array
        exclude:
          description: >-
            Exclude one or more codes from the value set based on code system
            filters and/or other value sets.
          items:
            $ref: '#/components/schemas/ValueSet_Include'
          type: array
      additionalProperties: false
      required:
        - include
    ValueSet_Include:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: >-
            An absolute URI which is the code system from which the selected
            codes come from.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The version of the code system that the codes are selected from, or
            the special version '*' for all versions.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        concept:
          description: Specifies a concept to be included or excluded.
          items:
            $ref: '#/components/schemas/ValueSet_Concept'
          type: array
        filter:
          description: >-
            Select concepts by specify a matching criterion based on the
            properties (including relationships) defined by the system, or on
            filters defined by the system. If multiple filters are specified,
            they SHALL all be true.
          items:
            $ref: '#/components/schemas/ValueSet_Filter'
          type: array
        valueSet:
          description: >-
            Selects the concepts found in this value set (based on its value set
            definition). This is an absolute URI that is a reference to
            ValueSet.url.  If multiple value sets are specified this includes
            the union of the contents of all of the referenced value sets.
          items:
            $ref: '#/components/schemas/canonical'
          type: array
      additionalProperties: false
    ValueSet_Concept:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          description: >-
            The text to display to the user for this concept in the context of
            this valueset. If no display is provided, then applications using
            the value set use the display specified for the code by the system.
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        designation:
          description: >-
            Additional representations for this concept when used in this value
            set - other languages, aliases, specialized purposes, used for
            particular purposes, etc.
          items:
            $ref: '#/components/schemas/ValueSet_Designation'
          type: array
      additionalProperties: false
    ValueSet_Designation:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        use:
          $ref: '#/components/schemas/Coding'
        value:
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ValueSet_Filter:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        property:
          description: >-
            A code that identifies a property or a filter defined in the code
            system.
          $ref: '#/components/schemas/code'
        _property:
          $ref: '#/components/schemas/Element'
        op:
          description: The kind of operation to perform as a part of the filter criteria.
          enum:
            - =
            - is-a
            - descendent-of
            - is-not-a
            - regex
            - in
            - not-in
            - generalizes
            - exists
        _op:
          $ref: '#/components/schemas/Element'
        value:
          description: >-
            The match value may be either a code defined by the system, or a
            string value, which is a regex match on the literal string of the
            property value  (if the filter represents a property defined in
            CodeSystem) or of the system filter value (if the filter represents
            a filter defined in CodeSystem) when the operation is 'regex', or
            one of the values (true and false), when the operation is 'exists'.
          $ref: '#/components/schemas/string'
        _value:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ValueSet_Expansion:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: >-
            An identifier that uniquely identifies this expansion of the
            valueset, based on a unique combination of the provided parameters,
            the system default parameters, and the underlying system code system
            versions etc. Systems may re-use the same identifier as long as
            those factors remain the same, and the expansion is the same, but
            are not required to do so. This is a business identifier.
          $ref: '#/components/schemas/uri'
        _identifier:
          $ref: '#/components/schemas/Element'
        timestamp:
          description: >-
            The time at which the expansion was produced by the expanding
            system.
          $ref: '#/components/schemas/dateTime'
        _timestamp:
          $ref: '#/components/schemas/Element'
        total:
          description: >-
            The total number of concepts in the expansion. If the number of
            concept nodes in this resource is less than the stated number, then
            the server can return more using the offset parameter.
          $ref: '#/components/schemas/integer'
        _total:
          $ref: '#/components/schemas/Element'
        offset:
          description: >-
            If paging is being used, the offset at which this resource starts.
            I.e. this resource is a partial view into the expansion. If paging
            is not being used, this element SHALL NOT be present.
          $ref: '#/components/schemas/integer'
        _offset:
          $ref: '#/components/schemas/Element'
        parameter:
          description: >-
            A parameter that controlled the expansion process. These parameters
            may be used by users of expanded value sets to check whether the
            expansion is suitable for a particular purpose, or to pick the
            correct expansion.
          items:
            $ref: '#/components/schemas/ValueSet_Parameter'
          type: array
        contains:
          description: The codes that are contained in the value set expansion.
          items:
            $ref: '#/components/schemas/ValueSet_Contains'
          type: array
      additionalProperties: false
    ValueSet_Parameter:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          description: >-
            Name of the input parameter to the $expand operation; may be a
            server-assigned name for additional default or other server-supplied
            parameters used to control the expansion process.
          $ref: '#/components/schemas/string'
        _name:
          $ref: '#/components/schemas/Element'
        valueString:
          description: The value of the parameter.
          pattern: '^[ \r\n\t\S]+$'
          type: string
        _valueString:
          $ref: '#/components/schemas/Element'
        valueBoolean:
          description: The value of the parameter.
          pattern: ^true|false$
          type: boolean
        _valueBoolean:
          $ref: '#/components/schemas/Element'
        valueInteger:
          description: The value of the parameter.
          pattern: '^-?([0]|([1-9][0-9]*))$'
          type: number
        _valueInteger:
          $ref: '#/components/schemas/Element'
        valueDecimal:
          description: The value of the parameter.
          pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
          type: number
        _valueDecimal:
          $ref: '#/components/schemas/Element'
        valueUri:
          description: The value of the parameter.
          pattern: ^\S*$
          type: string
        _valueUri:
          $ref: '#/components/schemas/Element'
        valueCode:
          description: The value of the parameter.
          pattern: '^[^\s]+(\s[^\s]+)*$'
          type: string
        _valueCode:
          $ref: '#/components/schemas/Element'
        valueDateTime:
          description: The value of the parameter.
          pattern: >-
            ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        _valueDateTime:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    ValueSet_Contains:
      description: >-
        A ValueSet resource instance specifies a set of codes drawn from one or
        more code systems, intended for use in a particular context. Value sets
        link between [[[CodeSystem]]] definitions and their use in [coded
        elements](terminologies.html).
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: >-
            An absolute URI which is the code system in which the code for this
            item in the expansion is defined.
          $ref: '#/components/schemas/uri'
        _system:
          $ref: '#/components/schemas/Element'
        abstract:
          description: >-
            If true, this entry is included in the expansion for navigational
            purposes, and the user cannot select the code directly as a proper
            value.
          $ref: '#/components/schemas/boolean'
        _abstract:
          $ref: '#/components/schemas/Element'
        inactive:
          description: >-
            If the concept is inactive in the code system that defines it.
            Inactive codes are those that are no longer to be used, but are
            maintained by the code system for understanding legacy data. It
            might not be known or specified whether an concept is inactive (and
            it may depend on the context of use).
          $ref: '#/components/schemas/boolean'
        _inactive:
          $ref: '#/components/schemas/Element'
        version:
          description: >-
            The version of the code system from this code was taken. Note that a
            well-maintained code system does not need the version reported,
            because the meaning of codes is consistent across versions. However
            this cannot consistently be assured, and when the meaning is not
            guaranteed to be consistent, the version SHOULD be exchanged.
          $ref: '#/components/schemas/string'
        _version:
          $ref: '#/components/schemas/Element'
        code:
          description: >-
            The code for this item in the expansion hierarchy. If this code is
            missing the entry in the hierarchy is a place holder (abstract) and
            does not represent a valid code in the value set.
          $ref: '#/components/schemas/code'
        _code:
          $ref: '#/components/schemas/Element'
        display:
          $ref: '#/components/schemas/string'
        _display:
          $ref: '#/components/schemas/Element'
        designation:
          description: >-
            Additional representations for this item - other languages, aliases,
            specialized purposes, used for particular purposes, etc. These are
            relevant when the conditions of the expansion do not fix to a single
            correct representation.
          items:
            $ref: '#/components/schemas/ValueSet_Designation'
          type: array
        contains:
          description: Other codes and entries contained under this entry in the hierarchy.
          items:
            $ref: '#/components/schemas/ValueSet_Contains'
          type: array
      additionalProperties: false
    VerificationResult:
      description: >-
        Describes validation requirements, source(s), status and dates for one
        or more elements.
      properties:
        resourceType:
          description: This is a VerificationResult resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        target:
          description: A resource that was validated.
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        targetLocation:
          description: The fhirpath location(s) within the resource that was validated.
          items:
            $ref: '#/components/schemas/string'
          type: array
        _targetLocation:
          description: Extensions for targetLocation
          items:
            $ref: '#/components/schemas/Element'
          type: array
        need:
          description: >-
            The frequency with which the target must be validated (none;
            initial; periodic).
          $ref: '#/components/schemas/CodeableConcept'
        status:
          description: >-
            The validation status of the target (attested; validated; in
            process; requires revalidation; validation failed; revalidation
            failed).
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        statusDate:
          $ref: '#/components/schemas/dateTime'
        _statusDate:
          $ref: '#/components/schemas/Element'
        validationType:
          description: >-
            What the target is validated against (nothing; primary source;
            multiple sources).
          $ref: '#/components/schemas/CodeableConcept'
        validationProcess:
          description: >-
            The primary process by which the target is validated (edit check;
            value set; primary source; multiple sources; standalone; in
            context).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        frequency:
          $ref: '#/components/schemas/Timing'
        lastPerformed:
          description: >-
            The date/time validation was last completed (including failed
            validations).
          $ref: '#/components/schemas/dateTime'
        _lastPerformed:
          $ref: '#/components/schemas/Element'
        nextScheduled:
          $ref: '#/components/schemas/date'
        _nextScheduled:
          $ref: '#/components/schemas/Element'
        failureAction:
          $ref: '#/components/schemas/CodeableConcept'
        primarySource:
          description: Information about the primary source(s) involved in validation.
          items:
            $ref: '#/components/schemas/VerificationResult_PrimarySource'
          type: array
        attestation:
          $ref: '#/components/schemas/VerificationResult_Attestation'
        validator:
          description: Information about the entity validating information.
          items:
            $ref: '#/components/schemas/VerificationResult_Validator'
          type: array
      additionalProperties: false
      required:
        - resourceType
    VerificationResult_PrimarySource:
      description: >-
        Describes validation requirements, source(s), status and dates for one
        or more elements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        who:
          $ref: '#/components/schemas/Reference'
        type:
          description: >-
            Type of primary source (License Board; Primary Education; Continuing
            Education; Postal Service; Relationship owner; Registration
            Authority; legal source; issuing source; authoritative source).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        communicationMethod:
          description: >-
            Method for communicating with the primary source (manual; API;
            Push).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
        validationStatus:
          description: >-
            Status of the validation of the target against the primary source
            (successful; failed; unknown).
          $ref: '#/components/schemas/CodeableConcept'
        validationDate:
          $ref: '#/components/schemas/dateTime'
        _validationDate:
          $ref: '#/components/schemas/Element'
        canPushUpdates:
          description: >-
            Ability of the primary source to push updates/alerts (yes; no;
            undetermined).
          $ref: '#/components/schemas/CodeableConcept'
        pushTypeAvailable:
          description: >-
            Type of alerts/updates the primary source can send (specific
            requested changes; any changes; as defined by source).
          items:
            $ref: '#/components/schemas/CodeableConcept'
          type: array
      additionalProperties: false
    VerificationResult_Attestation:
      description: >-
        Describes validation requirements, source(s), status and dates for one
        or more elements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        who:
          $ref: '#/components/schemas/Reference'
        onBehalfOf:
          description: >-
            When the who is asserting on behalf of another (organization or
            individual).
          $ref: '#/components/schemas/Reference'
        communicationMethod:
          description: >-
            The method by which attested information was submitted/retrieved
            (manual; API; Push).
          $ref: '#/components/schemas/CodeableConcept'
        date:
          $ref: '#/components/schemas/date'
        _date:
          $ref: '#/components/schemas/Element'
        sourceIdentityCertificate:
          description: >-
            A digital identity certificate associated with the attestation
            source.
          $ref: '#/components/schemas/string'
        _sourceIdentityCertificate:
          $ref: '#/components/schemas/Element'
        proxyIdentityCertificate:
          description: >-
            A digital identity certificate associated with the proxy entity
            submitting attested information on behalf of the attestation source.
          $ref: '#/components/schemas/string'
        _proxyIdentityCertificate:
          $ref: '#/components/schemas/Element'
        proxySignature:
          description: >-
            Signed assertion by the proxy entity indicating that they have the
            right to submit attested information on behalf of the attestation
            source.
          $ref: '#/components/schemas/Signature'
        sourceSignature:
          description: >-
            Signed assertion by the attestation source that they have attested
            to the information.
          $ref: '#/components/schemas/Signature'
      additionalProperties: false
    VerificationResult_Validator:
      description: >-
        Describes validation requirements, source(s), status and dates for one
        or more elements.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        organization:
          $ref: '#/components/schemas/Reference'
        identityCertificate:
          $ref: '#/components/schemas/string'
        _identityCertificate:
          $ref: '#/components/schemas/Element'
        attestationSignature:
          description: >-
            Signed assertion by the validator that they have validated the
            information.
          $ref: '#/components/schemas/Signature'
      additionalProperties: false
      required:
        - organization
    VisionPrescription:
      description: >-
        An authorization for the provision of glasses and/or contact lenses to a
        patient.
      properties:
        resourceType:
          description: This is a VisionPrescription resource
        id:
          description: >-
            The logical id of the resource, as used in the URL for the resource.
            Once assigned, this value never changes.
          $ref: '#/components/schemas/id'
        meta:
          description: >-
            The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
          $ref: '#/components/schemas/Meta'
        implicitRules:
          description: >-
            A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
          $ref: '#/components/schemas/uri'
        _implicitRules:
          $ref: '#/components/schemas/Element'
        language:
          $ref: '#/components/schemas/code'
        _language:
          $ref: '#/components/schemas/Element'
        text:
          description: >-
            A human-readable narrative that contains a summary of the resource
            and can be used to represent the content of the resource to a human.
            The narrative need not encode all the structured data, but is
            required to contain sufficient detail to make it "clinically safe"
            for a human to just read the narrative. Resource definitions may
            define what content should be represented in the narrative to ensure
            clinical safety.
          $ref: '#/components/schemas/Narrative'
        contained:
          description: >-
            These resources do not have an independent existence apart from the
            resource that contains them - they cannot be identified
            independently, and nor can they have their own independent
            transaction scope.
          items:
            $ref: '#/components/schemas/ResourceList'
          type: array
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the resource and that modifies the
            understanding of the element that contains it and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer is allowed to define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        identifier:
          description: A unique identifier assigned to this vision prescription.
          items:
            $ref: '#/components/schemas/Identifier'
          type: array
        status:
          $ref: '#/components/schemas/code'
        _status:
          $ref: '#/components/schemas/Element'
        created:
          $ref: '#/components/schemas/dateTime'
        _created:
          $ref: '#/components/schemas/Element'
        patient:
          description: >-
            A resource reference to the person to whom the vision prescription
            applies.
          $ref: '#/components/schemas/Reference'
        encounter:
          description: >-
            A reference to a resource that identifies the particular occurrence
            of contact between patient and health care provider during which the
            prescription was issued.
          $ref: '#/components/schemas/Reference'
        dateWritten:
          $ref: '#/components/schemas/dateTime'
        _dateWritten:
          $ref: '#/components/schemas/Element'
        prescriber:
          description: >-
            The healthcare professional responsible for authorizing the
            prescription.
          $ref: '#/components/schemas/Reference'
        lensSpecification:
          description: >-
            Contain the details of  the individual lens specifications and
            serves as the authorization for the fullfillment by certified
            professionals.
          items:
            $ref: '#/components/schemas/VisionPrescription_LensSpecification'
          type: array
      additionalProperties: false
      required:
        - prescriber
        - patient
        - lensSpecification
        - resourceType
    VisionPrescription_LensSpecification:
      description: >-
        An authorization for the provision of glasses and/or contact lenses to a
        patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        product:
          description: >-
            Identifies the type of vision correction product which is required
            for the patient.
          $ref: '#/components/schemas/CodeableConcept'
        eye:
          description: The eye for which the lens specification applies.
          enum:
            - right
            - left
        _eye:
          $ref: '#/components/schemas/Element'
        sphere:
          $ref: '#/components/schemas/decimal'
        _sphere:
          $ref: '#/components/schemas/Element'
        cylinder:
          $ref: '#/components/schemas/decimal'
        _cylinder:
          $ref: '#/components/schemas/Element'
        axis:
          $ref: '#/components/schemas/integer'
        _axis:
          $ref: '#/components/schemas/Element'
        prism:
          description: Allows for adjustment on two axis.
          items:
            $ref: '#/components/schemas/VisionPrescription_Prism'
          type: array
        add:
          description: >-
            Power adjustment for multifocal lenses measured in dioptres (0.25
            units).
          $ref: '#/components/schemas/decimal'
        _add:
          $ref: '#/components/schemas/Element'
        power:
          $ref: '#/components/schemas/decimal'
        _power:
          $ref: '#/components/schemas/Element'
        backCurve:
          $ref: '#/components/schemas/decimal'
        _backCurve:
          $ref: '#/components/schemas/Element'
        diameter:
          $ref: '#/components/schemas/decimal'
        _diameter:
          $ref: '#/components/schemas/Element'
        duration:
          $ref: '#/components/schemas/Quantity'
        color:
          $ref: '#/components/schemas/string'
        _color:
          $ref: '#/components/schemas/Element'
        brand:
          $ref: '#/components/schemas/string'
        _brand:
          $ref: '#/components/schemas/Element'
        note:
          description: Notes for special requirements such as coatings and lens materials.
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      additionalProperties: false
      required:
        - product
    VisionPrescription_Prism:
      description: >-
        An authorization for the provision of glasses and/or contact lenses to a
        patient.
      properties:
        id:
          description: >-
            Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
          $ref: '#/components/schemas/string'
        extension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element. To make the use of extensions
            safe and manageable, there is a strict set of governance  applied to
            the definition and use of extensions. Though any implementer can
            define an extension, there is a set of requirements that SHALL be
            met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        modifierExtension:
          description: >-
            May be used to represent additional information that is not part of
            the basic definition of the element and that modifies the
            understanding of the element in which it is contained and/or the
            understanding of the containing element's descendants. Usually
            modifier elements provide negation or qualification. To make the use
            of extensions safe and manageable, there is a strict set of
            governance applied to the definition and use of extensions. Though
            any implementer can define an extension, there is a set of
            requirements that SHALL be met as part of the definition of the
            extension. Applications processing a resource are required to check
            for modifier extensions.


            Modifier extensions SHALL NOT change the meaning of any elements on
            Resource or DomainResource (including cannot change the meaning of
            modifierExtension itself).
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        amount:
          $ref: '#/components/schemas/decimal'
        _amount:
          $ref: '#/components/schemas/Element'
        base:
          description: 'The relative base, or reference lens edge, for the prism.'
          enum:
            - up
            - down
            - in
            - out
        _base:
          $ref: '#/components/schemas/Element'
      additionalProperties: false
    Problem:
      type: "object"
      properties:
        detail:
          type: "string"
          description: "A human readable explanation specific to this occurrence of the problem."
          example: "Connection to database timed out"
        instance:
          type: "string"
          description: "An absolute URI that identifies the specific occurrence of\
            \ the problem.\nIt may or may not yield further information if dereferenced.\n"
          format: "uri"
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: "integer"
          description: "The HTTP status code generated by the origin server for this\
            \ occurrence\nof the problem.\n"
          format: "int32"
          example: 503
        title:
          type: "string"
          description: "A short, summary of the problem type. Written in english and\
            \ readable\nfor engineers (usually not suited for non technical stakeholders\
            \ and\nnot localized); example: Service Unavailable\n"
        type:
          type: "string"
          description: "An absolute URI that identifies the problem type.  When dereferenced,\n\
            it SHOULD provide human-readable documentation for the problem type\n\
            (e.g., using HTML).\n"
          format: "uri"
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: "about:blank"
  parameters:
    careplan_id:
      name: careplan_id
      in: path
      description: Identificativo del Careplan
      required: true
      schema:
        $ref: '#/components/schemas/id'
    invoice_id:
      name: invoice_id
      in: path
      description: Identificativo Invoice
      required: true
      schema:
        $ref: '#/components/schemas/id'
  responses:
    404NotFound:
      description: "Not Found"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    422UnprocessableEntity:
      description: "Entità non elaborabile"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    201Created:
      description: "Resource created"
      headers:
        Location:
          $ref: "#/components/headers/Location"
    400BadRequest:
      description: "Bad Request"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    412PreconditionFailed:
      description: "Precondition Failed"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
  headers:
    Location:
      description: "Header Location inserito in una risposta ad una richiesta POST,\
        \ terminata con successo 'http 201'.\nL'header indica l'id dell'oggetto creato."
      schema:
        type: "string"
