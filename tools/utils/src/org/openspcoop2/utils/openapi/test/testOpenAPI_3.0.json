{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team",
      "email": "foo@example.com",
      "url": "http://madskristensen.net"
    },
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "servers": [
    {
      "url": "http://petstore.swagger.io/api"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "description": "Returns all pets from the system that the user has access to\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\n\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\n",
        "operationId": "findPets",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "operationId": "addPet",
        "requestBody": {
          "description": "Pet to add to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "operationId": "updatePet",
        "requestBody": {
          "description": "Pet to add to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "test_import.yaml#/components/schemas/ImportNewPet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "test_import.yaml#/components/schemas/ImportPet"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "test_import.yaml#/components/schemas/ImportError"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "operationId": "delete pet",
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "test_import2.yaml#/components/schemas/Import2Pet"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "test_import2.yaml#/components/schemas/Import2Error"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "get": {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "find pet by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "aggiorna pet by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalMetadata": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pets/{petId}/completa": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "operazione completa",
        "description": "",
        "operationId": "completa",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "petName",
            "in": "query",
            "description": "name of pet",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-limit-Pets",
            "in": "header",
            "description": "limit of pets",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Session",
            "in": "cookie",
            "description": "cookie sessione",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/profilo"
          },
          {
            "$ref": "#/components/parameters/soggetto"
          },
          {
            "$ref": "#/components/parameters/numeroLimitato"
          },
          {
            "$ref": "#/components/parameters/profiloRef"
          },
          {
            "$ref": "#/components/parameters/soggettoRef"
          },
          {
            "$ref": "#/components/parameters/numeroLimitatoRef"
          },
          {
            "name": "profiloRefInLine",
            "in": "query",
            "description": "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery.",
            "required": false,
            "example": "APIGateway",
            "schema": {
              "$ref": "#/components/schemas/ProfiloEnum"
            }
          },
          {
            "name": "soggettoRefInLine",
            "in": "query",
            "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
            "required": false,
            "example": "ENTE",
            "schema": {
              "$ref": "#/components/schemas/SimpleName"
            }
          },
          {
            "name": "numeroLimitatoRefInLine",
            "in": "query",
            "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
            "required": true,
            "example": 34,
            "schema": {
              "$ref": "#/components/schemas/NumeroLimitato"
            }
          },
          {
            "name": "profiloInLine",
            "in": "query",
            "description": "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery.",
            "required": false,
            "example": "APIGateway",
            "schema": {
              "type": "string",
              "enum": [
                "APIGateway",
                "SPCoop",
                "FatturaPA",
                "eDelivery"
              ],
              "default": "APIGateway"
            }
          },
          {
            "name": "soggettoInLine",
            "in": "query",
            "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
            "required": false,
            "example": "ENTE",
            "schema": {
              "type": "string",
              "pattern": "^[0-9A-Za-z]+$",
              "maxLength": 255,
              "minLength": 2,
              "description": "Formato solo da caratteri e cifre"
            }
          },
          {
            "name": "numeroLimitatoInLine",
            "in": "query",
            "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
            "required": true,
            "example": 34,
            "schema": {
              "example": 503,
              "exclusiveMinimum": false,
              "exclusiveMaximum": true,
              "format": "int32",
              "maximum": 600,
              "minimum": 100,
              "multipleOf": 10,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/petRequest"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/Retry-After"
              },
              "X-RateLimit-Limit": {
                "$ref": "#/components/headers/X-RateLimit-Limit"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-RateLimit-Remaining"
              },
              "X-RateLimit-Reset": {
                "$ref": "#/components/headers/X-RateLimit-Reset"
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pets/findByStatus": {
      "parameters": [
        {
          "$ref": "#/components/parameters/profilo"
        },
        {
          "$ref": "#/components/parameters/soggetto"
        },
        {
          "$ref": "#/components/parameters/numeroLimitato"
        },
        {
          "$ref": "#/components/parameters/profiloRef"
        },
        {
          "$ref": "#/components/parameters/soggettoRef"
        },
        {
          "$ref": "#/components/parameters/numeroLimitatoRef"
        },
        {
          "name": "profiloRefInLineByStatus",
          "in": "query",
          "description": "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery.",
          "required": false,
          "example": "APIGateway",
          "schema": {
            "$ref": "#/components/schemas/ProfiloEnum"
          }
        },
        {
          "name": "soggettoRefInLineByStatus",
          "in": "query",
          "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
          "required": false,
          "example": "ENTE",
          "schema": {
            "$ref": "#/components/schemas/SimpleName"
          }
        },
        {
          "name": "numeroLimitatoRefInLineByStatus",
          "in": "query",
          "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
          "required": true,
          "example": 34,
          "schema": {
            "$ref": "#/components/schemas/NumeroLimitato"
          }
        },
        {
          "name": "profiloInLineByStatus",
          "in": "query",
          "description": "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery.",
          "required": false,
          "example": "APIGateway",
          "schema": {
            "type": "string",
            "enum": [
              "APIGateway",
              "SPCoop",
              "FatturaPA",
              "eDelivery"
            ],
            "default": "APIGateway"
          }
        },
        {
          "name": "soggettoInLineByStatus",
          "in": "query",
          "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
          "required": false,
          "example": "ENTE",
          "schema": {
            "type": "string",
            "pattern": "^[0-9A-Za-z]+$",
            "maxLength": 255,
            "minLength": 2,
            "description": "Formato solo da caratteri e cifre"
          }
        },
        {
          "name": "numeroLimitatoInLineByStatus",
          "in": "query",
          "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
          "required": true,
          "example": 34,
          "schema": {
            "example": 503,
            "exclusiveMinimum": false,
            "exclusiveMaximum": true,
            "format": "int32",
            "maximum": 600,
            "minimum": 100,
            "multipleOf": 10,
            "type": "integer"
          }
        }
      ],
      "get": {
        "description": "Returns a user based on a status, if the user does not have access to the pet",
        "operationId": "find pet by status",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "status of pet to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "Request limit per hour."
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "The number of requests left for the time window."
              },
              "X-RateLimit-Reset": {
                "schema": {
                  "type": "string",
                  "format": "date-time"
                },
                "description": "The UTC date/time at which the current rate limit window resets."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pets/altro/{id}": {
      "delete": {
        "description": "deletes a single pet based on the ID supplied",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of pet to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "pet deleted"
          },
          "500": {
            "$ref": "#/components/responses/error"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "headers": {
      "Retry-After": {
        "description": "Retry contacting the endpoint *at least* after seconds.\nSee https://tools.ietf.org/html/rfc7231#section-7.1.3",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      },
      "X-RateLimit-Limit": {
        "description": "The number of allowed requests in the current period",
        "schema": {
          "format": "int32",
          "type": "integer",
          "example": 503,
          "exclusiveMaximum": true,
          "maximum": 600,
          "minimum": 100
        }
      },
      "X-RateLimit-Remaining": {
        "description": "The number of remaining requests in the current period",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      },
      "X-RateLimit-Reset": {
        "description": "The number of seconds left in the current period",
        "schema": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "parameters": {
      "profiloRef": {
        "name": "profiloRef",
        "in": "query",
        "description": "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery.",
        "required": false,
        "example": "APIGateway",
        "schema": {
          "$ref": "#/components/schemas/ProfiloEnum"
        }
      },
      "soggettoRef": {
        "name": "soggettoRef",
        "in": "query",
        "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
        "required": false,
        "example": "ENTE",
        "schema": {
          "$ref": "#/components/schemas/SimpleName"
        }
      },
      "numeroLimitatoRef": {
        "name": "esempioNumericoRef",
        "in": "query",
        "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
        "required": true,
        "example": 34,
        "schema": {
          "$ref": "#/components/schemas/NumeroLimitato"
        }
      },
      "profilo": {
        "name": "profilo",
        "in": "query",
        "description": "Indica la modalità operativa del Gateway, a scelta tra:\n  * APIGateway;\n  * SPCoop;\n  * FatturaPA;\n  * eDelivery.",
        "required": false,
        "example": "APIGateway",
        "schema": {
          "type": "string",
          "enum": [
            "APIGateway",
            "SPCoop",
            "FatturaPA",
            "eDelivery"
          ],
          "default": "APIGateway"
        }
      },
      "soggetto": {
        "name": "soggetto",
        "in": "query",
        "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
        "required": false,
        "example": "ENTE",
        "schema": {
          "type": "string",
          "pattern": "^[0-9A-Za-z]+$",
          "maxLength": 255,
          "minLength": 2,
          "description": "Formato solo da caratteri e cifre"
        }
      },
      "numeroLimitato": {
        "name": "esempioNumerico",
        "in": "query",
        "description": "Indica il Soggetto di dominio interno indirizzato dall'operazione.",
        "required": true,
        "example": 34,
        "schema": {
          "example": 503,
          "exclusiveMinimum": false,
          "exclusiveMaximum": true,
          "format": "int32",
          "maximum": 600,
          "minimum": 100,
          "multipleOf": 10,
          "type": "integer"
        }
      }
    },
    "requestBodies": {
      "petRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "Ricevuto errore da pagoPA",
        "content": {
          "application/problem+json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/problem"
                },
                {
                  "type": "object",
                  "properties": {
                    "faultBeans": {
                      "description": "Errori ricevuti da pagoPA",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/faultBean"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "headers": {
          "Retry-After": {
            "$ref": "#/components/headers/Retry-After"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.niis.org/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "schemas": {
      "problem": {
        "properties": {
          "detail": {
            "description": "A human readable explanation specific to this occurrence of the\nproblem.\n",
            "example": "Connection to database timed out",
            "type": "string"
          },
          "instance": {
            "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n",
            "example": 503,
            "exclusiveMaximum": true,
            "format": "int32",
            "maximum": 600,
            "minimum": 100,
            "type": "integer"
          },
          "title": {
            "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); \n",
            "example": "Service Unavailable",
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n",
            "example": "https://tools.ietf.org/html/rfc7231#section-6.6.4",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "faultBean": {
        "type": "object",
        "required": [
          "faultCode",
          "faultString",
          "id"
        ],
        "properties": {
          "faultCode": {
            "type": "string"
          },
          "faultString": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "serial": {
            "type": "string"
          },
          "originalFaultCode": {
            "type": "string"
          },
          "originalFaultString": {
            "type": "string"
          },
          "originalDescription": {
            "type": "string"
          }
        }
      },
      "Pet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewPet"
          },
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "NewPet": {
        "type": "object",
        "title": "petTitle",
        "required": [
          "name",
          "photoUrls"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        }
      },
      "Import2NewPet": {
        "$ref": "http://hostCasualeVerraNormalizzato.org/test/test_import.yaml#/components/schemas/ImportNewPet"
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SimpleName": {
        "type": "string",
        "pattern": "^[0-9A-Za-z]+$",
        "maxLength": 255,
        "minLength": 1,
        "description": "Formato solo da caratteri e cifre"
      },
      "NCName": {
        "type": "string",
        "pattern": "^[_A-Za-z][\\\\-\\\\._A-Za-z0-9]*$",
        "maxLength": 255,
        "description": "Può iniziare solo con un carattere [A-Za-z] o il simbolo '_' e dev'essere formato solo da caratteri, cifre, '_' , '-' e '.'"
      },
      "ProfiloEnum": {
        "type": "string",
        "enum": [
          "APIGateway",
          "SPCoop",
          "FatturaPA",
          "eDelivery"
        ],
        "default": "APIGateway"
      },
      "NumeroLimitato": {
        "type": "integer",
        "example": 503,
        "exclusiveMinimum": false,
        "exclusiveMaximum": true,
        "format": "int32",
        "maximum": 600,
        "minimum": 100,
        "multipleOf": 10
      }
    }
  }
}
