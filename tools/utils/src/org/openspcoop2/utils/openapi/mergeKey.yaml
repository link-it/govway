#
# Verifica validitÃ  partita iva
x-commons:
  ratelimit-headers: &ratelimit-headers
    X-RateLimit-Limit:
      $ref: '#/components/headers/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: '#/components/headers/X-RateLimit-Remaining'
    X-RateLimit-Reset:
        $ref: '#/components/headers/X-RateLimit-Reset'
  common-responses: &common-responses
    '400':
      $ref: '#/components/responses/400BadRequest'
    '401':
      $ref: '#/components/responses/401Unauthorized'
    '429':
      $ref: '#/components/responses/429TooManyRequests'
    '503':
      $ref: '#/components/responses/503ServiceUnavailable'
    default:
      $ref: '#/components/responses/default'

security:
  - TEST-Client-Secret: []
    TEST-Client-Id: []
    
openapi: 3.0.0
info:
  version: "1.0.0"

  title: |-
    Test anchor
    https://yaml.org/type/merge.html
    https://stackoverflow.com/questions/41063361/what-is-the-double-left-arrow-syntax-in-yaml-called-and-wheres-it-specced
    https://ktomk.github.io/writing/yaml-anchor-alias-and-merge-key.html
  x-summary: >-
    Test anchor

  description: |
    #### Documentazione
    Verifica anchor

  x-audience:
    - public
  x-api-id: test
tags:
  - name: test
    description: |-
      test
servers:
  - description: server
    url: https://test


paths:
  /test:
    get:
      summary: test
      description: |
        test.
      operationId: get_test
      tags:
        - test
      responses:
        <<: *common-responses
        '200':
          description: |
            test
          headers:
            <<: *ratelimit-headers
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /test/{parTest}:
    get:
      summary: test.
      description: |
       test

      operationId: get_par_test
      tags:
        - test
      parameters:
        - name: parTest
          in: path
          description: ''
          example: '06363391001'
          required: true
          schema:
            $ref: '#/components/schemas/Test'
      responses:
        <<: *common-responses
        '200':
          description: |
            test.
          # header di throttling sono obbligatori
          headers:
            <<: *ratelimit-headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
              examples:    # Esempi per ogni casistica
                es1:
                  value:
                    test: '01043931007'
                    valida: false
                es2:
                  value:  &ref_es2
                    test: '06363391001'
                    valida: true
                es3:
                  value:
                    <<: *ref_es2
                    stato: 'SOSPESA'
                    dataInizioSospensione: '2013-03-15'
                es4:
                  value:
                    <<: *ref_es2
                    stato: 'CESSATA'
                    dataCessazioneAttivita: '1989-01-01'

components:
  schemas:
    Test:
      type: string

    TestResponse:
      type: object
      properties:
        test:
          $ref: '#/components/schemas/Test'
        valida:
          type: boolean
          example: true

    Problem:
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.
          example: Request took too long to complete.
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          format: uri
          type: string
      type: object
  securitySchemes:
      TEST-Client-Secret:
        type: apiKey
        description: ''
        name: X-TEST-Client-Secret
        in: header
      TEST-Client-Id:
        type: apiKey
        description: ''
        name: X-TEST-Client-Id
        in: header

  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        type: string
    WWW-Authenticate:
      description: |-
        Auth realm=APIkey
        See https://tools.ietf.org/html/rfc7235#section-4.1
      schema:
        type: string
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: string
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: string
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: string

  responses:
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    401Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        WWW-Authenticate:
          $ref: '#/components/headers/WWW-Authenticate'
      description: Not authorized
    403Forbidden:
      description: Forbidden
    404NotFound:
      description: Not Found
    429TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      description: Unexpected error
 