Ad esempio seguendo le indicazioni dell'issue https://github.com/link-it/govway/issues/87 e utilizzando softhsm, il simulatore pkcs11 di dnssec si potrebbe generare 2 keystore in questa maniera:
1) installare softhm tramite: yum install opensc softhsm
2) cd $HOME; mkdir -p $HOME/lib/softhsm/tokens; cd $HOME/lib/softhsm/
3) echo "directories.tokendir = $PWD/tokens" > softhsm2.conf
4) export SOFTHSM2_CONF=$HOME/lib/softhsm/softhsm2.conf
   NOTA: aggiungere l'istruzione in .bashrc per non doverla ridefinire continuamente
   Per proseguire con le istruzioni, o eseguire l'export o aprire una nuova shell dove l'export Ã¨ stato effettuato tramite .bashrc
   
UTILITY:
per vedere i token disponibili:
   pkcs11-tool --module /usr/lib64/libsofthsm2.so -l --list-token-slots
oppure:
   softhsm2-util  --show-slots
   
per eliminare un token:
   softhsm2-util --delete-token --serial a3751d32f53a471b
   
NOTA: CREARE prima tutti gli slot necessari, altrimenti poi viene alterata la posizione rispetto alla label.
A) softhsm2-util --init-token --slot 0 --label "Token-Client1" --so-pin 1234 --pin 123456
B) softhsm2-util --init-token --slot 1 --label "Token-Client2" --so-pin 1234 --pin 123456
C) softhsm2-util --init-token --slot 2 --label "Token-Server" --so-pin 1234 --pin 123456
D) softhsm2-util --init-token --slot 3 --label "Token-ModI" --so-pin 1234 --pin 123456
   
Keystore 1:
1.1) cd $HOME/lib/softhsm/; echo "name = softhsm-client1" > softhsm_java_client1.conf
1.2) echo "library = /usr/lib64/libsofthsm2.so" >> softhsm_java_client1.conf
1.3) echo "slotListIndex = 0" >> softhsm_java_client1.conf
1.4) keytool -genkey -keyalg RSA -alias client1_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_client1.conf -storetype PKCS11
   Utilizza le seguenti info: CN=ExampleClient1HSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
1.5) keytool -genseckey -alias 'client_symmetric_hsm' -keyalg 'DESede' -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_client1.conf
1.6) per verificare la coppia di chiavi generata:
    keytool -list -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_client1.conf
  
Keystore 2 (esempio in cui la configurazione viene fornita come stringa invece che come file):
2.1) keytool -genkey -keyalg RSA -alias client2_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-client2\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 1" -storetype PKCS11
     Utilizza le seguenti info: CN=ExampleClient2HSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
2.2) per verificare la coppia di chiavi generata:
     keytool -list -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-client2\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 1"
	 
Keystore 3:
3.1) cd $HOME/lib/softhsm/; echo "name = softhsm-server" > softhsm_java_server.conf
3.2) echo "library = /usr/lib64/libsofthsm2.so" >> softhsm_java_server.conf
3.3) echo "slotListIndex = 2" >> softhsm_java_server.conf
3.4) keytool -genkey -keyalg RSA -alias server_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_server.conf -storetype PKCS11
    Utilizza le seguenti info: CN=ExampleServerHSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
3.5) Aggiungiamo una ulteriore coppia di chiavi:
    keytool -genkey -keyalg RSA -alias server2_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_server.conf -storetype PKCS11
    Utilizza le seguenti info: CN=ExampleServer2HSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
3.6) per verificare la coppia di chiavi generata:
    keytool -list -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_server.conf

Keystore 4 (esempio in cui la configurazione viene fornita come stringa invece che come file):
4.1) keytool -genkey -keyalg RSA -alias modi_client1_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3" -storetype PKCS11
     Utilizza le seguenti info: CN=ExampleModIClient1HSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
4.2) keytool -genkey -keyalg RSA -alias modi_client2_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3" -storetype PKCS11
     Utilizza le seguenti info: CN=ExampleModIClient2HSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
4.3) keytool -genkey -keyalg RSA -alias modi_client3_hsm -keystore NONE -storepass 123456 -validity 7300 -keysize 2048 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3" -storetype PKCS11
     Utilizza le seguenti info: CN=ExampleModIClient3HSM, OU=Test, O=Test, L=Pisa, ST=Italy, C=IT
4.4) per verificare la coppia di chiavi generata:
     keytool -list -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3"
	 

Per realizzare un trustostore che contiene i certificati generati:
1) keytool -exportcert -rfc -alias client1_hsm -file client1_hsm.pem  -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_client1.conf
2) keytool -exportcert -rfc -alias client2_hsm -file client2_hsm.pem -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-client2\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 1"
3.1) keytool -exportcert -rfc -alias server_hsm -file server_hsm.pem -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_server.conf
3.2) keytool -exportcert -rfc -alias server2_hsm -file server2_hsm.pem -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg $HOME/lib/softhsm/softhsm_java_server.conf
4.1) keytool -exportcert -rfc -alias modi_client1_hsm -file modi_client1_hsm.pem -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3" -storetype PKCS11
4.2) keytool -exportcert -rfc -alias modi_client2_hsm -file modi_client2_hsm.pem -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3" -storetype PKCS11
4.3) keytool -exportcert -rfc -alias modi_client3_hsm -file modi_client3_hsm.pem -keystore NONE -storetype PKCS11 -storepass 123456 -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "--name = softhsm-modi-client\nlibrary = /usr/lib64/libsofthsm2.so\nslotListIndex = 3" -storetype PKCS11
