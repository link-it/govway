<project name="TestSuite_OpenSPCoop" basedir="." default="valida">

	<import file="local_env.xml" />
	<import file="${openspcoop2}/ant/commons/as-check.xml" />

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${openspcoop2_lib}/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<!-- Check AS Version -->
	<if>
		<not>
			<istrue value="${_asVersionVerified}"/>
		</not>
		<then>
			<runtarget target="check_as_version" />
			<var name="_asVersionVerified" value="true"/>
		</then>
	</if>
	<var name="jboss_jars" value="applicationServer/${as}"/>
	<if>
		<matches string="${as}" pattern="tomcat.*"/>
		<then>
			<var name="jboss_jars" value="applicationServer"/> <!-- In modo da non rilevare nessun jar -->
		</then>
	</if>

	<!-- Build directory -->
	<property name="build"   value="${basedir}/build"/>

	<path id="classpath_script">
		<fileset dir="${openspcoop2_lib}/${jboss_jars}" >
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${openspcoop2_lib}/log" includes="*.jar"/>
		<pathelement path="${openspcoop2_lib}/shared/mailapi-1.6.7.jar"/>
		<pathelement path="${openspcoop2_lib}/shared/jakarta.activation-1.2.2.jar"/>
		<pathelement path="${openspcoop2_lib}/shared/xercesImpl-2.12.2.jar"/>
		<pathelement path="${openspcoop2_lib}/shared/xml-apis-1.4.01.jar"/>
		<pathelement path="${openspcoop2_lib}/commons/commons-logging-1.2.jar"/>
		<pathelement path="${openspcoop2_lib}/commons/commons-discovery-0.5.jar"/>
		<pathelement path="${openspcoop2.lib}/commons/commons-codec-1.16.0.jar"/>
		<pathelement path="${openspcoop2_lib}/shared/wsdl4j-1.6.3.jar"/>
		<pathelement path="${openspcoop2_lib}/stub/cxf/*"/>
		<pathelement path="${openspcoop2_lib}/security/xmlsec-2.3.0.jar"/>
		<fileset dir="${openspcoop2_dist}" includes="**/*.jar"/>
		<pathelement path="${jdbc_lib}"/>
		<pathelement path="${build}"/>
	</path>


	<target name="init">
		<mkdir dir="${build}"/>
	</target>

	<target name="clean">
		<delete dir="${build}"/>
	</target>


	<!-- Prepara l'ambiente di test -->
	<target name="valida" depends="init">

		<!-- RegistroServizi -->
		<if>
			<equals arg1="${validazioneRegistroServizi}" arg2="true" />
			<then>
				<!-- db -->
				<copy file="${openspcoop2}/core/src/schemi/registroServizi.xsd" todir="${build}"/>
				<copy file="deploy/properties/validator.log4j2.properties" todir="${build}"/>
				<java classname="org.openspcoop2.core.registry.driver.utils.ValidazioneSemanticaMainProcessor" fork="true">
					<arg value="${proprietaComuni}" />
					<arg value="${tipoRegistroServizi}" />
					<arg value="${proprietaRegistroServizi}" />
					<arg value="${verificaURIRegistroServizi}" />
					<arg value="${build}/validator.log4j2.properties" />
					<classpath>
						<path refid="classpath_script"/>
					</classpath>
				</java>
			</then>
		</if>

		<!-- Configurazione -->
		<if>
			<equals arg1="${validazioneConfigurazione}" arg2="true" />
			<then>
				<!-- db -->
				<copy file="${openspcoop2}/core/src/schemi/config.xsd" todir="${build}"/>
				<copy file="deploy/properties/validator.log4j2.properties" todir="${build}"/>
				<java classname="org.openspcoop2.core.config.driver.utils.ValidazioneSemanticaMainProcessor" fork="true">
					<arg value="${proprietaComuni}" />
					<arg value="${tipoConfigurazione}" />
					<arg value="${proprietaConfigurazione}" />
					<arg value="${validazioneSezioneConfigurazione}" />
					<arg value="${build}/validator.log4j2.properties" />
					<classpath>
						<path refid="classpath_script"/>
					</classpath>
				</java>
			</then>
		</if>

	</target>


</project>
