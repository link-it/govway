Prerequisiti:

+ Impostare multitenant attivo con:
  - Fruizioni -> Soggetto Erogatore=Escludi Soggetto Fruitore
    Erogazioni -> Soggetti Fruitori=Escludi Soggetto Erogatore
  il comando sql per farlo è:
    update configurazione set multitenant_stato='abilitato', multitenant_fruizioni='escludiSoggettoFruitore', multitenant_erogazioni='escludiSoggettoErogatore';
  NOTA:!!!una volta impostato riavviare l'application server!!!

+ Creare le proprieta di sistema, accedendo alla sezione 'Configurazione -> Generale -> Proprietà di Sistema':
  - nome: SystemProperty1 valore: SystemValue1
  - nome: JavaProperty1 valore: JavaValue1
  Il comando sql per crearle è:
    INSERT INTO pdd_sys_props (nome,valore) VALUES ('SystemProperty1','SystemValue1');
    INSERT INTO pdd_sys_props (nome,valore) VALUES ('JavaProperty1','JavaValue1');
  NOTA:!!!una volta impostato riavviare l'application server!!!

+ Aggiungere la variabile di ambiene 'EnvProperty1' con valore 'EnvValue1'
  Per farlo aggiungere in standalone.conf (wildfly) o setenv.sh (tomcat) l'istruzione:
	export EnvProperty1=EnvValue1

+ Configurare l'ambiente di esecuzione dei test:

	- Configurare il file di properties delle classi junit in <src/testsuite.properties>
	
		+ Indicare il base path per govway in <govway_base_path>

		+ Indicare per la proprietà <config_loader_path> il percorso assoluto verso gli script di caricamento sul db degli archivi zip 
			di configurazione.

		+ NOTA: La porta deve restare 8090 altrimenti è necessario cambiare la configurazione di tutte le porte delegate
			dentro modipaTestBundle.zip

+ Configurare l'application server in modo tale da supportare connessioni ssl sulla porta 8444 e 8445 utilizzando le configurazioni presenti nella directory config_https:
	a) un connettore HTTPS che esegue autenticazione client (La configurazione di default della testsuite, assume questo connettore attivo sulla porta 8444)
	   Esempio in config_https/ConnettoreHTTPS_withClientAuth.xml
	   La configurazione del connettore assume che il keystore config_https/jks/erogatore.jks sia stato copiato in /etc/govway/keys
	b) un connettore HTTPS senza autenticazione client (La configurazione di default della testsuite, assume questo connettore attivo sulla porta 8445)
	   Esempio in config_https/ConnettoreHTTPS_noClientAuth.xml
	   La configurazione del connettore assume che il keystore config_https/jks/erogatore.jks sia stato copiato in /etc/govway/keys
	c) Configurazione della JVM dell'A.S. in modo che utilizzi il truststore config_https/jks/erogatore.jks
	   Indicazioni descritte per JBoss in config_https/configurazioneTrustStoreJBOSS.txt

+ Su tomcat 9 è necessario aggiungere il parametro maxHttpHeaderSize="65536" sul connector con porta 8080 nel file TOMCAT_DIR/conf/server.xml. Ad esempio:

    <Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" allowTrace="true" maxHttpHeaderSize="65536" />

+ Nel file /etc/govway/govway_local.properties abilitare le seguenti proprietà:
	org.openspcoop2.pdd.check.readJMXResources.enabled=true
	org.openspcoop2.pdd.check.readJMXResources.username=admin
	org.openspcoop2.pdd.check.readJMXResources.password=admin
	org.openspcoop2.pdd.services.http.disableKeepAlive=true

	Controllare la corrispondenza delle properties <jmx_cache_username> e <jmx_cache_password> con i valori di sopra.

+ Compilare e deployare il servizio di echo sotto <example/pdd/server/testService>

	NOTA: aggiornarlo all'ultima versione
	NOTA2: verificare che esista /var/tmp/REPO

	- Copiare le risposte del server di echo:
		cp -r ./src/test/risposte-default/* /etc/govway/test/protocolli/modipa
	Queste saranno le risposte utilizzate dai connettori della configurazione di govway per indicare al
	servizio di echo quali risposte restituire.

+ Copiare erogatore.jks e soggetto1.jks dalla cartella <https_examples> in </etc/govway/keys>

+ Copiare o creare un link simbolico della cartella <protocolli/modipa/example/keys/xca> sotto </etc/govway/keys/xca>
  Qui sono presenti i keystore e truststore per i test sulla sicurezza messaggio

	- Modificare quindi il file </etc/govway/modipa_local.properties> configurando i valori per il keystore e truststore di default,
          oltre alle impostazioni relative al tipo di codifica del digest

		# ================================================
		# -------- TrustStore --------

		# TrustStore di default utilizzato per validare i certificati firmatari dei token di sicurezza
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.path=/etc/govway/keys/xca/trustStore_certificati.jks
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.tipo=jks
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.password=123456
		#org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.crls=PATH1.crl,PATH2.crl...

		# ================================================
		# -------- KeyStore -------- 

		# KeyStore di default utilizzato per firmare i token di sicurezza delle risposte
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.keyStore.path=/etc/govway/keys/xca/ExampleServer.p12
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.keyStore.tipo=pkcs12
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.keyStore.password=123456
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.key.alias=ExampleServer
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.key.password=123456

		# ================================================
		# --------- Codifica Digest -----
		org.openspcoop2.protocol.modipa.rest.securityToken.digest.encoding.accepted=base64,hex

+ Copiare nella cartella dell'application server che serve il contenuto statico, i ExampleClient1.crt, ExampleClient2.crt ed ExampleServer.crt, utilizzati
	nei test per verificare il riferimento x509 x5u. Ad esempio per wildfly:
		cp /etc/govway/keys/xca/ExampleClient1.crt wildfly-18.0.0.Final/welcome-content
		cp /etc/govway/keys/xca/ExampleClient2.crt wildfly-18.0.0.Final/welcome-content
		cp /etc/govway/keys/xca/ExampleServer.crt wildfly-18.0.0.Final/welcome-content

+ HSM per TLS Keystore. Seguire le indicazioni descritte in pkcs11/PKCS11.README
  Poi 'cp tools/utils/src/org/openspcoop2/utils/certificate/test/govway_test_hsm.properties  /etc/govway/hsm.properties'

+ Aggiungere in /etc/hosts la riga
	127.0.0.1 Erogatore

+ Configurare in testsuite.properties i dati per l'accesso al db di govway
	- Copiare sotto la cartella jdbc il driver postgresql ( o quello del database utilizzato )

+ Compilare i test con
	ant build

+ Caricare la configurazione con 
	ant load_config
  dopo aver caricato la configurazione
	cd pkcs11
	bash updateCertificatiConfigurazione.sh <NOME_SOGGETTO>

+ Eseguire i test con
	ant run_test -Dload=false -Ddelete=false

  Per eseguire una sola feature
	ant run_test -Dload=false -Ddelete=false -Dkarate.options=test/rest/bloccante/idac02.feature

  Conviene specificare anche la classe di test con l'opzione <-Dtest> sotto la quale è presente la feature, es:
	ant run_test -Dload=false -Ddelete=false -Dtest=NonBloccanteRestTest -Dkarate.options=test/rest/non-bloccante/pull/pull.feature
  
  Per eseguire uno specifico scenario con un determinato tag usare fra le karate.options, l'opzione <--tags>, es:
	ant run_test -Dload=false -Ddelete=false -Dtest=NonBloccanteRestTest -Dkarate.options='test/rest/non-bloccante/pull/pull.feature --tags @test-ok'

  Per evitare la creazione e la cancellazione della configurazione di govway passare i parametri <-Dload=false> e <-Ddelete=false>

