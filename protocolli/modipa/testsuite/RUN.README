Prerequisiti:

+ Riportare le indicazioni fornite in protocolli/trasparente/testsuite/karate/RUN.README

+ Impostare multitenant attivo con:
  - Fruizioni -> Soggetto Erogatore=Escludi Soggetto Fruitore
    Erogazioni -> Soggetti Fruitori=Escludi Soggetto Erogatore
  il comando sql per farlo è:
    update configurazione set multitenant_stato='abilitato', multitenant_fruizioni='escludiSoggettoFruitore', multitenant_erogazioni='escludiSoggettoErogatore';
  NOTA:!!!una volta impostato riavviare l'application server!!!

+ Creare le proprieta di sistema, accedendo alla sezione 'Configurazione -> Generale -> Proprietà di Sistema':
  - nome: SystemProperty1 valore: SystemValue1
  - nome: JavaProperty1 valore: JavaValue1
  Il comando sql per crearle è:
    INSERT INTO pdd_sys_props (nome,valore) VALUES ('SystemProperty1','SystemValue1');
    INSERT INTO pdd_sys_props (nome,valore) VALUES ('JavaProperty1','JavaValue1');
  NOTA:!!!una volta impostato riavviare l'application server!!!

+ Aggiungere la variabile di ambiene 'EnvProperty1' con valore 'EnvValue1'
  Per farlo aggiungere in standalone.conf (wildfly) o setenv.sh (tomcat) l'istruzione:
	export EnvProperty1=EnvValue1

+ Configurare l'ambiente di esecuzione dei test:

	- Configurare il file di properties delle classi junit in <src/testsuite.properties>
	
		+ Indicare il base path per govway in <govway_base_path>
		
		+ Indicare il path base dell'api di configurazione <govway_config_api> e le utenze per poterci accedere <config_api_username, config_api_password>
 
		+ Indicare per la proprietà <config_loader_path> il percorso assoluto verso gli script di caricamento sul db degli archivi zip 
			di configurazione.

		+ NOTA: La porta deve restare 8090 altrimenti è necessario cambiare la configurazione di tutte le porte delegate
			dentro modipaTestBundle.zip

		

- Configurare l'application server in modo tale da supportare connessioni ssl sulla porta 8444, 8445, 8450 e 8451 utilizzando le configurazioni presenti nella directory https:
  a) un connettore HTTPS che esegue autenticazione client (La configurazione di default della testsuite, assume questo connettore attivo sulla porta 8444)
        Esempio in https/base/ConnettoreHTTPS_withClientAuth.xml
        La configurazione del connettore assume che il keystore https/base/jks/erogatore.jks sia stato copiato in /etc/govway/keys
  b) un connettore HTTPS senza autenticazione client (La configurazione di default della testsuite, assume questo connettore attivo sulla porta 8445)
        Esempio in https/base/ConnettoreHTTPS_noClientAuth.xml
        La configurazione del connettore assume che il keystore https/base/jks/erogatore.jks sia stato copiato in /etc/govway/keys
  c) i test richiedono che i keystore presenti in https/base/jks/* siano stati copiati in /etc/govway/keys
  d) Configurazione della JVM dell'A.S. in modo che utilizzi il truststore https/base/jks/erogatore.jks
       Indicazioni descritte per JBoss in https/base/configurazioneTrustStoreJBOSS.txt
  e) un connettore HTTPS senza autenticazione client, utilizzato per test OCSP, con certificato server valido (La configurazione di default della testsuite, assume questo connettore attivo sulla porta 8450)
        Esempio in https/ocsp/ConnettoreHTTPS_ocspCertificatoValido.xml
        La configurazione del connettore assume che il keystore https/ocsp/jks/testClient.p12 sia stato copiato in /etc/govway/keys/ocsp/
  f) un connettore HTTPS senza autenticazione client, utilizzato per test OCSP, con certificato server revocato (La configurazione di default della testsuite, assume questo connettore attivo sulla porta 8451)
        Esempio in https/ocsp/ConnettoreHTTPS_ocspCertificatoRevocato.xml
        La configurazione del connettore assume che il keystore https/ocsp/jks/test.p12 sia stato copiato in /etc/govway/keys/ocsp/
  e) i test richiedono che i keystore presenti in https/ocsp/jks/* siano stati copiati in /etc/govway/keys/ocsp/
  f) i test richiedono che sia copiato il file https/ocsp/ocsp.properties in /etc/govway/
  g) i test richiedono che i certificati ee_TEST_test.esempio.it.cert.pem e ee_TEST_Client-test.esempio.it.cert.pem presenti in https/ocsp/jks/ siano recuperabili rispettivamente con le seguenti url 'http://127.0.0.1:8080/ee_TEST_test.esempio.it.cert.pem' e 'http://127.0.0.1:8080/ee_TEST_Client-test.esempio.it.cert.pem'
  i) i test richiedono che i certificati ExampleClient1.crt, ExampleClientRevocato.crt e ExampleClientScaduto.crt presenti in https/ocsp/crl siano recuperabili rispettivamente con le seguenti url 'http://127.0.0.1:8080/ExampleClient1.crt', 'http://127.0.0.1:8080/ExampleClientRevocato.crt' e 'http://127.0.0.1:8080/ExampleClientScaduto.crt'

+ Su tomcat 9 è necessario aggiungere il parametro maxHttpHeaderSize="65536" sul connector con porta 8080 nel file TOMCAT_DIR/conf/server.xml. Ad esempio:

    <Connector port="8080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" allowTrace="true" maxHttpHeaderSize="65536" />

+ Nel file /etc/govway/govway_local.properties abilitare le seguenti proprietà:
	org.openspcoop2.pdd.check.readJMXResources.enabled=true
	org.openspcoop2.pdd.check.readJMXResources.username=admin
	org.openspcoop2.pdd.check.readJMXResources.password=admin
	org.openspcoop2.pdd.services.http.disableKeepAlive=true

	Controllare la corrispondenza delle properties <jmx_cache_username> e <jmx_cache_password> con i valori di sopra.

+ Compilare e deployare il servizio di echo sotto <example/pdd/server/testService>

	NOTA: aggiornarlo all'ultima versione
	NOTA2: verificare che esista /var/tmp/REPO

	- Copiare le risposte del server di echo:
		cp -r ./src/test/risposte-default/* /etc/govway/test/protocolli/modipa
	Queste saranno le risposte utilizzate dai connettori della configurazione di govway per indicare al
	servizio di echo quali risposte restituire.

+ Copiare o creare un link simbolico della cartella <protocolli/modipa/example/keys/xca> sotto </etc/govway/keys/xca>
  Qui sono presenti i keystore e truststore per i test sulla sicurezza messaggio

  Copiare anche i file descritti nella specifica: 'protocolli/modipa/example/jwk/README.txt'
  cp -r protocolli/modipa/example/jwk/jwk_private_keys /etc/govway/keys/
  cp -r protocolli/modipa/example/jwk/jwk_public_keys /etc/govway/keys/
  cp protocolli/modipa/example/jwk/truststore_certificati.jwk /etc/govway/keys

	- Modificare quindi il file </etc/govway/modipa_local.properties> configurando i valori per il keystore e truststore di default,
          oltre alle impostazioni relative al tipo di codifica del digest e alla generazione del kid nei token X509

		# ================================================
		# -------- TrustStore --------

		# TrustStore di default utilizzato per validare i certificati firmatari dei token di sicurezza
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.path=/etc/govway/keys/xca/trustStore_certificati.jks
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.tipo=jks
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.password=123456
		#org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.trustStore.crls=PATH1.crl,PATH2.crl...

		# ----- Remote TrustStore 

		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStores=pdnd,simulazione-pdnd,simulazione-pdnd-recupero-info-client,simulazione-pdnd-recupero-info-client2,simulazione-pdnd-recupero-info-client-error,simulazione-pdnd-recupero-info-organization-error

		# Tipo di certificato recuperato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.keyType=jwk

		# Configurazione utilizzata per invocare il servizio esposto sulla PDND per l'ottenimento delle chiavi pubbliche rispetto al kid
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.name=PDNDSimulato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.label=PDND-Simulato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.tokenPolicy=SimulazionePDND-KidInToken
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.baseUrl=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore/simulazione-api-pdnd/v1/keys
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.keyId.mode=URL_SUFFIX
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.readTimeout=15000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd.connectTimeout=10000

		# Tipo di certificato recuperato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.keyType=jwk

		# Configurazione utilizzata per invocare il servizio esposto sulla PDND per l'ottenimento delle chiavi pubbliche rispetto al kid, e anche per recuperare le informazioni sui client
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.name=PDNDSimulatoRecuperoInfoClient
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.label=PDND-Simulato-RecuperoInfoClient
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.tokenPolicy=SimulazionePDND-JWK-RecuperoInfoClient
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.baseUrl=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore/simulazione-api-pdnd/v1/keys
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.keyId.mode=URL_SUFFIX
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.readTimeout=15000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.connectTimeout=10000
	
		# Configurazione MultiTenant
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant=DemoSoggettoErogatore2
		# Volutamente senza suffisso /keys per provare anche questo aspetto
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.baseUrl.DemoSoggettoErogatore2=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore2/simulazione-api-pdnd/v1/keys
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.http.username.DemoSoggettoErogatore2=DemoSoggettoErogatore2ClientAPIPDND
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.http.password.DemoSoggettoErogatore2=123456
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.http.header.DemoSoggettoErogatore2.test-pdnd-1=valore1header
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.http.header.DemoSoggettoErogatore2.test-pdnd-2=valore2header
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.http.queryParameter.DemoSoggettoErogatore2.test_pdnd_1=valore1query
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client.multiTenant.http.queryParameter.DemoSoggettoErogatore2.test_pdnd_2=valore2query
	
		# Tipo di certificato recuperato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.keyType=jwk

		# Configurazione utilizzata per invocare il servizio esposto sulla PDND per l'ottenimento delle chiavi pubbliche rispetto al kid, e anche per recuperare le informazioni sui client
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.name=PDNDSimulatoRecuperoInfoClient2
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.label=PDND-Simulato-RecuperoInfoClient2
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.tokenPolicy=SimulazionePDND-JWK-RecuperoInfoClient2
		# Volutamente senza suffisso /keys per provare anche questo aspetto
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.baseUrl=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore/simulazione-api-pdnd/v1
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.keyId.mode=URL_SUFFIX
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.readTimeout=15000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.connectTimeout=10000
		
		# Configurazione MultiTenant
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant=DemoSoggettoErogatore2
		# Volutamente senza suffisso /keys per provare anche questo aspetto
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.baseUrl.DemoSoggettoErogatore2=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore2/simulazione-api-pdnd/v1/
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.http.username.DemoSoggettoErogatore2=DemoSoggettoErogatore2ClientAPIPDND
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.http.password.DemoSoggettoErogatore2=123456
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.http.header.DemoSoggettoErogatore2.test-pdnd-1=valore1header
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.http.header.DemoSoggettoErogatore2.test-pdnd-2=valore2header
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.http.queryParameter.DemoSoggettoErogatore2.test_pdnd_1=valore1query
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client2.multiTenant.http.queryParameter.DemoSoggettoErogatore2.test_pdnd_2=valore2query

		# Tipo di certificato recuperato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.keyType=jwk

		# Configurazione utilizzata per invocare il servizio esposto sulla PDND per l'ottenimento delle chiavi pubbliche rispetto al kid, e anche per recuperare le informazioni sui client
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.name=PDNDSimulatoRecuperoInfoClient-ClientError
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.label=PDND-Simulato-RecuperoInfoClient-ClientError
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.tokenPolicy=SimulazionePDND-JWK-RecuperoInfoClient-ClientError
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.baseUrl=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore/simulazione-api-pdnd/v1/keys
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.keyId.mode=URL_SUFFIX
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.readTimeout=15000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.connectTimeout=10000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-client-error.http.queryParameter.returnError=true

		# Tipo di certificato recuperato
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.keyType=jwk

		# Configurazione utilizzata per invocare il servizio esposto sulla PDND per l'ottenimento delle chiavi pubbliche rispetto al kid, e anche per recuperare le informazioni sui client
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.name=PDNDSimulatoRecuperoInfoClient-OrganizationError
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.label=PDND-Simulato-RecuperoInfoClient-OrganizationError
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.tokenPolicy=SimulazionePDND-JWK-RecuperoInfoClient-OrganizationError
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.baseUrl=http://localhost:8080/govway/rest/in/DemoSoggettoErogatore/simulazione-api-pdnd/v1/keys
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.keyId.mode=URL_SUFFIX
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.readTimeout=15000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.connectTimeout=10000
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.remoteStore.simulazione-pdnd-recupero-info-organization-error.http.queryParameter.returnOrganizationError=true

		# ----- PDND Configuration

		# consente di indicare i claims obbligatori attesi nel token oauth
		org.openspcoop2.protocol.modipa.DemoSoggettoErogatoreConIdEnte.token.pdnd.claims.required=producerId,consumerId,eserviceId,descriptorId

		# ================================================
		# -------- KeyStore -------- 

		# KeyStore di default utilizzato per firmare i token di sicurezza delle risposte
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.keyStore.path=/etc/govway/keys/xca/ExampleServer.p12
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.keyStore.tipo=pkcs12
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.keyStore.password=123456
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.key.alias=ExampleServer
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.certificati.key.password=123456

		# ================================================
		# ----- AUDIT_REST_XX
		org.openspcoop2.protocol.modipa.sicurezzaMessaggio.audit.pattern=default,optional,custom,custom_no_validation,custom_type_string,custom_type_not_string,requiredNotCacheable,optionalNotCacheable

		# ================================================
		# --------- Codifica Digest -----
		org.openspcoop2.protocol.modipa.rest.securityToken.digest.encoding.accepted=base64,hex

		# Nel token di integrity viene aggiunto il kid del certificato anche se si usa la modalità 'X509' (x5c/x5u/x5t)
		org.openspcoop2.protocol.modipa.rest.securityToken.x509.kid=true

	- Appendere in fondo al file </etc/govway/modipa_local.properties> il contenuto del file 'protocolli/modipa/testsuite/audit/modipa_local.adjunct'

+ Nel file /etc/govway/govway_local.properties abilitare le seguenti proprietà:

	org.openspcoop2.pdd.gestoreChiaviPDND.enabled=true
	org.openspcoop2.pdd.gestoreChiaviPDND.remoteStore.name=PDNDSimulato
	org.openspcoop2.pdd.gestoreChiaviPDND.remoteStore.checkAllStores=false
	org.openspcoop2.pdd.gestorePDND.clientInfo.enabled=true
	
	# Tutta la testsuite è stata costruita per attendersi questi due claim anche nella richiessta di voucher.
	# Dei test che verificano il funzionamento di default che non vengano prodotti sono presenti nella testsuite del protocollo trasparente all'interno del package 'token.negoziazione' es. in NegoziazioneCacheKeyTest
	# generazione del clientId
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoFruitore.pdnd.payload.clientId=true
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoFruitoreEsternoTestInterno.pdnd.payload.clientId=true
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoErogatore.pdnd.payload.clientId=true
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoErogatore2.pdnd.payload.clientId=true
	# generazione del claim nbf
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoFruitore.pdnd.payload.nbf=true
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoFruitoreEsternoTestInterno.pdnd.payload.nbf=true
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoErogatore.pdnd.payload.nbf=true
	org.openspcoop2.pdd.retrieveToken.modipa.DemoSoggettoErogatore2.pdnd.payload.nbf=true

+ Nel file /etc/govway/console_local.properties abilitare le seguenti proprietà (per retrocompatibilità nei test):

	policyGestioneToken.pdnd=PDND,SimulazionePDND-KidInToken
	policyGestioneToken.pdnd.useAllPDNDStores=false

+ Copiare nella cartella dell'application server che serve il contenuto statico, i ExampleClient1.crt, ExampleClient2.crt ed ExampleServer.crt, utilizzati
	nei test per verificare il riferimento x509 x5u. Ad esempio per wildfly:
		cp /etc/govway/keys/xca/ExampleClient1.crt wildfly-18.0.0.Final/welcome-content
		cp /etc/govway/keys/xca/ExampleClient2.crt wildfly-18.0.0.Final/welcome-content
		cp /etc/govway/keys/xca/ExampleServer.crt wildfly-18.0.0.Final/welcome-content

+ HSM per TLS Keystore. Seguire le indicazioni descritte in pkcs11/PKCS11.README
  Poi 'cp tools/utils/src/org/openspcoop2/utils/certificate/test/govway_test_hsm.properties  /etc/govway/hsm.properties'
  Infine posizionarsi nella directory pkcs11 ed eseguire lo script: 'updateCertificatiConfigurazione.sh'

+ Nella console andare su Tracciamento 'Erogazioni' e 'Fruizioni' ed impostare su <abilitato>:
    - Violazione Policy Rate Limiting
  Questo perchè di base govway non traccia le transazioni quando è stata superata la soglia globale o quando è stata violata una policy di rate limiting.

+ Per i test su signal hub:
	- aggiungere al file /etc/govway/modipa_local.properties le linee:
		org.openspcoop2.protocol.modipa.signalHub.enabled=true
		org.openspcoop2.protocol.modipa.signalHub.seed.history=3

+ Aggiungere in /etc/hosts la riga
	127.0.0.1 Erogatore

+ Configurare in testsuite.properties i dati per l'accesso al db di govway
	- Copiare sotto la cartella jdbc il driver postgresql ( o quello del database utilizzato )

+ Modificare le properties del config_loader in modo che vengano caricate le policy utente.
	Impostare in <.../distrib/properties/config_loader.cli.properties>

		policy.enable=true
		plugin.enable=true
		configurazioneGenerale.enable=true

+ Compilare i test con
	ant build

+ Caricare la configurazione con 
	ant load_config
  dopo aver caricato la configurazione
	cd pkcs11
	bash updateCertificatiConfigurazione.sh <NOME_SOGGETTO>

+ Eseguire i test con
	ant run_test -Dload=false -Ddelete=false

  Per eseguire una sola feature
	ant run_test -Dload=false -Ddelete=false -Dkarate.options=test/rest/bloccante/idac02.feature

  Conviene specificare anche la classe di test con l'opzione <-Dtest> sotto la quale è presente la feature, es:
	ant run_test -Dload=false -Ddelete=false -Dtest=NonBloccanteRestTest -Dkarate.options=test/rest/non-bloccante/pull/pull.feature
  
  Per eseguire uno specifico scenario con un determinato tag usare fra le karate.options, l'opzione <--tags>, es:
	ant run_test -Dload=false -Ddelete=false -Dtest=NonBloccanteRestTest -Dkarate.options='test/rest/non-bloccante/pull/pull.feature --tags @test-ok'

  Per evitare la creazione e la cancellazione della configurazione di govway passare i parametri <-Dload=false> e <-Ddelete=false>

