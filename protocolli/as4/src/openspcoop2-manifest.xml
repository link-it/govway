<?xml version="1.0" encoding="UTF-8"?>
<openspcoop2 xmlns="http://www.openspcoop2.org/protocol/manifest">

    <protocol name="as4" label="eDelivery" 
    	descrizione="Scambio sicuro ed affidabile di dati e documenti tramite il profilo 'AS4' della specifica OASIS ebMS 3.0" 
    	webSite="https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery" logger="true">
    	<factory>org.openspcoop2.protocol.as4.AS4Factory</factory>
    	<transaction 
    		errorProtocol="true" envelopeErrorProtocol="true" labelErrorProtocol="Errore eDelivery"
    	/>
    </protocol>
    


    <binding default="rest">
    	<soap soap11="true" soap11_withAttachments="true" soap11_mtom="true"
    		  soap12="true" soap12_withAttachments="true" soap12_mtom="true">
    		<integration>
    		 	<implementation>
    		 		<name useInUrl="false">
    		 			<param actor="providerType" suffix="_"/>
    		 			<param actor="providerName" suffix="/"/>
    		 			<param actor="serviceType" suffix="_"/>
    		 			<param actor="serviceName" suffix="/"/>
    		 			<param actor="serviceVersion" prefix="v" />
    		 		</name>
					<resourceIdentification>
	    		 		<identificationModes forceInterfaceMode="false">
	    		 			<mode name="protocol" />
	    		 		</identificationModes>
						<specificResource>
							<name>
	    		 				<param prefix="__" actor="name" suffix="__"/>
	    		 				<param actor="ruleName" />
	    		 			</name>
	    		 		</specificResource>
	    		 	</resourceIdentification>
	    		 </implementation>
	    		 <subscription>
    		 		<name>
    		 			<param actor="subscriberType" suffix="_"/>
    		 			<param actor="subscriberName" suffix="/"/>
    		 			<param actor="providerType" suffix="_"/>
    		 			<param actor="providerName" suffix="/"/>
    		 			<param actor="serviceType" suffix="_"/>
    		 			<param actor="serviceName" suffix="/"/>
    		 			<param actor="serviceVersion" prefix="v" />
    		 		</name>
					<resourceIdentification>
	    		 		<identificationModes default="url" forceInterfaceMode="true">
	    		 			<mode name="interface" />
		    		 		<mode name="header" />
		    		 		<mode name="url" />
		    		 		<mode name="content" />
		    		 		<mode name="input" />
		    		 		<mode name="soapAction" />
	    		 		</identificationModes>
	    		 		<identificationParameter>
	    		 			<param prefix="/(?:" actor="subscriberType" suffix="_)?"/>
	    		 			<param actor="subscriberName" suffix="/"/>
	    		 			<param prefix="(?:" actor="providerType" suffix="_)?"/>
	    		 			<param actor="providerName" suffix="/"/>
	    		 			<param prefix="(?:" actor="serviceType" suffix="_)?"/>
	    		 			<param actor="serviceName" suffix="/"/>
	    		 			<param actor="serviceVersion" prefix="v" suffix="/([^/?]*).*"/>
	    		 		</identificationParameter>
						<specificResource>
							<name>
	    		 				<param prefix="__" actor="name" suffix="__"/>
	    		 				<param actor="ruleName" />
	    		 			</name>
	    		 		</specificResource>
	    		 	</resourceIdentification>
	    		 </subscription>
    		</integration>
    		<integrationError>
				<internal problemType="rfc7807">
    				<rfc7807 details="true" govwayStatus="true" govwayType="true" govwayTransactionId="true" instance="true" useAcceptHeader="true"/>
    				<authentication messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="401"/>
	    			</authentication>
	    			<authorization messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="403"/>
	    			</authorization>
	    			<notFound messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="404"/>
	    			</notFound>
	    			<badRequest messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="400"/>
	    			</badRequest>
	    			<conflict messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="409"/>
	    			</conflict>
	    			<requestTooLarge messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="413"/>
	    			</requestTooLarge>
	    			<limitExceeded messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="429"/>
	    			</limitExceeded>
	    			<tooManyRequests messageType="soapAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="500" govway="429"/>
	    			</tooManyRequests>
	    			<serviceUnavailable messageType="soapAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="500" govway="503"/>
	    			</serviceUnavailable>
	    		    <endpointRequestTimedOut messageType="soapAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="500" govway="504"/>
	    			</endpointRequestTimedOut>
	    			<badResponse messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="502"/> <!-- equivalente a bad request, quindi no retry, senno si usa internal response error -->
	    			</badResponse>
	    			<internalRequestError messageType="soapAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="500" govway="503"/>
	    			</internalRequestError>
	    			<internalResponseError messageType="soapAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="500" govway="502"/>
	    			</internalResponseError>
	    			<default messageType="none"  
	    				retry="false" errorMessage="generic"> <!-- se non sono riuscito a capire la versione soap, ritorno 500 senza alcun fault -->
	    				<errorCode http="500" govway="503"/>
	    			</default>
    			</internal>	
    			<external problemType="rfc7807" useInternalFault="true">
    				<rfc7807 details="true" govwayStatus="true" govwayType="true" govwayTransactionId="true" instance="true" useAcceptHeader="true"/>
    				<authentication messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="401"/>
	    			</authentication>
	    			<authorization messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="403"/>
	    			</authorization>
	    			<notFound messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="404"/>
	    			</notFound>
	    			<badRequest messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="400"/>
	    			</badRequest>
	    			<conflict messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="409"/>
	    			</conflict>
	    			<requestTooLarge messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="413"/>
	    			</requestTooLarge>
	    			<limitExceeded messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="429"/>
	    			</limitExceeded>
	    			<tooManyRequests messageType="soapAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="500" govway="429"/>
	    			</tooManyRequests>
	    			<serviceUnavailable messageType="soapAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="500" govway="503"/>
	    			</serviceUnavailable>
	    		    <endpointRequestTimedOut messageType="soapAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="500" govway="504"/>
	    			</endpointRequestTimedOut>
	    			<badResponse messageType="soapAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="500" govway="502"/> <!-- equivalente a bad request, quindi no retry, senno si usa internal response error -->
	    			</badResponse>
	    			<internalRequestError messageType="soapAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="500" govway="503"/>
	    			</internalRequestError>
	    			<internalResponseError messageType="soapAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="500" govway="502"/>
	    			</internalResponseError>
	    			<default messageType="none"  
	    				retry="false" errorMessage="generic"> <!-- se non sono riuscito a capire la versione soap, ritorno 500 senza alcun fault -->
	    				<errorCode http="500" govway="503"/>
	    			</default>
    			</external>	
    		</integrationError>
    		<mediaTypeCollection>
    			<mediaType messageType="soap11">text/xml</mediaType>
    			<default messageType="soap12"/>
    		</mediaTypeCollection>
    		<interfaces>
    			<specification type="wsdl11" />
    		</interfaces>
    		<profile oneway="true" inputOutput="false" asyncInputOutput="false" polledInputOutput="false" />
    		<functionality conversationIdentifier="true" referenceToRequestIdentifier="true"/>
    	</soap>
    	<rest xml="true" json="true" 
    		  binary="true" mimeMultipart="true">
    		  <integration>
    		 	<implementation>
    		 		<name useInUrl="false">
    		 			<param actor="providerType" suffix="_"/>
    		 			<param actor="providerName" suffix="/"/>
    		 			<param actor="serviceType" suffix="_"/>
    		 			<param actor="serviceName" suffix="/"/>
    		 			<param actor="serviceVersion" prefix="v" />
    		 		</name>
					<resourceIdentification>
	    		 		<identificationModes forceInterfaceMode="false">
	    		 			<mode name="protocol" />
	    		 		</identificationModes>
						<specificResource>
							<name>
	    		 				<param prefix="__" actor="name" suffix="__"/>
	    		 				<param actor="ruleName" />
	    		 			</name>
	    		 		</specificResource>
	    		 	</resourceIdentification>
	    		 </implementation>
	    		 <subscription>
    		 		<name>
    		 			<param actor="subscriberType" suffix="_"/>
    		 			<param actor="subscriberName" suffix="/"/>
    		 			<param actor="providerType" suffix="_"/>
    		 			<param actor="providerName" suffix="/"/>
    		 			<param actor="serviceType" suffix="_"/>
    		 			<param actor="serviceName" suffix="/"/>
    		 			<param actor="serviceVersion" prefix="v" />
    		 		</name>
					<resourceIdentification>
	    		 		<identificationModes default="interface" forceInterfaceMode="true">
	    		 			<mode name="interface" />
		    		 		<mode name="header" onlyAdvancedMode="true" />
		    		 		<mode name="content" onlyAdvancedMode="true" />
		    		 		<mode name="input" onlyAdvancedMode="true" />
	    		 		</identificationModes>
						<specificResource>
							<name>
	    		 				<param prefix="__" actor="name" suffix="__"/>
	    		 				<param actor="ruleName" />
	    		 			</name>
	    		 		</specificResource>
	    		 	</resourceIdentification>
	    		 </subscription>
    		</integration>
    		<integrationError>
    			<internal problemType="rfc7807">
    				<rfc7807 details="true" govwayStatus="true" govwayType="true" govwayTransactionId="true" instance="true" useAcceptHeader="true"/>
	    			<authentication messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="401" govway="401"/>
	    			</authentication>
	    			<authorization messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="403" govway="403"/>
	    			</authorization>
	    			<notFound messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="404" govway="404"/>
	    			</notFound>
	    			<badRequest messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="400" govway="400"/>
	    			</badRequest>
	    			<conflict messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="409" govway="409"/>
	    			</conflict>
	    			<requestTooLarge messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="413" govway="413"/>
	    			</requestTooLarge>
	    			<limitExceeded messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="429" govway="429"/>
	    			</limitExceeded>
	    			<tooManyRequests messageType="sameAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="429" govway="429"/>
	    			</tooManyRequests>
	    			<serviceUnavailable messageType="sameAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="503" govway="503"/>
	    			</serviceUnavailable>
	    		    <endpointRequestTimedOut messageType="sameAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="504" govway="504"/>
	    			</endpointRequestTimedOut>
	    			<badResponse messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="502" govway="502"/> <!-- equivalente a bad request, quindi no retry, senno si usa internal response error -->
	    			</badResponse>
	    			<internalRequestError messageType="sameAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="503" govway="503"/>
	    			</internalRequestError>
	    			<internalResponseError messageType="sameAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="502" govway="502"/>
	    			</internalResponseError>
	    			<default messageType="json" retry="false" errorMessage="generic">
	    				<errorCode http="503" govway="503"/>
	    			</default>
    			</internal>
    			<external problemType="rfc7807">
    				<rfc7807 details="true" govwayStatus="true" govwayType="true" govwayTransactionId="true" instance="true" useAcceptHeader="true"/>
	    			<authentication messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="401" govway="401"/>
	    			</authentication>
	    			<authorization messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="403" govway="403"/>
	    			</authorization>
	    			<notFound messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="404" govway="404"/>
	    			</notFound>
	    			<badRequest messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="400" govway="400"/>
	    			</badRequest>
	    			<conflict messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="409" govway="409"/>
	    			</conflict>
	    			<requestTooLarge messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="413" govway="413"/>
	    			</requestTooLarge>
	    			<limitExceeded messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="429" govway="429"/>
	    			</limitExceeded>
	    			<tooManyRequests messageType="sameAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="429" govway="429"/>
	    			</tooManyRequests>
	    			<serviceUnavailable messageType="sameAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="503" govway="503"/>
	    			</serviceUnavailable>
	    		    <endpointRequestTimedOut messageType="sameAsRequest" retry="true" errorMessage="specific">
	    				<errorCode http="504" govway="504"/>
	    			</endpointRequestTimedOut>
	    			<badResponse messageType="sameAsRequest" retry="false" errorMessage="specific">
	    				<errorCode http="502" govway="502"/> <!-- equivalente a bad request, quindi no retry, senno si usa internal response error -->
	    			</badResponse>
	    			<internalRequestError messageType="sameAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="503" govway="503"/>
	    			</internalRequestError>
	    			<internalResponseError messageType="sameAsRequest" retry="true" errorMessage="generic">
	    				<errorCode http="502" govway="502"/>
	    			</internalResponseError>
	    			<default messageType="json" retry="false" errorMessage="generic">
	    				<errorCode http="503" govway="503"/>
	    			</default>
    			</external>
    		</integrationError>
    		<mediaTypeCollection>
    			<mediaType messageType="xml">text/xml</mediaType>
    			<mediaType messageType="xml">application/xml</mediaType>
    			<mediaType messageType="xml" regExpr="true">.*\+xml</mediaType>
    			<mediaType messageType="json">text/json</mediaType>
				<mediaType messageType="json">text/x-json</mediaType>
    			<mediaType messageType="json">application/json</mediaType>
    			<mediaType messageType="json">application/x-json</mediaType>
    			<mediaType messageType="json" regExpr="true">.*\+json</mediaType>
    			<mediaType messageType="mimeMultipart" regExpr="true">multipart\/related*</mediaType>
    			<!-- https://swagger.io/docs/specification/describing-request-body/multipart-requests/ -->
    			<mediaType messageType="mimeMultipart" regExpr="true">multipart\/(form-data|mixed)+</mediaType>
    			<!-- rfc1341: mixed|alternative|digest|parallel -->
    			<mediaType messageType="mimeMultipart" regExpr="true">multipart\/(related|mixed|alternative|digest|parallel)+</mediaType>
    			<!-- rfc2616: byteranges -->
    			<mediaType messageType="mimeMultipart" regExpr="true">multipart\/byteranges*</mediaType>
    			<!-- rfc1847: encrypted|signed -->
    			<mediaType messageType="mimeMultipart" regExpr="true">multipart\/(encrypted|signed)+</mediaType>
    			<default messageType="binary"/>
    			<undefined messageType="binary"/>
    		</mediaTypeCollection>
    		<interfaces>
    			<specification type="wadl" />
    			<specification type="swagger2" />
    			<specification type="openApi3" />
    		</interfaces>
    		<profile oneway="true" />
    		<functionality conversationIdentifier="true" referenceToRequestIdentifier="true"/>
    	</rest>
    </binding>

    <web>
    
		<!-- Contesto api supporta sia soap che rest 
		     con il mapping definito a livello generare di binding -->
	    <context name="as4">
	    	<emptySubContext function="PA" messageType="soap12"/> <!-- es. http://server/govway/as4/in -->
	    </context>

    </web>

    <registry>

        <organization authentication="false" inboundApplicativeAuthentication="false">
            <types>
            	<type name="as4"/>
            </types>
        </organization>

        <service>
            <types>

                <!-- Il tipo AS4 è compatibile sia con soap che con rest -->
                <type name="as4"/>
                
            </types>
        </service>

        <versions>
        	<version name="1.0"/>
        </versions>

    </registry>

    <urlMapping type="PROPERTIES">
        <file>/as4-url-mapping.properties</file>
    </urlMapping>

</openspcoop2>
