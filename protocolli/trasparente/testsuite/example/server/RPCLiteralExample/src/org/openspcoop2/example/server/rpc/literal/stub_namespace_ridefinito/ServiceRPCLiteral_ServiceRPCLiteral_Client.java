/*
 * GovWay - A customizable API Gateway 
 * https://govway.org
 * 
 * Copyright (c) 2005-2024 Link.it srl (https://link.it).
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3, as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import java.util.GregorianCalendar;

import jakarta.xml.bind.JAXBElement;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.namespace.QName;
import jakarta.xml.ws.BindingProvider;

/**
 * This class was generated by Apache CXF 3.5.5
 * 2022-12-27T15:16:53.877+01:00
 * Generated source version: 3.5.5
 *
 */
public final class ServiceRPCLiteral_ServiceRPCLiteral_Client {

    private static final QName SERVICE_NAME = new QName("http://openspcoop2.org/ValidazioneContenutiWS/Service", "ServiceRPCLiteral");

    private ServiceRPCLiteral_ServiceRPCLiteral_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ServiceRPCLiteral_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        java.util.Properties reader = new java.util.Properties();
		try{  
			reader.load(new FileInputStream("Client.properties")); 
		}catch(java.io.IOException e) {
			System.err.println("ERROR : "+e.toString());
			return;
		}
        
		String endpoint = reader.getProperty("endpoint");
		if(endpoint == null){
			System.err.println("ERROR : Punto di Accesso del servizio non definito all'interno del file 'Client.properties'");
			return;
		}else{
			endpoint = endpoint.trim();
		}
		
		String username = reader.getProperty("username");
		if(username == null){
			System.err.println("ERROR : Username non definita all'interno del file 'Client.properties'");
			return;
		}else{
			username = username.trim();
		}
		
		String password = reader.getProperty("password");
		if(password == null){
			System.err.println("ERROR : Password non definita all'interno del file 'Client.properties'");
			return;
		}else{
			password = password.trim();
		}
        
        ServiceRPCLiteral_Service ss = new ServiceRPCLiteral_Service(wsdlURL, SERVICE_NAME);
        ServiceRPCLiteral port = ss.getServiceRPCLiteral();
        ((BindingProvider)port).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY,  endpoint);
        ((BindingProvider)port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY,  username);
    	((BindingProvider)port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY,  password);
        ((BindingProvider)port).getRequestContext().put("schema-validation-enabled", true);
        ((BindingProvider)port).getResponseContext().put("schema-validation-enabled", true);

        {
        System.out.println("Invoking rpclType...");
        org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.NominativoType _rpclType_nominativo = new NominativoType();
        _rpclType_nominativo.setRuolo("richiesta");
        _rpclType_nominativo.setValue("Andrea");
        java.lang.String _rpclType_indirizzo = "via di Test";
        GregorianCalendar c = new GregorianCalendar();
        c.setTime(new Date());
        javax.xml.datatype.XMLGregorianCalendar date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);
        javax.xml.datatype.XMLGregorianCalendar _rpclType_oraRegistrazione = date2;
        java.lang.String _rpclType_idstring = "Id-Req-1";
        int _rpclType_idint = 123;
        org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.EsitoType _rpclType__return = port.rpclType(_rpclType_nominativo, _rpclType_indirizzo, _rpclType_oraRegistrazione, _rpclType_idstring, _rpclType_idint);
        System.out.println("rpclType._rpclType_esito=" + _rpclType__return.code);
        System.out.println("rpclType._rpclType_esito.descr=" + _rpclType__return.reason);

        }
        {
        System.out.println("Invoking rpclElement...");
        ObjectFactory of = new ObjectFactory();
        org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.NominativoType _rpclElement_nominativoUtente_type = new NominativoType();
        _rpclElement_nominativoUtente_type.setRuolo("richiesta");
        _rpclElement_nominativoUtente_type.setValue("Andrea");
        JAXBElement<NominativoType> _rpclElement_nominativoUtente = of.createNominativo(_rpclElement_nominativoUtente_type);
        JAXBElement<String> _rpclElement_indirizzoUtente = of.createIndirizzo("via di Test");
        GregorianCalendar c = new GregorianCalendar();
        c.setTime(new Date());
        javax.xml.datatype.XMLGregorianCalendar date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);
        JAXBElement<javax.xml.datatype.XMLGregorianCalendar> _rpclElement_oraRegistrazioneUtente = of.createOraRegistrazione(date2);
        
        org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.EsitoType _rpclElement__return = port.rpclElement(_rpclElement_nominativoUtente, _rpclElement_indirizzoUtente, _rpclElement_oraRegistrazioneUtente);
        System.out.println("rpclElement._rpclElement_esitoRegistrazione=" + _rpclElement__return.code);
        System.out.println("rpclElement._rpclElement_esitoRegistrazione.descr=" + _rpclElement__return.reason);

        }
        {
        System.out.println("Invoking rpclXsitype...");
        org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.FixedMessaggioType _rpclXsitype_richiestaEsempioXSI = new FixedMessaggioType();
        _rpclXsitype_richiestaEsempioXSI.setDati("test");
        jakarta.xml.ws.Holder<org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.FixedMessaggioType> _rpclXsitype_rispostaEsempioXSI = new jakarta.xml.ws.Holder<org.openspcoop2.example.server.rpc.literal.stub_namespace_ridefinito.FixedMessaggioType>();
        jakarta.xml.ws.Holder<java.lang.String> _rpclXsitype_esito = new jakarta.xml.ws.Holder<java.lang.String>();
        port.rpclXsitype(_rpclXsitype_richiestaEsempioXSI, _rpclXsitype_rispostaEsempioXSI, _rpclXsitype_esito);

        System.out.println("rpclXsitype._rpclXsitype_rispostaEsempioXSI=" + _rpclXsitype_rispostaEsempioXSI.value.getDati());
        System.out.println("rpclXsitype._rpclXsitype_esito=" + _rpclXsitype_esito.value);

        }

        System.exit(0);
    }

}
