/*
 * GovWay - A customizable API Gateway 
 * https://govway.org
 * 
 * Copyright (c) 2005-2024 Link.it srl (https://link.it).
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3, as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.openspcoop2.example.server.rpc.literal.skeleton;

import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 3.5.5
 * 2022-12-27T14:48:04.029+01:00
 * Generated source version: 3.5.5
 *
 */

@javax.jws.WebService(
                      serviceName = "ServiceRPCLiteral",
                      portName = "ServiceRPCLiteral",
                      targetNamespace = "http://openspcoop2.org/ValidazioneContenutiWS/Service",
                      wsdlLocation = "classpath:config/rpcLiteralExample.wsdl",
                      endpointInterface = "org.openspcoop2.example.server.rpc.literal.skeleton.ServiceRPCLiteral")

public class ServiceRPCLiteralImpl implements ServiceRPCLiteral {

	public static boolean debug = true;
	
    private static final Logger LOG = Logger.getLogger(ServiceRPCLiteralImpl.class.getName());

    /* (non-Javadoc)
     * @see org.openspcoop2.example.server.rpc.literal.skeleton.ServiceRPCLiteral#rpclType(org.openspcoop2.example.server.rpc.literal.skeleton.NominativoType nominativo, java.lang.String indirizzo, javax.xml.datatype.XMLGregorianCalendar oraRegistrazione, java.lang.String idstring, int idint)*
     */
    @Override
	public org.openspcoop2.example.server.rpc.literal.skeleton.EsitoType rpclType(NominativoType nominativo, java.lang.String indirizzo, javax.xml.datatype.XMLGregorianCalendar oraRegistrazione, java.lang.String idstring, int idint) {
        if(debug) {
	    	LOG.info("Executing operation rpclType");
	        System.out.println("nominativo.ruolo:"+nominativo.ruolo);
	        System.out.println("nominativo.value:"+nominativo.value);
	        System.out.println("indirizzo:"+indirizzo);
	        System.out.println("oraRegistrazione:"+oraRegistrazione);
	        System.out.println("idstring:"+idstring);
	        System.out.println("idint:"+idint);
        }
        try {
            org.openspcoop2.example.server.rpc.literal.skeleton.EsitoType _return = new EsitoType();
            _return.setCode("OK");
            _return.setReason("Caso ok");
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see org.openspcoop2.example.server.rpc.literal.skeleton.ServiceRPCLiteral#rpclElement(org.openspcoop2.example.server.rpc.literal.skeleton.NominativoType nominativoUtente, java.lang.String indirizzoUtente, javax.xml.datatype.XMLGregorianCalendar oraRegistrazioneUtente)*
     */
    @Override
	public org.openspcoop2.example.server.rpc.literal.skeleton.EsitoType rpclElement(NominativoType nominativoUtente, java.lang.String indirizzoUtente, javax.xml.datatype.XMLGregorianCalendar oraRegistrazioneUtente) {
    	if(debug) {
	    	LOG.info("Executing operation rpclElement");
	        System.out.println("nominativoUtente.ruolo:"+nominativoUtente.ruolo);
	        System.out.println("nominativoUtente.value:"+nominativoUtente.value);
	        System.out.println("indirizzo:"+indirizzoUtente);
	        System.out.println("oraRegistrazioneUtente:"+oraRegistrazioneUtente);
    	}
        try {
            org.openspcoop2.example.server.rpc.literal.skeleton.EsitoType _return = new EsitoType();
            _return.setCode("OK");
            _return.setReason("Caso ok");
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see org.openspcoop2.example.server.rpc.literal.skeleton.ServiceRPCLiteral#rpclXsitype(org.openspcoop2.example.server.rpc.literal.skeleton.FixedMessaggioType richiestaEsempioXSI, org.openspcoop2.example.server.rpc.literal.skeleton.FixedMessaggioType rispostaEsempioXSI, java.lang.String esito)*
     */
    @Override
	public void rpclXsitype(FixedMessaggioType richiestaEsempioXSI, javax.xml.ws.Holder<FixedMessaggioType> rispostaEsempioXSI, javax.xml.ws.Holder<java.lang.String> esito) {
    	if(debug) {
    		LOG.info("Executing operation rpclXsitype");
    		System.out.println("richiestaEsempioXSI:"+richiestaEsempioXSI.dati);
    	}
        try {
            org.openspcoop2.example.server.rpc.literal.skeleton.FixedMessaggioType rispostaEsempioXSIValue = new FixedMessaggioType();
            rispostaEsempioXSIValue.dati = "test";
            rispostaEsempioXSI.value = rispostaEsempioXSIValue;
            java.lang.String esitoValue = "OK";
            esito.value = esitoValue;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
