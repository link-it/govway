/*
 * GovWay - A customizable API Gateway 
 * https://govway.org
 * 
 * Copyright (c) 2005-2024 Link.it srl (https://link.it).
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3, as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.openspcoop2.example.pdd.server.sdi.ricevi_file;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.math.BigInteger;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Logger;

import javax.jws.HandlerChain;
import javax.xml.datatype.DatatypeFactory;

import org.openspcoop2.utils.resources.FileSystemUtilities;

/**
 * This class was generated by Apache CXF 2.7.4
 * 2014-10-10T12:05:51.486+02:00
 * Generated source version: 2.7.4
 * 
 * @author Andrea Poli (apoli@link.it)
 * @author $Author$
 * @version $Rev$, $Date$
 */

@javax.jws.WebService(
                      serviceName = "SdIRiceviFile_service",
                      portName = "SdIRiceviFile_port",
                      targetNamespace = "http://www.fatturapa.gov.it/sdi/ws/trasmissione/v1.0",
                      wsdlLocation = "SdIRiceviFile_v1.0.wsdl",
                      endpointInterface = "org.openspcoop2.example.pdd.server.sdi.ricevi_file.SdIRiceviFile")
@HandlerChain(file="/handler-chain.xml")                        
public class SdIRiceviFileImpl implements SdIRiceviFile {

    private static final Logger LOG = Logger.getLogger(SdIRiceviFileImpl.class.getName());

    /* (non-Javadoc)
     * @see org.openspcoop2.example.pdd.server.sdi.ricevi_file.SdIRiceviFile#riceviFile(org.openspcoop2.example.pdd.server.sdi.ricevi_file.FileSdIBaseType  parametersIn )*
     */
    @Override
	public org.openspcoop2.example.pdd.server.sdi.ricevi_file.RispostaSdIRiceviFileType riceviFile(FileSdIBaseType parametersIn) { 
        SdIRiceviFileImpl.LOG.info("Executing operation riceviFile");
        System.out.println(parametersIn);
        try {
        	
        	System.out.println("NOME FILE: "+parametersIn.getNomeFile());
        	
        	ByteArrayOutputStream bout = new ByteArrayOutputStream();
        	bout.write(parametersIn.getFile());
        	bout.flush();
        	bout.close();
        	// Lo salvo sempre per poterlo confrontare con l'originale
//        	if(parametersIn.getNomeFile().endsWith("xml"))
//        		System.out.println("File: "+bout.toString());
//        	else{
    		File f = File.createTempFile("file", ".tmp");
    		FileSystemUtilities.writeFile(f, bout.toByteArray());
    		System.out.println("File received serialized in : "+f.getAbsolutePath());
//        	}
        	
        	java.util.Properties reader = new java.util.Properties();
    		try{  
    			reader.load(new FileInputStream("Server.properties")); 
    		}catch(java.io.IOException e) {
    			System.err.println("ERROR : "+e.toString());
    			throw e;
    		}
    		
            org.openspcoop2.example.pdd.server.sdi.ricevi_file.RispostaSdIRiceviFileType _return = new RispostaSdIRiceviFileType();
            
    		String identificativoSDI = reader.getProperty("identificativoSDI");
    		if(identificativoSDI==null){
    			throw new Exception("Property [identificativoSDI] not definded");
    		}
    		else{
    			identificativoSDI = identificativoSDI.trim();
    		}
            
            _return.setIdentificativoSdI(new BigInteger(identificativoSDI));
            _return.setDataOraRicezione(DatatypeFactory.newInstance().newXMLGregorianCalendar((GregorianCalendar)Calendar.getInstance()));
                		
    		String errore = reader.getProperty("errore");
    		if(errore!=null){
    			errore = errore.trim();
    			_return.setErrore(ErroreInvioType.fromValue(errore));
    		}
            
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
