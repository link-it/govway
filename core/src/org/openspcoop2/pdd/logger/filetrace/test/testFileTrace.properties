# Topic
topic.erogazioni=request,requestBody,response,responseBody,trackingPhaseInRequest,trackingPhaseOutRequest,trackingPhaseOutResponse,trackingPhasePostOutResponse,encJavaSymm,encJavaSymmHex,encJavaSymmInline,encJavaSymmBase64Inline,encJavaSymmOpenSSL,encJavaSymmPBKDF2,encJoseSymm,encJoseSymmDirect,encOpenSSLSymm,encOpenSSLSymmHex,encOpenSSLSymmPBKDF2,encOpenSSLSymmPBKDF2Hex,encOpenSSLSymmPBKDF2HexIter,encJavaJCEKS,encJoseJCEKS,encJoseJCEKSDirect,encJavaPublic,encJavaPublicInline,encJavaPublicWrapKey,encJavaPublicWrapKeyHex,encJavaPublicWrapKeyHexInline,encJosePublic,encJavaJWKsSymm,encJavaJWKsAsymm,encJoseJWKsSymm,encJoseJWKsAsymm,encJavaJKS,encJoseJKS,encJavaPKCS12,encJosePKCS12,encJavaPKCS11,encJosePKCS11
topic.fruizioni=request,requestBody,response,responseBody,trackingPhaseRequest,trackingPhaseResponse,encJavaSymm,encJavaSymmHex,encJavaSymmInline,encJavaSymmBase64Inline,encJavaSymmOpenSSL,encJavaSymmPBKDF2,encJoseSymm,encJoseSymmDirect,encOpenSSLSymm,encOpenSSLSymmHex,encOpenSSLSymmPBKDF2,encOpenSSLSymmPBKDF2Hex,encOpenSSLSymmPBKDF2HexIter,encJavaJCEKS,encJoseJCEKS,encJoseJCEKSDirect,encJavaPublic,encJavaPublicInline,encJavaPublicWrapKey,encJavaPublicWrapKeyHex,encJavaPublicWrapKeyHexInline,encJosePublic,encJavaJWKsSymm,encJavaJWKsAsymm,encJoseJWKsSymm,encJoseJWKsAsymm,encJavaJKS,encJoseJKS,encJavaPKCS12,encJosePKCS12,encJavaPKCS11,encJosePKCS11

# Topic personalizzazione
# sintassi: log.topic.<erogazioni/fruizioni>.<nomeTopic>.<nomeProprietà>=<valoreProprietà>
# Di seguito le proprietà utilizzabili:
# - requestSent (true/false): se abilitata il topic verrà invocato solamente se GovWay è riuscito a spedire la richiesta verso il backend
# - inRequestContentDefined (true/false): se abilitata il topic verrà invocato se la richiesta in ingresso possiede un payload http
# - outRequestContentDefined (true/false): se abilitata il topic verrà invocato se la richiesta in uscita possiede un payload http
# - inResponseContentDefined (true/false): se abilitata il topic verrà invocato se la risposta in ingresso possiede un payload http
# - inResponseContentDefined (true/false): se abilitata il topic verrà invocato se la risposta in uscita possiede un payload http

# I topic delle fruizioni devono essere invocati solamente se la richiesta è stata inoltrata al backend
topic.fruizioni.request.requestSent=true
topic.fruizioni.requestBody.requestSent=true
topic.fruizioni.response.requestSent=true
topic.fruizioni.responseBody.requestSent=true

# I topic delle richieste (body) devono essere invocati solamente se è presente un payload http 
topic.erogazioni.requestBody.inRequestContentDefined=true
topic.fruizioni.requestBody.outRequestContentDefined=true

# Test per le fasi
topic.erogazioni.trackingPhaseInRequest.trackingPhases=inRequest
topic.erogazioni.trackingPhaseOutRequest.trackingPhases=outRequest
topic.erogazioni.trackingPhaseOutResponse.trackingPhases=outResponse
topic.erogazioni.trackingPhasePostOutResponse.trackingPhases=postOutResponse
topic.fruizioni.trackingPhaseRequest.trackingPhases=inRequest,outRequest
topic.fruizioni.trackingPhaseResponse.trackingPhases=outResponse,postOutResponse


# *** LOG4J ***

# Log4j2 Configuration File
log.config.file=/org/openspcoop2/pdd/logger/filetrace/test/testfileTrace.log4j2.properties

# trace/debug/info/warn/error
log.severity=info

# Category per ogni topic delle erogazioni
# sintassi: log.topic.erogazioni.<nomeTopic>=<categoryLog4j2>
category.topic.erogazioni.request=fileTrace.request
category.topic.erogazioni.requestBody=fileTrace.requestBody
category.topic.erogazioni.response=fileTrace.response
category.topic.erogazioni.responseBody=fileTrace.responseBody
category.topic.erogazioni.trackingPhaseInRequest=fileTrace.trackingPhaseInRequest
category.topic.erogazioni.trackingPhaseOutRequest=fileTrace.trackingPhaseOutRequest
category.topic.erogazioni.trackingPhaseOutResponse=fileTrace.trackingPhaseOutResponse
category.topic.erogazioni.trackingPhasePostOutResponse=fileTrace.trackingPhasePostOutResponse
category.topic.erogazioni.encJavaSymm=fileTrace.encJavaSymm
category.topic.erogazioni.encJavaSymmHex=fileTrace.encJavaSymmHex
category.topic.erogazioni.encJavaSymmInline=fileTrace.encJavaSymmInline
category.topic.erogazioni.encJavaSymmBase64Inline=fileTrace.encJavaSymmBase64Inline
category.topic.erogazioni.encJavaSymmOpenSSL=fileTrace.encJavaSymmOpenSSL
category.topic.erogazioni.encJavaSymmPBKDF2=fileTrace.encJavaSymmPBKDF2
category.topic.erogazioni.encJoseSymm=fileTrace.encJoseSymm
category.topic.erogazioni.encJoseSymmDirect=fileTrace.encJoseSymmDirect
category.topic.erogazioni.encOpenSSLSymm=fileTrace.encOpenSSLSymm
category.topic.erogazioni.encOpenSSLSymmHex=fileTrace.encOpenSSLSymmHex
category.topic.erogazioni.encOpenSSLSymmPBKDF2=fileTrace.encOpenSSLSymmPBKDF2
category.topic.erogazioni.encOpenSSLSymmPBKDF2Hex=fileTrace.encOpenSSLSymmPBKDF2Hex
category.topic.erogazioni.encOpenSSLSymmPBKDF2HexIter=fileTrace.encOpenSSLSymmPBKDF2HexIter
category.topic.erogazioni.encJavaJCEKS=fileTrace.encJavaJCEKS
category.topic.erogazioni.encJoseJCEKS=fileTrace.encJoseJCEKS
category.topic.erogazioni.encJoseJCEKSDirect=fileTrace.encJoseJCEKSDirect
category.topic.erogazioni.encJavaPublic=fileTrace.encJavaPublic
category.topic.erogazioni.encJavaPublicInline=fileTrace.encJavaPublicInline
category.topic.erogazioni.encJavaPublicWrapKey=fileTrace.encJavaPublicWrapKey
category.topic.erogazioni.encJavaPublicWrapKeyHex=fileTrace.encJavaPublicWrapKeyHex
category.topic.erogazioni.encJavaPublicWrapKeyHexInline=fileTrace.encJavaPublicWrapKeyHexInline
category.topic.erogazioni.encJosePublic=fileTrace.encJosePublic
category.topic.erogazioni.encJavaJWKsSymm=fileTrace.encJavaJWKsSymm
category.topic.erogazioni.encJavaJWKsAsymm=fileTrace.encJavaJWKsAsymm
category.topic.erogazioni.encJoseJWKsSymm=fileTrace.encJoseJWKsSymm
category.topic.erogazioni.encJoseJWKsAsymm=fileTrace.encJoseJWKsAsymm
category.topic.erogazioni.encJavaJKS=fileTrace.encJavaJKS
category.topic.erogazioni.encJoseJKS=fileTrace.encJoseJKS
category.topic.erogazioni.encJavaPKCS12=fileTrace.encJavaPKCS12
category.topic.erogazioni.encJosePKCS12=fileTrace.encJosePKCS12
category.topic.erogazioni.encJavaPKCS11=fileTrace.encJavaPKCS11
category.topic.erogazioni.encJosePKCS11=fileTrace.encJosePKCS11

# Category per ogni topic delle fruizioni
# sintassi: log.topic.fruizioni.<nomeTopic>=<categoryLog4j2>
category.topic.fruizioni.request=fileTrace.request
category.topic.fruizioni.requestBody=fileTrace.requestBody
category.topic.fruizioni.response=fileTrace.response
category.topic.fruizioni.responseBody=fileTrace.responseBody
category.topic.fruizioni.trackingPhaseRequest=fileTrace.trackingPhaseRequest
category.topic.fruizioni.trackingPhaseResponse=fileTrace.trackingPhaseResponse
category.topic.fruizioni.encJavaSymm=fileTrace.encJavaSymm
category.topic.fruizioni.encJavaSymmHex=fileTrace.encJavaSymmHex
category.topic.fruizioni.encJavaSymmInline=fileTrace.encJavaSymmInline
category.topic.fruizioni.encJavaSymmBase64Inline=fileTrace.encJavaSymmBase64Inline
category.topic.fruizioni.encJavaSymmOpenSSL=fileTrace.encJavaSymmOpenSSL
category.topic.fruizioni.encJavaSymmPBKDF2=fileTrace.encJavaSymmPBKDF2
category.topic.fruizioni.encJoseSymm=fileTrace.encJoseSymm
category.topic.fruizioni.encJoseSymmDirect=fileTrace.encJoseSymmDirect
category.topic.fruizioni.encOpenSSLSymm=fileTrace.encOpenSSLSymm
category.topic.fruizioni.encOpenSSLSymmHex=fileTrace.encOpenSSLSymmHex
category.topic.fruizioni.encOpenSSLSymmPBKDF2=fileTrace.encOpenSSLSymmPBKDF2
category.topic.fruizioni.encOpenSSLSymmPBKDF2Hex=fileTrace.encOpenSSLSymmPBKDF2Hex
category.topic.fruizioni.encOpenSSLSymmPBKDF2HexIter=fileTrace.encOpenSSLSymmPBKDF2HexIter
category.topic.fruizioni.encJavaJCEKS=fileTrace.encJavaJCEKS
category.topic.fruizioni.encJoseJCEKS=fileTrace.encJoseJCEKS
category.topic.fruizioni.encJoseJCEKSDirect=fileTrace.encJoseJCEKSDirect
category.topic.fruizioni.encJavaPublic=fileTrace.encJavaPublic
category.topic.fruizioni.encJavaPublicInline=fileTrace.encJavaPublicInline
category.topic.fruizioni.encJavaPublicWrapKey=fileTrace.encJavaPublicWrapKey
category.topic.fruizioni.encJavaPublicWrapKeyHex=fileTrace.encJavaPublicWrapKeyHex
category.topic.fruizioni.encJavaPublicWrapKeyHexInline=fileTrace.encJavaPublicWrapKeyHexInline
category.topic.fruizioni.encJosePublic=fileTrace.encJosePublic
category.topic.fruizioni.encJavaJWKsSymm=fileTrace.encJavaJWKsSymm
category.topic.fruizioni.encJavaJWKsAsymm=fileTrace.encJavaJWKsAsymm
category.topic.fruizioni.encJoseJWKsSymm=fileTrace.encJoseJWKsSymm
category.topic.fruizioni.encJoseJWKsAsymm=fileTrace.encJoseJWKsAsymm
category.topic.fruizioni.encJavaJKS=fileTrace.encJavaJKS
category.topic.fruizioni.encJoseJKS=fileTrace.encJoseJKS
category.topic.fruizioni.encJavaPKCS12=fileTrace.encJavaPKCS12
category.topic.fruizioni.encJosePKCS12=fileTrace.encJosePKCS12
category.topic.fruizioni.encJavaPKCS11=fileTrace.encJavaPKCS11
category.topic.fruizioni.encJosePKCS11=fileTrace.encJosePKCS11



# *** FORMAT ***

# Escape dei caratteri speciali
# sintassi: format.escape.<CHAR>=<CHAR_ESCAPED>
# Per indicare i caratteri '=' e '\' usare l'escape '\' nel properties. 
# Ad esempio per fare l'escape del carattere '=':
# format.escape.\==\\\=
format.escape."=\\"

# Formato degli headers
#format.headers.separator=,
#format.headers.header.prefix=
#format.headers.header.suffix=
#format.headers.header.separator=


# Proprietà
# sintassi: format.property.<position>.<nomeProperty>=...
# Le proprietà  verranno risolte in ordine lessicografico di posizionamento; l'ordine è importante se si hanno proprietà  che sono definite tramite altre proprietà

# Header
format.property.000a.commons.headerRequestIn.selected="Req-In: ${log:removeInRequestHeader(Req-In)}"|"Req-In-2: ${log:removeInRequestHeader(Req-In-2)}"|"Content-XXX: ${log:inRequestHeader(Content-XXX)}"
format.property.000b.commons.headerRequestIn.other=${log:inRequestHeaders(\n,: ,,)}
format.property.000c.commons.headerRequestOut.selected="Req-Out: ${log:removeOutRequestHeader(Req-Out)}"|"Req-Out-2: ${log:removeOutRequestHeader(Req-Out-2)}"|"Content-XXX: ${log:outRequestHeader(Content-XXX)}"
format.property.000d.commons.headerRequestOut.other=${log:outRequestHeaders(\n,: ,,)}
format.property.000e.commons.headerResponseIn.selected="Res-In: ${log:removeInResponseHeader(Res-In)}"|"Res-In-2: ${log:removeInResponseHeader(Res-In-2)}"|"Content-XXX: ${log:inResponseHeader(Content-XXX)}"
format.property.000f.commons.headerResponseIn.other=${log:inResponseHeaders(\n,: ,,)}
format.property.000g.commons.headerResponseOut.selected="Res-Out: ${log:removeOutResponseHeader(Res-Out)}"|"Res-Out-2: ${log:removeOutResponseHeader(Res-Out-2)}"|"Content-XXX: ${log:outResponseHeader(Content-XXX)}"
format.property.000h.commons.headerResponseOut.other=${log:outResponseHeaders(\n,: ,,)}

format.property.000i.commons.headerRequest=${log:property(commons.headerRequestIn.selected)}|**HDR-REQ-IN**|${logBase64:property(commons.headerRequestIn.other)}|${log:property(commons.headerRequestOut.selected)}|**HDR-REQ-OUT**|${logBase64:property(commons.headerRequestOut.other)}
format.property.000l.commons.headerResponse=${log:property(commons.headerResponseIn.selected)}|**HDR-RES-IN**|${logBase64:property(commons.headerResponseIn.other)}|${log:property(commons.headerResponseOut.selected)}|**HDR-RES-OUT**|${logBase64:property(commons.headerResponseOut.other)}

# Informazioni comuni
format.property.001a.commons.server.ip=10.114.32.21
format.property.001b.commons.server.hostname=prova
format.property.001c.commons.server.port=8443
format.property.001d.commons.server.encoding=${log:javaProperty(file.encoding)}
format.property.001e.commons.user=${log:requestProperty(ProprietaTest)}

# Identificativo di transazione e applicativo
format.property.001f.commons.id="${log:transactionId}"|"${log:applicationId}"|"${log:javaProperty(javaProperty.1)}"|"${log:javaProperty(javaProperty.2)}"|"${log:systemProperty(FILETRACE-TEST-ENV)}"|"${log:systemProperty(FILETRACE-TEST-ENV2)}"
format.property.001g.commons.id.body=${log:transactionId}.${log:applicationId(****)}

# Data composta da due campi: Request Timestamp (UTC) e Local Time zone (ISO8601)
format.property.002a.commons.dataRichiestaErogazione="${log:inRequestDateZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:inRequestDate(Z)}"
format.property.002b.commons.dataRispostaErogazione="${log:outResponseDateZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:outResponseDate(Z)}"
format.property.002c.commons.dataRichiestaFruizione="${log:outRequestDateZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:outRequestDate(Z)}"
format.property.002d.commons.dataRispostaFruizione="${log:inResponseDateZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:inResponseDate(Z)}"

# Data base64 ISO8601 Request Time
format.property.003a.commons.dataRichiestaErogazioneBase64=${logBase64:inRequestDate(yyyy-MM-dd'T'HH:mm:ss.SSSZ)}
format.property.003b.commons.dataRispostaErogazioneBase64=${logBase64:outResponseDate(yyyy-MM-dd'T'HH:mm:ss.SSSZ)}
format.property.003c.commons.dataRichiestaFruizioneBase64=${logBase64:outRequestDate(yyyy-MM-dd'T'HH:mm:ss.SSSZ)}
format.property.003d.commons.dataRispostaFruizioneBase64=${logBase64:inResponseDate(yyyy-MM-dd'T'HH:mm:ss.SSSZ)}

# Remote IP - Protocol - Method
format.property.004a.commons.remoteIP-protocol-method="${log:clientIP}"|"${log:forwardedIP}"|"${log:requesterIP}"|"HTTP/1.1"|"${log:httpMethod}"

# URL Invocazione
format.property.005a.commons.urlErogazione="https://${log:property(commons.server.hostname)}:${log:property(commons.server.port)}${log:inURL}"
format.property.005b.commons.urlFruizione="${log:outURL}"

# Status Code
format.property.006a.commons.httpStatusErogazione="${log:outHttpStatus}"
format.property.006b.commons.httpStatusFruizione="${log:inHttpStatus}"
# Intestazioni HTTP Status per il file body response
format.property.006c.commons.httpStatusErogazione.body=HTTP/1.1 ${log:outHttpStatus} ${log:outHttpReason}
format.property.006d.commons.httpStatusFruizione.body=HTTP/1.1 ${log:inHttpStatus} ${log:inHttpReason}

# Elapsed Time espressi in microsecondi
format.property.007a.commons.elapsedTimeErogazione="${log:elapsedTimeUs}"
format.property.007b.commons.elapsedTimeFruizione="${log:apiElapsedTimeUs}"

# Altre date
format.property.008a.commons.dataRichiestaIngresso="${log:inRequestStartTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:inRequestEndTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"
format.property.008b.commons.dataRichiestaUscita="${log:outRequestStartTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:outRequestEndTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"
format.property.008c.commons.dataRispostaIngresso="${log:inResponseStartTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:inResponseEndTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"
format.property.008d.commons.dataRispostaUscita="${log:outResponseStartTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"|"${log:outResponseEndTimeZ(yyyy-MM-dd HH:mm:ss:SSS,UTC)}"
format.property.008e.commonds.date=${log:property(commons.dataRichiestaIngresso)}|${log:property(commons.dataRichiestaUscita)}|${log:property(commons.dataRispostaIngresso)}|${log:property(commons.dataRispostaUscita)}

# Campi Custom 'Liberi'
format.property.100a.custom.govway=versione_api = ${log:apiVersion}; api = ${log:api}; operazione = ${log:action}; erogatore = ${log:provider}; soggetto_fruitore = ${log:sender}; applicativo_fruitore = ${log:application}; id_messaggio_richiesta = ${log:requestId}; id_messaggio_risposta = ${log:responseId}; id_collaborazione = ${log:correlationId}; esito = ${log:result};

# Campi Custom da utilizzare per il log degli header e per la registrazione del file body response
format.property.101a.custom.headers="X-GovWay-APP-SERVER=${log:property(commons.server.ip)}"|"X-GovWay-HOSTNAME-APP-SERVER=${log:property(commons.server.hostname)}"|"X-GovWay-SERVER-ENCODING=${log:property(commons.server.encoding)}"|"X-GovWay-APP-SERVER-PORT=${log:property(commons.server.port)}"|"X-GovWay-USER=${log:property(commons.user)}"|"X-GovWay-COMPLEX=${log:property(custom.govway)}"
format.property.101b.custom.headers.body=X-GovWay-APP-SERVER: ${log:property(commons.server.ip)}\nX-GovWay-HOSTNAME-APP-SERVER: ${log:property(commons.server.hostname)}\nX-GovWay-SERVER-ENCODING: ${log:property(commons.server.encoding)}\nX-GovWay-APP-SERVER-PORT: ${log:property(commons.server.port)}\nX-GovWay-USER: ${log:property(commons.user)}\nX-GovWay-COMPLEX: ${log:property(custom.govway)}

# Headers complessivi per il file body response
format.property.102a.headers.erogazioneBody=${log:property(commons.httpStatusErogazione.body)}\n${log:outResponseHeaders(\n,: ,,)}\n${log:property(custom.headers.body)}
format.property.102b.headers.fruizioneBody=${log:property(commons.httpStatusFruizione.body)}\n${log:inResponseHeaders(\n,: ,,)}\n${log:property(custom.headers.body)}

# mittente
format.property.200.commons.mittente="${log:credentials}"|"${log:principal}"
format.property.201.commons.mittente.token="${log:tokenIssuer}"|"${log:tokenSubject}"|"${log:tokenClientId}"|"${log:tokenUsername}"|"${log:tokenMail}"|"${log:tokenClaim(iss)}"|"${log:tokenClaim(exp)}"
format.property.202.commons.mittente.tokenApplication="${log:tokenClientApplication}"|"${log:tokenClientOrganization}"
format.property.203.commons.mittente.application="${log:application}"|"${log:sender}"
format.property.204.commons.mittente.requester="${log:requester}"

# retrievedAccessToken
format.property.300.commons.retrievedTokenInfo="${log:retrievedAccessToken}"|"${log:retrievedTokenClaim(token_type)}"|"${log:retrievedTokenRequestTransactionId}"|"${log:retrievedTokenRequestGrantType}"|"${log:retrievedTokenRequestJwtClientAssertion}"|"${log:retrievedTokenRequestGrantType}"|"${log:retrievedTokenRequestClientId}"|"${log:retrievedTokenRequestClientToken}"|"${log:retrievedTokenRequestUsername}"|"${log:retrievedTokenRequestUrl}"

# tlsClient
format.property.401.commons.tlsClientInfo="${log:clientCertificateSubjectDN}"|"${log:clientCertificateSubjectCN}"|"${log:clientCertificateSubjectDNInfo(OU)}"|"${log:clientCertificateIssuerDN}"

# validazioneJWTAccesstoken
format.property.411.commons.jwtAccessTokenInfo="${log:tokenRaw}"|"${log:tokenHeaderRaw}"|"${logBase64:tokenDecodedHeader}"|"${log:tokenHeaderClaim(alg)}"|"${log:tokenHeaderClaims}"|"${log:tokenPayloadRaw}"|"${logBase64:tokenDecodedPayload}"|"${log:tokenPayloadClaim(aud)}"|"${log:tokenPayloadClaims}"
format.property.412.commons.jwtAccessTokenCertInfo="${log:tokenCertificateSubjectDN}"|"${log:tokenCertificateSubjectCN}"|"${log:tokenCertificateSubjectDNInfo(OU)}"|"${log:tokenCertificateIssuerDN}"

# ModI Authorization
format.property.421.commons.modiAuthorizationTokenInfo="${log:tokenModIAuthorizationRaw}"|"${log:tokenModIAuthorizationHeaderRaw}"|"${logBase64:tokenModIAuthorizationDecodedHeader}"|"${log:tokenModIAuthorizationHeaderClaim(alg)}"|"${log:tokenModIAuthorizationHeaderClaims}"|"${log:tokenModIAuthorizationPayloadRaw}"|"${logBase64:tokenModIAuthorizationDecodedPayload}"|"${log:tokenModIAuthorizationPayloadClaim(aud)}"|"${log:tokenModIAuthorizationPayloadClaims}"
format.property.422.commons.modiAuthorizationTokenCertInfo="${log:tokenModIAuthorizationCertificateSubjectDN}"|"${log:tokenModIAuthorizationCertificateSubjectCN}"|"${log:tokenModIAuthorizationCertificateSubjectDNInfo(OU)}"|"${log:tokenModIAuthorizationCertificateIssuerDN}"

# ModI Integrity
format.property.431.commons.modiIntegrityTokenInfo="${log:tokenModIIntegrityRaw}"|"${log:tokenModIIntegrityHeaderRaw}"|"${logBase64:tokenModIIntegrityDecodedHeader}"|"${log:tokenModIIntegrityHeaderClaim(alg)}"|"${log:tokenModIIntegrityHeaderClaims}"|"${log:tokenModIIntegrityPayloadRaw}"|"${logBase64:tokenModIIntegrityDecodedPayload}"|"${log:tokenModIIntegrityPayloadClaim(aud)}"|"${log:tokenModIIntegrityPayloadClaims}"
format.property.432.commons.modiIntegrityTokenCertInfo="${log:tokenModIIntegrityCertificateSubjectDN}"|"${log:tokenModIIntegrityCertificateSubjectCN}"|"${log:tokenModIIntegrityCertificateSubjectDNInfo(OU)}"|"${log:tokenModIIntegrityCertificateIssuerDN}"

# ModI Audit
format.property.441.commons.modiAuditTokenInfo="${log:tokenModIAuditRaw}"|"${log:tokenModIAuditHeaderRaw}"|"${logBase64:tokenModIAuditDecodedHeader}"|"${log:tokenModIAuditHeaderClaim(alg)}"|"${log:tokenModIAuditHeaderClaims}"|"${log:tokenModIAuditPayloadRaw}"|"${logBase64:tokenModIAuditDecodedPayload}"|"${log:tokenModIAuditPayloadClaim(aud)}"|"${log:tokenModIAuditPayloadClaims}"
format.property.442.commons.modiAuditTokenCertInfo="${log:tokenModIAuditCertificateSubjectDN}"|"${log:tokenModIAuditCertificateSubjectCN}"|"${log:tokenModIAuditCertificateSubjectDNInfo(OU)}"|"${log:tokenModIAuditCertificateIssuerDN}"

# ModI PDND
format.property.451.commons.modiPdndClient="${log:pdndClientJson}"|"${log:pdndClientId}"|"${log:pdndClientConsumerId}"
format.property.452.commons.modiPdndOrganization="${log:pdndOrganizationJson}"|"${log:pdndOrganizationName}"|"${log:pdndOrganizationId}"|"${log:pdndOrganizationCategory}"|"${log:pdndOrganizationExternalOrigin}"|"${log:pdndOrganizationExternalId}"



# Cifratura

# -- symm --

encrypt.modeJavaSymm.mode=java
encrypt.modeJavaSymm.keystore.type=symm
encrypt.modeJavaSymm.key.path=/tmp/symmetric.secretkey
encrypt.modeJavaSymm.key.algorithm=AES
encrypt.modeJavaSymm.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaSymm.encoding=base64

encrypt.modeJavaSymmHex.mode=java
encrypt.modeJavaSymmHex.keystore.type=symm
encrypt.modeJavaSymmHex.key.path=/tmp/symmetric.hexSecretkey
encrypt.modeJavaSymmHex.key.encoding=hex
encrypt.modeJavaSymmHex.key.algorithm=AES
encrypt.modeJavaSymmHex.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaSymmHex.encoding=base64

encrypt.modeJavaSymmInline.mode=java
encrypt.modeJavaSymmInline.keystore.type=symm
encrypt.modeJavaSymmInline.key.inline=${SECRET_KEY_JAVA_SYMM_INLINE}
encrypt.modeJavaSymmInline.key.algorithm=AES
encrypt.modeJavaSymmInline.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaSymmInline.encoding=base64

encrypt.modeJavaSymmBase64Inline.mode=java
encrypt.modeJavaSymmBase64Inline.keystore.type=symm
encrypt.modeJavaSymmBase64Inline.key.inline=${SECRET_KEY_JAVA_SYMM_BASE64_INLINE}
encrypt.modeJavaSymmBase64Inline.key.encoding=base64
encrypt.modeJavaSymmBase64Inline.key.algorithm=AES
encrypt.modeJavaSymmBase64Inline.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaSymmBase64Inline.encoding=base64

encrypt.modeJavaSymmOpenSSL.mode=java
encrypt.modeJavaSymmOpenSSL.keystore.type=pass
encrypt.modeJavaSymmOpenSSL.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeJavaSymmOpenSSL.password.type=openssl-aes-256-cbc
encrypt.modeJavaSymmOpenSSL.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaSymmOpenSSL.encoding=base64

encrypt.modeJavaSymmPBKDF2.mode=java
encrypt.modeJavaSymmPBKDF2.keystore.type=pass
encrypt.modeJavaSymmPBKDF2.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeJavaSymmPBKDF2.password.type=openssl-pbkdf2-aes-256-cbc
encrypt.modeJavaSymmPBKDF2.password.iter=3000
encrypt.modeJavaSymmPBKDF2.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaSymmPBKDF2.encoding=base64

encrypt.modeJoseSymm.mode=jose
encrypt.modeJoseSymm.keystore.type=symm
encrypt.modeJoseSymm.key.path=/tmp/symmetric.secretkey
encrypt.modeJoseSymm.key.id=myKEY
encrypt.modeJoseSymm.key.algorithm=A256KW
encrypt.modeJoseSymm.algorithm=A256GCM
encrypt.modeJoseSymm.include.cert=false
encrypt.modeJoseSymm.include.public.key=false
encrypt.modeJoseSymm.include.key.id=true
encrypt.modeJoseSymm.include.cert.sha1=false
#encrypt.modeJoseSymm.include.cert.sha256=false

encrypt.modeJoseSymmDirect.mode=jose
encrypt.modeJoseSymmDirect.keystore.type=symm
encrypt.modeJoseSymmDirect.key.path=/tmp/symmetric.secretkey
encrypt.modeJoseSymmDirect.key.algorithm=DIRECT
encrypt.modeJoseSymmDirect.algorithm=A256GCM
encrypt.modeJoseSymmDirect.include.cert=false
encrypt.modeJoseSymmDirect.include.public.key=false
encrypt.modeJoseSymmDirect.include.key.id=true
#encrypt.modeJoseSymmDirect.include.cert.sha1=false
encrypt.modeJoseSymmDirect.include.cert.sha256=false

encrypt.modeOpenSSLSymm.mode=openssl
encrypt.modeOpenSSLSymm.keystore.type=pass
encrypt.modeOpenSSLSymm.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeOpenSSLSymm.password.type=openssl-aes-256-cbc
encrypt.modeOpenSSLSymm.encoding=base64

encrypt.modeOpenSSLSymmHex.mode=openssl
encrypt.modeOpenSSLSymmHex.keystore.type=pass
encrypt.modeOpenSSLSymmHex.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeOpenSSLSymmHex.password.type=openssl-aes-256-cbc
encrypt.modeOpenSSLSymmHex.encoding=hex

encrypt.modeOpenSSLSymmPBKDF2.mode=openssl
encrypt.modeOpenSSLSymmPBKDF2.keystore.type=pass
encrypt.modeOpenSSLSymmPBKDF2.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeOpenSSLSymmPBKDF2.password.type=openssl-pbkdf2-aes-256-cbc
encrypt.modeOpenSSLSymmPBKDF2.encoding=base64

encrypt.modeOpenSSLSymmPBKDF2Hex.mode=openssl
encrypt.modeOpenSSLSymmPBKDF2Hex.keystore.type=pass
encrypt.modeOpenSSLSymmPBKDF2Hex.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeOpenSSLSymmPBKDF2Hex.password.type=openssl-pbkdf2-aes-128-cbc
encrypt.modeOpenSSLSymmPBKDF2Hex.encoding=hex

encrypt.modeOpenSSLSymmPBKDF2HexIter.mode=openssl
encrypt.modeOpenSSLSymmPBKDF2HexIter.keystore.type=pass
encrypt.modeOpenSSLSymmPBKDF2HexIter.password=${PASSWORD_OPENSSL_TEST}
encrypt.modeOpenSSLSymmPBKDF2HexIter.password.type=openssl-pbkdf2-aes-192-cbc
encrypt.modeOpenSSLSymmPBKDF2HexIter.password.iter=65535
encrypt.modeOpenSSLSymmPBKDF2HexIter.encoding=hex

encrypt.modeJavaJCEKS.mode=java
encrypt.modeJavaJCEKS.keystore.type=jceks
encrypt.modeJavaJCEKS.keystore.path=/tmp/keystore.jceks
encrypt.modeJavaJCEKS.keystore.password=123456
encrypt.modeJavaJCEKS.key.alias=openspcoop
encrypt.modeJavaJCEKS.key.algorithm=AES
encrypt.modeJavaJCEKS.key.password=key123456
encrypt.modeJavaJCEKS.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaJCEKS.encoding=hex

encrypt.modeJoseJCEKS.mode=jose
encrypt.modeJoseJCEKS.keystore.type=jceks
encrypt.modeJoseJCEKS.keystore.path=/tmp/keystore.jceks
encrypt.modeJoseJCEKS.keystore.password=123456
encrypt.modeJoseJCEKS.key.alias=openspcoop
encrypt.modeJoseJCEKS.key.password=key123456
encrypt.modeJoseJCEKS.key.algorithm=A256KW
encrypt.modeJoseJCEKS.algorithm=A256GCM
encrypt.modeJoseJCEKS.include.cert=false
encrypt.modeJoseJCEKS.include.public.key=false
encrypt.modeJoseJCEKS.include.key.id=true
encrypt.modeJoseJCEKS.include.cert.sha1=false
encrypt.modeJoseJCEKS.include.cert.sha256=false

encrypt.modeJoseJCEKSDirect.mode=jose
encrypt.modeJoseJCEKSDirect.keystore.type=jceks
encrypt.modeJoseJCEKSDirect.keystore.path=/tmp/keystore.jceks
encrypt.modeJoseJCEKSDirect.keystore.password=123456
encrypt.modeJoseJCEKSDirect.key.alias=openspcoop
encrypt.modeJoseJCEKSDirect.key.password=key123456
encrypt.modeJoseJCEKSDirect.key.algorithm=DIRECT
encrypt.modeJoseJCEKSDirect.algorithm=A256GCM
#encrypt.modeJoseJCEKSDirect.include.cert=false
#encrypt.modeJoseJCEKSDirect.include.public.key=false
#encrypt.modeJoseJCEKSDirect.include.key.id=false
encrypt.modeJoseJCEKSDirect.include.cert.sha1=false
encrypt.modeJoseJCEKSDirect.include.cert.sha256=false

encrypt.modeJavaPublic.mode=java
encrypt.modeJavaPublic.keystore.type=public
encrypt.modeJavaPublic.key.path=/tmp/publicKey.pem
encrypt.modeJavaPublic.key.algorithm=RSA
encrypt.modeJavaPublic.algorithm=RSA
encrypt.modeJavaPublic.encoding=base64

encrypt.modeJavaPublicInline.mode=java
encrypt.modeJavaPublicInline.keystore.type=public
encrypt.modeJavaPublicInline.key.inline=${PUBLIC_KEY_JAVA_INLINE}
encrypt.modeJavaPublicInline.key.algorithm=RSA
encrypt.modeJavaPublicInline.algorithm=RSA
encrypt.modeJavaPublicInline.encoding=base64

encrypt.modeJavaPublicWrapKey.mode=java
encrypt.modeJavaPublicWrapKey.keystore.type=public
encrypt.modeJavaPublicWrapKey.key.path=/tmp/publicKey.pem
encrypt.modeJavaPublicWrapKey.key.algorithm=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
encrypt.modeJavaPublicWrapKey.key.wrap=true
encrypt.modeJavaPublicWrapKey.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaPublicWrapKey.encoding=base64

encrypt.modeJavaPublicWrapKeyHex.mode=java
encrypt.modeJavaPublicWrapKeyHex.keystore.type=public
encrypt.modeJavaPublicWrapKeyHex.key.path=/tmp/publicKeyHex.pem
encrypt.modeJavaPublicWrapKeyHex.key.algorithm=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
encrypt.modeJavaPublicWrapKeyHex.key.encoding=hex
encrypt.modeJavaPublicWrapKeyHex.key.wrap=true
encrypt.modeJavaPublicWrapKeyHex.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaPublicWrapKeyHex.encoding=hex

encrypt.modeJavaPublicWrapKeyHexInline.mode=java
encrypt.modeJavaPublicWrapKeyHexInline.keystore.type=public
encrypt.modeJavaPublicWrapKeyHexInline.key.inline=${PUBLIC_KEY_JAVA_BASE64_INLINE}
encrypt.modeJavaPublicWrapKeyHexInline.key.algorithm=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
encrypt.modeJavaPublicWrapKeyHexInline.key.encoding=base64
encrypt.modeJavaPublicWrapKeyHexInline.key.wrap=true
encrypt.modeJavaPublicWrapKeyHexInline.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaPublicWrapKeyHexInline.encoding=hex

encrypt.modeJosePublic.mode=jose
encrypt.modeJosePublic.keystore.type=public
encrypt.modeJosePublic.key.path=/tmp/publicKey.pem
encrypt.modeJosePublic.key.id=myKEY
encrypt.modeJosePublic.key.algorithm=RSA-OAEP-256
encrypt.modeJosePublic.algorithm=A256GCM
encrypt.modeJosePublic.include.cert=false
encrypt.modeJosePublic.include.public.key=true
encrypt.modeJosePublic.include.key.id=true
encrypt.modeJosePublic.include.cert.sha1=false
encrypt.modeJosePublic.include.cert.sha256=false

encrypt.modeJavaJWKsSymm.mode=java
encrypt.modeJavaJWKsSymm.keystore.type=jwk
encrypt.modeJavaJWKsSymm.keystore.path=/tmp/symmetric.jwk
encrypt.modeJavaJWKsSymm.key.alias=openspcoop
encrypt.modeJavaJWKsSymm.key.algorithm=AES
encrypt.modeJavaJWKsSymm.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaJWKsSymm.encoding=base64

encrypt.modeJavaJWKsAsymm.mode=java
encrypt.modeJavaJWKsAsymm.keystore.type=jwk
encrypt.modeJavaJWKsAsymm.keystore.path=/tmp/public.jwk
encrypt.modeJavaJWKsAsymm.key.alias=openspcoop
encrypt.modeJavaJWKsAsymm.key.algorithm=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
encrypt.modeJavaJWKsAsymm.key.wrap=true
encrypt.modeJavaJWKsAsymm.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaJWKsAsymm.encoding=base64

encrypt.modeJoseJWKsSymm.mode=jose
encrypt.modeJoseJWKsSymm.keystore.type=jwk
encrypt.modeJoseJWKsSymm.keystore.path=/tmp/symmetric.jwk
encrypt.modeJoseJWKsSymm.key.alias=openspcoop
encrypt.modeJoseJWKsSymm.key.algorithm=A256KW
encrypt.modeJoseJWKsSymm.algorithm=A256GCM
encrypt.modeJoseJWKsSymm.include.cert=false
encrypt.modeJoseJWKsSymm.include.public.key=false
encrypt.modeJoseJWKsSymm.include.key.id=false
encrypt.modeJoseJWKsSymm.include.cert.sha1=false
encrypt.modeJoseJWKsSymm.include.cert.sha256=false

encrypt.modeJoseJWKsAsymm.mode=jose
encrypt.modeJoseJWKsAsymm.keystore.type=jwk
encrypt.modeJoseJWKsAsymm.keystore.path=/tmp/public.jwk
encrypt.modeJoseJWKsAsymm.key.alias=openspcoop
encrypt.modeJoseJWKsAsymm.key.algorithm=RSA-OAEP-256
encrypt.modeJoseJWKsAsymm.algorithm=A256GCM
encrypt.modeJoseJWKsAsymm.include.cert=false
encrypt.modeJoseJWKsAsymm.include.public.key=true
encrypt.modeJoseJWKsAsymm.include.key.id=true
encrypt.modeJoseJWKsAsymm.include.cert.sha1=false
encrypt.modeJoseJWKsAsymm.include.cert.sha256=false

encrypt.modeJavaJKS.mode=java
encrypt.modeJavaJKS.keystore.type=jks
encrypt.modeJavaJKS.keystore.path=/tmp/truststore.jks
encrypt.modeJavaJKS.keystore.password=123456
encrypt.modeJavaJKS.key.alias=openspcoop
encrypt.modeJavaJKS.key.algorithm=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
encrypt.modeJavaJKS.key.wrap=true
encrypt.modeJavaJKS.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaJKS.encoding=base64

encrypt.modeJoseJKS.mode=jose
encrypt.modeJoseJKS.keystore.type=jks
encrypt.modeJoseJKS.keystore.path=/tmp/truststore.jks
encrypt.modeJoseJKS.keystore.password=123456
encrypt.modeJoseJKS.key.alias=openspcoop
encrypt.modeJoseJKS.key.algorithm=RSA-OAEP-256
encrypt.modeJoseJKS.algorithm=A256GCM
encrypt.modeJoseJKS.include.cert=false
encrypt.modeJoseJKS.include.public.key=false
encrypt.modeJoseJKS.include.key.id=true
encrypt.modeJoseJKS.include.cert.sha1=true
encrypt.modeJoseJKS.include.cert.sha256=false

encrypt.modeJavaPKCS12.mode=java
encrypt.modeJavaPKCS12.keystore.type=pkcs12
encrypt.modeJavaPKCS12.keystore.path=/tmp/keystore.p12
encrypt.modeJavaPKCS12.keystore.password=123456
encrypt.modeJavaPKCS12.key.alias=openspcoop
encrypt.modeJavaPKCS12.key.algorithm=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
encrypt.modeJavaPKCS12.key.wrap=true
encrypt.modeJavaPKCS12.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaPKCS12.encoding=base64

encrypt.modeJosePKCS12.mode=jose
encrypt.modeJosePKCS12.keystore.type=pkcs12
encrypt.modeJosePKCS12.keystore.path=/tmp/keystore.p12
encrypt.modeJosePKCS12.keystore.password=123456
encrypt.modeJosePKCS12.key.alias=openspcoop
encrypt.modeJosePKCS12.key.algorithm=RSA-OAEP-256
encrypt.modeJosePKCS12.algorithm=A256GCM
encrypt.modeJosePKCS12.include.cert=false
encrypt.modeJosePKCS12.include.public.key=false
encrypt.modeJosePKCS12.include.key.id=true
encrypt.modeJosePKCS12.include.cert.sha1=false
encrypt.modeJosePKCS12.include.cert.sha256=true

encrypt.modeJavaPKCS11.mode=java
encrypt.modeJavaPKCS11.keystore.type=pkcs11-client1
encrypt.modeJavaPKCS11.key.alias=client1_hsm
encrypt.modeJavaPKCS11.key.algorithm=RSA/ECB/PKCS1Padding
encrypt.modeJavaPKCS11.key.wrap=true
encrypt.modeJavaPKCS11.algorithm=AES/CBC/PKCS5Padding
encrypt.modeJavaPKCS11.encoding=base64

encrypt.modeJosePKCS11.mode=jose
encrypt.modeJosePKCS11.keystore.type=pkcs11-client1
encrypt.modeJosePKCS11.key.alias=client1_hsm
encrypt.modeJosePKCS11.key.algorithm=RSA1_5
encrypt.modeJosePKCS11.algorithm=A256GCM
encrypt.modeJosePKCS11.include.cert=false
encrypt.modeJosePKCS11.include.public.key=false
encrypt.modeJosePKCS11.include.key.id=true
encrypt.modeJosePKCS11.include.cert.sha1=false
encrypt.modeJosePKCS11.include.cert.sha256=false



format.encryptedProperty.501.esempioDatoCifrato.encJavaSymm=encJavaSymm|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.501.esempioDatoCifrato.encJavaSymm=modeJavaSymm

format.encryptedProperty.501a.esempioDatoCifrato.encJavaSymmHex=encJavaSymmHex|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.501a.esempioDatoCifrato.encJavaSymmHex=modeJavaSymmHex

format.encryptedProperty.501b.esempioDatoCifrato.encJavaSymmInline=encJavaSymmInline|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.501b.esempioDatoCifrato.encJavaSymmInline=modeJavaSymmInline

format.encryptedProperty.501c.esempioDatoCifrato.encJavaSymmBase64Inline=encJavaSymmBase64Inline|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.501c.esempioDatoCifrato.encJavaSymmBase64Inline=modeJavaSymmBase64Inline

format.encryptedProperty.501d.esempioDatoCifrato.encJavaSymmOpenSSL=encJavaSymmOpenSSL|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.501d.esempioDatoCifrato.encJavaSymmOpenSSL=modeJavaSymmOpenSSL

format.encryptedProperty.501e.esempioDatoCifrato.encJavaSymmPBKDF2=encJavaSymmPBKDF2|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.501e.esempioDatoCifrato.encJavaSymmPBKDF2=modeJavaSymmPBKDF2

format.encryptedProperty.502a.esempioDatoCifrato.encJoseSymm=${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.502a.esempioDatoCifrato.encJoseSymm=modeJoseSymm
format.property.502b.esempio.encJoseSymm=encJoseSymm|${log:property(esempioDatoCifrato.encJoseSymm)}

format.encryptedProperty.503.esempioDatoCifrato.encJoseSymmDirect=encJoseSymmDirect|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.503.esempioDatoCifrato.encJoseSymmDirect=modeJoseSymmDirect

format.encryptedProperty.5031.esempioDatoCifrato.encOpenSSLSymm=encOpenSSLSymm|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.5031.esempioDatoCifrato.encOpenSSLSymm=modeOpenSSLSymm

format.encryptedProperty.5031a.esempioDatoCifrato.encOpenSSLSymmHex=encOpenSSLSymmHex|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.5031a.esempioDatoCifrato.encOpenSSLSymmHex=modeOpenSSLSymmHex

format.encryptedProperty.5031b.esempioDatoCifrato.encOpenSSLSymmPBKDF2=encOpenSSLSymmPBKDF2|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.5031b.esempioDatoCifrato.encOpenSSLSymmPBKDF2=modeOpenSSLSymmPBKDF2

format.encryptedProperty.5031c.esempioDatoCifrato.encOpenSSLSymmPBKDF2Hex=encOpenSSLSymmPBKDF2Hex|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.5031c.esempioDatoCifrato.encOpenSSLSymmPBKDF2Hex=modeOpenSSLSymmPBKDF2Hex

format.encryptedProperty.5031d.esempioDatoCifrato.encOpenSSLSymmPBKDF2HexIter=encOpenSSLSymmPBKDF2HexIter|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.5031d.esempioDatoCifrato.encOpenSSLSymmPBKDF2HexIter=modeOpenSSLSymmPBKDF2HexIter

format.encryptedProperty.504.esempioDatoCifrato.encJavaJCEKS=encJavaJCEKS|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.504.esempioDatoCifrato.encJavaJCEKS=modeJavaJCEKS

format.encryptedProperty.505.esempioDatoCifrato.encJoseJCEKS=encJoseJCEKS|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.505.esempioDatoCifrato.encJoseJCEKS=modeJoseJCEKS

format.encryptedProperty.506.esempioDatoCifrato.encJoseJCEKSDirect=encJoseJCEKSDirect|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.506.esempioDatoCifrato.encJoseJCEKSDirect=modeJoseJCEKSDirect

# solo RSA supporta una stringa corta di dati da cifrare; se troppo lunga si ha l'errore: 'too much data for RSA block'
format.encryptedProperty.507.esempioDatoCifrato.encJavaPublic=encJavaPublic|informazioneCorta
format.encrypt.507.esempioDatoCifrato.encJavaPublic=modeJavaPublic

format.encryptedProperty.507a.esempioDatoCifrato.encJavaPublicInline=encJavaPublicInline|informazioneCorta
format.encrypt.507a.esempioDatoCifrato.encJavaPublicInline=modeJavaPublicInline

format.encryptedProperty.508.esempioDatoCifrato.encJavaPublicWrapKey=encJavaPublicWrapKey|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.508.esempioDatoCifrato.encJavaPublicWrapKey=modeJavaPublicWrapKey

format.encryptedProperty.509.esempioDatoCifrato.encJavaPublicWrapKeyHex=encJavaPublicWrapKeyHex|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.509.esempioDatoCifrato.encJavaPublicWrapKeyHex=modeJavaPublicWrapKeyHex

format.encryptedProperty.509a.esempioDatoCifrato.encJavaPublicWrapKeyHexInline=encJavaPublicWrapKeyHexInline|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.509a.esempioDatoCifrato.encJavaPublicWrapKeyHexInline=modeJavaPublicWrapKeyHexInline

format.encryptedProperty.510.esempioDatoCifrato.encJosePublic=encJosePublic|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.510.esempioDatoCifrato.encJosePublic=modeJosePublic

format.encryptedProperty.511.esempioDatoCifrato.encJavaJWKsSymm=encJavaJWKsSymm|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.511.esempioDatoCifrato.encJavaJWKsSymm=modeJavaJWKsSymm

format.encryptedProperty.512.esempioDatoCifrato.encJavaJWKsAsymm=encJavaJWKsAsymm|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.512.esempioDatoCifrato.encJavaJWKsAsymm=modeJavaJWKsAsymm

format.encryptedProperty.513.esempioDatoCifrato.encJoseJWKsSymm=encJoseJWKsSymm|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.513.esempioDatoCifrato.encJoseJWKsSymm=modeJoseJWKsSymm

format.encryptedProperty.514.esempioDatoCifrato.encJoseJWKsAsymm=encJoseJWKsAsymm|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.514.esempioDatoCifrato.encJoseJWKsAsymm=modeJoseJWKsAsymm

format.encryptedProperty.515.esempioDatoCifrato.encJavaJKS=encJavaJKS|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.515.esempioDatoCifrato.encJavaJKS=modeJavaJKS

format.encryptedProperty.516.esempioDatoCifrato.encJoseJKS=encJoseJKS|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.516.esempioDatoCifrato.encJoseJKS=modeJoseJKS

format.encryptedProperty.517.esempioDatoCifrato.encJavaPKCS12=encJavaPKCS12|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.517.esempioDatoCifrato.encJavaPKCS12=modeJavaPKCS12

format.encryptedProperty.518.esempioDatoCifrato.encJosePKCS12=encJosePKCS12|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.518.esempioDatoCifrato.encJosePKCS12=modeJosePKCS12

format.encryptedProperty.519.esempioDatoCifrato.encJavaPKCS11=encJavaPKCS11|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.519.esempioDatoCifrato.encJavaPKCS11=modeJavaPKCS11

format.encryptedProperty.520.esempioDatoCifrato.encJosePKCS11=encJosePKCS11|${log:property(commons.headerRequest)}|${log:property(commons.headerResponse)}
format.encrypt.520.esempioDatoCifrato.encJosePKCS11=modeJosePKCS11







# Formato del log per ogni topic

# EROGAZIONI-RICHIESTA
format.topic.erogazioni.request="${log:inFunction}"|"${log:apiProtocol}"|"${log:role}"|"esempioCostanteRichiestaErogazione"|${log:property(commons.id)}|${log:property(commons.dataRichiestaErogazione)}|${log:property(commons.remoteIP-protocol-method)}|${log:property(commons.mittente)}|${log:property(commons.mittente.token)}|${log:property(commons.mittente.tokenApplication)}|${log:property(commons.mittente.application)}|${log:property(commons.mittente.requester)}|${log:property(commons.urlErogazione)}|"${log:inRequestContentType}"|"${log:inRequestSize}"|"HEADERS"|${log:inRequestHeaders(|,=,",")}|"${log:attribute(a1)}"|"${log:attribute(a2)}"|${log:property(commons.retrievedTokenInfo)}|${log:property(commons.tlsClientInfo)}|${log:property(commons.jwtAccessTokenInfo)}|${log:property(commons.jwtAccessTokenCertInfo)}|${log:property(commons.modiAuthorizationTokenInfo)}|${log:property(commons.modiAuthorizationTokenCertInfo)}|${log:property(commons.modiIntegrityTokenInfo)}|${log:property(commons.modiIntegrityTokenCertInfo)}|${log:property(commons.modiAuditTokenInfo)}|${log:property(commons.modiAuditTokenCertInfo)}|${log:property(commons.modiPdndClient)}|${log:property(commons.modiPdndOrganization)}|${log:property(commonds.date)}
format.topic.erogazioni.requestBody=${log:property(commons.id.body)}.${log:property(commons.dataRichiestaErogazioneBase64)}.${logBase64:inRequestContentType}.${logBase64:inRequestContent}

# EROGAZIONI-RISPOSTA
format.topic.erogazioni.response="esempioCostanteRispostaErogazione"|"${log:token}"|${log:property(commons.id)}|${log:property(commons.dataRispostaErogazione)}|${log:property(commons.remoteIP-protocol-method)}|${log:property(commons.urlErogazione)}|${log:property(commons.httpStatusErogazione)}|${log:property(commons.elapsedTimeErogazione)}|"${log:outResponseContentType}"|"${log:outResponseSize}"|"HEADERS"|${log:outResponseHeaders(|,=,",")}|${log:property(custom.headers)}
format.topic.erogazioni.responseBody=${log:property(commons.id.body)}.${log:property(commons.dataRispostaErogazioneBase64)}.${logBase64:property(headers.erogazioneBody)}.${logBase64:outResponseContent}

# FRUIZIONE-RICHIESTA
format.topic.fruizioni.request="${log:inFunction}"|"${log:apiProtocol}"|"${log:role}"|"esempioCostanteRichiestaFruizione"|${log:property(commons.id)}|${log:property(commons.dataRichiestaFruizione)}|${log:property(commons.remoteIP-protocol-method)}|${log:property(commons.mittente)}|${log:property(commons.mittente.token)}|${log:property(commons.mittente.tokenApplication)}|${log:property(commons.mittente.application)}|${log:property(commons.mittente.requester)}|${log:property(commons.urlFruizione)}|"${log:outRequestContentType}"|"${log:outRequestSize}"|"HEADERS"|${log:outRequestHeaders(|,=,",")}|"${log:attributeByAA(AA1,a1)}"|"${log:attributeByAA(AA2,a2)}"|${log:property(commons.retrievedTokenInfo)}|${log:property(commons.tlsClientInfo)}|${log:property(commons.jwtAccessTokenInfo)}|${log:property(commons.jwtAccessTokenCertInfo)}|${log:property(commons.modiAuthorizationTokenInfo)}|${log:property(commons.modiAuthorizationTokenCertInfo)}|${log:property(commons.modiIntegrityTokenInfo)}|${log:property(commons.modiIntegrityTokenCertInfo)}|${log:property(commons.modiAuditTokenInfo)}|${log:property(commons.modiAuditTokenCertInfo)}|${log:property(commons.modiPdndClient)}|${log:property(commons.modiPdndOrganization)}|${log:property(commonds.date)}
format.topic.fruizioni.requestBody=${log:property(commons.id.body)}.${log:property(commons.dataRichiestaFruizioneBase64)}.${logBase64:outRequestContentType}.${logBase64:outRequestContent}

# FRUIZIONE-RISPOSTA
format.topic.fruizioni.response="esempioCostanteRispostaFruizione"|"${log:token}"|${log:property(commons.id)}|${log:property(commons.dataRispostaFruizione)}|${log:property(commons.remoteIP-protocol-method)}|${log:property(commons.urlFruizione)}|${log:property(commons.httpStatusFruizione)}|${log:property(commons.elapsedTimeFruizione)}|"${log:inResponseContentType}"|"${log:inResponseSize}"|"HEADERS"|${log:inResponseHeaders(|,=,",")}|${log:property(custom.headers)}
format.topic.fruizioni.responseBody=${log:property(commons.id.body)}.${log:property(commons.dataRispostaFruizioneBase64)}.${logBase64:property(headers.fruizioneBody)}.${logBase64:inResponseContent}

# EROGAZIONI TEST FASE
format.topic.erogazioni.trackingPhaseInRequest="*FASE_${log:trackingPhase}*"|"${log:contextProperty(TRACKING_PHASE)}"|${log:property(commons.id)}
format.topic.erogazioni.trackingPhaseOutRequest="*FASE_${log:trackingPhase}*"|"${log:contextProperty(TRACKING_PHASE)}"|${log:property(commons.id)}
format.topic.erogazioni.trackingPhaseOutResponse="*FASE_${log:trackingPhase}*"|"${log:contextProperty(TRACKING_PHASE)}"|${log:property(commons.id)}
format.topic.erogazioni.trackingPhasePostOutResponse="*FASE_${log:trackingPhase}*"|"${log:contextProperty(TRACKING_PHASE)}"|${log:property(commons.id)}

# FRUIZIONE TEST FASE
format.topic.fruizioni.trackingPhaseRequest="*FASE_REQUEST*"|"${log:contextProperty(TRACKING_PHASE)}"|${log:property(commons.id)}
format.topic.fruizioni.trackingPhaseResponse="*FASE_RESPONSE*"|"${log:contextProperty(TRACKING_PHASE)}"|${log:property(commons.id)}

# ENC JAVA SYMM
format.topic.erogazioni.encJavaSymm=${log:property(esempioDatoCifrato.encJavaSymm)}
format.topic.fruizioni.encJavaSymm=${log:property(esempioDatoCifrato.encJavaSymm)}

# ENC JAVA SYMM HEX
format.topic.erogazioni.encJavaSymmHex=${log:property(esempioDatoCifrato.encJavaSymmHex)}
format.topic.fruizioni.encJavaSymmHex=${log:property(esempioDatoCifrato.encJavaSymmHex)}

# ENC JAVA SYMM INLINE
format.topic.erogazioni.encJavaSymmInline=${log:property(esempioDatoCifrato.encJavaSymmInline)}
format.topic.fruizioni.encJavaSymmInline=${log:property(esempioDatoCifrato.encJavaSymmInline)}

# ENC JAVA SYMM BASE64 INLINE
format.topic.erogazioni.encJavaSymmBase64Inline=${log:property(esempioDatoCifrato.encJavaSymmBase64Inline)}
format.topic.fruizioni.encJavaSymmBase64Inline=${log:property(esempioDatoCifrato.encJavaSymmBase64Inline)}

# ENC JAVA SYMM OPENSSL
format.topic.erogazioni.encJavaSymmOpenSSL=${log:property(esempioDatoCifrato.encJavaSymmOpenSSL)}
format.topic.fruizioni.encJavaSymmOpenSSL=${log:property(esempioDatoCifrato.encJavaSymmOpenSSL)}

# ENC JAVA SYMM BKDF2
format.topic.erogazioni.encJavaSymmPBKDF2=${log:property(esempioDatoCifrato.encJavaSymmPBKDF2)}
format.topic.fruizioni.encJavaSymmPBKDF2=${log:property(esempioDatoCifrato.encJavaSymmPBKDF2)}

# ENC JOSE SYMM
format.topic.erogazioni.encJoseSymm=${log:property(esempio.encJoseSymm)}
format.topic.fruizioni.encJoseSymm=${log:property(esempio.encJoseSymm)}

# ENC JOSE SYMM DIRECT
format.topic.erogazioni.encJoseSymmDirect=${log:property(esempioDatoCifrato.encJoseSymmDirect)}
format.topic.fruizioni.encJoseSymmDirect=${log:property(esempioDatoCifrato.encJoseSymmDirect)}

# ENC OPENSSL SYMM
format.topic.erogazioni.encOpenSSLSymm=${log:property(esempioDatoCifrato.encOpenSSLSymm)}
format.topic.fruizioni.encOpenSSLSymm=${log:property(esempioDatoCifrato.encOpenSSLSymm)}

# ENC OPENSSL SYMM HEX
format.topic.erogazioni.encOpenSSLSymmHex=${log:property(esempioDatoCifrato.encOpenSSLSymmHex)}
format.topic.fruizioni.encOpenSSLSymmHex=${log:property(esempioDatoCifrato.encOpenSSLSymmHex)} 

# ENC OPENSSL SYMM PBKDF2
format.topic.erogazioni.encOpenSSLSymmPBKDF2=${log:property(esempioDatoCifrato.encOpenSSLSymmPBKDF2)}
format.topic.fruizioni.encOpenSSLSymmPBKDF2=${log:property(esempioDatoCifrato.encOpenSSLSymmPBKDF2)} 

# ENC OPENSSL SYMM PBKDF2 HEX
format.topic.erogazioni.encOpenSSLSymmPBKDF2Hex=${log:property(esempioDatoCifrato.encOpenSSLSymmPBKDF2Hex)}
format.topic.fruizioni.encOpenSSLSymmPBKDF2Hex=${log:property(esempioDatoCifrato.encOpenSSLSymmPBKDF2Hex)} 

# ENC OPENSSL SYMM PBKDF2 HEX ITERATION
format.topic.erogazioni.encOpenSSLSymmPBKDF2HexIter=${log:property(esempioDatoCifrato.encOpenSSLSymmPBKDF2HexIter)}
format.topic.fruizioni.encOpenSSLSymmPBKDF2HexIter=${log:property(esempioDatoCifrato.encOpenSSLSymmPBKDF2HexIter)} 

# ENC JAVA JCEKS
format.topic.erogazioni.encJavaJCEKS=${log:property(esempioDatoCifrato.encJavaJCEKS)}
format.topic.fruizioni.encJavaJCEKS=${log:property(esempioDatoCifrato.encJavaJCEKS)}

# ENC JOSE JCEKS
format.topic.erogazioni.encJoseJCEKS=${log:property(esempioDatoCifrato.encJoseJCEKS)}
format.topic.fruizioni.encJoseJCEKS=${log:property(esempioDatoCifrato.encJoseJCEKS)}

# ENC JOSE JCEKS DIRECT
format.topic.erogazioni.encJoseJCEKSDirect=${log:property(esempioDatoCifrato.encJoseJCEKSDirect)}
format.topic.fruizioni.encJoseJCEKSDirect=${log:property(esempioDatoCifrato.encJoseJCEKSDirect)}

# ENC JAVA PUBLIC
format.topic.erogazioni.encJavaPublic=${log:property(esempioDatoCifrato.encJavaPublic)}
format.topic.fruizioni.encJavaPublic=${log:property(esempioDatoCifrato.encJavaPublic)}

# ENC JAVA PUBLIC INLINE
format.topic.erogazioni.encJavaPublicInline=${log:property(esempioDatoCifrato.encJavaPublicInline)}
format.topic.fruizioni.encJavaPublicInline=${log:property(esempioDatoCifrato.encJavaPublicInline)}

# ENC JAVA PUBLIC WRAP KEY
format.topic.erogazioni.encJavaPublicWrapKey=${log:property(esempioDatoCifrato.encJavaPublicWrapKey)}
format.topic.fruizioni.encJavaPublicWrapKey=${log:property(esempioDatoCifrato.encJavaPublicWrapKey)}

# ENC JAVA PUBLIC WRAP KEY HEX
format.topic.erogazioni.encJavaPublicWrapKeyHex=${log:property(esempioDatoCifrato.encJavaPublicWrapKeyHex)}
format.topic.fruizioni.encJavaPublicWrapKeyHex=${log:property(esempioDatoCifrato.encJavaPublicWrapKeyHex)}

# ENC JAVA PUBLIC WRAP KEY HEX INLINE
format.topic.erogazioni.encJavaPublicWrapKeyHexInline=${log:property(esempioDatoCifrato.encJavaPublicWrapKeyHexInline)}
format.topic.fruizioni.encJavaPublicWrapKeyHexInline=${log:property(esempioDatoCifrato.encJavaPublicWrapKeyHexInline)}

# ENC JOSE PUBLIC
format.topic.erogazioni.encJosePublic=${log:property(esempioDatoCifrato.encJosePublic)}
format.topic.fruizioni.encJosePublic=${log:property(esempioDatoCifrato.encJosePublic)}

# ENC JAVA JWK SYMM
format.topic.erogazioni.encJavaJWKsSymm=${log:property(esempioDatoCifrato.encJavaJWKsSymm)}
format.topic.fruizioni.encJavaJWKsSymm=${log:property(esempioDatoCifrato.encJavaJWKsSymm)}

# ENC JAVA JWK ASYMM
format.topic.erogazioni.encJavaJWKsAsymm=${log:property(esempioDatoCifrato.encJavaJWKsAsymm)}
format.topic.fruizioni.encJavaJWKsAsymm=${log:property(esempioDatoCifrato.encJavaJWKsAsymm)}

# ENC JOSE JWK SYMM
format.topic.erogazioni.encJoseJWKsSymm=${log:property(esempioDatoCifrato.encJoseJWKsSymm)}
format.topic.fruizioni.encJoseJWKsSymm=${log:property(esempioDatoCifrato.encJoseJWKsSymm)}

# ENC JOSE JWK ASYMM
format.topic.erogazioni.encJoseJWKsAsymm=${log:property(esempioDatoCifrato.encJoseJWKsAsymm)}
format.topic.fruizioni.encJoseJWKsAsymm=${log:property(esempioDatoCifrato.encJoseJWKsAsymm)}

# ENC JAVA JKS
format.topic.erogazioni.encJavaJKS=${log:property(esempioDatoCifrato.encJavaJKS)}
format.topic.fruizioni.encJavaJKS=${log:property(esempioDatoCifrato.encJavaJKS)}

# ENC JOSE JKS
format.topic.erogazioni.encJoseJKS=${log:property(esempioDatoCifrato.encJoseJKS)}
format.topic.fruizioni.encJoseJKS=${log:property(esempioDatoCifrato.encJoseJKS)}

# ENC JAVA PKCS12
format.topic.erogazioni.encJavaPKCS12=${log:property(esempioDatoCifrato.encJavaPKCS12)}
format.topic.fruizioni.encJavaPKCS12=${log:property(esempioDatoCifrato.encJavaPKCS12)}

# ENC JOSE PKCS12
format.topic.erogazioni.encJosePKCS12=${log:property(esempioDatoCifrato.encJosePKCS12)}
format.topic.fruizioni.encJosePKCS12=${log:property(esempioDatoCifrato.encJosePKCS12)}

# ENC JAVA PKCS11
format.topic.erogazioni.encJavaPKCS11=${log:property(esempioDatoCifrato.encJavaPKCS11)}
format.topic.fruizioni.encJavaPKCS11=${log:property(esempioDatoCifrato.encJavaPKCS11)}

# ENC JOSE PKCS11
format.topic.erogazioni.encJosePKCS11=${log:property(esempioDatoCifrato.encJosePKCS11)}
format.topic.fruizioni.encJosePKCS11=${log:property(esempioDatoCifrato.encJosePKCS11)}
