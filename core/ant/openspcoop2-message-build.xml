<project name="openspcoop2-compile-message">
    <description>
        Produzione dei jar relativi al package org.openspcoop2.message
    </description>

	<import file="${rootDir}/ant/commons/git-build.xml" />
	<import file="${rootDir}/ant/commons/compile-build.xml" />
	<import file="${rootDir}/ant/commons/api-build.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	

	<!-- Compilazione della libreria 'org.openspcoop.message.*' -->
	<target name="compile_openspcoop2_message" description="compila la libreria org.openspcoop.message.*">

		<if>
			<istrue value="${buildMessage}"/>
			<then>
		
				<!-- Info git -->
				<runtarget target="checkgit" />
				<!-- <echo message="GIT:[${jgit.jar.presente}]"/> -->
				
				<!-- org.openspcoop.2.message.context -->	
				<var name="packagesCompiled" value="org.openspcoop2.message.context," />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.context.constants" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.context.model" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.context.utils" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.context.utils.serializer" />
				<antcall target="compile_src_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.SRC_DIR" value="${src}/org/openspcoop2/message/context"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="message-context"/>
					<param name="compile_src_openspcoop2.BUILD_INCLUDES" value="**/*.java"/>
					<param name="compile_src_openspcoop2.SRC_INCLUDES" value=""/>
					<param name="compile_src_openspcoop2.SRC_PREFIX" value=""/>
					<param name="compile_src_openspcoop2.PACKAGE" value="org.openspcoop2.message.context"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="message"/>
				</antcall>

				<!-- org.openspcoop.2.message -->
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.config" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.constants" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.exception" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.utils" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.xml" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.xml.test" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.test" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.dynamic" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.reader" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.reader.test" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.mtom" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.wsaddressing" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.soap.reference" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.rest" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.message.rest.test" />
				<antcall target="compile_src_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.SRC_DIR" value="${src}/org/openspcoop2/message"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="message"/>
					<param name="compile_src_openspcoop2.BUILD_INCLUDES" value="**/*.java"/>
					<param name="compile_src_openspcoop2.BUILD_EXCLUDES" value="context/**"/>
					<param name="compile_src_openspcoop2.SRC_INCLUDES" value="**/*.xml"/>
					<param name="compile_src_openspcoop2.SRC_INCLUDES_2" value="**/*.bin"/>
					<param name="compile_src_openspcoop2.SRC_PREFIX" value="org/openspcoop2/message/"/>
					<param name="compile_src_openspcoop2.PACKAGE" value="org.openspcoop2.message"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="message"/>
				</antcall>
				
				<!-- Jar Complessivo -->
				<antcall target="jar_2_jar_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="message"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="message"/>
				</antcall>
				
				<!-- API -->
				<antcall target="compile_api_openspcoop2">
					<param name="compile_src_openspcoop2.PACKAGES" value="${packagesCompiled}"/>
					<param name="compile_src_openspcoop2.API_NAME" value="message"/>
					<param name="compile_src_openspcoop2.API_DIR" value="${doc}/api"/>
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
				</antcall>
				
			</then>
		</if>
	
	</target>
	
</project>
