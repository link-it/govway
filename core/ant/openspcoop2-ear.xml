<project name="openspcoop2-ear">
    <description>
        Compilazione dell'archivio EAR
    </description>
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	
	<import file="../../ant/commons/utils.xml" />

	<!-- Creazione Manifest per EJB/WAR di OpenSPCoop2 -->
	<var name="manifest.classpath.3parti" value="" />
	<var name="manifest.classpath.openspcoop" value="" />
	<target name="build_manifest" description="Crea il Manifest di OpenSPCoop2">
		
		<var name="tmp_prefix" value="lib" />
		<var name="tmp" value="${tmp_prefix}/bcprov-jdk18on-1.78.1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/bcpkix-jdk18on-1.78.1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/bcutil-jdk18on-1.78.1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-codec-1.15.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-collections-3.2.2.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-collections4-4.4.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-discovery-0.5.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-io-2.11.0.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-lang-2.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-net-3.9.0.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/cxf-core-3.6.4-gov4j-1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/cxf-rt-bindings-soap-3.6.4.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/cxf-rt-ws-security-3.6.4.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/jaxb-api-2.3.1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/jaxb-core-2.3.0.1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/jaxb-impl-2.3.7.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/jaxb-xjc-2.3.7.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/jaxws-api-2.3.1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/commons-jcs3-core-3.1-gov4j-2.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/neethi-3.2.0.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-core-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-messaging-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-messaging-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-profile-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-profile-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-saml-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-saml-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-security-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-security-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-soap-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-soap-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-storage-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-storage-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-xacml-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-xacml-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-xacml-saml-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-xacml-saml-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-xmlsec-api-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/opensaml-xmlsec-impl-3.4.6.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/java-support-7.5.2.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/saaj-impl-1.5.3-gov4j-1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/stax-ex-1.8.3.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/mimepull-1.9.14.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-aop-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-aspects-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-beans-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-context-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-context-support-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-core-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-expression-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-tx-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-web-5.3.39.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/spring-security-core-5.8.11.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/uddi4j-2.0.5.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/xalan-2.7.3.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/xml-resolver-1.2.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/xmlschema-core-2.3.1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/xmlsec-2.3.4-gov4j-1.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/cryptacular-1.2.5.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/jasypt-1.9.3.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/wsdl4j-1.6.3.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-bindings-2.4.1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-integration-2.4.1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-policy-2.4.1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-ws-security-common-2.4.1-gov4j-1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-ws-security-dom-2.4.1-gov4j-1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-ws-security-policy-stax-2.4.1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/wss4j-ws-security-stax-2.4.1.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/woodstox-core-6.6.2.jar"/>	
		<var name="tmp" value="${tmp} ${tmp_prefix}/joda-time-2.12.0.jar"/>
		<var name="tmp" value="${tmp} ${tmp_prefix}/guava-32.1.1-jre.jar"/>	
		<var name="manifest.classpath.3parti" value="${tmp}" />
		<!-- <echo message="3PARTI: ${manifest.classpath.3parti}"/> -->
		
		<fileset dir="${dist}" id="dist.jar">
			<include name="*.jar"/>
		</fileset>
		<pathconvert pathsep=" " property="dist.classpath" refid="dist.jar">
			<map from="${dist}/" to="${tmp_prefix}/"/>
		</pathconvert>
		<var name="manifest.classpath.openspcoop" value="${dist.classpath}" />
		<!-- <echo message="OPENSPCOOP: ${manifest.classpath.openspcoop}"/> -->
		
	</target>
	
	
	
	
	<!-- Creazione del modulo govway.jar -->
	<target name="make_openspcoop2_ejb" description="Crea il modulo EJB">
		<delete dir="${build}/tmpEJB" />
		<mkdir dir="${build}/tmpEJB" />
		
		<!-- ejb/jboss config -->
		<var name="ejb_jar_xml" value=""/>
		<var name="jboss_xml" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss4"/>
				<equals arg1="${as}" arg2="jboss5"/>
				<equals arg1="${as}" arg2="jboss6"/>
			</or>
			<then>
				<copy file="${src}/META-INF/ejb-jar.xml.ejb2" tofile="${build}/tmpEJB/META-INF/ejb-jar.xml" />
				<copy file="${src}/META-INF/jboss.xml.ejb2" tofile="${build}/tmpEJB/META-INF/jboss.xml" />
				<var name="ejb_jar_xml" value="ejb-jar.xml"/>
				<var name="jboss_xml" value="jboss.xml"/>
			</then>
		</if>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<copy file="${src}/META-INF/ejb-jar.xml.ejb3" tofile="${build}/tmpEJB/META-INF/ejb-jar.xml" />
				<copy file="${src}/META-INF/jboss.xml.ejb3" tofile="${build}/tmpEJB/META-INF/jboss-ejb3.xml" />
				<var name="ejb_jar_xml" value="ejb-jar.xml"/>
				<var name="jboss_xml" value="jboss-ejb3.xml"/>
				<if>
					<or>
						<equals arg1="${as}" arg2="jboss7"/>
						<equals arg1="${as}" arg2="wildfly8"/>
						<equals arg1="${as}" arg2="wildfly9"/>
					</or>
					<then>
						<replace file="${build}/tmpEJB/META-INF/jboss-ejb3.xml" token="RA_OPENSPCOOP2" value="hornetq-ra-govway"/>
					</then>
					<else>
						<replace file="${build}/tmpEJB/META-INF/jboss-ejb3.xml" token="RA_OPENSPCOOP2" value="activemq-ra-govway"/>
					</else>
				</if>
			</then>
		</if>
		
		<!-- mailcap -->
		<var name="mailcap_info" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="mailcap_info" value="mailcap"/>
			</then>
		</if>
		
		<jar jarfile="${dist}/govway.jar">
			<manifest>
				<attribute name="Class-Path" value="${manifest.classpath.3parti} ${plugins.classpath} ${manifest.classpath.openspcoop} properties/" />
			</manifest>
			<zipfileset dir="${build}/tmpEJB">
				<include name="META-INF/${ejb_jar_xml}" />
				<include name="META-INF/${jboss_xml}" />
			</zipfileset>
			<!-- DataContentHandler per application/openspcoop2 -->
			<zipfileset dir="${data_content_handler_dir}" prefix="META-INF">
				<include name="${mailcap_info}" />
			</zipfileset>
		</jar>
		<delete dir="${build}/tmpEJB" />
	</target>
	
	
	<!-- Creazione del modulo OpenSPCoop2PropertiesLoader.jar -->
	<target name="make_govway_loaderProperties" description="Crea il modulo necessario per caricare far 'vedere' ai moduli web in assenza del modulo ejb">

		<!-- mailcap -->
		<var name="mailcap_info" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="mailcap_info" value="mailcap"/>
			</then>
		</if>
		
		<jar jarfile="${dist}/OpenSPCoop2PropertiesLoader.jar">
			<manifest>
				<attribute name="Class-Path" value="properties/" />
			</manifest>
			<!-- DataContentHandler per application/openspcoop2 -->
			<zipfileset dir="${data_content_handler_dir}" prefix="META-INF">
				<include name="${mailcap_info}" />
			</zipfileset>
		</jar>
	</target>
	

	<!-- Creazione del modulo govway.war -->
	<target name="make_openspcoop2_web" description="Crea il modulo WEB">
		<delete dir="${build}/web-module" />
		<mkdir dir="${build}/web-module" />
		<copy file="${deploy_web_dir}/web_app/WEB-INF/jbossws-cxf.xml" todir="${build}/web-module" />
		<copy file="${deploy_web_dir}/web_app/WEB-INF/urlrewrite.xml" todir="${build}/web-module" />
		<var name="jboss_web_xml" value=""/>
		<if>
			<and>
				<not>
					<istrue value="${forceDisableJ2eeMode}"/>
				</not>
				<or>
					<equals arg1="${as}" arg2="jboss4"/>
					<equals arg1="${as}" arg2="jboss5"/>
					<equals arg1="${as}" arg2="jboss6"/>
				</or>
			</and>
			<then>
				<var name="jboss_web_xml" value="jboss-web.xml"/>
			</then>
		</if>
		<!-- mailcap -->
		<var name="mailcap_info" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="mailcap_info" value="mailcap"/>
			</then>
		</if>
		
		<war destfile="${dist}/govway.war" webxml="${deploy_web_dir}/web_app/WEB-INF/web.xml">
			<manifest>
				<attribute name="Class-Path" value="${manifest.classpath.3parti} ${plugins.classpath} ${manifest.classpath.openspcoop} properties/" />
			</manifest>
			<webinf dir="${build}/web-module" />
			<webinf dir="${src}/META-INF">
				<include name="${jboss_web_xml}"/>
			</webinf>
			<!-- DataContentHandler per application/openspcoop2 -->
			<zipfileset dir="${data_content_handler_dir}" prefix="META-INF">
				<include name="${mailcap_info}" />
			</zipfileset>
			<!-- Specifying Logging per CXF -->
			<zipfileset dir="${src}/META-INF/cxf" prefix="META-INF/cxf">
				<include name="org.apache.cxf.Logger" />
			</zipfileset>
		</war>

		<!-- Creo war per security constraint -->
		<copy file="${deploy_web_dir}/web_app/WEB-INF/web.xml" todir="${build}/web-module" />
		<replace file="${build}/web-module/web.xml" token="start OpenSPCoop2Startup -->" value="start OpenSPCoop2Startup"/>
		<replace file="${build}/web-module/web.xml" token="&lt;!-- end OpenSPCoop2Startup" value="end OpenSPCoop2Startup"/>
		<replace file="${build}/web-module/web.xml" token="start Security Constraint Authentication Container" value="start Security Constraint Authentication Container -->"/>
		<replace file="${build}/web-module/web.xml" token="end Security Constraint Authentication Container" value="&lt;!--  end Security Constraint Authentication Container"/>

		<war destfile="${dist}/govwaySec.war" webxml="${build}/web-module/web.xml">
			<manifest>
				<attribute name="Class-Path" value="${manifest.classpath.3parti} ${plugins.classpath} ${manifest.classpath.openspcoop} properties/" />
			</manifest>
			<webinf dir="${build}/web-module" />
			<webinf dir="${src}/META-INF">
				<include name="${jboss_web_xml}"/>
			</webinf>
			<!-- DataContentHandler per application/openspcoop2 -->
			<zipfileset dir="${data_content_handler_dir}" prefix="META-INF">
				<include name="${mailcap_info}" />
			</zipfileset>
			<!-- Specifying Logging per CXF -->
			<zipfileset dir="${src}/META-INF/cxf" prefix="META-INF/cxf">
				<include name="org.apache.cxf.Logger" />
			</zipfileset>
		</war>

		<delete dir="${build}/web-module"/>
	</target>
	
	
	<!-- Costruisce l'ear di OpenSPCoop -->
	<target name="build_archivio_ear" description="Crea l'ear di OpenSPCoop.">
		
		<runtarget target="build_manifest" />
		<if>
			<not>
				<istrue value="${forceDisableJ2eeMode}"/>
			</not>
			<then>
				<runtarget target="make_openspcoop2_ejb" />
			</then>
			<else>
				<runtarget target="make_govway_loaderProperties" />
			</else>
		</if>	
		<runtarget target="make_openspcoop2_web" />

		<!-- costruzione application.xml -->
		<delete file="${build}/application.xml" />
		<if>
			<matches string="${as}" pattern="jboss.*"/>
			<then>
				<concat destfile="${build}/application.xml" append="yes">
					<filelist dir="${src}/META-INF"
		                           files="application.xml.${as}"/>
				</concat>
			</then>
		</if>
		<if>
			<matches string="${as}" pattern="wildfly.*"/>
			<then>
				<concat destfile="${build}/application.xml" append="yes">
					<filelist dir="${src}/META-INF"
		                           files="application.xml.wildfly"/>
				</concat>
			</then>
		</if>
		<if>
			<not>
				<istrue value="${forceDisableJ2eeMode}"/>
			</not>
			<then>
				<concat destfile="${build}/application.xml" append="yes">
					<filelist dir="${src}/META-INF"
		                                files="application.xml.mdb"/>
				</concat>
			</then>
			<else>
				<concat destfile="${build}/application.xml" append="yes">
					<filelist dir="${src}/META-INF"
		                                files="application.xml.loaderProperties"/>
				</concat>
			</else>
		</if>	
		<concat destfile="${build}/application.xml" append="yes">
			<filelist dir="${src}/META-INF"
                                files="application.xml.web"/>
		</concat>
		<if>
			<not>
				<equals arg1="${plugins.application.listApplicationXML}" arg2="" />
			</not>
			<then>
				<concat destfile="${build}/application.xml" append="yes">
					<filelist dir="${application_plugins}/META-INF"
                                files="${plugins.application.listApplicationXML}"/>
				</concat>
			</then>
		</if>
		<concat destfile="${build}/application.xml" append="yes">
			<filelist dir="${src}/META-INF"
                           files="application.xml.end"/>
		</concat>

		<!-- OpenSPCoop2 Properties -->
		<copy file="${properties_dir}/govway.properties" todir="${build}/tmp" />
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<concat destfile="${build}/tmp/govway.properties" append="yes" >

# ----- Personalizzazione per JBoss7.x/WildFly -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.core.soap.tunnelSOAP.mailcap.load"/>
					<param name="value" value="true"/>
				</antcall>
				<if>
					<or>
						<matches string="${as}" pattern="wildfly25"/>
						<matches string="${as}" pattern="wildfly26"/>
					</or>
					<then>
						<antcall target="set_property">
						    <param name="file" value="${build}/tmp/govway.properties"/>
							<param name="token" value="org.openspcoop2.pdd.wildflyUndertowClientCertificateFilter.enabled"/>
							<param name="value" value="true"/>
						</antcall>
					</then>
				</if>
				<concat destfile="${build}/tmp/govway.properties" append="yes" >

# ----- Personalizzazione Timer EJB Name per JBoss7.x/WildFly -------------
				</concat>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.timer.autoStart.stop"/>
					<param name="value" value="false"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.timer.gestoreBusteNonRiscontrate"/>
					<param name="value" value="java:global/govway/govway.jar/GestoreBusteNonRiscontrate!org.openspcoop2.pdd.timers.TimerGestoreBusteNonRiscontrateHome"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.timer.gestoreMessaggi"/>
					<param name="value" value="java:global/govway/govway.jar/GestoreMessaggi!org.openspcoop2.pdd.timers.TimerGestoreMessaggiHome"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.timer.gestorePuliziaMessaggiAnomali"/>
					<param name="value" value="java:global/govway/govway.jar/GestorePuliziaMessaggiAnomali!org.openspcoop2.pdd.timers.TimerGestorePuliziaMessaggiAnomaliHome"/>
				</antcall>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.timer.gestoreRepositoryBuste"/>
					<param name="value" value="java:global/govway/govway.jar/GestoreRepositoryBuste!org.openspcoop2.pdd.timers.TimerGestoreRepositoryBusteHome"/>
				</antcall>
			</then>
		</if>
		<concat destfile="${build}/tmp/govway.properties" append="yes" >

# ----- Distribuzione Sincronizzata -------------
		</concat>
		<if>
			<or>
				<equals arg1="${hazelcastLibraries}" arg2="true"/>
			</or>
			<then>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.hazelcast.enabled"/>
					<param name="value" value="true"/>
				</antcall>				
			</then>
			<else>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.hazelcast.enabled"/>
					<param name="value" value="false"/>
				</antcall>				
			</else>
		</if>
		<if>
			<or>
				<equals arg1="${redisLibraries}" arg2="true"/>
			</or>
			<then>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.redis.enabled"/>
					<param name="value" value="true"/>
				</antcall>				
			</then>
			<else>
				<antcall target="set_property">
				    <param name="file" value="${build}/tmp/govway.properties"/>
					<param name="token" value="org.openspcoop2.pdd.redis.enabled"/>
					<param name="value" value="false"/>
				</antcall>				
			</else>
		</if>

		<!-- govway.msgDiagnostici.properties -->
		<mkdir dir="${build}/tmpNative2ASCII_src" />
		<mkdir dir="${build}/tmpNative2ASCII_dest" />
		<copy file="${properties_dir}/govway.msgDiagnostici.properties" todir="${build}/tmpNative2ASCII_src" />
		<native2ascii src="${build}/tmpNative2ASCII_src" dest="${build}/tmpNative2ASCII_dest" />
			
		<!-- Creazione mailapi contenente il corretto mailcap per OpenSPCoopDataHandler -->
		<var name="mailapi_jar" value="" />
		<if>
			<or>
				<matches string="${as}" pattern="wildfly18"/>
				<matches string="${as}" pattern="wildfly19"/>
				<matches string="${as}" pattern="wildfly20"/>
				<matches string="${as}" pattern="wildfly21"/>
				<matches string="${as}" pattern="wildfly22"/>
				<matches string="${as}" pattern="wildfly23"/>
				<matches string="${as}" pattern="wildfly24"/>
				<matches string="${as}" pattern="wildfly25"/>
				<matches string="${as}" pattern="wildfly26"/>
			</or>
			<then>
				<unzip src="${required_lib}/shared/mailapi-1.6.7.jar" dest="${build}/tmp/mailapi"/>
				<concat destfile="${build}/tmp/mailapi/META-INF/mailcap" append="yes">
					<filelist dir="${data_content_handler_dir}"
				           files="mailcap"/>
				</concat>
				<jar jarfile="${build}/tmp/mailapi-1.6.7.gw.jar" manifest="${build}/tmp/mailapi/META-INF/MANIFEST.MF">
					<zipfileset dir="${build}/tmp/mailapi"/>
				</jar>
				<var name="mailapi_jar" value="mailapi-1.6.7.gw.jar" />
			</then>
		</if>
		
		<!-- application server (jars e jboss-app.xml) -->
		<!-- commons_logging -->
		<var name="commons_logging_jar" value="" />
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="commons_logging_jar" value="commons-logging-1.2.jar" />
			</then>
		</if>
		<!-- xalan -->
		<var name="xalan_jar" value=""/>
		<var name="xalan_serializer_jar" value="" />
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss4"/>
				<equals arg1="${as}" arg2="jboss6"/>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="xalan_jar" value="xalan-2.7.3.jar"/>
				<var name="xalan_serializer_jar" value="serializer-2.7.3.jar" />
			</then>
		</if>
		<!-- xerces -->
		<var name="xerces_jar" value=""/>
		<var name="xml_apis_jar" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="xerces_jar" value="xercesImpl-2.12.2.jar"/>
				<var name="xml_apis_jar" value="xml-apis-1.4.01.jar"/>
			</then>
		</if>
		<!-- jaxb_xjc -->
		<var name="jaxb_xjc_jar" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss6"/>
			</or>
			<then>
				<var name="jaxb_xjc_jar" value="jaxb-xjc-2.3.7.jar"/>
			</then>
		</if>
		<!-- jaxp_ri -->
		<var name="jaxp_ri_jar" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="jaxp_ri_jar" value="jaxp-ri-1.4.5-gov4j-1.jar"/>
			</then>
		</if>
		<!-- concurrent -->
		<var name="concurrent_jar" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="concurrent_jar" value="com.springsource.edu.oswego.cs.dl.util.concurrent-1.3.4.jar"/>
			</then>
		</if>
		<!-- xml-security (com.sun impl) -->
		<var name="com_sun_xml_security_jar" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<var name="com_sun_xml_security_jar" value="xml-security-impl-1.0.jar"/>
			</then>
		</if>
		<!-- hazecalst lib -->
		<var name="hazelcast-all_jar" value="" />
		<var name="hazelcast-hibernate_jar" value="" />
		<var name="hazelcast_properties" value="" />
		<if>
			<or>
				<equals arg1="${hazelcastLibraries}" arg2="true"/>
			</or>
			<then>
				<var name="hazelcast-all_jar" value="hazelcast-5.3.5.jar" />
				<var name="hazelcast-hibernate_jar" value="hibernate-core-6.1.4.Final.jar" />
				<var name="hazelcast_properties" value="govway.hazelcast*" />
			</then>
		</if>
		<!-- redis lib -->
		<var name="redis_jar" value="" />
		<if>
			<or>
				<equals arg1="${redisLibraries}" arg2="true"/>
			</or>
			<then>
				<var name="redis_jar" value="*.jar" />
			</then>
		</if>
		<!-- jminix lib -->
		<var name="jminix_jar" value="" />
		<if>
			<or>
				<equals arg1="${jminixLibraries}" arg2="true"/>
			</or>
			<then>
				<var name="jminix_jar" value="*.jar" />
			</then>
		</if>
		<!-- jboss_app -->
		<var name="jboss_app_xml" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss4"/>
				<equals arg1="${as}" arg2="jboss5"/>
				<equals arg1="${as}" arg2="jboss6"/>
			</or>
			<then>
				<copy file="${src}/META-INF/jboss-app.xml.${as}" tofile="${build}/tmp/jboss-app.xml" />
				<var name="jboss_app_xml" value="jboss-app.xml"/>
			</then>
		</if>
		<!-- jboss_deployment_structure -->
		<var name="jboss_deployment_structure_xml" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss7"/>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<if>
					<equals arg1="${as}" arg2="jboss7"/>
					<then>
						<copy file="${src}/META-INF/jboss-deployment-structure.xml.${as}" tofile="${build}/tmp/jboss-deployment-structure.xml" />
					</then>
				</if>
				<if>
					<matches string="${as}" pattern="wildfly.*"/>
					<then>
						<if>
							<or>
								<matches string="${as}" pattern="wildfly22"/>
								<matches string="${as}" pattern="wildfly23"/>
								<matches string="${as}" pattern="wildfly24"/>
								<matches string="${as}" pattern="wildfly25"/>
								<matches string="${as}" pattern="wildfly26"/>
							</or>
							<then>
								<copy file="${src}/META-INF/jboss-deployment-structure.xml.wildfly2" tofile="${build}/tmp/jboss-deployment-structure.xml" />
							</then>
							<else>
								<copy file="${src}/META-INF/jboss-deployment-structure.xml.wildfly" tofile="${build}/tmp/jboss-deployment-structure.xml" />
							</else>
						</if>
					</then>
				</if>
				<var name="jboss_deployment_structure_xml" value="jboss-deployment-structure.xml"/>
				
				<if>
					<istrue value="${forceDisableJ2eeMode}"/>
					<then>
						<replace file="${build}/tmp/jboss-deployment-structure.xml" 
								 token="govway.jar" 
								 value="OpenSPCoop2PropertiesLoader.jar" />
					</then>
				</if>	
				<if>
					<not>
						<equals arg1="${plugins.application.listJbossDeploymentStructure}" arg2="" />
					</not>
					<then>
						<replace file="${build}/tmp/jboss-deployment-structure.xml" token="&lt;/jboss-deployment-structure&gt;" value=""/>
						<concat destfile="${build}/tmp/jboss-deployment-structure.xml" append="yes">
							<filelist dir="${application_plugins}/META-INF/jboss-deployment-structure"
		                                files="${plugins.application.listJbossDeploymentStructure}"/>
						</concat>
						<concat destfile="${build}/tmp/jboss-deployment-structure.xml" append="yes">
							<![CDATA[
</jboss-deployment-structure>						
							]]>
						</concat>
					</then>
				</if>
				<if>
					<or>
						<equals arg1="${hazelcastLibraries}" arg2="true"/>
						<equals arg1="${redisLibraries}" arg2="true"/>
						<equals arg1="${jminixLibraries}" arg2="true"/>
					</or>
					<then>
						<replace file="${build}/tmp/jboss-deployment-structure.xml" token="&lt;!-- start export dependencies" value="&lt;!-- start export dependencies -->"/>
						<replace file="${build}/tmp/jboss-deployment-structure.xml" token="end export dependencies -->" value="&lt;!-- end export dependencies -->"/>
						<if>
							<and>
								<not>
									<equals arg1="${redisLibraries}" arg2="true"/>
								</not>							
							</and>
							<then>
								<replace file="${build}/tmp/jboss-deployment-structure.xml" token="&lt;path name=&quot;sun/reflect&quot;/>" value="&lt;!-- &lt;path name=&quot;sun/reflect&quot;/> -->"/>					
							</then>
						</if>
						<if>
							<and>
								<not>
									<equals arg1="${hazelcastLibraries}" arg2="true"/>
								</not>							
							</and>
							<then>
								<replace file="${build}/tmp/jboss-deployment-structure.xml" token="&lt;path name=&quot;sun/misc&quot;/>" value="&lt;!-- &lt;path name=&quot;sun/misc&quot;/> -->"/>					
							</then>
						</if>
						<if>
							<and>
								<not>
									<equals arg1="${jminixLibraries}" arg2="true"/>
								</not>							
							</and>
							<then>
								<replace file="${build}/tmp/jboss-deployment-structure.xml" token="&lt;path name=&quot;com/sun/net/httpserver&quot;/>" value="&lt;!-- &lt;path name=&quot;com/sun/net/httpserver&quot;/> -->"/>					
							</then>
						</if>
					</then>
				</if>
			</then>
		</if>
		<!-- jboss_all -->
		<var name="jboss_all_xml" value=""/>
		<if>
			<or>
				<matches string="${as}" pattern="wildfly.*"/>
			</or>
			<then>
				<copy file="${src}/META-INF/jboss-all.xml.wildfly" tofile="${build}/tmp/jboss-all.xml" />
				<var name="jboss_all_xml" value="jboss-all.xml"/>
			</then>
		</if>
		<!-- mailcap -->
		<var name="mailcap_info" value=""/>
		<if>
			<or>
				<equals arg1="${as}" arg2="jboss4"/>
				<equals arg1="${as}" arg2="jboss5"/>
				<equals arg1="${as}" arg2="jboss6"/>
			</or>
			<then>
				<var name="mailcap_info" value="mailcap"/>
			</then>
		</if>
		
		<!-- Ripulisco file su cui ho fatto replace token -->
		<antcall target="dos2unix">
			<param name="dir" value="${build}/tmp"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		
		<!-- build ear -->
		<echo message="Costruisco per application server [${as}]"/>
		<mkdir dir="${build}/classes_tmp"/>
		<ear destfile="${dist}/govway.ear" appxml="${build}/application.xml">
			<!-- Informazioni sulla versione -->
			<zipfileset dir="${rootDir}">
				<include name="README.txt" />
				<include name="COPYING" />
			</zipfileset>
			<!-- Specifying Isolation dell'ear -->
			<zipfileset dir="${build}/tmp/" prefix="META-INF">
				<include name="${jboss_app_xml}" />
				<include name="${jboss_deployment_structure_xml}" />
				<include name="${jboss_all_xml}" />
			</zipfileset>
			<!-- DataContentHandler per application/openspcoop2 -->
			<zipfileset dir="${data_content_handler_dir}" prefix="META-INF">
				<include name="${mailcap_info}" />
			</zipfileset>
			<!-- Applicazioni proprietarie di OpenSPCoop -->
			<zipfileset dir="${dist}">
				<include name="govway.war" />
				<include name="govwaySec.war" />
				<include name="govway.jar" />
				<include name="OpenSPCoop2PropertiesLoader.jar" />
			</zipfileset>
			<!-- Librerie di OpenSPCoop2 -->
			<zipfileset prefix="lib" dir="${dist}">
				<include name="openspcoop2_*.jar" />
			</zipfileset>
			<!-- Stub di OpenSPCoop2 -->
			<zipfileset prefix="lib" dir="${required_lib}">
				<include name="openspcoop2_management_registro_search_stub.jar" />
			</zipfileset>
			<!-- Librerie richieste a run-time da OpenSPCoop (Shared Lib) -->
			<zipfileset prefix="lib" dir="${required_lib}/commons">
				<include name="commons-codec-1.15.jar"/>
				<include name="commons-collections-3.2.2.jar"/>
				<include name="commons-collections4-4.4.jar"/>
				<include name="commons-discovery-0.5.jar"/>
				<include name="commons-io-2.11.0.jar"/>
				<include name="commons-lang-2.6.jar"/>
				<include name="commons-net-3.9.0.jar"/>
				<include name="commons-validator-1.7.jar"/>
				<include name="commons-beanutils-1.9.4.jar"/> <!--jmx mini console -->
				<include name="${commons_logging_jar}"/>
				<include name="commons-lang3-3.12.0.jar"/>
				<include name="commons-compress-1.26.0.jar"/>
				<include name="commons-fileupload-1.5.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/security">
				<include name="bcprov-jdk18on-1.78.1.jar"/>
				<include name="bcpkix-jdk18on-1.78.1.jar"/>
				<include name="bcutil-jdk18on-1.78.1.jar"/>
				<include name="neethi-3.2.0.jar"/>
				<include name="xmlsec-2.3.4-gov4j-1.jar"/>
				<include name="cryptacular-1.2.5.jar"/>
				<include name="jasypt-1.9.3.jar"/>
				<include name="herasaf-xacml-core-2.0.4.jar"/>
				<include name="${com_sun_xml_security_jar}"/>
				<include name="nimbus-jose-jwt-9.37.3.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/wss4j">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/opensaml">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/shared">
				<include name="commons-jcs3-core-3.1-gov4j-2.jar"/>
				<include name="wsdl4j-1.6.3.jar"/>
				<include name="uddi4j-2.0.5.jar"/>
				<include name="${xerces_jar}"/>
				<include name="${xml_apis_jar}"/>
				<include name="${xalan_jar}"/>
				<include name="${xalan_serializer_jar}"/>				
				<include name="velocity-*.jar"/>
				<include name="urlrewritefilter-4.0.4.jar"/>
				<include name="${concurrent_jar}"/>
				<include name="ezmorph-1.0.6.jar" /> <!--jmx mini console -->
				<include name="xom-1.2.11.jar" /> <!--jmx mini console -->
				<include name="joda-time-2.12.0.jar" />
				<include name="guava-32.1.1-jre.jar"/>
				<include name="java-uuid-generator-4.0.1.jar"/>
				<include name="freemarker-2.3.31.jar"/>
				<include name="snakeyaml-1.33-gov4j-1.jar"/>
				<include name="rhino-1.7.14.jar"/>
				<include name="${hazelcast-all_jar}"/>
				<include name="${hazelcast-hibernate_jar}"/>
				<include name="ehcache-3.10.0.jar"/>
				<!-- NOTA: 
					non includere mai nel runtime Saxon-HE-*.jar poiche' fa agganciare il suo Transformer sostituendosi a Xalan (al massimo vedere di levare la dichiarazione in META-INF)
					Anche se con la versione -gov4j-1 del jar il problema dovrebbe essere risolto, poichè elimina la dichiarazione del trasformer sotto META-INF
					Se si decidesse di riaggiungerlo, aggiungere anche la dipendenza xmlresolver-4.3.0.jar
				 -->
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/redis">
				<include name="${redis_jar}"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/log">
				<include name="slf4j-api-2.0.3-gov4j-1.jar"/>
				<include name="log4j*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/jminix">
				<include name="${jminix_jar}"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/cxf">
				<include name="*.jar"/>
				<exclude name="cxf-tools-*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/saaj">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/jax">
				<include name="jaxb*.jar"/>
				<include name="jaxws-api-2.3.1.jar"/>
				<include name="jaxws-jsr181-api-2.3.1.jar"/>
				<exclude name="${jaxb_xjc_jar}"/>
				<include name="${jaxp_ri_jar}"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/spring">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/spring-ldap">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/spring-security">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/soapbox">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/httpcore">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/json">
				<include name="*.jar"/>
				<!-- <include name="json-lib-2.4-jdk15.jar" /> --> <!--jmx mini console -->
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/jackson">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/wadl">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/swagger">
				<exclude name="swagger-ui-*.jar" />
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/openapi4j">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/pdf">
				<include name="*.jar"/>
			</zipfileset>
			<zipfileset prefix="lib" dir="${required_lib}/stub/cxf">
				<include name="openspcoop2_registrySearchStub_cxf.jar"/>
			</zipfileset>
			<!-- Mail api esteso con activation data handler openspcoop -->
			<zipfileset prefix="lib" dir="${build}/tmp">
				<include name="${mailapi_jar}" />
			</zipfileset>
			<!-- Files di properties richieste dalle applicazioni OpenSPCoop -->
			<zipfileset dir="${properties_dir}" prefix="properties">
				<include name="govway.jcs.properties" />
				<include name="govway.classRegistry.properties" />
				<include name="govway.jmsPublisher.properties" />
				<include name="openspcoop2.autorizzazionePdDConsole.properties" />
				<include name="govway.pdd.properties" />
				<include name="govway.log4j2.properties" />
				<include name="govway.protocolAdjunct.log4j2.properties" />
				<include name="log4j2.properties" />
			</zipfileset>
			<zipfileset dir="${properties_dir}/hazelcast" prefix="properties">
				<include name="${hazelcast_properties}" />
			</zipfileset>
			<zipfileset dir="${build}/tmp" prefix="properties">
				<include name="govway.properties" />
			</zipfileset>
			<zipfileset dir="${build}/tmpNative2ASCII_dest" prefix="properties">
				<include name="govway.msgDiagnostici.properties" />
			</zipfileset>
			<zipfileset dir="${properties_dir}/crypto" prefix="properties" />
			<!-- Plugins -->
			<zipfileset prefix="lib" dir="${plugins}">
				<include name="**/*.jar"/>
			</zipfileset>
			<zipfileset dir="${plugins}" prefix="properties">
				<include name="**/*.properties"/>
			</zipfileset>
			<!-- Application Plugins -->
			<zipfileset dir="${application_plugins}">
				<include name="**/*.war"/>
				<include name="**/*.jar"/>
			</zipfileset>
			<!-- WSDL -->
			<zipfileset dir="${wsdlFolder}" prefix="properties">
				<include name="${wsdlPortaDelegata}"/>
				<include name="${wsdlPortaApplicativa}"/>
			</zipfileset>
			<!-- JKS -->
			<zipfileset dir="${deploy_jks_dir}" prefix="properties">
				<include name="*.jks"/>
			</zipfileset>
			<!-- PreLoading -->
			<zipfileset dir="${deploy_preLoading_dir}" prefix="properties">
				<include name="*.zip"/>
			</zipfileset>
		</ear>
		
		<!-- Elimino file temporanei -->
		<delete file="${build}/tmp/govway.properties" deleteonexit="true"/>
		<delete file="${build}/tmp/jboss-app.xml" deleteonexit="true"/>
		<delete dir="${build}/tmp" deleteonexit="true"/>
		<delete file="${build}/tmpNative2ASCII_dest/govway.msgDiagnostici.properties" deleteonexit="true"/>
		<delete dir="${build}/tmpNative2ASCII_dest" deleteonexit="true"/>
		<delete file="${build}/tmpNative2ASCII_src/govway.msgDiagnostici.properties" deleteonexit="true"/>
		<delete dir="${build}/tmpNative2ASCII_src" deleteonexit="true"/>

		<!-- Elimino archivi intermedi -->
		<delete file="${dist}/govway.war" />
		<delete file="${dist}/govwaySec.war" />
		<delete file="${dist}/govway.jar" />
		
	</target>

	
	
	
</project>
