<project name="openspcoop2-compile-pdd">
    <description>
        Produzione dei jar relativi al package org.openspcoop2.pdd
    </description>

	<import file="${rootDir}/ant/commons/git-build.xml" />
	<import file="${rootDir}/ant/commons/compile-build.xml" />
	<import file="${rootDir}/ant/commons/api-build.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	

	<!-- Compilazione della libreria 'org.openspcoop.pdd.*' -->
	<target name="compile_openspcoop2_pdd" description="compila la libreria org.openspcoop.pdd.*">

		<if>
			<istrue value="${buildPdd}"/>
			<then>
		
				<!-- Info git -->
				<runtarget target="checkgit" />
				<!-- <echo pdd="GIT:[${jgit.jar.presente}]"/> -->
				
				<!-- Preparo SRC per sovrascrivere versione -->
				<property name="src_overwrite_version" value="${build}/SRC_VERSION" />
				<delete dir="${src_overwrite_version}" failonerror="false" />
				<mkdir dir="${src_overwrite_version}/org/openspcoop2/pdd"  />
				<copy todir="${src_overwrite_version}/org/openspcoop2/pdd" overwrite="true">
					<fileset dir="${src}/org/openspcoop2/pdd"/>
				</copy>
				
				<!-- Estraggo informazioni sulla versione e la imposto -->
				<if>
				    <istrue value="${jgit.jar.presente}"/>
				    <then>
				    	
					      <echo message="Raccolta informazioni git per impostazione versione..."/>
					      <GitProperties src="${gitrepo_root}" 
								authorNAMEProperty="git.authorNAME"
								authorMailProperty="git.authorMail"
								authorCommitDateProperty="git.authorDate"
								shortHashProperty="git.commitShortHash"
						/>
				    	
						<!-- Imposto versione -->
						<var name="pddVersion" value="Undefined" />	
						<var name="pddDetails" value="Undefined" />
						<if>	
							<isfalse value="${buildAsRelease}"/>
							<then>
								<if>
									<istrue value="${compile_src_openspcoop2.GITINFO}"/>
									<then>
										<var name="pddVersion" value="${git.commitShortHash}" />
										<var name="pddDetails" value="GovWay commit.${git.commitShortHash}, ${git.authorDate}" />	
									</then>
									<else>
										<if>
										    <isset property="env.BUILD_VERSION]"/>
										    <then>
										    	<var name="pddVersion" value="${env.BUILD_VERSION]}" />
										    </then>
										</if>						
									</else>
								</if>
							</then>
							<else>
								<if>
									<isset property="env.RELEASE_VERSION]"/>
									<then>
										<var name="pddVersion" value="${env.RELEASE_VERSION]}" />
									</then>
								</if>						
							</else>
						</if>
						<if>
							<not>
								<equals arg1="${pddVersion}" arg2="Undefined"/>
							</not>
							<then>
								<replace file="${src_overwrite_version}/org/openspcoop2/pdd/core/CostantiPdD.java" 
										 token="public static final String OPENSPCOOP2_PRODUCT_VERSION]" 
										 value="public static final String OPENSPCOOP2_PRODUCT_VERSION] = &quot;GovWay/${pddVersion}&quot; ; //" />
							</then>
						</if>
						<if>
							<not>
								<equals arg1="${pddDetails}" arg2="Undefined"/>
							</not>
							<then>
								<replace file="${src_overwrite_version}/org/openspcoop2/pdd/core/CostantiPdD.java" 
										 token="public static final String OPENSPCOOP2_DETAILS" 
										 value="public static final String OPENSPCOOP2_DETAILS = &quot;${pddDetails}&quot; ; //" />
							</then>
						</if>
				    	
					</then>
				</if>
				
				<!-- packages -->
				<var name="packagesCompiled" value="org.openspcoop2.pdd" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.config" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autenticazione" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autenticazione.pd" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autenticazione.pa" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autorizzazione" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autorizzazione.container" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autorizzazione.pd" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.autorizzazione.pa" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.credenziali" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.credenziali.engine" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.connettori" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.plugins" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy.config" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy.driver" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy.driver.hazelcast" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy.driver.hazelcast.counters" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy.driver.redisson" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.controllo_traffico.policy.driver.redisson.counters" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.dynamic" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.eventi" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.handlers" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.handlers.statistics" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.handlers.notifier" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.handlers.notifier.engine" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.handlers.transazioni" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.integrazione" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.integrazione.backward_compatibility" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.keystore" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.built_in" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.built_in.load_balance" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.built_in.load_balance.sticky" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.built_in.load_balance.health_check" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.built_in.multi_deliver" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.conditional" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.behaviour.test" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.jmx" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.node" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.response_caching" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.state" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.threshold" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.token" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.token.pd" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.token.pa" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.token.parser" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.transazioni" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.core.trasformazioni" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.logger" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.logger.traccia" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.logger.filetrace" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.mdb" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.mdb.threads" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.driver" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.constants" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.connector" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.connector.messages" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.connector.proxy" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.core" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.error" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.service" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.services.skeleton" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.timers" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.timers.pdnd" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.timers.proxy" />
																							
				<!-- org.openspcoop.2.pdd -->
				<antcall target="compile_src_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.SRC_DIR" value="${src_overwrite_version}/org/openspcoop2/pdd"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="pdd"/>
					<param name="compile_src_openspcoop2.BUILD_INCLUDES" value="**/*.java"/>
					<param name="compile_src_openspcoop2.SRC_INCLUDES" value="logger/filetrace/*.properties"/>
					<param name="compile_src_openspcoop2.SRC_PREFIX" value="org/openspcoop2/pdd/logger/filetrace"/>
					<param name="compile_src_openspcoop2.PACKAGE" value="org.openspcoop2.pdd"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="pdd"/>
					<param name="gitInfo_openspcoop2.SRC_DIR" value="true"/>
					<param name="gitInfo_src_openspcoop2.SRC_DIR" value="${src}/org/openspcoop2/pdd"/>
				</antcall>
				
				<!-- Jar Complessivo -->
				<antcall target="jar_2_jar_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="pdd"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="pdd"/>
				</antcall>
				
				<!-- API -->
				<antcall target="compile_api_openspcoop2">
					<param name="compile_src_openspcoop2.PACKAGES" value="${packagesCompiled}"/>
					<param name="compile_src_openspcoop2.API_NAME" value="pdd"/>
					<param name="compile_src_openspcoop2.API_DIR" value="${doc}/api"/>
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
				</antcall>

				<!-- Elimino SRC per sovrascrivere versione -->
				<delete dir="${src_overwrite_version}" failonerror="false" />
				
			</then>
		</if>
		<if>
			<istrue value="${buildPddTest}"/>
			<then>

				<!-- packages -->
				<var name="packagesCompiled" value="org.openspcoop2.pdd_test" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd_test.message" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd_test.response_caching" />
				<antcall target="compile_src_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.SRC_DIR" value="${src}/org/openspcoop2/pdd_test"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="pdd-test"/>
					<param name="compile_src_openspcoop2.BUILD_INCLUDES" value="**/*.java"/>
					<param name="compile_src_openspcoop2.SRC_INCLUDES" value=""/>
					<param name="compile_src_openspcoop2.SRC_PREFIX" value=""/>
					<param name="compile_src_openspcoop2.PACKAGE" value="org.openspcoop2.pdd_test"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="pdd-test"/>
				</antcall>

				<!-- Jar Complessivo -->
				<antcall target="jar_2_jar_openspcoop2">
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
					<param name="compile_src_openspcoop2.GIT_ID_NAME" value="pdd-test"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="pdd-test"/>
				</antcall>
				
				<!-- API -->
				<antcall target="compile_api_openspcoop2">
					<param name="compile_src_openspcoop2.PACKAGES" value="${packagesCompiled}"/>
					<param name="compile_src_openspcoop2.API_NAME" value="pdd-test"/>
					<param name="compile_src_openspcoop2.API_DIR" value="${doc}/pdd-test"/>
					<param name="compile_src_openspcoop2.GITINFO" value="${jgit.jar.presente}"/>
				</antcall>
			</then>
		</if>
		
	</target>
	
</project>
