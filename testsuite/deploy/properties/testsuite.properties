# Directory per configurazioni esterne
confDirectory=/etc/govway

# Indicazione se la servlet deve tracciare il flag 'isArrived' nella tabella tracciamento
# Possibili valori: true/false
org.openspcoop2.testsuite.server.database.tracciamentoIsArrived = true

# Dimensione (in byte es. 1Mb=1024Kb=1024*1024b=1048576) dei messaggi che verranno gestiti in memoria
org.openspcoop2.testsuite.server.requestDump.inMemory.threshold=1048576

# Location su fileSystem dove vengono salvati i messaggi binari superiori alla soglia
org.openspcoop2.testsuite.server.requestDump.msgRepository=/var/tmp/BINARY


# ----------- Header Aggiuntivi della TestSuite -------

# Servlet Name Header
org.openspcoop2.testsuite.server.risposta.headerServletName=GovWay-TestSuite

# Header aggiuntivi
# org.openspcoop2.testsuite.server.risposta.header.<NomeHeader>=<ValoreHeader>
org.openspcoop2.testsuite.server.risposta.header.GovWay-TestSuite-Description=Testsuite di GovWay


# ----------- Load Mailcap -------
org.openspcoop2.testsuite.server.mailcap.load=false



# ------------ Trasporto ---------------------

# Nome della proprieta' nel trasporto
# contenente l'id della richiesta in corso
org.openspcoop2.testsuite.server.trasporto.id = GovWay-Message-ID

# Nome della proprieta' nel trasporto
# contenente il riferimento Asincrono
org.openspcoop2.testsuite.server.trasporto.riferimentoAsincrono = GovWay-Relates-To

# Nome della proprieta' nel trasporto
# contenente il tipoMittente,mittente,tipoDestinatario e destinatario della richiesta in corso
org.openspcoop2.testsuite.server.trasporto.tipoMittente = GovWay-Sender-Type
org.openspcoop2.testsuite.server.trasporto.mittente = GovWay-Sender
org.openspcoop2.testsuite.server.trasporto.tipoDestinatario = GovWay-Provider-Type
org.openspcoop2.testsuite.server.trasporto.destinatario = GovWay-Provider

# Nome della proprieta' nel trasporto
# contenente tipoServizio,servizio e azione
org.openspcoop2.testsuite.server.trasporto.tipoServizio = GovWay-Service-Type
org.openspcoop2.testsuite.server.trasporto.servizio = GovWay-Service
org.openspcoop2.testsuite.server.trasporto.versioneServizio = GovWay-Service-Version
org.openspcoop2.testsuite.server.trasporto.azione = GovWay-Action

# Nome della proprieta' nel trasporto
# contenente l'header collaborazione della richiesta in corso
org.openspcoop2.testsuite.server.trasporto.collaborazione = GovWay-Conversation-ID

# Servizio Applicativo
org.openspcoop2.testsuite.server.trasporto.integrazione.servizioApplicativo = GovWay-Application

# ID Applicativo
org.openspcoop2.testsuite.server.trasporto.integrazione.idApplicativo = GovWay-Application-Message-ID

# ID Transazione
org.openspcoop2.testsuite.server.trasporto.integrazione.idTransazione = GovWay-Transaction-ID

# CacheKey
org.openspcoop2.testsuite.server.trasporto.integrazione.cacheKey = GovWay-CacheKey

# Indicazione se aggiungere l'header http 'TransferEncoding' nelle risposte o lasciarlo gestire in autonomia all'application server
# WildFly usa Undertow (o JBoss Web), che ha un comportamento più permissivo che consente di impostare manualmente l'header e wildfly stesso lo aggiunge da solo se non già presente.
# Tomcat non lascia pieno controllo su Transfer-Encoding, e se non viene impostato Content-Length nella risposta e la connessione è HTTP/1.1 automaticamente imposta Transfer-Encoding: chunked, secondo le specifiche HTTP/1.1.
# Aggiungendolo manualmente quindi su tomcat si avrà un doppio header
org.openspcoop2.testsuite.server.trasporto.addTransferEncodingHeader=true


# ------------ URLBased ---------------------

# Nome della proprieta' nel trasporto
# contenente l'id della richiesta in corso
org.openspcoop2.testsuite.server.urlBased.id = govway_message_id

# Nome della proprieta' nel trasporto
# contenente il riferimento Asincrono
org.openspcoop2.testsuite.server.urlBased.riferimentoAsincrono = govway_relates_to

# Nome della proprieta' nel trasporto
# contenente il tipoMittente,mittente,tipoDestinatario e destinatario della richiesta in corso
org.openspcoop2.testsuite.server.urlBased.tipoMittente = govway_sender_type
org.openspcoop2.testsuite.server.urlBased.mittente = govway_sender
org.openspcoop2.testsuite.server.urlBased.tipoDestinatario = govway_provider_type
org.openspcoop2.testsuite.server.urlBased.destinatario = govway_provider

# Nome della proprieta' nel trasporto
# contenente tipoServizio,servizio e azione
org.openspcoop2.testsuite.server.urlBased.tipoServizio = govway_service_type
org.openspcoop2.testsuite.server.urlBased.servizio = govway_service
org.openspcoop2.testsuite.server.urlBased.versioneServizio = govway_service_version
org.openspcoop2.testsuite.server.urlBased.azione = govway_action

# Nome della proprieta' nel trasporto
# contenente l'header collaborazione della richiesta in corso
org.openspcoop2.testsuite.server.urlBased.collaborazione = govway_conversation_id

# Servizio Applicativo
org.openspcoop2.testsuite.server.urlBased.integrazione.servizioApplicativo = govway_application

# ID Applicativo
org.openspcoop2.testsuite.server.urlBased.integrazione.idApplicativo = govway_application_message_id

# ID Transazione
org.openspcoop2.testsuite.server.urlBased.integrazione.idTransazione = govway_transaction_id





# ------------ SOAP ---------------------

# Nome della proprieta' nel trasporto
# contenente l'id della richiesta in corso
org.openspcoop2.testsuite.server.soap.id = messageId

# Nome della proprieta' nel trasporto
# contenente il riferimento Asincrono
org.openspcoop2.testsuite.server.soap.riferimentoAsincrono = messageId

# Nome della proprieta' nel trasporto
# contenente il tipoMittente,mittente,tipoDestinatario e destinatario della richiesta in corso
org.openspcoop2.testsuite.server.soap.tipoMittente = senderType
org.openspcoop2.testsuite.server.soap.mittente = sender
org.openspcoop2.testsuite.server.soap.tipoDestinatario = providerType
org.openspcoop2.testsuite.server.soap.destinatario = provider

# Nome della proprieta' nel trasporto
# contenente tipoServizio,servizio e azione
org.openspcoop2.testsuite.server.soap.tipoServizio = serviceType
org.openspcoop2.testsuite.server.soap.servizio = service
org.openspcoop2.testsuite.server.soap.versioneServizio = serviceVersion
org.openspcoop2.testsuite.server.soap.azione = action

# Nome della proprieta' nel trasporto
# contenente l'header collaborazione della richiesta in corso
org.openspcoop2.testsuite.server.soap.collaborazione = conversationId

# Servizio Applicativo
org.openspcoop2.testsuite.server.soap.integrazione.servizioApplicativo = application

# ID Applicativo
org.openspcoop2.testsuite.server.soap.integrazione.idApplicativo = applicationMessageId

# ID Transazione
org.openspcoop2.testsuite.server.soap.integrazione.idTransazione = transactionId






# -- condizione di generazione di una risposta asincrona
# Controllo dei messaggi in corso di gestione sulla PdD
# (se attivo esclude il prossimo)
org.openspcoop2.testsuite.server.generazioneRispostAsincrona.attesaTerminazioneMessaggi=true
# Intervallo, in millisecondi
# Utilizzato per il calcolo del tempo impiegato in un test di performance asincrono
org.openspcoop2.testsuite.server.generazioneRispostAsincrona.timeToSleep = 30000

# timeout per il controllo del completamente del processamento dei messaggi
# in secondi (attendiTerminazioneMessaggi)
org.openspcoop2.testsuite.completamentoProcessamento.timeout = 120
# intervallo di controllo (in millisecondi)
org.openspcoop2.testsuite.completamentoProcessamento.checkInterval = 30

# Servizio di ricezione contenuti applicativo della Porta di Dominio
# che deve ricevere la risposta asincrona simmetrica
org.openspcoop2.testsuite.org.openspcoop2.PD.consegnaRispostaAsincronaSimmetrica=http://localhost:8080/govway/<protocol>/out/

# Possibili tipi registrati in govway.classRegistry.properties per check messaggi rimasti nel repository: default,bytewise,oracle
#org.openspcoop2.repository.gestore=org.openspcoop2.protocol.engine.driver.repository.GestoreRepositoryDefault
org.openspcoop2.repository.gestore=org.openspcoop2.protocol.engine.driver.repository.GestoreRepositoryBytewise
#org.openspcoop2.repository.gestore=org.openspcoop2.protocol.engine.driver.repository.GestoreRepositoryOracle
#org.openspcoop2.repository.gestore=org.openspcoop2.protocol.engine.driver.repository.GestoreRepositoryHyperSQL

# Protocolli gestiti
#org.openspcoop2.protocolloDefault=spcoop
