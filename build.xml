<project name="GovWay_build_jar" default="build">
		
	<description>
        Ambiente di compilazione dei jar della PdD
    </description>
		
	<!-- Env -->
	<property name="rootDir" location="." />
	<property name="openspcoop2" value="${rootDir}" />
	<property name="utils" location="tools/utils"/>
	<property name="genericProject" location="tools/generic_project"/>
	<property name="dist" location="dist" />
	<property name="build" location="build" />
	<property name="buildAPI" location="false" />
	<property name="buildAsRelease" value="false" />
	<property name="as" value="wildfly27" />
	<property name="debug" value="true" />

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${rootDir}/lib/ant/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<!-- Core -->
	<property name="core.dir" location="${rootDir}/core" />
	<available file="${core.dir}/local_env.xml" property="core_localenv.present"/>
	<if>
		<not>
			<equals arg1="${core_localenv.present}" arg2="true"/>
		</not>
		<then>
			  <copy file="${core.dir}/local_env.xml.template" tofile="${core.dir}/local_env.xml"/>
			  <replace file="${core.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${core.dir}/build.xml" />

	<!-- Protocollo ModIPA -->
	<property name="protocolli.modipa.dir" location="${rootDir}/protocolli/modipa" />
	<available file="${protocolli.modipa.dir}/local_env.xml" property="modipa_localenv.present"/>
	<if>
		<not>
			<equals arg1="${modipa_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${protocolli.modipa.dir}/local_env.xml.template" tofile="${protocolli.modipa.dir}/local_env.xml"/>
			<replace file="${protocolli.modipa.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${protocolli.modipa.dir}/build.xml" />
	
	<!-- Protocollo SPCoop -->
	<property name="protocolli.spcoop.dir" location="${rootDir}/protocolli/spcoop" />
	<available file="${protocolli.spcoop.dir}/local_env.xml" property="spcoop_localenv.present"/>
	<if>
		<not>
			<equals arg1="${spcoop_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${protocolli.spcoop.dir}/local_env.xml.template" tofile="${protocolli.spcoop.dir}/local_env.xml"/>
			<replace file="${protocolli.spcoop.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${protocolli.spcoop.dir}/build.xml" />
	
	<!-- Protocollo ProxyTrasparente -->
	<property name="protocolli.trasparente.dir" location="${rootDir}/protocolli/trasparente" />
	<available file="${protocolli.trasparente.dir}/local_env.xml" property="trasparente_localenv.present"/>
	<if>
		<not>
			<equals arg1="${trasparente_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${protocolli.trasparente.dir}/local_env.xml.template" tofile="${protocolli.trasparente.dir}/local_env.xml"/>
			<replace file="${protocolli.trasparente.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${protocolli.trasparente.dir}/build.xml" />
	
	<!-- Protocollo SDI Fatturazione Elettronica -->
	<property name="protocolli.sdi.dir" location="${rootDir}/protocolli/sdi" />
	<available file="${protocolli.sdi.dir}/local_env.xml" property="sdi_localenv.present"/>
	<if>
		<not>
			<equals arg1="${sdi_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${protocolli.sdi.dir}/local_env.xml.template" tofile="${protocolli.sdi.dir}/local_env.xml"/>
			<replace file="${protocolli.sdi.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${protocolli.sdi.dir}/build.xml" />

	<!-- Protocollo AS4 -->
	<property name="protocolli.as4.dir" location="${rootDir}/protocolli/as4" />
	<available file="${protocolli.as4.dir}/local_env.xml" property="as4_localenv.present"/>
	<if>
		<not>
			<equals arg1="${as4_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${protocolli.as4.dir}/local_env.xml.template" tofile="${protocolli.as4.dir}/local_env.xml"/>
			<replace file="${protocolli.as4.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${protocolli.as4.dir}/build.xml" />
	
	<!-- Tools - WebInterfaces - Lib - Users -->
	<property name="web.lib.users.dir" location="${rootDir}/tools/web_interfaces/lib/users" />
	<property name="users" value="${web.lib.users.dir}" />
	<available file="${web.lib.users.dir}/local_env.xml" property="web_lib_users_localenv.present"/>
	<if>
		<not>
			<equals arg1="${web_lib_users_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${web.lib.users.dir}/local_env.xml.template" tofile="${web.lib.users.dir}/local_env.xml"/>
			<replace file="${web.lib.users.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${web.lib.users.dir}/build.xml" />
	
	<!-- Tools - WebInterfaces - Lib - MVC -->
	<property name="web.lib.mvc.dir" location="${rootDir}/tools/web_interfaces/lib/mvc" />
	<property name="mvc" value="${web.lib.mvc.dir}" />
	<available file="${web.lib.mvc.dir}/local_env.xml" property="web_lib_mvc_localenv.present"/>
	<if>
		<not>
			<equals arg1="${web_lib_mvc_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${web.lib.mvc.dir}/local_env.xml.template" tofile="${web.lib.mvc.dir}/local_env.xml"/>
			<replace file="${web.lib.mvc.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${web.lib.mvc.dir}/build.xml" />
	
	<!-- Tools - WebInterfaces - Lib - Audit -->
	<property name="web.lib.audit.dir" location="${rootDir}/tools/web_interfaces/lib/audit" />
	<property name="audit" value="${web.lib.audit.dir}" />
	<available file="${web.lib.audit.dir}/local_env.xml" property="web_lib_audit_localenv.present"/>
	<if>
		<not>
			<equals arg1="${web_lib_audit_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${web.lib.audit.dir}/local_env.xml.template" tofile="${web.lib.audit.dir}/local_env.xml"/>
			<replace file="${web.lib.audit.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${web.lib.audit.dir}/build.xml" />
	
	<!-- Tools - WebInterfaces - govwayConsole -->
	<property name="web.govwayConsole.dir" location="${rootDir}/tools/web_interfaces/control_station" />
	<available file="${web.govwayConsole.dir}/local_env.xml" property="web_govwayConsole_localenv.present"/>
	<if>
		<not>
			<equals arg1="${web_govwayConsole_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${web.govwayConsole.dir}/local_env.xml.template" tofile="${web.govwayConsole.dir}/local_env.xml"/>
			<replace file="${web.govwayConsole.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${web.govwayConsole.dir}/build.xml" />

	<!-- Tools - WebInterfaces - govwayMonitor -->
	<property name="web.govwayMonitor.dir" location="${rootDir}/tools/web_interfaces/monitor" />
	<available file="${web.govwayMonitor.dir}/local_env.xml" property="web_govwayMonitor_localenv.present"/>
	<if>
		<not>
			<equals arg1="${web_govwayMonitor_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${web.govwayMonitor.dir}/local_env.xml.template" tofile="${web.govwayMonitor.dir}/local_env.xml"/>
			<replace file="${web.govwayMonitor.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${web.govwayMonitor.dir}/build.xml" />

	<!-- Tools - RS - config -->
	<property name="rs.config.dir" location="${rootDir}/tools/rs/config/server" />
	<property name="webInterfaces" location="${rootDir}/tools/web_interfaces" />
	<available file="${rs.config.dir}/local_env.xml" property="rs_config_localenv.present"/>
	<if>
		<not>
			<equals arg1="${rs_config_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${rs.config.dir}/local_env.xml.template" tofile="${rs.config.dir}/local_env.xml"/>
			<replace file="${rs.config.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${rs.config.dir}/build.xml" />

	<!-- Tools - RS - monitor -->
	<property name="rs.monitor.dir" location="${rootDir}/tools/rs/monitor/server" />
	<available file="${rs.monitor.dir}/local_env.xml" property="rs_monitor_localenv.present"/>
	<if>
		<not>
			<equals arg1="${rs_monitor_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${rs.monitor.dir}/local_env.xml.template" tofile="${rs.monitor.dir}/local_env.xml"/>
			<replace file="${rs.monitor.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${rs.monitor.dir}/build.xml" />

	<!-- Tools - batch - statistiche -->
	<property name="batch.statistiche.dir" location="${rootDir}/tools/batch/statistiche" />
	<available file="${batch.statistiche.dir}/local_env.xml" property="batch_statistiche_localenv.present"/>
	<if>
		<not>
			<equals arg1="${batch_statistiche_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${batch.statistiche.dir}/local_env.xml.template" tofile="${batch.statistiche.dir}/local_env.xml"/>
			<replace file="${batch.statistiche.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${batch.statistiche.dir}/build.xml" />

	<!-- Tools - batch - runtime_repository -->
	<property name="batch.runtimeRepository.dir" location="${rootDir}/tools/batch/runtime-repository" />
	<available file="${batch.runtimeRepository.dir}/local_env.xml" property="batch_runtimeRepository_localenv.present"/>
	<if>
		<not>
			<equals arg1="${batch_runtimeRepository_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${batch.runtimeRepository.dir}/local_env.xml.template" tofile="${batch.runtimeRepository.dir}/local_env.xml"/>
			<replace file="${batch.runtimeRepository.dir}/local_env.xml" token="wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${batch.runtimeRepository.dir}/build.xml" />

	<!-- Tools - cli - config_loader -->
	<property name="cli.configLoader.dir" location="${rootDir}/tools/command_line_interfaces/config_loader/" />
	<available file="${cli.configLoader.dir}/local_env.xml" property="cli_configLoader_localenv.present"/>
	<if>
		<not>
			<equals arg1="${cli_configLoader_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${cli.configLoader.dir}/local_env.xml.template" tofile="${cli.configLoader.dir}/local_env.xml"/>
			<replace file="${cli.configLoader.dir}/local_env.xml" token="jboss/wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${cli.configLoader.dir}/build.xml" />

	<!-- Tools - cli - vault -->
	<property name="cli.govwayVault.dir" location="${rootDir}/tools/command_line_interfaces/govway_vault/" />
	<available file="${cli.govwayVault.dir}/local_env.xml" property="cli_govwayVault_localenv.present"/>
	<if>
		<not>
			<equals arg1="${cli_govwayVault_localenv.present}" arg2="true"/>
		</not>
		<then>
			<copy file="${cli.govwayVault.dir}/local_env.xml.template" tofile="${cli.govwayVault.dir}/local_env.xml"/>
			<replace file="${cli.govwayVault.dir}/local_env.xml" token="jboss/wildfly/tomcat" value="${as}"/>
		</then>
	</if>
	<import file="${cli.govwayVault.dir}/build.xml" />
	
	
	
	<!-- Classpath -->
	<path id="classpath_compile" >
		<fileset dir="lib" >
			<exclude name="**/axis14/*"/>
			<exclude name="**/*README"/>
			<exclude name="*.userlibraries"/>
			<exclude name="axis14/*"/>
			<include name="commons/*"/>
			<include name="console/*"/>
			<include name="cxf/*"/>
			<include name="saaj/*"/>
			<include name="faces/*"/>
			<include name="jackson/*"/>
			<include name="jaxb/*"/>
			<include name="jakarta/*"/>
			<include name="json/*"/>
			<include name="log/*"/>
			<include name="security/*"/>
                        <include name="pdf/*"/>
			<include name="opensaml/*"/>
			<include name="wss4j/*"/>
			<include name="shared/*"/>
			<include name="redis/*"/>
			<include name="spring/*"/>
                        <include name="spring-ldap/*"/>
			<include name="spring-security/*"/>
			<include name="stub/cxf/*"/>
			<include name="swagger/*"/>
			<include name="openapi4j/*"/>
			<include name="reports/*"/>
			<include name="httpcore/*"/>
			<include name="testsuite/*"/>
			<include name="testsuite/apacheds/*"/>
			<include name="stub/cxf/openspcoop2_registrySearchStub_cxf.jar"/>
		</fileset>
	</path>
	<path id="classpath_dist" >
		<fileset dir="${dist}" >
			<include name="*.jar"/>
		</fileset>
	</path>	
	
	<target name="build">

		<delete dir="${dist}"/>	
		<delete dir="${build}"/>
		
		<antcall target="compile_genericProject" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src" value="${core.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
			<param name="buildUtilsTest" value="true"/>
		</antcall>
		
		<antcall target="build_openspcoop2_all" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src" value="${core.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
			<param name="buildUtilsTest" value="true"/>
			<param name="buildPddTest" value="true"/>
		</antcall>

		<antcall target="compile_modipa_plugin" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_modipa" value="${protocolli.modipa.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>
				
		<antcall target="compile_spcoop_plugin" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_spcoop" value="${protocolli.spcoop.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>

		<antcall target="compile_trasparente_plugin" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_trasparente" value="${protocolli.trasparente.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>
		
		<antcall target="compile_sdi_plugin" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_sdi" value="${protocolli.sdi.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>

		<antcall target="compile_as4_plugin" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_as4" value="${protocolli.as4.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>
		
		<antcall target="compile_users" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_users" value="${web.lib.users.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>
		
		<antcall target="compile_mvc" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_mvc" value="${web.lib.mvc.dir}/src"/>
			<param name="src_users" value="${web.lib.users.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>
		
		<antcall target="compile_audit" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_audit" value="${web.lib.audit.dir}/src"/>
			<param name="src_mvc" value="${web.lib.mvc.dir}/src"/>
			<param name="src_users" value="${web.lib.users.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>
		
		<antcall target="compile_openspcoop2_govwayConsole" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_govwayConsole" value="${web.govwayConsole.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>

		<antcall target="compile_openspcoop2_govwayMonitor" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="govwayMonitor" value="${web.govwayMonitor.dir}"/>
			<param name="src_govwayMonitor" value="${web.govwayMonitor.dir}/src"/>
			<param name="src_webinf_govwayMonitor" value="${web.govwayMonitor.dir}/src/WEB-INF" />
			<param name="src_core_govwayMonitor" value="${web.govwayMonitor.dir}/src/src_core" />
			<param name="src_stat_govwayMonitor" value="${web.govwayMonitor.dir}/src/src_stat" />
			<param name="src_transazioni_govwayMonitor" value="${web.govwayMonitor.dir}/src/src_transazioni" />
			<param name="src_eventi_govwayMonitor" value="${web.govwayMonitor.dir}/src/src_eventi" />
			<param name="src_allarmi_govwayMonitor" value="${web.govwayMonitor.dir}/src/src_allarmi" />
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>

		<antcall target="compile_openspcoop2_govwayConfigApiRS" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_govwayConfigApiRS" value="${rs.config.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
			<param name="openspcoop2.modipa.dist" value="${dist}"/>
		</antcall>

		<antcall target="compile_openspcoop2_govwayMonitorApiRS" >
			<param name="as" value="${as}"/>
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_govwayMonitorApiRS" value="${rs.monitor.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false"/>
		</antcall>

		<antcall target="compile_batchStatistiche">
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_batchStatistiche" value="${batch.statistiche.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false" />
		</antcall>

		<antcall target="compile_batchRuntimeRepository">
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_batchRuntimeRepository" value="${batch.runtimeRepository.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false" />
		</antcall>

		<antcall target="compile_cliConfigLoader">
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_cliConfigLoader" value="${cli.configLoader.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false" />
		</antcall>

		<antcall target="compile_cliVault">
			<param name="rootDir" value="${rootDir}"/>
			<param name="src_cliVault" value="${cli.govwayVault.dir}/src"/>
			<param name="debug" value="${debug}"/>
			<param name="buildAsRelease" value="true"/>
			<param name="buildAPI" value="false" />
		</antcall>

		<delete dir="${build}"/>		
		<delete includeEmptyDirs="true">
			<fileset dir="${dist}" excludes="*.jar"/>
		</delete>
		<if>
			<not>
				<equals arg1="${govway.version}" arg2="$${govway.version}" />
			</not>
			<then>
				<move todir="${dist}.backup">
					<fileset dir="${dist}"/>
				</move>
				<mkdir dir="${dist}"/>	
				<move todir="${dist}">
					<fileset dir="${dist}.backup">
						<include name="*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${govway.version}.jar"/>
				</move>
				<delete dir="${dist}.backup"/>	
			</then>
		</if>
		
	</target>
	
	
</project>
