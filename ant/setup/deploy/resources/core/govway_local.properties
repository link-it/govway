# ================================================
# Identificativo univoco della macchina
#org.openspcoop2.pdd.cluster_id=IDGW

# Identificativo univoco numerico della macchina
# NOTA: indicare un numero nel seguente intervallo: 0>=NUMERO<=99
#org.openspcoop2.pdd.cluster_id.numeric=NUMERO
#
# Cifre utilizzate per l’utilizzo dell'identificativo univoco numerico come prefisso di un numero seriale (es. identificativo eGov)
# Il numero di cifre consente di aggiungere un prefisso '0' all'identificativo numerico se inferiore al numero di cifre indicate.
# 1: permette di avere 10 macchine (da 0 a 9)
# 2: permette di avere 100 macchine (da 0 a 99)
# Ad esempio un identificativo 5 verrà serializzato come '05' in caso di 'org.openspcoop2.pdd.cluster_id.numeric.dinamico.cifre=2'
#org.openspcoop2.pdd.cluster_id.numeric.dinamico.cifre=NUMEROCIFRE
# ================================================

# ================================================
# JMX Resources
#org.openspcoop2.pdd.check.readJMXResources.enabled=true
#org.openspcoop2.pdd.check.readJMXResources.username=USERNAME
#org.openspcoop2.pdd.check.readJMXResources.password=PASSWORD
# ================================================

# ================================================
# Health check
# Se abilitato, il servizio /govway/check invocherà anche l'API REST e/o SOAP per verificare il corretto funzionamento di GovWay
# API REST
#org.openspcoop2.pdd.check.healthCheck.apiRest.enabled=true
#org.openspcoop2.pdd.check.healthCheck.apiRest.endpoint=http://localhost:8080/govway/SOGGETTO_LOCALE/api-rest-status/v1/status
# API SOAP
#org.openspcoop2.pdd.check.healthCheck.apiSoap.enabled=true
#org.openspcoop2.pdd.check.healthCheck.apiSoap.endpoint=http://localhost:8080/govway/SOGGETTO_LOCALE/api-soap-status/v1
#
# Report statistici
# Consente di verificare l'aggiornamento frequente dei campionamenti statistici.
# Se viene rilevata una data più vecchia rispetto a quanto indicato nella soglia, il servizio di health check ritorna un errore.
# Funzionamento della soglia:
# - se viene indicato un valore '1' si richiede che le statistiche siano aggiornate all'intervallo precedente: ad esempio, all'ora precedente per il campionamento orario o al giorno precedente per il giornaliero;
# - può essere indicato anche un valore '0' per imporre che le statistiche siano aggiornate (anche parzialmente) all'ultimo intervallo; questo controllo stringente potrebbe creare dei falsi positivi.
org.openspcoop2.pdd.check.healthCheck.reportStatistici.intervalloOrario.verifica=true
org.openspcoop2.pdd.check.healthCheck.reportStatistici.intervalloOrario.soglia=1
org.openspcoop2.pdd.check.healthCheck.reportStatistici.intervalloGiornaliero.verifica=true
org.openspcoop2.pdd.check.healthCheck.reportStatistici.intervalloGiornaliero.soglia=1
# È inoltre possibile aggiungere ai controllo di 'health check' effettuati invocando il servizio senza parametri anche l'aggiornamento dei dati statistici abilitando la proprietà seguente. 
# L'abilitazione di tale proprietà è sconsigliata poichè un eventuale rilevamento di dati statistici non aggiornati potrebbe rendere indisponibile il nodo 
# (es. un load balancer che utilizza il servizio di health check per individuare se un nodo è attivo o meno). Si consiglia invece di richiamare il servizio puntualmente utilizzando i parametri suddetti.
org.openspcoop2.pdd.check.healthCheck.reportStatistici.enabled=false
# ================================================

# ================================================
# Default
#org.openspcoop2.pdd.identificativoPorta.nome=<NomeSoggettoDefault>
#org.openspcoop2.pdd.identificativoPorta.dominio=<NomeSoggettoDefault>SPCoopIT
# Protocollo SPCoop
#org.openspcoop2.pdd.spcoop.identificativoPorta.nome=<NomeSoggettoDefault>
#org.openspcoop2.pdd.spcoop.identificativoPorta.dominio=<NomeSoggettoDefault>SPCoopIT
# Protocollo Proxy Trasparente
#org.openspcoop2.pdd.trasparente.identificativoPorta.nome=<NomeSoggettoDefault>
#org.openspcoop2.pdd.trasparente.identificativoPorta.dominio=domain/gw/<NomeSoggettoDefault>
# Protocollo AS4
#org.openspcoop2.pdd.as4.identificativoPorta.nome=<NomeSoggettoDefault>
#org.openspcoop2.pdd.as4.identificativoPorta.dominio=domain/as4/<NomeSoggettoDefault>
# Protocollo SDI
#org.openspcoop2.pdd.sdi.identificativoPorta.nome=<NomeSoggettoDefault>
#org.openspcoop2.pdd.sdi.identificativoPorta.dominio=domain/sdi/<NomeSoggettoDefault>
# ================================================

# ================================================
# Generazione Report
#
# Intervallo, in secondi, per l'aggiornamento dei campionamenti statistici
# Base oraria: ogni 5 minuti
org.openspcoop2.pdd.statistiche.generazione.baseOraria.timer.intervalloSecondi=300
# Base giornaliera: ogni 30 minuti
org.openspcoop2.pdd.statistiche.generazione.baseGiornaliera.timer.intervalloSecondi=1800
# Base settimanale: ogni ora
org.openspcoop2.pdd.statistiche.generazione.baseSettimanale.timer.intervalloSecondi=3600
# Base mensile: ogni 2 ore
org.openspcoop2.pdd.statistiche.generazione.baseMensile.timer.intervalloSecondi=7200

# Tipo di campionamenti abilitati
org.openspcoop2.pdd.statistiche.generazione.baseOraria.enabled=true
org.openspcoop2.pdd.statistiche.generazione.baseGiornaliera.enabled=true
org.openspcoop2.pdd.statistiche.generazione.baseSettimanale.enabled=false
org.openspcoop2.pdd.statistiche.generazione.baseMensile.enabled=false

# Aggiornamento intervallo corrente
org.openspcoop2.pdd.statistiche.generazione.baseOraria.gestioneUltimaOra=true
org.openspcoop2.pdd.statistiche.generazione.baseGiornaliera.gestioneUltimoGiorno=true
org.openspcoop2.pdd.statistiche.generazione.baseSettimanale.gestioneUltimaSettimana=false
org.openspcoop2.pdd.statistiche.generazione.baseMensile.gestioneUltimoMese=false
# ================================================

# ================================================
# L'interfaccia WSDL di una API SOAP, registrata su GovWay, è ottenibile attraverso una invocazione HTTP GET 
# utilizzando la medesima url di invocazione arricchita del prefisso '?wsdl'.
# 
# Per default la gestione delle richieste HTTP GET con prefisso '?wsdl' è disabilitata e tali richieste ottengono un errore 'HTTP 404 Not Found'.
# Le opzioni seguenti permettono di abilitare la funzionalità.
#
# Gestione WSDL sulle fruizioni
org.openspcoop2.pdd.pd.generateWsdl=false
#
# Gestione WSDL sulle erogazioni
org.openspcoop2.pdd.pa.generateWsdl=false
# ================================================

# ================================================
# Mediazione tramite WebServer (Fruizioni)
org.openspcoop2.pdd.services.pd.gestoreCredenziali.enabled=false
# Nome del WebServer che media le comunicazioni https con GovWay
org.openspcoop2.pdd.services.pd.gestoreCredenziali.nome=WebServer<NomeSoggettoDefault>
#
# Modalità di autenticazione da parte di GovWay del webServer (none/ssl/basic/principal)
org.openspcoop2.pdd.services.pd.gestoreCredenziali.autenticazioneCanale=none
# Credenziali attese da GovWay (a seconda della modalità di autenticazione indicata) che identificano il webServer
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.autenticazioneCanale.basic.username=Username
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.autenticazioneCanale.basic.password=Password
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.autenticazioneCanale.ssl.subject=Subject
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.autenticazioneCanale.principal=Principal
#
# Credenziale da inoltrare obbligatoria (none/atLeastOne/ssl/principal)
# - none: le richieste in arrivo possono anche non presentare alcun header che veicola credenziali.
# - atLeastOne: le richieste in arrivo devono presentare almeno un header che veicola credenziali. 
# - ssl/principal: le richieste in arrivo devono presentare gli header richiesti dalla modalità scelta, che è di fatto l'unica modalità di autenticazione poi configurabile sulle erogazioni.
# Con la modalità 'none' o 'atLeastOne' è possibile usare il gestore davanti a erogazioni con tipi di autenticazione differenti, 
# delegando quindi alla singola erogazione il controllo che le credenziali attese siano effettivamente presenti.
org.openspcoop2.pdd.services.pd.gestoreCredenziali.modalita=atLeastOne
# 
# Il WebServer, se effettua autenticazione https può inoltrare le informazioni sul certificato client tramite i seguenti header http.
# DN del Subject e dell'Issuer tramite gli header:
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.subject=X-SSL-Subject
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.issuer=X-SSL-Issuer
# Certificato tramite l'header:
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate=X-SSL-Cert
# Indicazione se l'header valorizzato con il certificato è url encoded:
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.url_decode=true/false
# Indicazione se l'header valorizzato con il certificato è base64 encoded:
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.base64_decode=true/false
# Indicazione se l'header valorizzato con il certificato è hex encoded:
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.hex_decode=true/false
# Abilitando la seguente opzione, l'header valorizzato con il certificato può essere url encoded o base64 encoded (verranno provate tutte le decodifiche):
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.url_decode_or_base64_decode_or_hex_decode=true/false
# TrustStore per verificare i certificati ricevuti
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.truststore.path=PATH
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.truststore.type=jks
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.truststore.password=
# Indicazione se deve essere verificata la scadenza dei certificati verificati (default:true)
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.truststore.validityCheck=false
# Elenco delle CRL per verificare i certificati ricevuti
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.truststore.crls=PATH1.crl,PATH2.crl...
# Policy OCSP utilizzata per verificare i certificati ricevuti
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.truststore.ocspPolicy=INDICARE_TIPO_POLICY
# Se la proprietà seguente viene valorizzata, il valore indicato specifica una keyword utilizzata dal web server di frontend per indicare che non è presente alcun certificato client
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.ssl.certificate.none=
#
# L'identità del chiamante può essere fornita dal WebServer anche come informazione 'principal' tramite il seguente header:
#org.openspcoop2.pdd.services.pd.gestoreCredenziali.header.principal=X-Principal
# ================================================

# ================================================
# Mediazione tramite WebServer (Erogazioni)
org.openspcoop2.pdd.services.pa.gestoreCredenziali.enabled=false
# Nome del WebServer che media le comunicazioni https con GovWay
org.openspcoop2.pdd.services.pa.gestoreCredenziali.nome=WebServer<NomeSoggettoDefault>
#
# Modalità di autenticazione da parte di GovWay del webServer (none/ssl/basic/principal)
org.openspcoop2.pdd.services.pa.gestoreCredenziali.autenticazioneCanale=none
# Credenziali attese da GovWay (a seconda della modalità di autenticazione indicata) che identificano il webServer
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.autenticazioneCanale.basic.username=Username
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.autenticazioneCanale.basic.password=Password
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.autenticazioneCanale.ssl.subject=Subject
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.autenticazioneCanale.principal=Principal
#
# Credenziale da inoltrare obbligatoria (none/atLeastOne/ssl/principal)
# - none: le richieste in arrivo possono anche non presentare alcun header che veicola credenziali.
# - atLeastOne: le richieste in arrivo devono presentare almeno un header che veicola credenziali. 
# - ssl/principal: le richieste in arrivo devono presentare gli header richiesti dalla modalità scelta, che è di fatto l'unica modalità di autenticazione poi configurabile sulle erogazioni.
# Con la modalità 'none' o 'atLeastOne' è possibile usare il gestore davanti a erogazioni con tipi di autenticazione differenti, 
# delegando quindi alla singola erogazione il controllo che le credenziali attese siano effettivamente presenti.
org.openspcoop2.pdd.services.pa.gestoreCredenziali.modalita=atLeastOne
# 
# Il WebServer, se effettua autenticazione https può inoltrare le informazioni sul certificato client tramite i seguenti header http.
# DN del Subject e dell'Issuer tramite gli header:
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.subject=X-SSL-Subject
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.issuer=X-SSL-Issuer
# Certificato tramite l'header:
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate=X-SSL-Cert
# Indicazione se l'header valorizzato con il certificato è url encoded:
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.url_decode=true/false
# Indicazione se l'header valorizzato con il certificato è base64 encoded:
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.base64_decode=true/false
# Indicazione se l'header valorizzato con il certificato è hex encoded:
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.hex_decode=true/false
# Abilitando la seguente opzione, l'header valorizzato con il certificato può essere url encoded o base64 encoded o hex encoded (verranno provate tutte le decodifiche):
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.url_decode_or_base64_decode_or_hex_decode=true/false
# TrustStore per verificare i certificati ricevuti
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.truststore.path=PATH
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.truststore.type=jks
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.truststore.password=
# Indicazione se deve essere verificata la scadenza dei certificati verificati (default:true)
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.truststore.validityCheck=false
# Elenco delle CRL per verificare i certificati ricevuti
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.truststore.crls=PATH1.crl,PATH2.crl...
# Policy OCSP utilizzata per verificare i certificati ricevuti
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.truststore.ocspPolicy=INDICARE_TIPO_POLICY
# Se la proprietà seguente viene valorizzata, il valore indicato specifica una keyword utilizzata dal web server di frontend per indicare che non è presente alcun certificato client
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.ssl.certificate.none=
#
# L'identità del chiamante può essere fornita dal WebServer anche come informazione 'principal' tramite il seguente header:
#org.openspcoop2.pdd.services.pa.gestoreCredenziali.header.principal=X-Principal
# ================================================

# ================================================
# FileTrace
# Indicazione se la funzionalità è abilitata o meno
org.openspcoop2.pdd.transazioni.fileTrace.enabled=false
#
# Indicazione se nella funzionalità è consentito l'accesso ai contenuti
# -- Fruizioni --
# inRequest/outResponse
org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPD.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPD.payload.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPD.headers.enabled=true
# outRequest/inResponse
org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPD.connettore.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPD.connettore.payload.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPD.connettore.headers.enabled=true
# -- Erogazioni --
# inRequest/outResponse
org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPA.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPA.payload.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPA.headers.enabled=true
# outRequest/inResponse
org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPA.connettore.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPA.connettore.payload.enabled=true
#org.openspcoop2.pdd.transazioni.fileTrace.dumpBinarioPA.connettore.headers.enabled=true
#
# File di Configurazione
# Il file può essere indicato con un path assoluto o relativo rispetto alla directory di configurazione
org.openspcoop2.pdd.transazioni.fileTrace.config=govway.fileTrace.properties
# ================================================

# ================================================
# RateLimiting 
#
# -- Sincronizzazione Locale con quota divisa tra i nodi --
# Quota effettiva
org.openspcoop2.pdd.controlloTraffico.gestorePolicy.inMemory.LOCAL_DIVIDED_BY_NODES.limit.roundingDown=true
# Quota normalizzata
org.openspcoop2.pdd.controlloTraffico.gestorePolicy.inMemory.LOCAL_DIVIDED_BY_NODES.limit.normalizedQuota=false
# Remaining zeroValue
org.openspcoop2.pdd.controlloTraffico.gestorePolicy.inMemory.LOCAL_DIVIDED_BY_NODES.remaining.zeroValue=false
#
# -- Hazelcast --
# Identificativo del cluster
org.openspcoop2.pdd.controlloTraffico.gestorePolicy.inMemory.HAZELCAST.group_id=govway
#
# -- Redis --
# Connection Url (possono essere fornite più url separate da virgola)
# usare rediss:// per TLS (con due s)
org.openspcoop2.pdd.controlloTraffico.gestorePolicy.inMemory.REDIS.connectionUrl=redis://127.0.0.1:7000
# ================================================

# ================================================
# Gestione Chiavi PDND
#
# Indica se è abilitato il timer di gestione delle chiavi PDND
# L'abilitazione richiede inoltre che sia definito nel modi.properties il remoteStore per la PDND
org.openspcoop2.pdd.gestoreChiaviPDND.enabled=false
#
# Max life in minuti di una chiave registrata sul database
# (Se la proprietà viene valorizzata con un valore <=0 la chiave ha vita infinita)
# 43200 = 30 giorni
org.openspcoop2.pdd.gestoreChiaviPDND.keys.maxLifeMinutes=43200
#
# Numero di eventi massimi recuperati dalla PDND
org.openspcoop2.pdd.gestoreChiaviPDND.events.keys.limit=100
#
# Intervallo, in secondi, ogni quanto vengono controllati eventuali nuovi eventi sulla PDND
# Ogni ora (senza ultimo intervallo)
org.openspcoop2.pdd.gestoreChiaviPDND.events.keys.timer.intervalloSecondi=3600
# Intervallo, in secondi, ogni quanto vengono verificate le chiavi in cache
org.openspcoop2.pdd.gestoreChiaviPDND.cache.keys.timer.intervalloSecondi=300
# ================================================

# ================================================
# Informazioni Chiamante prelevate dalla PDND
#
# Indicazione se deve essere utilizzata la PDND per ottenere maggiori informazioni sul chiamante
org.openspcoop2.pdd.gestorePDND.clientInfo.enabled=false
#
# Max life in minuti delle informazioni sul client associate alla chiave registrata sul database
# (Se la proprietà viene valorizzata con un valore <=0 le informazioni hanno vita infinita)
# 43200 = 30 giorni
org.openspcoop2.pdd.gestorePDND.clientInfo.maxLifeMinutes=43200
# 
# Indicazione se far fallire la transazione in caso il recupero delle informazioni sul client o sull'organizzazione fallisca
org.openspcoop2.pdd.gestorePDND.clients.error.abortTransaction=false
org.openspcoop2.pdd.gestorePDND.organizations.error.abortTransaction=false
# ================================================
