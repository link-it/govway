# ================================================
# Configurazione di una memoria ausiliaria per il caching delle risposte
# 
# Per default la cache mantiene le risposte salvate solamente in memoria.
# Con la seguente configurazione si abilita anche una cache ausiliaria su file system.
#jcs.region.responseCaching=responseCachingDiskCache
#jcs.region.responseCaching.elementattributes.IsSpool=true
#
# Configurazione della Memoria Ausiliaria
jcs.auxiliary.responseCachingDiskCache=org.apache.commons.jcs3.auxiliary.disk.indexed.IndexedDiskCacheFactory
jcs.auxiliary.responseCachingDiskCache.attributes=org.apache.commons.jcs3.auxiliary.disk.indexed.IndexedDiskCacheAttributes
# The directory where the disk cache should write its files.
jcs.auxiliary.responseCachingDiskCache.attributes.DiskPath=/etc/govway/indexed-disk-cache
# The maximum number of items allowed in the queue of items to be written to disk.
jcs.auxiliary.responseCachingDiskCache.attributes.MaxPurgatorySize=5000
# The maximum number of keys that the indexed disk cache can have. 
# Since the keys are stored in memory, you may want to limit this number to something reasonable. The default is a bit small.
jcs.auxiliary.responseCachingDiskCache.attributes.MaxKeySize=5000
# At how many removes should the cache try to defragment the data file. 
# Since we recycle empty spots, defragmentation is usually not needed. 
# To prevent the cache from defragmenting the data file, you can set this to -1. This is the default value.
jcs.auxiliary.responseCachingDiskCache.attributes.OptimizeAtRemoveCount=-1
# By default the Indexed Disk Cache will optimize on shutdown if the free data size is greater than 0. 
# If you want to prevent this behavior, you can set this parameter to false.	
jcs.auxiliary.responseCachingDiskCache.attributes.OptimizeOnShutdown=true
# By default the Indexed Disk Cache will use items found on disk on startup. 
# If you set this value to true, the old key and data files will be cleared.	
jcs.auxiliary.responseCachingDiskCache.attributes.ClearDiskOnStartup=false
# There are two ways to limit the cache size: using element count and element size. 
# When using element count, in disk store there will be at most MaxKeySize elements. 
# When using element size, there will be at most KeySize kB of elements stored in the data file. 
# The file can be bigger due to fragmentation. 
# The limit does not cover the size of key file so the total space occupied by the cache might be a bit bigger. 
# The mode is chosen using DiskLimitType. Allowed values are: COUNT and SIZE.
jcs.auxiliary.responseCachingDiskCache.attributes.DiskLimitType=COUNT
# ================================================

