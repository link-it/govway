
<project name="setup" basedir=".">
	
	<description>
        	SETUP
	</description>

	<import file="local_env.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	
	<import file="./ant/pdd-build.xml" />
	<import file="./ant/sql-build.xml" />
	<import file="./ant/sqlInstallerProps-build.xml" />
	<import file="./ant/ds-build.xml" />
	<import file="./ant/govwayConsole-build.xml" />
	<import file="./ant/govwayMonitor-build.xml" />
	<import file="./ant/loader-build.xml" />
	<import file="./ant/govwayAPIConfig-build.xml" />
	<import file="./ant/govwayAPIMonitor-build.xml" />
	<import file="./ant/batchStatistiche-build.xml" />
	<import file="./ant/batchRuntimeRepository-build.xml" />
	<import file="./ant/cliVault-build.xml" />
	<import file="./ant/cliConfigLoader-build.xml" />
	<import file="./ant/distrib-build.xml" />
	<import file="./ant/patch-build.xml" />
	<import file="./ant/archiveAdd-build.xml" />
	<import file="./ant/jar-build.xml" />
	<import file="../commons/utils.xml" />
	
	<property name="deploy_resources" location="deploy/resources" />
	<property name="deploy_sw" location="deploy/sw" />
	<property name="deploy_sql" location="deploy/sql" />
	<property name="deploy_ds" location="deploy/datasource" />
	<property name="deploy_jms" location="deploy/jms" />
	<property name="deploy_patch" location="deploy/patch" />
	<property name="deploy_archivi_add" location="deploy/archivi_add" />
	<property name="tmp_archivi" location="${build}/archivi" />
	<property name="tmp_batch" location="${build}/batch" />
	<property name="tmp_tools" location="${build}/tools" />
	<property name="tmp_sql" location="${build}/sql" />
	<property name="tmp_sql_completi" location="${build}/sql_completi" />
	<property name="tmp_ds" location="${build}/ds" />
	<property name="tmp_cfg" location="${build}/cfg" />
	
	<!-- Ripulisce la distribuzione -->
	<target name="clean">
		<delete dir="${build}" includeemptydirs="true" verbose="true" />
		<delete dir="${dist}" includeemptydirs="true" verbose="true" />
	</target>

	
	<!-- Create the build directory structure used by compile -->
	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${tmp_sql}" />
		<mkdir dir="${tmp_ds}" />
		<mkdir dir="${tmp_archivi}" />
		<!-- <mkdir dir="${tmp_batch}" /> La creamo se serve, nello specifico task. -->
		<!-- <mkdir dir="${tmp_tools}" /> La creamo se serve, nello specifico task. -->
		<mkdir dir="${tmp_cfg}" />
		<mkdir dir="${dist}" />
	</target>
	
	
	<!-- 
		Impostazione variabili prelevate da SETUP antinstaller, esempio:
		
		intro
			antinstaller_versione_attuale_con_p_level
			antinstaller_versione_attuale
			antinstaller_conf_avanzata_enabled=true/false
			antinstaller_architettura_avanzata_enabled=true/false

		ModalitÃ Installazione
			antinstaller_modalita_installazione=nuova/aggiornamento
			antinstaller_tipo_installazione=standard/avanzata

		Aggiornamento		
			antinstaller_versione_precedente

		Informazioni preliminari
			antinstaller_directory_lavoro_openspcoop=/var/govway
			antinstaller_directory_log_openspcoop=/var/govway/log
			antinstaller_tipo_database=postgresql
			antinstaller_as=jboss5  -> Trasformata poi nel build reale subito sotto attraverso la variabile build_for_as
			
		Informazioni Dispiegamento
			antinstaller_config_db=runtime/config
			antinstaller_log_db=runtime/log
			antinstaller_index_transazioni=standard/full
			antinstaller_stats_db=runtime/log/stats
			antinstaller_index_statistiche=standard/full
			antinstaller_console_env=runtime/manager
			antinstaller_stats_env=runtime/batch/runtime_batchPrepared
			antinstaller_batch_dir=
			antinstaller_batch_system_out=
			antinstaller_gestione_nodi=static/dynamic
			antinstaller_tools_system_out=
			antinstaller_tools_cliVault=
			antinstaller_tools_cliConfigLoader=

		Informazioni DataSource
			antinstaller_driver_jdbc_classname=org.postgresql.Driver
			antinstaller_driver_jdbc=NOME_DRIVER_JDBC.jar
			antinstaller_dbname=openspcoop
			antinstaller_dbhost=127.0.0.1
			antinstaller_dbport=5432
			antinstaller_dbusername=openspcoop
			antinstaller_dbpassword=openspcoop
			antinstaller_oracle_mode=SID/serviceName
			
		Informazioni DataSource dedicato alle Configurazioni
			antinstaller_dbname_config=openspcoop
			antinstaller_dbhost_config=127.0.0.1
			antinstaller_dbport_config=5432
			antinstaller_dbusername_config=openspcoop
			antinstaller_dbpassword_config=openspcoop
			antinstaller_oracle_mode_config=SID/serviceName

		Informazioni DataSource dedicato alle Tracce
			antinstaller_dbname_log=openspcoop
			antinstaller_dbhost_log=127.0.0.1
			antinstaller_dbport_log=5432
			antinstaller_dbusername_log=openspcoop
			antinstaller_dbpassword_log=openspcoop
			antinstaller_oracle_mode_log=SID/serviceName

		Informazioni DataSource dedicato alle Statistiche
			antinstaller_dbname_stats=openspcoop
			antinstaller_dbhost_stats=127.0.0.1
			antinstaller_dbport_stats=5432
			antinstaller_dbusername_stats=openspcoop
			antinstaller_dbpassword_stats=openspcoop
			antinstaller_oracle_mode_stats=SID/serviceName

		Dispiegamento Dinamico
			antinstaller_gestione_nodi_group_id=
			antinstaller_gestione_nodi_numeric_id_mode=static/dynamic/db
			antinstaller_gestione_nodi_numeric_id_cifre=2
			antinstaller_gestione_nodi_check_url=
			antinstaller_gestione_nodi_check_username=
			antinstaller_gestione_nodi_check_password=
			antinstaller_gestione_nodi_proxy_url=
			antinstaller_gestione_nodi_proxy_username=
			antinstaller_gestione_nodi_proxy_password=
			antinstaller_gestione_nodi_proxy_asyncUpdate=
			antinstaller_gestione_nodi_proxy_asyncUpdate_schema=
			antinstaller_gestione_nodi_proxy_asyncUpdate_hostname=
			antinstaller_gestione_nodi_proxy_asyncUpdate_port=
			antinstaller_gestione_nodi_proxy_asyncUpdate_checkInterval=
			antinstaller_gestione_nodi_proxy_asyncUpdate_classname=

		Configurazione Utenze
			antinstaller_pddconsole_username=amministratore
			antinstaller_pddconsole_password=
			antinstaller_pddmonitor_username=operatore
			antinstaller_pddmonitor_password=

		Configurazione Servizi
			antinstaller_rs_config=true/false
			antinstaller_rs_monitor=true/false
			antinstaller_rs_rest_status=true/false
			antinstaller_rs_soap_status=true/false
			antinstaller_token_google=true/false
			antinstaller_plugin_suap_errors=true/false

		Cooperazione Applicativa
			antinstaller_protocollo_trasparente=true
			antinstaller_protocollo_modipa=true
			antinstaller_protocollo_spcoop=true
			antinstaller_protocollo_as4=true
			antinstaller_protocollo_sdi=false
			antinstaller_nomesoggetto=NOMESOGGETTO
			antinstaller_tiposoggetto_trasparente=gw
			antinstaller_tiposoggetto_modipa=modipa
			antinstaller_tiposoggetto_spcoop=spc
			antinstaller_tiposoggetto_as4=as4
			antinstaller_tiposoggetto_sdi=sdi
			
		Configurazione Avanzata
			antinstaller_stateful=false
			antinstaller_timer_consegna=false
			antinstaller_integration_manager=false
			antinstaller_sec_container=false

		Configurazione Profilo eDelivery (1/3)
			antinstaller_as4_as=wildfly12/tomcat
			antinstaller_as4_tipo_database=mysql/oracle

		Configurazione Profilo eDelivery (2/3)
			antinstaller_as4_msh=
			antinstaller_as4_backend=
			antinstaller_as4_jms_url=
			antinstaller_as4_jms_username=
			antinstaller_as4_jms_password=

		Configurazione Profilo eDelivery (3/3)
			antinstaller_as4_driver_jdbc_classname=com.mysql.jdbc.Driver
			antinstaller_as4_driver_jdbc=NOME_DRIVER_JDBC.jar
			antinstaller_as4_dbname=domibus
			antinstaller_as4_dbhost=127.0.0.1
			antinstaller_as4_dbport=3306
			antinstaller_as4_dbusername=domibus
			antinstaller_as4_dbpassword=domibus
			antinstaller_as4_oracle_mode=SID/serviceName
			
	 -->

	<!-- Per agganciare loader valorizzare questa proprieta'
	<var name="antinstaller_loader" value="true" />
	-->	

	<if>
		<or>
			<matches string="${antinstaller_as}" pattern="jboss.*"/>
			<matches string="${antinstaller_as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="datasource_pdd_name" value="org.govway.datasource"/>
			<var name="datasource_console_name" value="org.govway.datasource.console"/>
			<var name="datasource_domibus_name" value="org.govway.datasource.domibus"/>
		</then>
		<else>
			<var name="datasource_pdd_name" value="java:/comp/env/org.govway.datasource"/>
			<var name="datasource_console_name" value="java:/comp/env/org.govway.datasource.console"/>
			<var name="datasource_domibus_name" value="java:/comp/env/org.govway.datasource.domibus"/>
		</else>
	</if>
	<if>
		<or>
			<matches string="${antinstaller_as}" pattern="tomcat.*"/>
		</or>
		<then>
			<var name="build_for_as" value="tomcat9"/>
		</then>
		<else>
			<var name="build_for_as" value="${antinstaller_as}"/>
		</else>
	</if>
	<if>
		<or>
			<matches string="${antinstaller_as}" pattern="tomcat.*"/>
			<equals arg1="${antinstaller_stateful}" arg2="false" />
			<equals arg1="${antinstaller_stateful}" arg2="" />
			<equals arg1="${antinstaller_stateful}" arg2="$${antinstaller_stateful}" />
		</or>
		<then>
			<var name="build_openspcoop_archive_suffix" value="stateless"/>
		</then>
		<else>
			<var name="build_openspcoop_archive_suffix" value="stateful"/>
		</else>
	</if>
	<if>
		<or>
			<equals arg1="${antinstaller_sec_container}" arg2="true" />
		</or>
		<then>
			<var name="build_openspcoop_sec_archive" value="true"/>
		</then>
		<else>
			<!-- per default lascio disabilitato -->
			<var name="build_openspcoop_sec_archive" value="false"/>
		</else>
	</if>

	
	<target name="setup" depends="clean,init">

		<if>
			<or>
				<equals arg1="${ant.java.version}" arg2="1.3" />
				<equals arg1="${ant.java.version}" arg2="1.4" />
		     		<equals arg1="${ant.java.version}" arg2="1.5" />
				<equals arg1="${ant.java.version}" arg2="1.6" />
				<equals arg1="${ant.java.version}" arg2="1.7" />
				<equals arg1="${ant.java.version}" arg2="1.8" />
				<equals arg1="${ant.java.version}" arg2="9" />
				<equals arg1="${ant.java.version}" arg2="10" />
			</or>
			<then>
				<echo message="Java version: ${ant.java.version}"/>
				<fail message="E' richiesta una versione di java 11 o superiore"/>
			</then>
		</if>
		
		<if>
		        <equals arg1="${antinstaller_directory_lavoro_openspcoop}" arg2="" />
		        <then>
		                <echo message="Errore: deve essere specificata una directory di lavoro" />
		                <fail message="Errore: deve essere specificata una directory di lavoro"/>
		        </then>
		</if>

		<if>
		        <equals arg1="${antinstaller_directory_log_openspcoop}" arg2="" />
		        <then>
		                <echo message="Errore: deve essere specificata una directory di log" />
		                <fail message="Errore: deve essere specificata una directory di log"/>
		        </then>
		</if>

		
		<!-- Impostazione slash per windows in stile unix -->
	    	<if>
			<or>
				<os family="windows"/>
				<os family="dos"/>
			</or>
			<then>
				<propertyregex property="work_dir" override="true" input="${antinstaller_directory_lavoro_openspcoop}" 
					defaultValue="${antinstaller_directory_lavoro_openspcoop}" regexp="\\" replace="/" />
				<propertyregex property="log_dir" override="true" input="${antinstaller_directory_log_openspcoop}" 
					defaultValue="${antinstaller_directory_log_openspcoop}" regexp="\\" replace="/" />
				<if>
					<not>
						<equals arg1="${antinstaller_batch_dir}" arg2="" />
					</not>
					<then>
						<propertyregex property="batch_dir" override="true" input="${antinstaller_batch_dir}" 
							defaultValue="${antinstaller_batch_dir}" regexp="\\" replace="/" />
					</then>
					<else>
						<property name="batch_dir" value=""/>
					</else>
				</if>

			</then>
	    		<else>
	    			<property name="work_dir" value="${antinstaller_directory_lavoro_openspcoop}"/>
				<property name="log_dir" value="${antinstaller_directory_log_openspcoop}"/>
				<if>
					<not>
						<equals arg1="${antinstaller_batch_dir}" arg2="" />
					</not>
					<then>
						<property name="batch_dir" value="${antinstaller_batch_dir}"/>
					</then>
					<else>
						<property name="batch_dir" value=""/>
					</else>
				</if>
	    		</else>
		</if>	

                <!-- Normalizzazione '/' -->
                <if>
                        <matches pattern=".*/$" string="${work_dir}" /> 
                        <then>
                                <echo message="Normalizzazione WorkDIR [${work_dir}]"/>
                                <script language="javascript">
                                        var w = project.getProperty("work_dir");
                                        project.setProperty("work_dir", w.substring(0,w.length()-1));
                                </script>
                                <echo message="DOPO Normalizzazione WorkDIR [${work_dir}]"/>
                        </then>
                </if>
                <if>
                        <matches pattern=".*/$" string="${log_dir}" /> 
                        <then>
                                <echo message="Normalizzazione LogDIR [${log_dir}]"/>
                                <script language="javascript">
                                        var w = project.getProperty("log_dir");
                                        project.setProperty("log_dir", w.substring(0,w.length()-1));
                                </script>
                                <echo message="DOPO Normalizzazione LogDIR [${log_dir}]"/>
                        </then>
                </if> 
		<if>
			<not>
				<equals arg1="${batch_dir}" arg2="" />
			</not>
			<then>
				<if>
				        <matches pattern=".*/$" string="${batch_dir}" /> 
				        <then>
				                <echo message="Normalizzazione BatchDIR [${batch_dir}]"/>
				                <script language="javascript">
				                        var w = project.getProperty("batch_dir");
				                        project.setProperty("batch_dir", w.substring(0,w.length()-1));
				                </script>
				                <echo message="DOPO Normalizzazione BatchDIR [${batch_dir}]"/>
				        </then>
				</if>
			</then>
		</if>
		
		<!-- Impostazione Trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<antcall target="setup_trasparente"/>
			</then>
		</if>

		<!-- Impostazione ModI -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}" />
			<then>
				<antcall target="setup_modipa"/>
			</then>
		</if>

		<!-- Impostazione SPCoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<antcall target="setup_spcoop"/>
			</then>
		</if>

		<!-- Impostazione AS4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<antcall target="setup_as4"/>
			</then>
		</if>

		<!-- Impostazione SDI -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<antcall target="setup_sdi"/>
			</then>
		</if>

		<!-- Impostazione workDir nei protocolli (Lasciarla dopo l'impostazione dei protocolli!!!) -->
		<antcall target="setup_workDir_protocolli"/>

	</target>
		
	<target name="setup_workDir_protocolli" depends="_setup_workDir_protocolli"/>
	<target name="_setup_workDir_protocolli">
		
		<!-- Impostazione Trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="trasparente"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione ModI -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="modipa"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione SPCoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="spcoop"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione AS4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="as4"/>
				</antcall>
			</then>
		</if>
		<!-- Impostazione SDI -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<antcall target="_setup_workDir_protocollo">
					<param name="protocolName" value="sdi"/>
				</antcall>
			</then>
		</if>

	</target>
	<target name="_setup_workDir_protocollo">
		<!-- impostazione proprieta' in as4.properties -->
		<fileset dir="${deploy_sw}" id="archiveProtocol.txt">
		        <include name="openspcoop2_${protocolName}-protocol_*.jar"/>
			<exclude name="openspcoop2_${protocolName}-protocol_*Stub_cxf.jar"/>
		</fileset>
		<pathconvert pathsep=" " property="archiveProtocol_name.txt" refid="archiveProtocol.txt">
		        <map from="${deploy_sw}/" to=""/>
		</pathconvert>
		<!-- <echo message="FILE_NAME '${protocolName}' [${archiveProtocol_name.txt}]"/> -->
		
		<delete dir="${tmp_cfg}/JAR_${protocolName}"/>
		<unzip src="${deploy_sw}/${archiveProtocol_name.txt}" dest="${tmp_cfg}/JAR_${protocolName}"/>
		<concat destfile="${tmp_cfg}/JAR_${protocolName}/${protocolName}.properties" append="yes" >

# ----- Personalizzazione Setup GovWay (confDirectory) -------------
		</concat>

		<replace file="${tmp_cfg}/JAR_${protocolName}/${protocolName}.properties" token="/etc/govway" value="${work_dir}"/>

		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_${protocolName}/${protocolName}.properties"/>
			<param name="token" value="org.openspcoop2.protocol.${protocolName}.confDirectory"/>
			<param name="value" value="${work_dir}"/>
		</antcall>

		<delete file="${deploy_sw}/${archiveProtocol_name.txt}"/>
		<jar destfile="${deploy_sw}/${archiveProtocol_name.txt}" basedir="${tmp_cfg}/JAR_${protocolName}"/>
		<delete dir="${tmp_cfg}/JAR_${protocolName}"/>
	</target>

	<target name="setup_trasparente" depends="_setup_trasparente"/>
	<target name="_setup_trasparente">
		<!-- per ora e' NOP -->
		<!-- <copy file="${deploy_resources}/protocolli/trasparente/trasparente_local.properties" todir="${tmp_cfg}"/> -->
	</target>

	<target name="setup_modipa" depends="_setup_modipa"/>
	<target name="_setup_modipa">
		<copy file="${deploy_resources}/protocolli/modipa/modipa_local.properties" todir="${tmp_cfg}"/>

		<replace file="${tmp_cfg}/modipa_local.properties" token="WORK_DIR" value="${work_dir}"/>
		<replace file="${tmp_cfg}/modipa_local.properties" token="/SOGGETTO_LOCALE/" value="/${antinstaller_nomesoggetto}/"/>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_cfg}"/>
		    <param name="file" value="modipa_local.properties"/>
		</antcall>
	</target>

	<target name="setup_spcoop" depends="_setup_spcoop"/>
	<target name="_setup_spcoop">
		<copy file="${deploy_resources}/protocolli/spcoop/spcoop_local.properties" todir="${tmp_cfg}"/>
	</target>

	<target name="setup_as4" depends="_setup_as4"/>
	<target name="_setup_as4">
		<mkdir dir="${tmp_cfg}/as4"/>
		<mkdir dir="${tmp_cfg}/as4/securityPolicies"/>
		<copy todir="${tmp_cfg}/as4/securityPolicies">
			<fileset dir="${deploy_resources}/protocolli/as4/securityPolicies"/>
		</copy>
		<if>
			<equals arg1="${antinstaller_as4_as}" arg2="tomcat"/>
			<then>
				<copy file="${deploy_resources}/protocolli/as4/as4_local.properties.tomcat" tofile="${tmp_cfg}/as4_local.properties"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="http://DOMIBUS-HOST:8080/domibus/services/backend" value="${antinstaller_as4_backend}"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="tcp://DOMIBUS-HOST:61616" value="${antinstaller_as4_jms_url}"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="admin" value="${antinstaller_as4_jms_username}"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="123456" value="${antinstaller_as4_jms_password}"/>
			</then>
		</if>
		<if>
			<equals arg1="${antinstaller_as4_as}" arg2="wildfly12"/>
			<then>
				<copy file="${deploy_resources}/protocolli/as4/as4_local.properties.wildfly12" tofile="${tmp_cfg}/as4_local.properties"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="http://DOMIBUS-HOST:8080/domibus-wildfly/services/backend" value="${antinstaller_as4_backend}"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="http-remoting://DOMIBUS-HOST:8080" value="${antinstaller_as4_jms_url}"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="username=domibus" value="username=${antinstaller_as4_jms_username}"/>
				<replace file="${tmp_cfg}/as4_local.properties" token="password=domibus" value="password=${antinstaller_as4_jms_password}"/>
			</then>
		</if>
		<replace file="${tmp_cfg}/as4_local.properties" token="WORK_DIR" value="${work_dir}"/>

		<!-- impostazione proprieta' in as4.properties -->
                <fileset dir="${deploy_sw}" id="archiveAS4.txt">
                        <include name="openspcoop2_as4-protocol_*.jar"/>
			<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
                </fileset>
		<pathconvert pathsep=" " property="archiveAS4_name.txt" refid="archiveAS4.txt">
                        <map from="${deploy_sw}/" to=""/>
                </pathconvert>
		<!-- <echo message="FILE_NAME [${archiveAS4_name.txt}]"/> -->
                
		<delete dir="${tmp_cfg}/JAR_AS4"/>
		<unzip src="${deploy_sw}/${archiveAS4_name.txt}" dest="${tmp_cfg}/JAR_AS4"/>
		<concat destfile="${tmp_cfg}/JAR_AS4/as4.properties" append="yes" >

# ----- Personalizzazione Setup GovWay (as4) -------------
		</concat>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.trace.dataSource"/>
			<param name="value" value="${datasource_pdd_name}"/>
		</antcall>
		<replace file="${tmp_cfg}/JAR_AS4/as4.properties" 
			token="/var/govway/as4/" 
			value="${work_dir}/as4/"/>
		<replace file="${tmp_cfg}/JAR_AS4/as4.properties" 
			token="org.openspcoop2.protocol.as4.domibusJms.jndi" 
			value="#org.openspcoop2.protocol.as4.domibusJms.jndi"/>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.trace.tipoDatabase"/>
			<param name="value" value="${antinstaller_tipo_database}"/>
		</antcall>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.domibus.dataSource"/>
			<param name="value" value="${datasource_domibus_name}"/>
		</antcall>
		<antcall target="set_property">
			<param name="file" value="${tmp_cfg}/JAR_AS4/as4.properties"/>
			<param name="token" value="org.openspcoop2.protocol.as4.ack.domibus.tipoDatabase"/>
			<param name="value" value="${antinstaller_as4_tipo_database}"/>
		</antcall>
		<delete file="${deploy_sw}/${archiveAS4_name.txt}"/>
		<jar destfile="${deploy_sw}/${archiveAS4_name.txt}" basedir="${tmp_cfg}/JAR_AS4"/>
		<delete dir="${tmp_cfg}/JAR_AS4"/>

	</target>

	<target name="setup_sdi" depends="_setup_sdi"/>
	<target name="_setup_sdi">
		<copy file="${deploy_resources}/protocolli/sdi/sdi_local.properties" todir="${tmp_cfg}"/>
		
		<if>
			<matches string="${build_for_as}" pattern="tomcat.*"/>
			<then>
				
				<!-- impostazione proprieta' in sdi.properties -->
				<fileset dir="${deploy_sw}" id="archiveSDI.txt">
				        <include name="openspcoop2_sdi-protocol_*.jar"/>
				</fileset>
				<pathconvert pathsep=" " property="archiveSDI_name.txt" refid="archiveSDI.txt">
				        <map from="${deploy_sw}/" to=""/>
				</pathconvert>
				<!-- <echo message="FILE_NAME [${archiveSDI_name.txt}]"/> -->
				
				<delete dir="${tmp_cfg}/JAR_SDI"/>
				<unzip src="${deploy_sw}/${archiveSDI_name.txt}" dest="${tmp_cfg}/JAR_SDI"/>
				<concat destfile="${tmp_cfg}/JAR_SDI/sdi.properties" append="yes" >

# ----- Personalizzazione Setup GovWay (sdi) -------------
				</concat>
				<antcall target="set_property">
					<param name="file" value="${tmp_cfg}/JAR_SDI/sdi.properties"/>
					<param name="token" value="org.openspcoop2.protocol.sdi.tracce.dataSource"/>
					<param name="value" value="${datasource_pdd_name}"/>
				</antcall>
				<delete file="${deploy_sw}/${archiveSDI_name.txt}"/>
				<jar destfile="${deploy_sw}/${archiveSDI_name.txt}" basedir="${tmp_cfg}/JAR_SDI"/>
				<delete dir="${tmp_cfg}/JAR_SDI"/>
				
			</then>
		</if>
	</target>

	<target name="setup_pdd" depends="_setup_pdd"/>
	<target name="_setup_pdd">
		<if>
			<or>
				<matches string="${build_for_as}" pattern="jboss.*"/>
				<matches string="${build_for_as}" pattern="wildfly.*"/>
			</or>
			<then>
				<!-- unzip -->
				<unzip src="${deploy_sw}/${build_for_as}/govway_${build_openspcoop_archive_suffix}.ear" dest="${tmp_archivi}/govway.ear"/>
				<!-- configuration -->
				<antcall target="pdd_govway_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.properties"/>
				</antcall>
				<antcall target="pdd_openspcoop2_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.log4j2.properties"/>
				</antcall>
				<antcall target="pdd_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/log4j2.properties"/>
				</antcall>
				<antcall target="pdd_protocolAdjunct_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.protocolAdjunct.log4j2.properties"/>
				</antcall>
				<antcall target="pdd_govway.classRegistry.properties_settings">
				    <param name="file" value="${tmp_archivi}/govway.ear/properties/govway.classRegistry.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_archivi}/govway.ear/properties"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${deploy_sw}">
							    	<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
						<copy todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
						</copy>
						<if>
							<equals arg1="${antinstaller_as4_as}" arg2="tomcat"/>
							<then>
								<copy todir="${tmp_archivi}/govway.ear/lib/">
								    <fileset dir="${deploy_sw}/jars/domibus_tomcat">
								    	<include name="activemq-client-*.jar"/>
									<include name="hawtbuf-*.jar"/>
								    </fileset>
								</copy>
								<copy todir="${tmp_archivi}/govway.ear/lib">
								    <fileset dir="${deploy_sw}/jars">
									<include name="javax.jms-api-2.0.1.jar"/>
									<include name="javax.management-1.0.jar"/>
								    </fileset>
								</copy>
							</then>
						</if>
						<if>
							<equals arg1="${antinstaller_as4_as}" arg2="wildfly12"/>
							<then>
								<copy todir="${tmp_archivi}/govway.ear/lib/">
								    <fileset dir="${deploy_sw}/jars/domibus_wildfly12">
								    	<include name="artemis-*.jar"/>
									<include name="netty-all-*.jar"/>
								    </fileset>
								</copy>
								<copy todir="${tmp_archivi}/govway.ear/lib">
								    <fileset dir="${deploy_sw}/jars">
									<include name="mailapi-1.6.7.gw.jar"/>
								    </fileset>
								</copy>
							</then>
						</if>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}" />
					<then>
						<copy todir="${tmp_archivi}/govway.ear/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>

				<!-- preloading -->
				<if>
					<and>
						<istrue value="${antinstaller_rs_config}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.ear/properties/apiConfig.zip" dest="${tmp_archivi}/apiConfigZIP"/>
						<replace dir="${tmp_archivi}/apiConfigZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiConfigZIP" token="USERNAME_CONFIG" value="${antinstaller_pddconsole_username}"/>
						<replace dir="${tmp_archivi}/apiConfigZIP" token="PASSWORD_CONFIG" value="${antinstaller_pddconsole_password}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/apiConfig.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/apiConfig.zip" basedir="${tmp_archivi}/apiConfigZIP"/>
						<delete dir="${tmp_archivi}/apiConfigZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_rs_monitor}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.ear/properties/apiMonitor.zip" dest="${tmp_archivi}/apiMonitorZIP"/>
						<replace dir="${tmp_archivi}/apiMonitorZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiMonitorZIP" token="USERNAME_MONITOR" value="${antinstaller_pddmonitor_username}"/>
						<replace dir="${tmp_archivi}/apiMonitorZIP" token="PASSWORD_MONITOR" value="${antinstaller_pddmonitor_password}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/apiMonitor.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/apiMonitor.zip" basedir="${tmp_archivi}/apiMonitorZIP"/>
						<delete dir="${tmp_archivi}/apiMonitorZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_rs_rest_status}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.ear/properties/apiRestStatus.zip" dest="${tmp_archivi}/apiRestStatusZIP"/>
						<replace dir="${tmp_archivi}/apiRestStatusZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiRestStatusZIP" token="USERNAME_CONFIG" value="${antinstaller_pddconsole_username}"/>
						<replace dir="${tmp_archivi}/apiRestStatusZIP" token="PASSWORD_CONFIG" value="${antinstaller_pddconsole_password}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/apiRestStatus.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/apiRestStatus.zip" basedir="${tmp_archivi}/apiRestStatusZIP"/>
						<delete dir="${tmp_archivi}/apiRestStatusZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_rs_soap_status}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.ear/properties/apiSoapStatus.zip" dest="${tmp_archivi}/apiSoapStatusZIP"/>
						<replace dir="${tmp_archivi}/apiSoapStatusZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiSoapStatusZIP" token="USERNAME_CONFIG" value="${antinstaller_pddconsole_username}"/>
						<replace dir="${tmp_archivi}/apiSoapStatusZIP" token="PASSWORD_CONFIG" value="${antinstaller_pddconsole_password}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/apiSoapStatus.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/apiSoapStatus.zip" basedir="${tmp_archivi}/apiSoapStatusZIP"/>
						<delete dir="${tmp_archivi}/apiSoapStatusZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_protocollo_modipa}"/>
					</and>
					<then>
						<!-- API-PDND-->
						<unzip src="${tmp_archivi}/govway.ear/properties/apiPDND.zip" dest="${tmp_archivi}/apiPDNDZIP"/>
						<replace dir="${tmp_archivi}/apiPDNDZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/apiPDND.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/apiPDND.zip" basedir="${tmp_archivi}/apiPDNDZIP"/>
						<delete dir="${tmp_archivi}/apiPDNDZIP"/>
						<!-- API-PDNDv2-->
						<unzip src="${tmp_archivi}/govway.ear/properties/apiPDNDv2.zip" dest="${tmp_archivi}/apiPDNDv2ZIP"/>
						<replace dir="${tmp_archivi}/apiPDNDv2ZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/apiPDNDv2.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/apiPDNDv2.zip" basedir="${tmp_archivi}/apiPDNDv2ZIP"/>
						<delete dir="${tmp_archivi}/apiPDNDv2ZIP"/>
						<!-- Signal Hub -->
						<unzip src="${tmp_archivi}/govway.ear/properties/signalHubPDND.zip" dest="${tmp_archivi}/signalHubPDNDZIP"/>
						<replace dir="${tmp_archivi}/signalHubPDNDZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/signalHubPDND.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/signalHubPDND.zip" basedir="${tmp_archivi}/signalHubPDNDZIP"/>
						<delete dir="${tmp_archivi}/signalHubPDNDZIP"/>
						<!-- TracingPDND -->
						<unzip src="${tmp_archivi}/govway.ear/properties/tracingPDND.zip" dest="${tmp_archivi}/tracingPDNDZIP"/>
						<replace dir="${tmp_archivi}/tracingPDNDZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.ear/properties/tracingPDND.zip" />
						<zip destfile="${tmp_archivi}/govway.ear/properties/tracingPDND.zip" basedir="${tmp_archivi}/tracingPDNDZIP"/>
						<delete dir="${tmp_archivi}/tracingPDNDZIP"/>
					</then>
				</if>
	
				<!-- govwaySec -->
				<if>
					<not>
						<istrue value="${build_openspcoop_sec_archive}" />
					</not>
					<then>
						<delete file="${tmp_archivi}/govway.ear/govwaySec.war" />
						<replace file="${tmp_archivi}/govway.ear/META-INF/application.xml" token="start Security Constraint Authentication Container -->" value="start Security Constraint Authentication Container"/>
						<replace file="${tmp_archivi}/govway.ear/META-INF/application.xml" token="&lt;!-- end Security Constraint Authentication Container" value="end Security Constraint Authentication Container"/>
					</then>
				</if>	
				
							
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govway.ear"/>
					<param name="as" value="${build_for_as}"/>
				</antcall>
			</then>
			<else>
				<!-- unzip -->
				<unzip src="${deploy_sw}/${build_for_as}/govway_${build_openspcoop_archive_suffix}.war" dest="${tmp_archivi}/govway.war"/>
				<!-- configuro openspcoopp2.war -->
				<antcall target="-create_tomcat_war">
				    <param name="tomcat_war" value="${tmp_archivi}/govway.war"/>
				</antcall>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govway.war"/>
					<param name="as" value="${build_for_as}"/>
				</antcall>

				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_archivi}/govway.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
						</copy>
					</then>
				</if>

				<!-- preloading -->
				<if>
					<and>
						<istrue value="${antinstaller_rs_config}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/apiConfig.zip" dest="${tmp_archivi}/apiConfigZIP"/>
						<replace dir="${tmp_archivi}/apiConfigZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiConfigZIP" token="USERNAME_CONFIG" value="${antinstaller_pddconsole_username}"/>
						<replace dir="${tmp_archivi}/apiConfigZIP" token="PASSWORD_CONFIG" value="${antinstaller_pddconsole_password}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/apiConfig.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/apiConfig.zip" basedir="${tmp_archivi}/apiConfigZIP"/>
						<delete dir="${tmp_archivi}/apiConfigZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_rs_monitor}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/apiMonitor.zip" dest="${tmp_archivi}/apiMonitorZIP"/>
						<replace dir="${tmp_archivi}/apiMonitorZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiMonitorZIP" token="USERNAME_MONITOR" value="${antinstaller_pddmonitor_username}"/>
						<replace dir="${tmp_archivi}/apiMonitorZIP" token="PASSWORD_MONITOR" value="${antinstaller_pddmonitor_password}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/apiMonitor.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/apiMonitor.zip" basedir="${tmp_archivi}/apiMonitorZIP"/>
						<delete dir="${tmp_archivi}/apiMonitorZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_rs_rest_status}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/apiRestStatus.zip" dest="${tmp_archivi}/apiRestStatusZIP"/>
						<replace dir="${tmp_archivi}/apiRestStatusZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiRestStatusZIP" token="USERNAME_CONFIG" value="${antinstaller_pddconsole_username}"/>
						<replace dir="${tmp_archivi}/apiRestStatusZIP" token="PASSWORD_CONFIG" value="${antinstaller_pddconsole_password}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/apiRestStatus.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/apiRestStatus.zip" basedir="${tmp_archivi}/apiRestStatusZIP"/>
						<delete dir="${tmp_archivi}/apiRestStatusZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_rs_soap_status}"/>
					</and>
					<then>
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/apiSoapStatus.zip" dest="${tmp_archivi}/apiSoapStatusZIP"/>
						<replace dir="${tmp_archivi}/apiSoapStatusZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<replace dir="${tmp_archivi}/apiSoapStatusZIP" token="USERNAME_CONFIG" value="${antinstaller_pddconsole_username}"/>
						<replace dir="${tmp_archivi}/apiSoapStatusZIP" token="PASSWORD_CONFIG" value="${antinstaller_pddconsole_password}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/apiSoapStatus.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/apiSoapStatus.zip" basedir="${tmp_archivi}/apiSoapStatusZIP"/>
						<delete dir="${tmp_archivi}/apiSoapStatusZIP"/>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_protocollo_modipa}"/>
					</and>
					<then>
						<!-- API-PDND-->
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/apiPDND.zip" dest="${tmp_archivi}/apiPDNDZIP"/>
						<replace dir="${tmp_archivi}/apiPDNDZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/apiPDND.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/apiPDND.zip" basedir="${tmp_archivi}/apiPDNDZIP"/>
						<delete dir="${tmp_archivi}/apiPDNDZIP"/>
						<!-- API-PDNDv2-->
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/apiPDNDv2.zip" dest="${tmp_archivi}/apiPDNDv2ZIP"/>
						<replace dir="${tmp_archivi}/apiPDNDv2ZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/apiPDNDv2.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/apiPDNDv2.zip" basedir="${tmp_archivi}/apiPDNDv2ZIP"/>
						<delete dir="${tmp_archivi}/apiPDNDv2ZIP"/>
						<!-- Signal Hub -->
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/signalHubPDND.zip" dest="${tmp_archivi}/signalHubPDNDZIP"/>
						<replace dir="${tmp_archivi}/signalHubPDNDZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/signalHubPDND.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/signalHubPDND.zip" basedir="${tmp_archivi}/signalHubPDNDZIP"/>
						<delete dir="${tmp_archivi}/signalHubPDNDZIP"/>
						<!-- Tracing PDND -->
						<unzip src="${tmp_archivi}/govway.war/WEB-INF/classes/tracingPDND.zip" dest="${tmp_archivi}/tracingPDNDZIP"/>
						<replace dir="${tmp_archivi}/tracingPDNDZIP" token="SOGGETTO_LOCALE" value="${antinstaller_nomesoggetto}"/>
						<delete file="${tmp_archivi}/govway.war/WEB-INF/classes/tracingPDND.zip" />
						<zip destfile="${tmp_archivi}/govway.war/WEB-INF/classes/tracingPDND.zip" basedir="${tmp_archivi}/tracingPDNDZIP"/>
						<delete dir="${tmp_archivi}/tracingPDNDZIP"/>
					</then>
				</if>


				<!-- govwaySec -->
				<if>
					<istrue value="${build_openspcoop_sec_archive}" />
					<then>
						<!-- unzip -->
						<unzip src="${deploy_sw}/${build_for_as}/govwaySec_${build_openspcoop_archive_suffix}.war" dest="${tmp_archivi}/govwaySec.war"/>
						<!-- configuro openspcoopp2.war -->
						<antcall target="-create_tomcat_war">
						    <param name="tomcat_war" value="${tmp_archivi}/govwaySec.war"/>
						</antcall>
						<!-- disabilito timer per via della doppia presenza degli archivi -->
						<antcall target="pdd_govwaySec_properties_settings">
						    <param name="file" value="${tmp_archivi}/govwaySec.war/WEB-INF/classes/govway.properties"/>
						</antcall>
						<!-- Ripristino jar -->
						<antcall target="ripristina_jar">
						    <param name="archiveFile" value="${tmp_archivi}/govwaySec.war"/>
							<param name="as" value="${build_for_as}"/>
						</antcall>
					</then>
				</if>	
			</else>
		</if>		
	</target>
	<target name="-create_tomcat_war">
		<!-- configuration -->
		<antcall target="pdd_govway_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.properties"/>
		</antcall>
		<antcall target="pdd_openspcoop2_log4j_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.log4j2.properties"/>
		</antcall>
		<antcall target="pdd_log4j_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="pdd_protocolAdjunct_log4j_properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.protocolAdjunct.log4j2.properties"/>
		</antcall>
		<antcall target="pdd_govway.classRegistry.properties_settings">
		    <param name="file" value="${tomcat_war}/WEB-INF/classes/govway.classRegistry.properties"/>
		</antcall>
		<antcall target="dos2unix">
		    <param name="dir" value="${tomcat_war}/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_trasparente-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- modipa -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_modipa-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_spcoop-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_as4-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
				<copy todir="${tomcat_war}/WEB-INF/lib">
				    <fileset dir="${deploy_sw}/jars">
				    	<include name="activemq-client-*.jar"/>
					<include name="hawtbuf-*.jar"/>
				    </fileset>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<copy todir="${tomcat_war}/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_sdi-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>

	</target>
	
	<target name="setup_sql" >
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="nuova"/>
			<then>
				<antcall target="_setup_sql_nuova_installazione"/>
			</then>
			<else>
				<!-- Genero comunque sql completi -->
				<antcall target="_setup_sql_nuova_installazione">
					<param name="sqlForceNuovaInstallazione" value="true"/>
				</antcall>
				<mkdir dir="${tmp_sql_completi}"/>
				<move todir="${tmp_sql_completi}">
					<fileset dir="${tmp_sql}">
						<include name="*.sql"/>
					</fileset>
				</move>
				
				<antcall target="_setup_sql_aggiornamento"/>
			</else>
		</if>
		<antcall target="_sql_settings_installer_properties"/>
	</target>
	<target name="_setup_sql_nuova_installazione">
		
		<copy todir="${tmp_sql}">
			<fileset dir="${deploy_sql}/${antinstaller_tipo_database}">
		    		<include name="govway-*drop.sql"/>
				<include name="govway-*delete.sql"/>
			</fileset>
		</copy>


		<!-- *** Runtime *** -->
		<var name="runtimeSqlScriptName" value="GovWay.sql"/>
		<var name="runtimeSqlDbName" value="${antinstaller_dbname}"/>
		<antcall target="_initSQL_${antinstaller_tipo_database}">
			<param name="sqlFileOutput" value="${tmp_sql}/${runtimeSqlScriptName}"/>
		</antcall>
		<concat destfile="${tmp_sql}/${runtimeSqlScriptName}" append="yes" >
	      		<header filtering="no" trimleading="yes">
</header>
		  <filelist dir="${deploy_sql}"
                           files="${antinstaller_tipo_database}/GovWayRuntime.sql"/>
		</concat>

		<!-- Correggo e ripulisco indici inutili -->
		<antcall target="sql_settings_index_runtime">
		    <param name="file" value="${tmp_sql}/${runtimeSqlScriptName}"/>
		</antcall>


		<!-- *** Configurazione *** -->
		<var name="configSqlScriptName" value="GovWay.sql"/>
		<var name="configSqlDbName" value="${antinstaller_dbname}"/>
		<if>
			<equals arg1="${antinstaller_config_db}" arg2="config"/>
			<then>
				<var name="configSqlScriptName" value="GovWayConfigurazione.sql"/>
				<var name="configSqlDbName" value="${antinstaller_dbname_config}"/>
				<antcall target="_initSQL_${antinstaller_tipo_database}">
					<param name="sqlFileOutput" value="${tmp_sql}/${configSqlScriptName}"/>
				</antcall>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
	       				<header filtering="no" trimleading="yes">
</header>
				  <filelist dir="${deploy_sql}"
				           files="${antinstaller_tipo_database}/GovWaySemaphore.sql"/>
				</concat>
			</then>
		</if>
		<var name="monitoraggioSqlInternalName" value=""/>
		<if>
			<istrue value="${build_monitoraggio}" />
			<then>
				<var name="monitoraggioSqlInternalName" value=" ${antinstaller_tipo_database}/GovWayMonitoraggio.sql"/>
			</then>
		</if>
		<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
	       		<header filtering="no" trimleading="yes">
</header>
		  <filelist dir="${deploy_sql}"
                           files="${antinstaller_tipo_database}/GovWayConfig.sql init.sql${monitoraggioSqlInternalName}"/>
		</concat>
		
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_trasparente.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_trasparente.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_trasparente}"/>
					<param name="sql_idporta" value="domain/gw/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_trasparente}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol trasparente
					      	
				  </header>					
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_trasparente.sql"/>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_trasparente.sql" failonerror="false"/>
			</then>
		</if>

		<!-- modipa -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_modipa.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_modipa.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_modipa}"/>
					<param name="sql_idporta" value="domain/modipa/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_modipa}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol modipa
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_modipa.sql"/>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_modipa.sql" failonerror="false"/>
			</then>
		</if>

		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_spcoop.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_spcoop.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_spcoop}"/>
					<param name="sql_idporta" value="${antinstaller_nomesoggetto}SPCoopIT"/>
					<param name="sql_codiceipa" value="o=${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="eGov1.1-lineeGuida1.1"/>
				</antcall>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol spcoop
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_spcoop.sql"/>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_spcoop.sql" failonerror="false"/>
			</then>
		</if>
		
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_as4.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_as4.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_as4}"/>
					<param name="sql_idporta" value="domain/as4/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_as4}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol as4
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_as4.sql"/>
				</concat>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
<![CDATA[INSERT INTO config_url_regole (nome, posizione, stato, descrizione, regexpr, regola, contesto_esterno, base_url, protocollo, ruolo) VALUES ('Domibus',1,'abilitato','Servizio di ricezione dei messaggi AS4 dell''Access Point Domibus', 1, '^(.+)$', '', '${antinstaller_as4_msh}','as4','portaApplicativa');
]]>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_as4.sql" failonerror="false"/>
			</then>
		</if>

		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/init_soggetto_sdi.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/init_soggetto_sdi.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_sdi}"/>
					<param name="sql_idporta" value="domain/sdi/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_sdi}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<concat destfile="${tmp_sql}/${configSqlScriptName}" append="yes" >
				  <header filtering="no" trimleading="yes">

-- Protocol sdi
				      	
				  </header>
				  <filelist dir="${tmp_sql}"
		                           files="init_soggetto_sdi.sql"/>
				</concat>
				<delete file="${tmp_sql}/init_soggetto_sdi.sql" failonerror="false"/>
			</then>
		</if>
			
		<!-- Imposto corretti valori per i datasource -->
		<antcall target="sql_settings">
		    <param name="file" value="${tmp_sql}/${runtimeSqlScriptName}"/>
		    <param name="sql_settings_dbname" value="${runtimeSqlDbName}"/>
		</antcall>
		<if>
			<equals arg1="${antinstaller_config_db}" arg2="config"/>
			<then>
				<antcall target="sql_settings">
				    <param name="file" value="${tmp_sql}/${configSqlScriptName}"/>
				    <param name="sql_settings_dbname" value="${configSqlDbName}"/>
				</antcall>
			</then>
		</if>
		
		<!-- password cifrata per l'utenza govwayConsole -->
		<java classname="org.openspcoop2.utils.crypt.Password" fork="true" outputproperty="antinstaller_pddconsole_password_md5">
			<arg value="${antinstaller_pddconsole_password}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
					<fileset dir="${deploy_sw}" includes="jars/commons-codec-1.15.jar"/>
					<fileset dir="${deploy_sw}" includes="jars/jasypt-1.9.3.jar"/>
			   	</path>				
			</classpath>
		</java>
		<copy file="${deploy_sql}/init_utenzaPddConsole.sql" tofile="${tmp_sql}/init_utenzaPddConsole.sql" overwrite="true"/>

		<!-- password cifrata per l'utenza govwayMonitor -->
		<java classname="org.openspcoop2.utils.crypt.Password" fork="true" outputproperty="antinstaller_pddmonitor_password_md5">
			<arg value="${antinstaller_pddmonitor_password}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
					<fileset dir="${deploy_sw}" includes="jars/commons-codec-1.15.jar"/>
					<fileset dir="${deploy_sw}" includes="jars/jasypt-1.9.3.jar"/>
			   	</path>				
			</classpath>
		</java>
		<copy file="${deploy_sql}/init_utenzaPddMonitor.sql" tofile="${tmp_sql}/init_utenzaPddMonitor.sql" overwrite="true"/>

		<!-- Registro modifiche delle utenze sul file SQL -->
		<antcall target="sql_settings_users">
		    <param name="file" value="${tmp_sql}/${configSqlScriptName}"/>
		</antcall>



		<!-- *** Tracce *** -->
		<var name="tracceSqlScriptName" value="GovWay.sql"/>
		<var name="tracceSqlDbName" value="${antinstaller_dbname}"/>
		<if>
			<equals arg1="${antinstaller_log_db}" arg2="log"/>
			<then>
				<var name="tracceSqlScriptName" value="GovWayTracciamento.sql"/>
				<var name="tracceSqlDbName" value="${antinstaller_dbname_log}"/>
				<antcall target="_initSQL_${antinstaller_tipo_database}">
					<param name="sqlFileOutput" value="${tmp_sql}/${tracceSqlScriptName}"/>
				</antcall>
			</then>
		</if>
		<concat destfile="${tmp_sql}/${tracceSqlScriptName}" append="yes" >
	       		<header filtering="no" trimleading="yes">
</header>
		  <filelist dir="${deploy_sql}"
                           files="${antinstaller_tipo_database}/GovWayTracce.sql"/>
		</concat>
		<if>
			<equals arg1="${antinstaller_log_db}" arg2="log"/>
			<then>
				<concat destfile="${tmp_sql}/${tracceSqlScriptName}" append="yes" >
	       				<header filtering="no" trimleading="yes">
</header>
				  <filelist dir="${deploy_sql}"
				           files="${antinstaller_tipo_database}/GovWayTracceDBInfo.sql"/>
				</concat>
			</then>
		</if>

		<!-- Imposto corretti valori per i datasource -->
		<if>
			<equals arg1="${antinstaller_log_db}" arg2="log"/>
			<then>
				<antcall target="sql_settings">
				    <param name="file" value="${tmp_sql}/${tracceSqlScriptName}"/>
				    <param name="sql_settings_dbname" value="${tracceSqlDbName}"/>
				</antcall>
			</then>
		</if>

		<!-- Imposto Indici Full se abilitati -->
		<antcall target="sql_settings_index_transazioni">
		    <param name="file" value="${tmp_sql}/${tracceSqlScriptName}"/>
		</antcall>



		<!-- *** Statistiche *** -->
		<var name="statsSqlScriptName" value="GovWay.sql"/>
		<var name="statsSqlDbName" value="${antinstaller_dbname}"/>
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			<then>
				<var name="statsSqlScriptName" value="GovWayStatistiche.sql"/>
				<var name="statsSqlDbName" value="${antinstaller_dbname_stats}"/>
				<antcall target="_initSQL_${antinstaller_tipo_database}">
					<param name="sqlFileOutput" value="${tmp_sql}/${statsSqlScriptName}"/>
				</antcall>
				<concat destfile="${tmp_sql}/${statsSqlScriptName}" append="yes" >
	       				<header filtering="no" trimleading="yes">
</header>
				  <filelist dir="${deploy_sql}"
				           files="${antinstaller_tipo_database}/GovWaySemaphore.sql"/>
				</concat>
			</then>
		</if>
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="log"/>
			<then>
				<var name="statsSqlScriptName" value="GovWayTracciamento.sql"/>
				<var name="statsSqlDbName" value="${antinstaller_dbname_log}"/>
				<concat destfile="${tmp_sql}/${statsSqlScriptName}" append="yes" >
	       				<header filtering="no" trimleading="yes">
</header>
				  <filelist dir="${deploy_sql}"
				           files="${antinstaller_tipo_database}/GovWaySemaphore.sql"/>
				</concat>
			</then>
		</if>
		<concat destfile="${tmp_sql}/${statsSqlScriptName}" append="yes" >
	       		<header filtering="no" trimleading="yes">
</header>
		  <filelist dir="${deploy_sql}"
                           files="${antinstaller_tipo_database}/GovWayStatistiche.sql"/>
		</concat>
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			<then>
				<concat destfile="${tmp_sql}/${statsSqlScriptName}" append="yes" >
	       				<header filtering="no" trimleading="yes">
</header>
				  <filelist dir="${deploy_sql}"
				           files="${antinstaller_tipo_database}/GovWayStatisticheDBInfo.sql"/>
				</concat>
			</then>
		</if>

		<!-- Imposto corretti valori per i datasource -->
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			<then>
				<antcall target="sql_settings">
				    <param name="file" value="${tmp_sql}/${statsSqlScriptName}"/>
				    <param name="sql_settings_dbname" value="${statsSqlDbName}"/>
				</antcall>
			</then>
		</if>

		<!-- Imposto Indici Full se abilitati -->
		<antcall target="sql_settings_index_statistiche">
		    <param name="file" value="${tmp_sql}/${statsSqlScriptName}"/>
		</antcall>



		<!-- *** Effettuo split DDL e DML *** -->

		<!-- Runtime -->
		<antcall target="sql_split_ddl_dml">
		    <param name="nomeFileDaSplittare" value="${runtimeSqlScriptName}"/>
		    <param name="forceNuovaInstallazione" value="${sqlForceNuovaInstallazione}"/>
		</antcall>

		<!-- Configurazione -->
		<if>
			<equals arg1="${antinstaller_config_db}" arg2="config"/>
			<then>
				<antcall target="sql_split_ddl_dml">
				    <param name="nomeFileDaSplittare" value="${configSqlScriptName}"/>
				    <param name="forceNuovaInstallazione" value="${sqlForceNuovaInstallazione}"/>
				</antcall>
			</then>
		</if>

		<!-- Tracce -->
		<if>
			<equals arg1="${antinstaller_log_db}" arg2="log"/>
			<then>
				<antcall target="sql_split_ddl_dml">
				    <param name="nomeFileDaSplittare" value="${tracceSqlScriptName}"/>
				    <param name="forceNuovaInstallazione" value="${sqlForceNuovaInstallazione}"/>
				</antcall>
			</then>
		</if>

		<!-- Statistiche -->
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			<then>
				<antcall target="sql_split_ddl_dml">
				    <param name="nomeFileDaSplittare" value="${statsSqlScriptName}"/>
				    <param name="forceNuovaInstallazione" value="${sqlForceNuovaInstallazione}"/>
				</antcall>
			</then>
		</if>
		
	</target>
	
	<target name="_setup_sql_aggiornamento">

		<!-- Runtime -->
		<var name="runtimeSqlScriptName" value="GovWay.sql"/>
		<antcall target="sql_upgrade_ddl">
		    <param name="nomeSqlUpgrade" value="${runtimeSqlScriptName}"/>
		</antcall>

		<!-- Configurazione -->
		<if>
			<equals arg1="${antinstaller_config_db}" arg2="config"/>
			<then>
				<var name="configSqlScriptName" value="GovWayConfigurazione.sql"/>
				<antcall target="sql_upgrade_ddl">
				    <param name="nomeSqlUpgrade" value="${configSqlScriptName}"/>
				</antcall>
				<if>
					<or>
						<matches string="${antinstaller_versione_precedente}" pattern="^3\.[0-2]\..+$"/> <!-- versione 3.0.* 3.1.* e 3.2.* -->
						<matches string="${antinstaller_versione_precedente}" pattern="^3\.3\.[0-9]$"/> <!-- versione da 3.3.0 a 3.3.9 -->
						<equals arg1="${antinstaller_versione_precedente}" arg2="3.3.10" />
						<equals arg1="${antinstaller_versione_precedente}" arg2="3.3.11" />
						<equals arg1="${antinstaller_versione_precedente}" arg2="3.3.12" />
					</or>
					<then>
						<var name="configSqlScriptNameGenerato" value="GovWayConfigurazione_upgrade_${antinstaller_versione_attuale}.sql"/>
						<move file="${tmp_sql}/${configSqlScriptNameGenerato}" tofile="${tmp_sql}/${configSqlScriptNameGenerato}.moved"/>
						<concat destfile="${tmp_sql}/${configSqlScriptNameGenerato}" append="yes" >
	       					<header filtering="no" trimleading="yes">
</header>
				  			<filelist dir="${deploy_sql}"
				           			files="${antinstaller_tipo_database}/GovWaySemaphore.sql"/>
</concat>
						<concat destfile="${tmp_sql}/${configSqlScriptNameGenerato}" append="yes" >
	       					<header filtering="no" trimleading="yes">
</header>
				  			<filelist dir="${tmp_sql}"
				           			files="${configSqlScriptNameGenerato}.moved"/>
</concat>
						<delete file="${tmp_sql}/${configSqlScriptNameGenerato}.moved"/>
					</then>
				</if>
			</then>
		</if>

		<!-- Tracce -->
		<if>
			<equals arg1="${antinstaller_log_db}" arg2="log"/>
			<then>
				<var name="tracceSqlScriptName" value="GovWayTracciamento.sql"/>
				<antcall target="sql_upgrade_ddl">
				    <param name="nomeSqlUpgrade" value="${tracceSqlScriptName}"/>
				</antcall>
			</then>
		</if>

		<!-- Statistiche -->
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			<then>
				<var name="statsSqlScriptName" value="GovWayStatistiche.sql"/>
				<antcall target="sql_upgrade_ddl">
				    <param name="nomeSqlUpgrade" value="${statsSqlScriptName}"/>
				</antcall>
			</then>
		</if>


		<!-- Imposto Indici Full delle transazioni (se abilitati) -->
		<if>
			<equals arg1="${antinstaller_log_db}" arg2="log"/>
			<then>
				<var name="tmpSqlUpgradeScriptNameForUpdateIndex" value="GovWayTracciamento_upgrade_${antinstaller_versione_attuale}.sql"/>
				<antcall target="sql_settings_index_transazioni_update">
				    <param name="file" value="${tmp_sql}/${tmpSqlUpgradeScriptNameForUpdateIndex}"/>
				</antcall>
			</then>
			<else>
				<var name="tmpSqlUpgradeScriptNameForUpdateIndex" value="GovWay_upgrade_${antinstaller_versione_attuale}.sql"/>
				<antcall target="sql_settings_index_transazioni_update">
				    <param name="file" value="${tmp_sql}/${tmpSqlUpgradeScriptNameForUpdateIndex}"/>
				</antcall>
			</else>
		</if>

		<!-- Imposto Indici Full delle statistiche (se abilitati) -->
		<if>
			<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			<then>
				<var name="tmpSqlUpgradeScriptNameForUpdateIndex" value="GovWayStatistiche_upgrade_${antinstaller_versione_attuale}.sql"/>
				<antcall target="sql_settings_index_statistiche_update">
				    <param name="file" value="${tmp_sql}/${tmpSqlUpgradeScriptNameForUpdateIndex}"/>
				</antcall>
			</then>
			<elseif>
				<equals arg1="${antinstaller_stats_db}" arg2="log"/>
				<then>
					<var name="tmpSqlUpgradeScriptNameForUpdateIndex" value="GovWayTracciamento_upgrade_${antinstaller_versione_attuale}.sql"/>
					<antcall target="sql_settings_index_statistiche_update">
					    <param name="file" value="${tmp_sql}/${tmpSqlUpgradeScriptNameForUpdateIndex}"/>
					</antcall>
				</then>
			</elseif>
			<else>
				<var name="tmpSqlUpgradeScriptNameForUpdateIndex" value="GovWay_upgrade_${antinstaller_versione_attuale}.sql"/>
				<antcall target="sql_settings_index_statistiche_update">
				    <param name="file" value="${tmp_sql}/${tmpSqlUpgradeScriptNameForUpdateIndex}"/>
				</antcall>
			</else>
		</if>


		<!-- SQL Extra per aggiunta di un profilo -->

		<mkdir dir="${tmp_sql}/profili" />

		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-apiGateway.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-apiGateway.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_trasparente}"/>
					<param name="sql_idporta" value="domain/gw/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_trasparente}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<antcall target="replace_token">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-apiGateway.sql"/>
					<param name="token" value="'@PDDCONSOLE_USERNAME@'"/>
					<param name="value" value="(select login from users where permessi='SCMAU')"/>
				</antcall>
				<concat destfile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-apiGateway.sql" append="yes" >
<![CDATA[INSERT INTO config_protocolli (nome,url_pd,url_pa) VALUES ('trasparente','http://localhost:8080/govway/out/','http://localhost:8080/govway/');
]]>
				</concat>
			</then>
		</if>

		<!-- modipa -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-modipa.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-modipa.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_modipa}"/>
					<param name="sql_idporta" value="domain/modipa/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_modipa}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<antcall target="replace_token">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-modipa.sql"/>
					<param name="token" value="'@PDDCONSOLE_USERNAME@'"/>
					<param name="value" value="(select login from users where permessi='SCMAU')"/>
				</antcall>
			</then>
		</if>

		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-spcoop.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-spcoop.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_spcoop}"/>
					<param name="sql_idporta" value="${antinstaller_nomesoggetto}SPCoopIT"/>
					<param name="sql_codiceipa" value="o=${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="eGov1.1-lineeGuida1.1"/>
				</antcall>
				<antcall target="replace_token">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-spcoop.sql"/>
					<param name="token" value="'@PDDCONSOLE_USERNAME@'"/>
					<param name="value" value="(select login from users where permessi='SCMAU')"/>
				</antcall>
			</then>
		</if>
		
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-eDelivery.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-eDelivery.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_as4}"/>
					<param name="sql_idporta" value="domain/as4/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_as4}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<antcall target="replace_token">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-eDelivery.sql"/>
					<param name="token" value="'@PDDCONSOLE_USERNAME@'"/>
					<param name="value" value="(select login from users where permessi='SCMAU')"/>
				</antcall>
				<concat destfile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-eDelivery.sql" append="yes" >
<![CDATA[INSERT INTO config_protocolli (nome,url_pd,url_pa) VALUES ('as4','http://localhost:8080/govway/as4/out/','${antinstaller_as4_msh}');
]]>
				</concat>
			</then>
		</if>

		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}" />
			<then>
				<copy file="${deploy_sql}/init_soggetto.sql" tofile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-fatturaPA.sql" overwrite="true"/>
				<antcall target="sql_settings_by_protocol">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-fatturaPA.sql"/>
					<param name="sql_nome" value="${antinstaller_nomesoggetto}"/>
					<param name="sql_tipo" value="${antinstaller_tiposoggetto_sdi}"/>
					<param name="sql_idporta" value="domain/sdi/${antinstaller_nomesoggetto}"/>
					<param name="sql_codiceipa" value="o=${antinstaller_tiposoggetto_sdi}${antinstaller_nomesoggetto},c=it"/>
					<param name="sql_protocollo_versione" value="1.0"/>
				</antcall>
				<antcall target="replace_token">
				    <param name="file" value="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-fatturaPA.sql"/>
					<param name="token" value="'@PDDCONSOLE_USERNAME@'"/>
					<param name="value" value="(select login from users where permessi='SCMAU')"/>
				</antcall>
				<concat destfile="${tmp_sql}/profili/GovWay_upgrade_initialize-profilo-fatturaPA" append="yes" >
<![CDATA[INSERT INTO config_protocolli (nome,url_pd,url_pa) VALUES ('sdi','http://localhost:8080/govway/sdi/out/xml2soap/','http://localhost:8080/govway/sdi/in/');
]]>
				</concat>
			</then>
		</if>

	</target>

	<target name="setup_datasource" depends="_setup_datasource"/>
	<target name="_setup_datasource">
		<if>
			<matches string="${build_for_as}" pattern="jboss.*"/>
			<then>
				<var name="jboss_datasource_dir_name" value=""/>
				<if>
					<or>
						<equals arg1="${build_for_as}" arg2="jboss4" />
						<equals arg1="${build_for_as}" arg2="jboss5" />
						<equals arg1="${build_for_as}" arg2="jboss6" />
					</or>
					<then>
						<var name="jboss_datasource_dir_name" value="v4_v5_v6"/>
					</then>
					<else>
						<var name="jboss_datasource_dir_name" value="v7"/>
					</else>
				</if>		

				<!-- Runtime -->
				<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway-ds.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway-ds.xml"/>
				</antcall>

				<!-- Config -->
				<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway_console-ds.xml" todir="${tmp_ds}"/>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<antcall target="config_ds_settings">
						    <param name="file" value="${tmp_ds}/govway_console-ds.xml"/>
						</antcall>
					</then>
					<else>
						<antcall target="ds_settings">
						    <param name="file" value="${tmp_ds}/govway_console-ds.xml"/>
						</antcall>
					</else>
				</if>

				<!-- Tracce -->
				<if>
					<equals arg1="${antinstaller_log_db}" arg2="log"/>
					<then>
						<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway-ds.xml" tofile="${tmp_ds}/govway_tracciamento-ds.xml"/>
						<antcall target="log_ds_settings">
						    <param name="file" value="${tmp_ds}/govway_tracciamento-ds.xml"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le tracce sono nel database di runtime e il database delle configurazioni e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<equals arg1="${antinstaller_config_db}" arg2="config"/>
						<then>
							<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway_console-ds.xml" tofile="${tmp_ds}/govway_tracciamento-ds.xml"/>
							<antcall target="ds_settings">
							    <param name="file" value="${tmp_ds}/govway_tracciamento-ds.xml"/>
							</antcall>
							<antcall target="replace_token">
							    <param name="file" value="${tmp_ds}/govway_tracciamento-ds.xml"/>
								<param name="token" value="org.govway.datasource.console"/>
								<param name="value" value="org.govway.datasource.tracciamento"/>
							</antcall>
						</then>
					</elseif>
				</if>

				<!-- Statistiche -->
				<if>
					<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
					<then>
						<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway_console-ds.xml" tofile="${tmp_ds}/govway_statistiche-ds.xml"/>
						<antcall target="stats_ds_settings">
						    <param name="file" value="${tmp_ds}/govway_statistiche-ds.xml"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le statistiche sono nel database di runtime e 
							il database delle configurazioni e' a se, e
							il database delle trace e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<and>
							<equals arg1="${antinstaller_stats_db}" arg2="runtime"/>
							<equals arg1="${antinstaller_config_db}" arg2="config"/>
							<equals arg1="${antinstaller_log_db}" arg2="log"/>
						</and>
						<then>
							<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_tipo_database}/govway_console-ds.xml" tofile="${tmp_ds}/govway_statistiche-ds.xml"/>
							<antcall target="ds_settings">
							    <param name="file" value="${tmp_ds}/govway_statistiche-ds.xml"/>
							</antcall>
							<antcall target="replace_token">
							    <param name="file" value="${tmp_ds}/govway_statistiche-ds.xml"/>
								<param name="token" value="org.govway.datasource.console"/>
								<param name="value" value="org.govway.datasource.statistiche"/>
							</antcall>
						</then>
					</elseif>
				</if>

				<!-- AS4 eDelivery -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy file="${deploy_ds}/jboss/${jboss_datasource_dir_name}/${antinstaller_as4_tipo_database}/govway-ds.xml" 
							tofile="${tmp_ds}/domibus-ds.xml"/>
						<antcall target="as4_ds_settings">
						    <param name="file" value="${tmp_ds}/domibus-ds.xml"/>
						</antcall>
						<antcall target="replace_token">
						    <param name="file" value="${tmp_ds}/domibus-ds.xml"/>
							<param name="token" value="${datasource_pdd_name}"/>
							<param name="value" value="${datasource_domibus_name}"/>
						</antcall>
					</then>
				</if>
			</then>
		</if>
		<if>
			<matches string="${build_for_as}" pattern="wildfly.*"/>
			<then>		

				<!-- Runtime -->
				<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway-ds.xml" todir="${tmp_ds}"/>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway-ds.xml"/>
				</antcall>

				<!-- Config -->
				<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway_console-ds.xml" todir="${tmp_ds}"/>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<antcall target="config_ds_settings">
						    <param name="file" value="${tmp_ds}/govway_console-ds.xml"/>
						</antcall>
					</then>
					<else>
						<antcall target="ds_settings">
						    <param name="file" value="${tmp_ds}/govway_console-ds.xml"/>
						</antcall>
					</else>
				</if>

				<!-- Tracce -->
				<if>
					<equals arg1="${antinstaller_log_db}" arg2="log"/>
					<then>
						<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway-ds.xml" tofile="${tmp_ds}/govway_tracciamento-ds.xml"/>
						<antcall target="log_ds_settings">
						    <param name="file" value="${tmp_ds}/govway_tracciamento-ds.xml"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le tracce sono nel database di runtime e il database delle configurazioni e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<equals arg1="${antinstaller_config_db}" arg2="config"/>
						<then>
							<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway_console-ds.xml" tofile="${tmp_ds}/govway_tracciamento-ds.xml"/>
							<antcall target="ds_settings">
							    <param name="file" value="${tmp_ds}/govway_tracciamento-ds.xml"/>
							</antcall>
							<antcall target="replace_token">
							    <param name="file" value="${tmp_ds}/govway_tracciamento-ds.xml"/>
								<param name="token" value="org.govway.datasource.console"/>
								<param name="value" value="org.govway.datasource.tracciamento"/>
							</antcall>
						</then>
					</elseif>
				</if>

				<!-- Statistiche -->
				<if>
					<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
					<then>
						<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway_console-ds.xml" tofile="${tmp_ds}/govway_statistiche-ds.xml"/>
						<antcall target="stats_ds_settings">
						    <param name="file" value="${tmp_ds}/govway_statistiche-ds.xml"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le statistiche sono nel database di runtime e 
							il database delle configurazioni e' a se, e
							il database delle trace e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<and>
							<equals arg1="${antinstaller_stats_db}" arg2="runtime"/>
							<equals arg1="${antinstaller_config_db}" arg2="config"/>
							<equals arg1="${antinstaller_log_db}" arg2="log"/>
						</and>
						<then>
							<copy file="${deploy_ds}/wildfly/${antinstaller_tipo_database}/govway_console-ds.xml" tofile="${tmp_ds}/govway_statistiche-ds.xml"/>
							<antcall target="ds_settings">
							    <param name="file" value="${tmp_ds}/govway_statistiche-ds.xml"/>
							</antcall>
							<antcall target="replace_token">
							    <param name="file" value="${tmp_ds}/govway_statistiche-ds.xml"/>
								<param name="token" value="org.govway.datasource.console"/>
								<param name="value" value="org.govway.datasource.statistiche"/>
							</antcall>
						</then>
					</elseif>
				</if>

				<!-- AS4 eDelivery -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy file="${deploy_ds}/wildfly/${antinstaller_as4_tipo_database}/govway-ds.xml" 
							tofile="${tmp_ds}/domibus-ds.xml"/>
						<antcall target="as4_ds_settings">
						    <param name="file" value="${tmp_ds}/domibus-ds.xml"/>
						</antcall>
						<antcall target="replace_token">
						    <param name="file" value="${tmp_ds}/domibus-ds.xml"/>
							<param name="token" value="${datasource_pdd_name}"/>
							<param name="value" value="${datasource_domibus_name}"/>
						</antcall>
					</then>
				</if>
			</then>
		</if>
		<if>
			<matches string="${build_for_as}" pattern="tomcat.*"/>
			<then>
				<var name="tomcat_datasource_dir_name" value=""/>
				<if>
					<or>
						<equals arg1="${antinstaller_as}" arg2="tomcat5" />
						<equals arg1="${antinstaller_as}" arg2="tomcat6" />
						<equals arg1="${antinstaller_as}" arg2="tomcat7" />
					</or>
					<then>
						<var name="tomcat_datasource_dir_name" value="v5_v6_v7"/>
					</then>
					<else>
						<var name="tomcat_datasource_dir_name" value="v8_v9"/>
					</else>
				</if>		

				<!-- govway.war -->
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govway.xml" todir="${tmp_ds}"/>
				<if>
					<equals arg1="${antinstaller_log_db}" arg2="log"/>
					<then>
						<antcall target="tomcat_log_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govway.xml"/>
						    <param name="log_for_runtime" value="true"/>
						</antcall>
					</then>
				</if>
				<if>
					<and>
						<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
						<equals arg1="${antinstaller_stats_env}" arg2="runtime"/>
					</and>
					<then>
						<antcall target="tomcat_stats_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govway.xml"/>
						</antcall>
					</then>
				</if>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<antcall target="tomcat_config_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govway.xml"/>
						</antcall>
					</then>
				</if>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govway.xml"/>
				</antcall>


				<!-- govwaySec -->
				<!-- spostato in distrib-build.xml 
				<if>
					<istrue value="${build_openspcoop_sec_archive}" />
					<then>
						<copy file="${tmp_ds}/govway.xml" tofile="${tmp_ds}/govwaySec.xml"/>
					</then>
				</if>
				-->


				<!-- govwayLoader -->
				<if>
					<and>
						<!-- Sganciata la generazone del loader con questa proprieta' finta. 
							Se la si vuole reintrodurre basta settarla a true -->
						<istrue value="${antinstaller_loader}"/>
					</and>
					<then>
						<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayLoader.xml" todir="${tmp_ds}"/>
						<if>
							<equals arg1="${antinstaller_config_db}" arg2="config"/>
							<then>
								<antcall target="config_ds_settings">
								    <param name="file" value="${tmp_ds}/govwayLoader.xml"/>
								</antcall>
							</then>
							<else>
								<antcall target="ds_settings">
								    <param name="file" value="${tmp_ds}/govwayLoader.xml"/>
								</antcall>
							</else>
						</if>
					</then>
				</if>
				
				<!-- govwayConsole -->
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayConsole.xml" todir="${tmp_ds}"/>
				<if>
					<equals arg1="${antinstaller_log_db}" arg2="log"/>
					<then>
						<antcall target="tomcat_log_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govwayConsole.xml"/>
						    <param name="log_for_runtime" value="false"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le tracce sono nel database di runtime e il database delle configurazioni e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<equals arg1="${antinstaller_config_db}" arg2="config"/>
						<then>
							<antcall target="tomcat_runtime_for_console_ds_settings">
							    <param name="templateDataSourceFile" value="${tmp_ds}/govwayConsole.xml"/>
							    <param name="templateDataSourceName" value="org.govway.datasource.tracciamento"/>
							    <param name="templateDataSourceTipoInfo" value="le tracce di GovWay"/>
							</antcall>
						</then>
					</elseif>
				</if>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<antcall target="tomcat_config_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govwayConsole.xml"/>
						</antcall>
					</then>
				</if>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govwayConsole.xml"/>
				</antcall>

				<!-- govwayMonitor -->
				<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayMonitor.xml" todir="${tmp_ds}"/>
				<if>
					<equals arg1="${antinstaller_log_db}" arg2="log"/>
					<then>
						<antcall target="tomcat_log_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govwayMonitor.xml"/>
						    <param name="log_for_runtime" value="false"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le tracce sono nel database di runtime e il database delle configurazioni e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<equals arg1="${antinstaller_config_db}" arg2="config"/>
						<then>
							<antcall target="tomcat_runtime_for_console_ds_settings">
							    <param name="templateDataSourceFile" value="${tmp_ds}/govwayMonitor.xml"/>
							    <param name="templateDataSourceName" value="org.govway.datasource.tracciamento"/>
							    <param name="templateDataSourceTipoInfo" value="le tracce di GovWay"/>
							</antcall>
						</then>
					</elseif>
				</if>
				<if>
					<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
					<then>
						<antcall target="tomcat_stats_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govwayMonitor.xml"/>
						</antcall>
					</then>
					<elseif>
						<!-- se le statistiche sono nel database di runtime e 
							il database delle configurazioni e' a se, e
							il database delle trace e' a se, le applicazioni "console" dovranno usare un datasource differente -->
						<and>
							<equals arg1="${antinstaller_stats_db}" arg2="runtime"/>
							<equals arg1="${antinstaller_config_db}" arg2="config"/>
							<equals arg1="${antinstaller_log_db}" arg2="log"/>
						</and>
						<then>
							<antcall target="tomcat_runtime_for_console_ds_settings">
							    <param name="templateDataSourceFile" value="${tmp_ds}/govwayMonitor.xml"/>
							    <param name="templateDataSourceName" value="org.govway.datasource.statistiche"/>
							    <param name="templateDataSourceTipoInfo" value="le informazioni statistiche"/>
							</antcall>
						</then>
					</elseif>
				</if>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<antcall target="tomcat_config_ds_settings">
						    <param name="templateDataSourceFile" value="${tmp_ds}/govwayMonitor.xml"/>
						</antcall>
					</then>
				</if>
				<antcall target="ds_settings">
				    <param name="file" value="${tmp_ds}/govwayMonitor.xml"/>
				</antcall>

				<!-- govwayAPIConfig.war -->
				<if>
					<istrue value="${antinstaller_rs_config}" />
					<then>
						<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_tipo_database}/govwayMonitor.xml" tofile="${tmp_ds}/govwayAPIConfig.xml"/> <!-- uso il datasource della govwayMonitor poiche' in esso non c'e' il runtime -->
						<if>
							<equals arg1="${antinstaller_config_db}" arg2="config"/>
							<then>
								<antcall target="tomcat_config_ds_settings">
								    <param name="templateDataSourceFile" value="${tmp_ds}/govwayAPIConfig.xml"/>
								</antcall>
							</then>
						</if>
						<antcall target="ds_settings">
						    <param name="file" value="${tmp_ds}/govwayAPIConfig.xml"/>
						</antcall>
						<replace file="${tmp_ds}/govwayAPIConfig.xml" token="grafica govwayMonitor" value="govwayAPIConfig.war"/>
					</then>
				</if>

				<!-- govwayAPIMonitor.war -->
				<if>
					<istrue value="${antinstaller_rs_monitor}" />
					<then>
						<copy file="${tmp_ds}/govwayMonitor.xml" tofile="${tmp_ds}/govwayAPIMonitor.xml"/>
						<replace file="${tmp_ds}/govwayAPIMonitor.xml" token="grafica govwayMonitor" value="govwayAPIMonitor.war"/>
					</then>
				</if>

				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy file="${deploy_ds}/tomcat/${tomcat_datasource_dir_name}/${antinstaller_as4_tipo_database}/domibus.xml" 
							tofile="${tmp_ds}/domibus.xml"/>
						<antcall target="as4_ds_settings">
						    <param name="file" value="${tmp_ds}/domibus.xml"/>
						</antcall>
						<replace file="${tmp_ds}/govway.xml" token="&lt;/Context>" value=""/>
						<concat destfile="${tmp_ds}/govway.xml" append="yes" >
						  <filelist dir="${tmp_ds}"
							   files="domibus.xml"/>
						</concat>
						<delete file="${tmp_ds}/domibus.xml"/>
						<concat destfile="${tmp_ds}/govway.xml" append="yes">
<![CDATA[</Context>]]></concat>
					</then>
				</if>
			</then>
		</if>
	</target>

	<target name="setup_govwayConsole" depends="_setup_govwayConsole"/>
	<target name="_setup_govwayConsole">
		<!-- unzip -->
		<unzip src="${deploy_sw}/${build_for_as}/govwayConsole.war" dest="${tmp_archivi}/govwayConsole.war"/>
		<!-- configuration -->
		<antcall target="govwayConsole_console_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.properties"/>
		</antcall>
		<antcall target="govwayConsole_console_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.log4j2.properties"/>
		</antcall>
		<antcall target="govwayConsole_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="govwayConsole_console_audit_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.audit.log4j2.properties"/>
		</antcall>
		<antcall target="govwayConsole_datasource_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes/console.datasource.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayConsole.war/WEB-INF/classes"/>
		    <param name="file" value="*.cfg"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_trasparente-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- modipa -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_modipa-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_spcoop-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_as4-protocol_*.jar"/>
						<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_sdi-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- Ripristino jar -->
		<antcall target="ripristina_jar">
		    <param name="archiveFile" value="${tmp_archivi}/govwayConsole.war"/>
			<param name="as" value="${build_for_as}"/>
			<param name="archiveType" value="WAR"/>
		</antcall>
	</target>

	<target name="setup_govwayMonitor" depends="_setup_govwayMonitor"/>
	<target name="_setup_govwayMonitor">
		<!-- unzip -->
		<unzip src="${deploy_sw}/${build_for_as}/govwayMonitor.war" dest="${tmp_archivi}/govwayMonitor.war"/>
		<!-- configuration -->
		<antcall target="govwayMonitor_monitor_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/monitor.properties"/>
		</antcall>
		<antcall target="govwayMonitor_monitor_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/monitor.log4j2.properties"/>
		</antcall>
		<antcall target="govwayMonitor_log4j_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/log4j2.properties"/>
		</antcall>
		<antcall target="govwayMonitor_datasource_properties_settings">
		    <param name="file" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes/daoFactory.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes"/>
		    <param name="file" value="*.properties"/>
		</antcall>
		<antcall target="dos2unix">
			<param name="dir" value="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes"/>
		    <param name="file" value="*.cfg"/>
		</antcall>
		<!-- trasparente -->
		<if>
			<istrue value="${antinstaller_protocollo_trasparente}" />
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_trasparente-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- modipa -->
		<if>
			<istrue value="${antinstaller_protocollo_modipa}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_modipa-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- spcoop -->
		<if>
			<istrue value="${antinstaller_protocollo_spcoop}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_spcoop-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- as4 -->
		<if>
			<istrue value="${antinstaller_protocollo_as4}" />
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_as4-protocol_*.jar"/>
						<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- sdi -->
		<if>
			<istrue value="${antinstaller_protocollo_sdi}"/>
			<then>
				<copy todir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib">
					<fileset dir="${deploy_sw}">
						<include name="openspcoop2_sdi-protocol_*.jar"/>
					</fileset>
					<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
				</copy>
			</then>
		</if>
		<!-- Ripristino jar -->
		<antcall target="ripristina_jar">
		    <param name="archiveFile" value="${tmp_archivi}/govwayMonitor.war"/>
			<param name="as" value="${build_for_as}"/>
			<param name="archiveType" value="WAR"/>
		</antcall>
	</target>
	
	<target name="setup_loader" depends="_setup_loader"/>
	<target name="_setup_loader">
		<if>
			<and>
				<!-- Sganciata la generazone del loader con questa proprieta' finta. 
					Se la si vuole reintrodurre basta settarla a true -->
				<istrue value="${antinstaller_loader}"/>
			</and>
			<then>
				<unzip src="${deploy_sw}/${build_for_as}/govwayLoader.war" dest="${tmp_archivi}/govwayLoader.war"/>
				<antcall target="loader_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/loader.properties"/>
				</antcall>
				<antcall target="loader_datasource_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/loader.datasource.properties"/>
				</antcall>
				<antcall target="loader_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/loader.log4j2.properties"/>
				</antcall>
				<antcall target="loader_default_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes/log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_archivi}/govwayLoader.war/WEB-INF/classes"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govwayLoader.war"/>
					<param name="as" value="${build_for_as}"/>
					<param name="archiveType" value="WAR"/>
				</antcall>
			</then>
		</if>
	</target>


	<target name="setup_apiConfig" depends="_setup_apiConfig"/>
	<target name="_setup_apiConfig">
		<if>
			<and>
				<istrue value="${antinstaller_rs_config}"/>
			</and>
			<then>
				<unzip src="${deploy_sw}/${build_for_as}/govwayAPIConfig.war" dest="${tmp_archivi}/govwayAPIConfig.war"/>
				<antcall target="api_config_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/classes/rs-api-config.properties"/>
				</antcall>
				<antcall target="api_config_datasource_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/classes/rs-api-config.datasource.properties"/>
				</antcall>
				<antcall target="api_config_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/classes/rs-api-config.log4j2.properties"/>
				</antcall>
				<antcall target="api_config_default_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/classes/log4j2.properties"/>
				</antcall>
				<antcall target="api_config_console_audit_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/classes/console.audit.log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/classes"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayAPIConfig.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govwayAPIConfig.war"/>
					<param name="as" value="${build_for_as}"/>
					<param name="archiveType" value="WAR"/>
				</antcall>
			</then>
		</if>
	</target>


	<target name="setup_apiMonitor" depends="_setup_apiMonitor"/>
	<target name="_setup_apiMonitor">
		<if>
			<and>
				<istrue value="${antinstaller_rs_monitor}"/>
			</and>
			<then>
				<unzip src="${deploy_sw}/${build_for_as}/govwayAPIMonitor.war" dest="${tmp_archivi}/govwayAPIMonitor.war"/>
				<antcall target="api_monitor_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/classes/rs-api-monitor.properties"/>
				</antcall>
				<antcall target="api_monitor_datasource_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/classes/rs-api-monitor.datasource.properties"/>
				</antcall>
				<antcall target="api_monitor_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/classes/rs-api-monitor.log4j2.properties"/>
				</antcall>
				<antcall target="api_monitor_default_log4j_properties_settings">
				    <param name="file" value="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/classes/log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/classes"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_archivi}/govwayAPIMonitor.war/WEB-INF/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_archivi}/govwayAPIMonitor.war"/>
					<param name="as" value="${build_for_as}"/>
					<param name="archiveType" value="WAR"/>
				</antcall>
			</then>
		</if>
	</target>


	<target name="setup_batchStatistiche" depends="_setup_batchStatistiche"/>
	<target name="_setup_batchStatistiche">
		<if>
			<or>
				<equals arg1="${antinstaller_stats_env}" arg2="batch"/>
				<equals arg1="${antinstaller_stats_env}" arg2="runtime_batchPrepared"/>
			</or>
			<then>
				<mkdir dir="${tmp_batch}" /> 
				<copy todir="${tmp_batch}/generatoreStatistiche">
					<fileset dir="${deploy_sw}/batch/generatoreStatistiche"/>
				</copy>

				<antcall target="batch_statistiche_properties_settings">
				    <param name="file" value="${tmp_batch}/generatoreStatistiche/properties/batch-statistiche.properties"/>
				</antcall>
				<antcall target="batch_statistiche_dao_factory_properties_settings">
				    <param name="file" value="${tmp_batch}/generatoreStatistiche/properties/daoFactory.properties"/>
				</antcall>
				<antcall target="batch_statistiche_log4j_properties_settings">
				    <param name="file" value="${tmp_batch}/generatoreStatistiche/properties/batch-statistiche.log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_batch}/generatoreStatistiche/properties"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_batch}/generatoreStatistiche/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_batch}/generatoreStatistiche/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_batch}/generatoreStatistiche/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_batch}/generatoreStatistiche/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_batch}/generatoreStatistiche/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_batch}/generatoreStatistiche"/>
					<param name="as" value="BATCH"/>
					<param name="archiveType" value="BATCH"/>
				</antcall>
			</then>
		</if>
	</target>

	<target name="setup_batchRuntimeRepository" depends="_setup_batchRuntimeRepository"/>
	<target name="_setup_batchRuntimeRepository">
		<if>
			<and>
				<equals arg1="${antinstaller_console_env}" arg2="manager"/>
				<equals arg1="${antinstaller_batchRuntimeRepository}" arg2="true"/>
			</and>
			<then>
				<mkdir dir="${tmp_batch}" /> 
				<copy todir="${tmp_batch}/gestoreRuntimeRepository">
					<fileset dir="${deploy_sw}/batch/gestoreRuntimeRepository"/>
				</copy>

				<antcall target="batch_runtimeRepository_properties_settings">
				    <param name="file" value="${tmp_batch}/gestoreRuntimeRepository/properties/batch-runtime-repository.properties"/>
				</antcall>
				<antcall target="batch_runtimeRepository_dao_factory_properties_settings">
				    <param name="file" value="${tmp_batch}/gestoreRuntimeRepository/properties/daoFactory.properties"/>
				</antcall>
				<antcall target="batch_runtimeRepository_log4j_properties_settings">
				    <param name="file" value="${tmp_batch}/gestoreRuntimeRepository/properties/batch-runtime-repository.log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_batch}/gestoreRuntimeRepository/properties"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_batch}/gestoreRuntimeRepository/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_batch}/gestoreRuntimeRepository/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_batch}/gestoreRuntimeRepository/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_batch}/gestoreRuntimeRepository/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_batch}/gestoreRuntimeRepository/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_batch}/gestoreRuntimeRepository"/>
					<param name="as" value="BATCH"/>
					<param name="archiveType" value="BATCH"/>
				</antcall>
			</then>
		</if>
	</target>


	<target name="setup_cliVault" depends="_setup_cliVault"/>
	<target name="_setup_cliVault">
		<if>
			<not>
				<equals arg1="${antinstaller_tools_cliVault}" arg2="false"/>
			</not>
			<then>
				<mkdir dir="${tmp_tools}" /> 
				<copy todir="${tmp_tools}/govway-vault-cli">
					<fileset dir="${deploy_sw}/tools/govway-vault-cli"/>
				</copy>

				<antcall target="cli_vault_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-vault-cli/properties/govway_vault.cli.properties"/>
				</antcall>
				<antcall target="cli_vault_database_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-vault-cli/properties/govway_vault.cli.database.properties"/>
				</antcall>
				<antcall target="cli_vault_log4j_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-vault-cli/properties/govway_vault.cli.log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_tools}/govway-vault-cli/properties"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_tools}/govway-vault-cli/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_tools}/govway-vault-cli/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_tools}/govway-vault-cli/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_tools}/govway-vault-cli/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_tools}/govway-vault-cli/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_tools}/govway-vault-cli"/>
					<param name="as" value="BATCH"/>
					<param name="archiveType" value="BATCH"/>
				</antcall>
			</then>
		</if>
	</target>


	<target name="setup_cliConfigLoader" depends="_setup_cliConfigLoader"/>
	<target name="_setup_cliConfigLoader">
		<if>
			<not>
				<equals arg1="${antinstaller_tools_cliConfigLoader}" arg2="false"/>
			</not>
			<then>
				<mkdir dir="${tmp_tools}" /> 
				<copy todir="${tmp_tools}/govway-config-loader">
					<fileset dir="${deploy_sw}/tools/govway-config-loader"/>
				</copy>

				<antcall target="cli_vault_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-config-loader/properties/config_loader.cli.properties"/>
				</antcall>
				<antcall target="cli_vault_database_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-config-loader/properties/config_loader.cli.database.properties"/>
				</antcall>
				<antcall target="cli_vault_log4j_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-config-loader/properties/config_loader.cli.log4j2.properties"/>
				</antcall>
				<antcall target="cli_configLoaders_console_audit_log4j_properties_settings">
				    <param name="file" value="${tmp_tools}/govway-config-loader/properties/console.audit.log4j2.properties"/>
				</antcall>
				<antcall target="dos2unix">
					<param name="dir" value="${tmp_tools}/govway-config-loader/properties"/>
				    <param name="file" value="*.properties"/>
				</antcall>
				<!-- trasparente -->
				<if>
					<istrue value="${antinstaller_protocollo_trasparente}" />
					<then>
						<copy todir="${tmp_tools}/govway-config-loader/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_trasparente-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- modipa -->
				<if>
					<istrue value="${antinstaller_protocollo_modipa}"/>
					<then>
						<copy todir="${tmp_tools}/govway-config-loader/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_modipa-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- spcoop -->
				<if>
					<istrue value="${antinstaller_protocollo_spcoop}"/>
					<then>
						<copy todir="${tmp_tools}/govway-config-loader/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_spcoop-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- as4 -->
				<if>
					<istrue value="${antinstaller_protocollo_as4}" />
					<then>
						<copy todir="${tmp_tools}/govway-config-loader/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_as4-protocol_*.jar"/>
								<exclude name="openspcoop2_as4-protocol_ecodexBackendStub_cxf.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- sdi -->
				<if>
					<istrue value="${antinstaller_protocollo_sdi}"/>
					<then>
						<copy todir="${tmp_tools}/govway-config-loader/lib">
							<fileset dir="${deploy_sw}">
								<include name="openspcoop2_sdi-protocol_*.jar"/>
							</fileset>
							<globmapper from="*_RELEASE.jar" to="*-${antinstaller_versione_attuale_con_p_level}.jar"/>
						</copy>
					</then>
				</if>
				<!-- Ripristino jar -->
				<antcall target="ripristina_jar">
				    <param name="archiveFile" value="${tmp_tools}/govway-config-loader"/>
					<param name="as" value="BATCH"/>
					<param name="archiveType" value="BATCH"/>
				</antcall>
			</then>
		</if>
	</target>
			
	<target name="setup_finished" depends="_setup_finished"/>
	<target name="_setup_finished">
		<antcall target="patch-distrib"/>
		<antcall target="archive-add-distrib"/> <!-- usare dopo patch, utilizza directory su cui sono stati copiati i jar patchati -->
		<antcall target="make-distrib"/>
		<delete dir="${build}"/>
	</target>


</project>
