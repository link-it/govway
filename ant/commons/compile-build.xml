<project name="openspcoop2-compileBuild">
	
    <description>
        Compile e Build JAR
    </description>

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>	
	
	<!-- Check JAVA VERSIONE -->
	<!-- <import file="java-check.xml" /> -->
	<!-- NOTA: se uso import java-check va in out of memory -->
	<property environment="env"/>
	<var name="java_home" value="${env.JAVA_HOME}"/>
	<!-- <echo message="Ant version: ${ant.version}"/> -->
	<!-- <echo message="Java home: ${java_home}"/> La stampa la faccio direttamente dentro i metodi -->
	<!-- <echo message="Java version: ${ant.java.version}"/> L'informazione viene errata, stampa 1.6 anche per java 1.7 se la versione di ant Ã¨ inferiore alla 9 -->
	<if>
		<or>
			<matches string="${ant.version}" pattern=".*1\.5\..*"/>
			<matches string="${ant.version}" pattern=".*1\.6\..*"/>
			<matches string="${ant.version}" pattern=".*1\.7\..*"/>
			<matches string="${ant.version}" pattern=".*1\.8\..*"/>
			<matches string="${ant.version}" pattern=".*1\.9\..*"/>
			<matches string="${ant.version}" pattern=".*1\.10\.[0-9] .*"/>
			<matches string="${ant.version}" pattern=".*1\.10\.[0-1][0-3] .*"/>
		</or>
		<then>
			<echo message="Ant version: ${ant.version}"/>
			<fail message="E' richiesta una versione di apache-ant 1.10.14 o superiore"/>
			<!-- da 1.10.2 viene fornita la versione corretta di java -->
			<!-- da 1.10.6 sparisce il seguente errore, se esato con java 11: [taskdef] WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance. -->
			<!-- da 1.10.14 sparisce l'errore: "WARNING: System::setSecurityManager has been called by org.apache.tools.ant.types.Permissions" -->
		</then>
	</if>
	<if>
		<equals arg1="${java_home}" arg2="$${env.JAVA_HOME}"/>
		<then>
			<fail message="JAVA_HOME non impostata"/>
		</then>
	</if>
	<var name="javaVersion11" value="11"/>
	<if>
		<not>
			<equals arg1="${javaSourceVersion}" arg2="$${javaSourceVersion}"/>
		</not>
		<then>
			<echo message="WARN: consento utilizzo java v11"/>
			<var name="javaVersion11" value="consentoJava11"/>
		</then>
	</if>
	<if>
		<or>
			<equals arg1="${ant.java.version}" arg2="1.3" />
			<equals arg1="${ant.java.version}" arg2="1.4" />
	     		<equals arg1="${ant.java.version}" arg2="1.5" />
			<equals arg1="${ant.java.version}" arg2="1.6" />
			<equals arg1="${ant.java.version}" arg2="1.7" />
			<equals arg1="${ant.java.version}" arg2="1.8" />
			<equals arg1="${ant.java.version}" arg2="9" />
			<equals arg1="${ant.java.version}" arg2="10" />
			<equals arg1="${ant.java.version}" arg2="${javaVersion11}" />
			<equals arg1="${ant.java.version}" arg2="12" />
			<equals arg1="${ant.java.version}" arg2="13" />
			<equals arg1="${ant.java.version}" arg2="14" />
			<equals arg1="${ant.java.version}" arg2="15" />
			<equals arg1="${ant.java.version}" arg2="16" />
			<equals arg1="${ant.java.version}" arg2="17" />
			<equals arg1="${ant.java.version}" arg2="18" />
			<equals arg1="${ant.java.version}" arg2="19" />
			<equals arg1="${ant.java.version}" arg2="20" />
		</or>
		<then>
			<echo message="Java home: ${java_home}"/>
			<echo message="Java version: ${ant.java.version}"/>
			<if>
				<not>
					<istrue value="${skipJavaVersionCheck}" />
				</not>
				<then>
					<fail message="E' richiesta una versione di java 21 o superiore"/>
				</then>
			</if>
		</then>
	</if>
	
	<var name="classSourceVersion" value="21"/>
	<var name="classTargetVersion" value="21"/>
	<!-- il seguente if e' utilizzabile solo con skipJavaVersionCheck=true -->
	<if>
		<not>
			<equals arg1="${javaSourceVersion}" arg2="$${javaSourceVersion}"/>
		</not>
	        <then>
	                <echo message="!!!ATTENZIONE!!! Java source version impostata a v${javaSourceVersion}"/>
	                <var name="classSourceVersion" value="${javaSourceVersion}"/>
			<var name="classTargetVersion" value="${javaSourceVersion}"/>
	        </then>
	</if>
	
	<path id="classpath_jre" >
		<fileset dir="${java_home}" >
			<include name="lib/modules"/> <!-- presente da java 9 -->
			<include name="jre/lib/*.jar"/> <!-- non presente da java 9 -->
			<include name="lib/*.jar"/>
		</fileset>
	</path>
	
	<target name="init_compile-build">
		<mkdir dir="${build}" />
		<delete dir="${build}/compile-jar-openspcoop2" failonerror="false" />
		<mkdir dir="${build}/compile-jar-openspcoop2" />
		<mkdir dir="${dist}" />
	</target>

	
	<!-- Compilazione della libreria di OpenSPCoop -->
	<target name="compile_src_openspcoop2" depends="init_compile-build">

		<echo message="Java home: ${java_home}"/>

		<if>
			<istrue value="${debug}" />
			<then>
				<echo message="****************************************" />
				<echo message="****         DEBUG MODE ON         *****" />
				<echo message="****************************************" />
			</then>
		</if>
		
		<!-- init -->
		<mkdir dir="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}" />
		
		<!-- GIT Info -->

		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<echo message="Raccolta informazioni git per inserimento in manifest..."/>
				
				<if>
					<equals arg1="${gitrepo_root}" arg2="$${gitrepo_root}"/>
					<then>
						<fail message="gitrepo_root non fornita: non e' possibile recuperare le informazioni git"/>
					</then>
				</if>
		
			        <GitProperties src="${gitrepo_root}" 
						authorNameProperty="git.authorName"
						authorMailProperty="git.authorMail"
						authorCommitDateProperty="git.authorDate"
						shortHashProperty="git.commitShortHash"
				/>
			</then>
		</if>
		

		<!-- Compile the java code  -->
		<if>
			<equals arg1="${compile_src_openspcoop2.SRC_DIR_2}" arg2="$${compile_src_openspcoop2.SRC_DIR_2}"/>
			<then>
				<var name="compile_src_openspcoop2.SRC_DIR_2" value=""/>
			</then>
		</if>
		<if>
			<equals arg1="${compile_src_openspcoop2.SRC_DIR_3}" arg2="$${compile_src_openspcoop2.SRC_DIR_3}"/>
			<then>
				<var name="compile_src_openspcoop2.SRC_DIR_3" value=""/>
			</then>
		</if>
		<if>
			<equals arg1="${compile_src_openspcoop2.SRC_DIR_4}" arg2="$${compile_src_openspcoop2.SRC_DIR_4}"/>
			<then>
				<var name="compile_src_openspcoop2.SRC_DIR_4" value=""/>
			</then>
		</if>
		<if>
			<equals arg1="${compile_src_openspcoop2.SRC_DIR_5}" arg2="$${compile_src_openspcoop2.SRC_DIR_5}"/>
			<then>
				<var name="compile_src_openspcoop2.SRC_DIR_5" value=""/>
			</then>
		</if>
		<echo message="compileSRC[${compile_src_openspcoop2.SRC_DIR}]" />
		<javac includeantruntime="false" destdir="${build}/compile-jar-openspcoop2" debug="${debug}" 
			source="${classSourceVersion}" target="${classTargetVersion}" encoding="UTF-8">
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<!-- <compilerarg value="-proc:full"/> -->

			<src path="${compile_src_openspcoop2.SRC_DIR}"/>
			<src path="${compile_src_openspcoop2.SRC_DIR_2}"/>
			<src path="${compile_src_openspcoop2.SRC_DIR_3}"/>
			<src path="${compile_src_openspcoop2.SRC_DIR_4}"/>
			<src path="${compile_src_openspcoop2.SRC_DIR_5}"/>
			
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_2}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_3}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_4}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_5}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_6}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_7}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_8}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_9}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_10}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_11}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_12}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_13}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_14}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_15}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_16}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_17}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_18}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_19}" />
			<include name="${compile_src_openspcoop2.BUILD_INCLUDES_20}" />
			
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_2}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_3}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_4}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_5}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_6}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_7}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_8}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_9}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_10}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_11}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_12}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_13}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_14}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_15}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_16}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_17}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_18}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_19}" />
			<exclude name="${compile_src_openspcoop2.BUILD_EXCLUDES_20}" />
			
			<!-- Non funziona da java 9
			<bootclasspath>
				<path refid="classpath_jre" />
			</bootclasspath> -->
			<classpath>
				<path refid="classpath_compile" />
				<path refid="classpath_dist" />
				<fileset dir="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}" >
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${dist}" >
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
	
		<!-- Crezione informazioni git -->
		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<if>
					<istrue value="${gitInfo_openspcoop2.SRC_DIR}"/>
					<then>
						<!--echo>gitInfo_src_openspcoop2.SRC_DIR : ${gitInfo_src_openspcoop2.SRC_DIR}</echo>
						<echo>REGEX : ^${gitrepo_root}${file.separator}(.*)</echo-->
						<pathconvert property="gitInfo_src_openspcoop2.SRC_DIR.inrepo" pathsep="${line.separator}">
						<propertyresource name="gitInfo_src_openspcoop2.SRC_DIR" />
						    <mapper type="regexp"
						        from="^${gitrepo_root}${file.separator}(.*)"
						        to="\1"/>
						</pathconvert>
						<!--echo>gitInfo_src_openspcoop2.SRC_DIR.inrepo : ${gitInfo_src_openspcoop2.SRC_DIR.inrepo}</echo-->
					      <GitProperties src="${gitrepo_root}" 
								path="${gitInfo_src_openspcoop2.SRC_DIR.inrepo}"
								authorNameProperty="git.package.authorName"
								authorMailProperty="git.package.authorMail"
								authorCommitDateProperty="git.package.authorDate"
								shortHashProperty="git.package.commitShortHash"
						/>
					</then>
					<else>
						<!--
						<echo>GITREPO: ${gitrepo_root}</echo>
						<echo>compile_src_openspcoop2.SRC_DIR : ${compile_src_openspcoop2.SRC_DIR}</echo>
						<echo>REGEX : ^${gitrepo_root}${file.separator}(.*)</echo>
						-->
						<pathconvert property="compile_src_openspcoop2.SRC_DIR.inrepo" pathsep="${line.separator}">
						  <propertyresource name="compile_src_openspcoop2.SRC_DIR" />
						  <mapper type="regexp"
						      from="^${gitrepo_root}${file.separator}(.*)"
						      to="\1"/>
						</pathconvert>

						<!--echo>compile_src_openspcoop2.SRC_DIR.inrepo : ${compile_src_openspcoop2.SRC_DIR.inrepo}</echo-->
					      <GitProperties src="${gitrepo_root}" 
								path="${compile_src_openspcoop2.SRC_DIR.inrepo}"
								authorNameProperty="git.package.authorName"
								authorMailProperty="git.package.authorMail"
								authorCommitDateProperty="git.package.authorDate"
								shortHashProperty="git.package.commitShortHash"
						/>
						<!--
					        <echo>Nome Autore             : ${git.package.authorName}</echo>
					        <echo>Email Autore            : ${git.package.authorMail}</echo>
					        <echo>Data Commit (autore)    : ${git.package.authorDate}</echo>
					        <echo>Hash commit (short)     : ${git.package.commitShortHash}</echo>
						-->
					</else>
				</if>
			</then>
		</if>
		
		<!-- Release NAME -->
		<if>
			<isfalse value="${buildAsRelease}"/>
			<then>
				<if>
					<istrue value="${compile_src_openspcoop2.GITINFO}"/>
					<then>
							<var name="compile_src_openspcoop2.ReleaseName" value="BUILD-${git.commitShortHash}" />
					</then>
					<else>
						<if>
						    <isset property="env.BUILD_VERSION"/>
						    <then>
						    	<var name="compile_src_openspcoop2.ReleaseName" value="${env.BUILD_VERSION}.RELEASE" />
						    </then>
						    <else>
						    	<var name="compile_src_openspcoop2.ReleaseName" value="BUILD" />
						    </else>
						</if>						
					</else>
				</if>
			</then>
			<else>
				<if>
					<isset property="env.RELEASE_VERSION"/>
					<then>
						<var name="compile_src_openspcoop2.ReleaseName" value="${env.RELEASE_VERSION}.RELEASE" />
					</then>
					<else>
						<var name="compile_src_openspcoop2.ReleaseName" value="RELEASE" />
					</else>
				</if>						
			</else>
		</if>
		<property name="build.jar.name" value="openspcoop2_${compile_src_openspcoop2.GIT_ID_NAME}_${compile_src_openspcoop2.ReleaseName}.jar" />
		
		<!-- Identificazione valore 'duplicate' jar task -->
		<var name="jarDuplicate" value="${compile_src_openspcoop2.duplicate}"/>
		<if>
			<equals arg1="${jarDuplicate}" arg2="$${compile_src_openspcoop2.duplicate}" />
			<then>
				<var name="jarDuplicate" value="add"/> <!-- Valid values are "add", "preserve", and "fail". The default value is "add". -->
			</then>
			<else>
				<if>
					<not>
						<or>
							<equals arg1="${jarDuplicate}" arg2="add" />
							<equals arg1="${jarDuplicate}" arg2="preserve" />
							<equals arg1="${jarDuplicate}" arg2="fail" />
						</or>
					</not>
					<then>
						<fail message="Valid values are 'add', 'preserve' and 'fail' for variable 'compile_src_openspcoop2.duplicate' (found: '${jarDuplicate}')"/>
					</then>
				</if>
			</else>
		</if>
		
		<!-- Creazione jar Libreria Dao-->
		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<available file="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/package.info" property="package-info-presente"/>
				<if>
					<isfalse value="${package-info-presente}"/>
					<then>
		                <concat destfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/package.info">
----------------------------------------
[GIT] Version Information
Url: ${git.url}
Actual-Revision-Number: ${git.commitShortHash}
Last-Changed-Revision: ${git.commitShortHash}
Last-Commit-Author: ${git.authorName}
Last-Changed-Date:  ${git.authorDate}   	
----------------------------------------
		                        
		                </concat>
					</then>
				</if>
                <concat destfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/package.info" append="yes">
----------------------------------------
[GIT] Package Details
Package-Info: ${compile_src_openspcoop2.PACKAGE}
Last-Changed-Revision: ${git.package.commitShortHash}
Last-Commit-Author: ${git.package.authorName}
Last-Changed-Date:  ${git.package.authorDate}   	
----------------------------------------
                        
                </concat>
								
				<jar jarfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/${build.jar.name}" duplicate="${jarDuplicate}">
					<manifest>
						<section name="[GIT] Version Information">
							<attribute name="Url" value="${git.url}" />
							<attribute name="Actual-Revision-Number" value="${git.commitShortHash}"/>
							<attribute name="Last-Changed-Revision" value="${git.commitShortHash}"/>
							<attribute name="Last-Commit-Author" value="${git.authorName}"/>
							<attribute name="Last-Changed-Date" value="${git.authorDate}"/>
						</section>
						<section name="[GIT] Package Details">
							<attribute name="Package-Info"  
										value="${compile_src_openspcoop2.PACKAGE}"/>
							<attribute name="Last-Changed-Revision"
										value="${git.package.commitShortHash}"/>
							<attribute name="Last-Commit-Author"
										value="${git.package.authorName}"/>
							<attribute name="Last-Changed-Date"
										value="${git.package.authorDate}"/>
						</section>
					</manifest>
					<zipfileset dir="${build}/compile-jar-openspcoop2" />
					<zipfileset dir="${compile_src_openspcoop2.SRC_DIR}" prefix="${compile_src_openspcoop2.SRC_PREFIX}">
						
						<include name="${compile_src_openspcoop2.SRC_INCLUDES}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_2}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_3}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_4}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_5}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_6}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_7}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_8}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_9}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_10}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_11}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_12}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_13}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_14}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_15}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_16}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_17}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_18}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_19}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_20}" />
						
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_2}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_3}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_4}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_5}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_6}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_7}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_8}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_9}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_10}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_11}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_12}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_13}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_14}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_15}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_16}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_17}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_18}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_19}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_20}" />
						
					</zipfileset>
				</jar>
			</then>
			<else>
				<jar jarfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/${build.jar.name}" duplicate="${jarDuplicate}">
					<zipfileset dir="${build}/compile-jar-openspcoop2" />
					<zipfileset dir="${compile_src_openspcoop2.SRC_DIR}" prefix="${compile_src_openspcoop2.SRC_PREFIX}">
						
						<include name="${compile_src_openspcoop2.SRC_INCLUDES}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_2}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_3}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_4}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_5}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_6}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_7}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_8}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_9}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_10}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_11}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_12}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_13}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_14}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_15}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_16}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_17}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_18}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_19}" />
						<include name="${compile_src_openspcoop2.SRC_INCLUDES_20}" />
						
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_2}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_3}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_4}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_5}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_6}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_7}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_8}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_9}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_10}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_11}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_12}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_13}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_14}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_15}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_16}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_17}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_18}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_19}" />
						<exclude name="${compile_src_openspcoop2.SRC_EXCLUDES_20}" />
						
					</zipfileset>
				</jar>
			</else>
		</if>	
		
		<delete dir="${build}/compile-jar-openspcoop2" failonerror="false" />
		
	</target>
	
	
	<!-- Compilazione della libreria per gli schemi -->
	<target name="build_jar_schema" depends="init_compile-build">

		<echo message="Java home: ${java_home}"/>

		<if>
			<istrue value="${debug}" />
			<then>
				<echo message="****************************************" />
				<echo message="****         DEBUG MODE ON         *****" />
				<echo message="****************************************" />
			</then>
		</if>
		
		<!-- init -->
		<mkdir dir="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}" />
		
		<!-- GIT Info -->
		<!-- <echo message="GIT:[${compile_src_openspcoop2.GITINFO}]"/> -->
		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<echo message="Raccolta informazioni git per inserimento in manifest..."/>

				<if>
					<equals arg1="${gitrepo_root}" arg2="$${gitrepo_root}"/>
					<then>
						<fail message="gitrepo_root non fornita: non e' possibile recuperare le informazioni git"/>
					</then>
				</if>
			        <GitProperties src="${gitrepo_root}" 
						authorNameProperty="git.authorName"
						authorMailProperty="git.authorMail"
						authorCommitDateProperty="git.authorDate"
						shortHashProperty="git.commitShortHash"
				/>
				
			</then>
		</if>
		
		<!-- Release NAME -->
		<if>
			<isfalse value="${buildAsRelease}"/>
			<then>
				<if>
					<istrue value="${compile_src_openspcoop2.GITINFO}"/>
					<then>
							<var name="compile_src_openspcoop2.ReleaseName" value="BUILD-${git.commitShortHash}" />
					</then>
					<else>					
						<if>
						    <isset property="env.BUILD_VERSION"/>
						    <then>
						    	<var name="compile_src_openspcoop2.ReleaseName" value="${env.BUILD_VERSION}.RELEASE" />
						    </then>
						    <else>
						    	<var name="compile_src_openspcoop2.ReleaseName" value="BUILD" />
						    </else>
						</if>
					</else>
				</if>
			</then>
			<else>
				<if>
					<isset property="env.RELEASE_VERSION"/>
					<then>
						<var name="compile_src_openspcoop2.ReleaseName" value="${env.RELEASE_VERSION}.RELEASE" />
					</then>
					<else>
						<var name="compile_src_openspcoop2.ReleaseName" value="RELEASE" />
					</else>
				</if>
			</else>
		</if>
		<property name="build.jar.name" value="openspcoop2_${compile_src_openspcoop2.GIT_ID_NAME}_${compile_src_openspcoop2.ReleaseName}.jar" />
		
		<!-- Identificazione valore 'duplicate' jar task -->
		<var name="jarDuplicate" value="${compile_src_openspcoop2.duplicate}"/>
		<if>
			<equals arg1="${jarDuplicate}" arg2="$${compile_src_openspcoop2.duplicate}" />
			<then>
				<var name="jarDuplicate" value="add"/> <!-- Valid values are "add", "preserve", and "fail". The default value is "add". -->
			</then>
			<else>
				<if>
					<not>
						<or>
							<equals arg1="${jarDuplicate}" arg2="add" />
							<equals arg1="${jarDuplicate}" arg2="preserve" />
							<equals arg1="${jarDuplicate}" arg2="fail" />
						</or>
					</not>
					<then>
						<fail message="Valid values are 'add', 'preserve' and 'fail' for variable 'compile_src_openspcoop2.duplicate' (found: '${jarDuplicate}')"/>
					</then>
				</if>
			</else>
		</if>
		
		<!-- Creazione jar Libreria Dao-->
		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<available file="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/package.info" property="package-info-presente"/>
				<if>
					<isfalse value="${package-info-presente}"/>
					<then>
		                <concat destfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/package.info">
----------------------------------------
[GIT] Version Information
Url: ${git.url}
Actual-Revision-Number: ${git.commitShortHash}
Last-Changed-Revision: ${git.commitShortHash}
Last-Commit-Author: ${git.authorName}
Last-Changed-Date:  ${git.authorDate}   	
----------------------------------------
		                        
		                </concat>
					</then>
				</if>
				
				<jar jarfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/${build.jar.name}" duplicate="${jarDuplicate}">
					<manifest>
						<section name="[GIT] Version Information">
							<attribute name="Url" value="${git.url}" />
							<attribute name="Actual-Revision-Number" value="${git.commitShortHash}"/>
							<attribute name="Last-Changed-Revision" value="${git.commitShortHash}"/>
							<attribute name="Last-Commit-Author" value="${git.authorName}"/>
							<attribute name="Last-Changed-Date" value="${git.authorDate}"/>
						</section>
					</manifest>
					<zipfileset dir="${compile_src_openspcoop2.JAR_SRC_DIR}" prefix="${compile_src_openspcoop2.JAR_SRC_PREFIX}">
						
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_2}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_3}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_4}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_5}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_6}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_7}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_8}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_9}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_10}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_11}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_12}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_13}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_14}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_15}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_16}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_17}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_18}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_19}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_20}" />
						
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_2}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_3}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_4}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_5}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_6}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_7}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_8}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_9}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_10}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_11}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_12}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_13}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_14}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_15}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_16}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_17}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_18}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_19}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_20}" />
							
					</zipfileset>
				</jar>
			</then>
			<else>
				<jar jarfile="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/${build.jar.name}" duplicate="${jarDuplicate}">
					<zipfileset dir="${compile_src_openspcoop2.JAR_SRC_DIR}" prefix="${compile_src_openspcoop2.JAR_SRC_PREFIX}">

						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_2}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_3}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_4}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_5}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_6}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_7}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_8}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_9}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_10}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_11}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_12}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_13}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_14}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_15}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_16}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_17}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_18}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_19}" />
						<include name="${compile_src_openspcoop2.JAR_SRC_INCLUDES_20}" />
						
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_2}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_3}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_4}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_5}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_6}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_7}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_8}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_9}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_10}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_11}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_12}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_13}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_14}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_15}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_16}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_17}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_18}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_19}" />
						<exclude name="${compile_src_openspcoop2.JAR_SRC_EXCLUDES_20}" />
						
					</zipfileset>
				</jar>
			</else>
		</if>	
		
	</target>
	
	
	<target name="jar_2_jar_openspcoop2">

		<echo message="Java home: ${java_home}"/>
		
		<!-- GIT Info -->
		<!-- <echo message="GIT:[${compile_src_openspcoop2.GITINFO}]"/> -->
		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<echo message="Raccolta informazioni git per inserimento in manifest..."/>

				<if>
					<equals arg1="${gitrepo_root}" arg2="$${gitrepo_root}"/>
					<then>
						<fail message="gitrepo_root non fornita: non e' possibile recuperare le informazioni git"/>
					</then>
				</if>
				<echo message="GIT Repo:[${gitrepo_root}]"/>
			       <GitProperties src="${gitrepo_root}" 
						authorNameProperty="git.authorName"
						authorMailProperty="git.authorMail"
						authorCommitDateProperty="git.authorDate"
						shortHashProperty="git.commitShortHash"
				/>
			</then>
		</if>
		
		<!-- Release NAME -->
		<if>
			<isfalse value="${buildAsRelease}"/>
			<then>
				<if>
					<istrue value="${compile_src_openspcoop2.GITINFO}"/>
					<then>
							<var name="compile_src_openspcoop2.ReleaseName" value="BUILD-${git.commitShortHash}" />
					</then>
					<else>
						<if>
						    <isset property="env.BUILD_VERSION"/>
						    <then>
						    	<var name="compile_src_openspcoop2.ReleaseName" value="${env.BUILD_VERSION}.RELEASE" />
						    </then>
						    <else>
						    	<var name="compile_src_openspcoop2.ReleaseName" value="BUILD" />
						    </else>
						</if>
					</else>
				</if>
			</then>
			<else>
				<if>
					<isset property="env.RELEASE_VERSION"/>
					<then>
						<var name="compile_src_openspcoop2.ReleaseName" value="${env.RELEASE_VERSION}.RELEASE" />
					</then>
					<else>
						<var name="compile_src_openspcoop2.ReleaseName" value="RELEASE" />
					</else>
				</if>					
			</else>
		</if>
		<property name="build.jar.name" value="openspcoop2_${compile_src_openspcoop2.GIT_ID_NAME}_${compile_src_openspcoop2.ReleaseName}.jar" />
	
		<!-- Identificazione valore 'duplicate' jar task -->
		<var name="jarDuplicate" value="${compile_src_openspcoop2.duplicate}"/>
		<if>
			<equals arg1="${jarDuplicate}" arg2="$${compile_src_openspcoop2.duplicate}" />
			<then>
				<var name="jarDuplicate" value="add"/> <!-- Valid values are "add", "preserve", and "fail". The default value is "add". -->
			</then>
			<else>
				<if>
					<not>
						<or>
							<equals arg1="${jarDuplicate}" arg2="add" />
							<equals arg1="${jarDuplicate}" arg2="preserve" />
							<equals arg1="${jarDuplicate}" arg2="fail" />
						</or>
					</not>
					<then>
						<fail message="Valid values are 'add', 'preserve' and 'fail' for variable 'compile_src_openspcoop2.duplicate' (found: '${jarDuplicate}')"/>
					</then>
				</if>
			</else>
		</if>
		
		<!-- Creazione jar Libreria Dao-->
		<if>
			<istrue value="${compile_src_openspcoop2.GITINFO}"/>
			<then>
				<jar jarfile="${dist}/${build.jar.name}" duplicate="${jarDuplicate}">
					<manifest>
						<section name="[GIT] Version Information">
							<attribute name="Url" value="${git.url}" />
							<attribute name="Actual-Revision-Number" value="${git.commitShortHash}"/>
							<attribute name="Last-Changed-Revision" value="${git.commitShortHash}"/>
							<attribute name="Last-Commit-Author" value="${git.authorName}"/>
							<attribute name="Last-Changed-Date" value="${git.authorDate}"/>
						</section>
					</manifest>
					<zipfileset file="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}/package.info" prefix="META-INF"/>
					<zipgroupfileset dir="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}" excludes="**/package.info" />
				</jar>
			</then>
			<else>
				<jar jarfile="${dist}/${build.jar.name}" duplicate="${jarDuplicate}">
					<zipgroupfileset dir="${dist}/${compile_src_openspcoop2.DIST_DIR_NAME}" />
				</jar>
			</else>
		</if>	
		
		
	</target>
		
		
</project>
