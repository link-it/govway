Per creare una tag version:

1. (PVersion) Inserire la corretta versione in tools/utils/src/org/openspcoop2/utils/Costanti.java

2. (PVersion) Inserire la versione del rilascio in ChangeLog

3. (PVersion) Inserire la versione corretta in ant/setup/antinstall-config.xml:
   - 4 occorrenze della versione (2 display, proprietà 'antinstaller_versione_attuale_con_p_level' e proprietà 'antinstaller_versione_attuale')
     NOTA: per le due versioni display e per la proprietà 'antinstaller_versione_attuale_con_p_level' 
           usare anche i suffissi 'rc' o 'beta' nel caso di rilasci di versioni non finali.
	   NON usarlo invece per la proprietà 'antinstaller_versione_attuale' la quale NON DEVE possedere il patch level.
   - Sistemare versioni precedenti nella maschera 'aggiornamentoSceltaVersione' (NOTA: in questo caso utilizzare solamente versioni stabili)
   - Se sono state introdotte nuove variabili nel setup, gestirle all'interno del file ant/setup/ant/sqlInstallerProps-build.xml nel task '_sql_settings_installer_properties'
   - Aggiungere le nuove proprietà nei template all'interno degli script di distribuzione (-dev) e nel progetto govway-docker

4. (PVersion) Inserire la versione corretta nel pom.xml presente nella root, all'interno della proprietà '<govway.version>XXX/govway.version>'
   NOTA: usare eventuale patch level

5. Verificare di avere l'ultima versione presente nella directory resources/sql_upgrade (con almeno il file info-patch.sql)
5b. Verificare di inserire anche in resources/properties_upgrade un aggiornamento. Anche se non vi sono state modifiche creare una directory vuota con un file README che riporta "modifiche non esistenti" o qualcosa di simile.

6. Inserire la versione major e minor corretta in ant/commons/sql-build.xml

7. Inserire la corretta versione (con suffisso rc o beta se serve) nei files doc resources/doc/src/manuali/conf.py e resources/doc/src/releaseNotes/conf.py

8. (PVersion) Eseguire i test di verifica JavaDoc, GPL, XSD e StringBuffer.

9. (PVersion) Sistemare file distrib/distrib.sh indicando la corretta versione compresa di suffissi 'rc' o 'beta'
   - verificare che la compilazione su readthedocs funzioni correttamente
   - verificare che la compilazione dei pdf sollevi errori solamente relativi a cross references tra documenti differenti

10. Sistemare la documentazione e soprattutto il documento di ReleaseNotes
      Inoltre aggiungere la corretta versione. 

11. Aggiungere la versione in rilascio come versione delle interfacce OpenAPI dei servizi in tools/rs/*
    - tools/rs/config/server/src/schemi/govway_rs-api_config.yaml
    - tools/rs/config/server/src/schemi/merge/govway_rs-api_config.yaml
    - tools/rs/monitor/server/src/schemi/govway_rs-api_monitor.yaml
    - tools/rs/monitor/server/src/schemi/merge/govway_rs-api_monitor.yaml
11b. Riportare tutte le differenze relative alle ultime versioni negli archivi core/deploy/preloading/apiConfig.zip e core/deploy/preloading/apiMonitor.zip

12. Validare le interfacce dei servizi 'rs' tramite il servizio 'https://github.com/teamdigitale/api-oas-checker.git'

13. Sistemare file publiccode.yml sia come ultima versione stabile che come eventuali nuove funzionalità.
    Non editare il file a mano, ma usare lo strumento: https://publiccode-editor.developers.italia.it/
    NOTA!!!!! Dentro il file publiccode.yml è presente anche una release date da aggiornare!!!!!!

14. Validare i sql generati dall'installer su tutti i database (anche mysql e sqlserver) per prevenire eventuali errori di vincoli come unique e index che non vengono creati per la lunghezza delle chiavi.
    Inoltre validare le patch SQL partendo dalla precedente versione per tutti i database, anche qua per prevenire errori di sintassi.

15. Sistemare migratore delle configurazioni da OpenSPCoop

16. Verificare che gli indirizzi dei webSite principali dei protocolli siano ancora attivi.
    find protocolli/ -name openspcoop2-manifest.xml | xargs grep webSite

17. Sistemare docker-compose.yml e database presente in resources/scenari/scenari.zip
   Per farlo, ad esempio se stiamo rilasciando la versione 3.3.1:
   - fare il clone di govway-docker
   - generare una versione dell'installer semi-definitiva (con master build version) e copiarla dentro la directory compose_bin/ di govway-docker
   - editare il file compose_bin/Dockerfile:
	. Impostare la versione corretta:
		ARG govway_fullversion=3.3.1
	. Commentare la seguente riga:
		#RUN wget -qO - https://github.com/link-it/GovWay/releases/download/${GOVWAY_FULLVERSION}/govway-installer-${GOVWAY_FULLVERSION}.tgz | tar -xzf- -C /opt
	. Aggiungere sotto le direttive:
		COPY govway-installer-${GOVWAY_FULLVERSION}.build-473a622d4.tgz /tmp
		RUN tar -xzf /tmp/govway-installer-${GOVWAY_FULLVERSION}.build-473a622d4.tgz -C /opt \
		&& mv /opt/govway-installer-${GOVWAY_FULLVERSION}.build-473a622d4 /opt/govway-installer-${GOVWAY_FULLVERSION}
   - Come utenza root nella radice del progetto govway-docker:
         ./build_compose.sh  -t govway:3.3.1-preRilascio -v 3.3.1
   - Attendere per qualche minuto il completamento del build
   - Decomprimere resources/scenari/scenari.zip
   - Editare il file scenari/docker-compose.yml
   	. Commentare la riga (Attenzione all'indentazione):
		#    image: linkitaly/govway:3.2.0_postgres
	. e aggiungere la direttiva:
		image: govway:3.3.1-preRilascio
   - Come utenza root avviare il database prima usando il comando, una volta posizionati dentro la directory scenari:
	source env.sh; docker-compose up testdatabase
   - Eseguire prima l'installer pre rilascio per ottenere la patch SQL da applicare al database a partire dalla precedente versione
   - Come utenza root:
	docker cp /var/tmp/GovWay_upgrade_3.3.1.sql PGSQL955:/tmp
        docker exec -ti PGSQL955 /bin/bash
        psql govwaydb govway -f /tmp/GovWay_upgrade_3.3.1.sql
	exit
   - Riportare eventuali aggiunte dei file esterni della nuova versione in scenari/data/govway/etc/
   - Si fa una prova del tutto sempre con utenza root:
	mandare in background il docker che ha avviato postgresql
	./starttest.sh
	collegarsi alle console e verificare la nuova versione:
	. https://govway.localdomain/govwayConsole/
	. https://govway.localdomain/govwayMonitor/
	Se tutto funziona, provando ad eseguire dei test con PostMan chiudere il tutto con il comando (mandare in background lo starttest precedente):
	./stoptest.sh
    - Editare nuovamente il file scenari/docker-compose.yml:
	. Eliminare la direttiva:
		image: govway:3.3.1-preRilascio
	. e scommentare facendo l'upgrade di versione dell'immagine ufficiale:
		image: linkitaly/govway:3.3.1_postgres	
    - Ripulire i log:
	. rm scenari/data/govway/log/* -rf
    - !!Come utenza root ricreare l'archivio scenari.zip
	NOTA: Senza utenza root non viene salvata la parte del database postgresql

18. Sistemare docker-compose.yml e database presente anche in resources/scenari/scenari_oauth_client_credentials/scenari_oauth_client_credentials.zip
    Sistemare anche il database utilizzando le medesime istruzioni del punto precedente.
    Come test di verifica usare i comandi descritti in: https://github.com/teamdigitale/api-gateway-tools/blob/master/gateways/govway/DOCKER.md

19. Riportazione indicazione di backwardCompatibility e hotUpgrade sul wiki (per indicare le info sull'aggiornamento della base dati)

20. (PVersion) Creazione versione tag
